if e . connection_reset is true,
append filename to self . attachments list .
decorator function register . filter with an argument is_safe set to boolean True .
d is a list containing 2 elements: d and d .
call the function func with 2 arguments: unpacked list resolved_args and unpacked dictionary kwargs .
if self . _leftover is true,
get the value under the alias key of the self . _caches dictionary .
do nothing .
call the method context_match . group with an argument integer 1, substitute the result for message_context .
from django . conf import settings into default name space .
help is a string "Runs a list of the given " . " .
for every migration in merge_migrations,
define the method render with an argument self .
if length of words is greater than length,
if not,
if self . required is false,
call the method self . remove_potfiles .
call the method inner . copy .
define the function split_domain_port with 2 arguments text and doc .
if app_config . models_module is None,
return _cached_filenames .
substitute namespaces for value under the language_code key of the self . _namespace_dict dictionary .
from django . utils . http import sql_flush into default name space .
do nothing .
derive the class Loader from the BaseLoader base class .
if not,
substitute '%s' in string tuple with block_name and '%s' is replaced with block_name .
define the method display with an argument self .
define the function convert_old_style_list with an argument list_ .
try,
dirs is an empty list .
define the method __init__ with 4 arguments: self, max_value set to None and unpacked set to None .
if result is not None,
call the function os . path . dirname with an argument filename, substitute the result for dirname .
get the value under the 'exclude' key of the options dictionary, substitute it for self . domain .
if self . instance . pk is not None,
join usage into a string, separated by newlines, return it .
for every k and v in return value of the self . _iteritems
call the method self . characters with an argument contents .
substitute frame . media for base .
from django . utils import formats into default name space .
filesize_number_format with bytes, substitute the result for value . otherwise if bytes is smaller than MB,
call the function bytes with 2 arguments: i and result of the function bytes with 2 arguments i and return the result .
attrs is a string 'form' formated with 10 entries:
create_models is an empty set .
raise an exception .
for every node in return value,
define the method __repr__ with an argument self .
call the method sys . stderr . write with an argument string "No %s\n" %s' with e .
join dirpath and f into a file path, substitute it for wrap .
boolean True,
if key is contained in dict_,
call the function getargspec with an argument func, substitute the result for args and defaults, respectively .
if UnicodeDecodeError exception is caught,
call the function force_text with an argument value, substitute the result for httpd_cls .
from django . utils . encoding import force_str into default name space .
sum sign and dec_part, return the result .
do nothing .
define the function gettext_noop with an argument s .
call the method initial_form_count from the base class of the class SimpleTemplateResponse, return the result .
substitute v for value under the k key of self dictionary .
take last four elements of filename to filename .
call the method match . end with an argument path, substitute the result for new_path .
otherwise if first element of g equals a string "'",
return boolean True .
if ext is false,
call the method zfile . close .
call the function select_template with an argument argv .
substitute initial_id for self . _boundary .
define the method __init__ with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
if not,
define the method id_for_label with 2 arguments: self and id_ .
docsring
call the function re . compile with an argument raw string 'DATETIME_INPUT_FORMATS', substitute the result for stamp .
define the method auto_id with an argument self .
call the method self . val_expr with argument f .
from django . forms . models import everything into default namespace .
return new_value .
if self . _errors is None,
substitute safe for value under the 'initial' key of kwargs dictionary .
get the value under the self . status_code key of the self . status_code dictionary,
if call to the function response . has_header with string 'Cache-Control' as an argument .
convert self . cc to a list .
return nothing .
if value under the 'verbosity' key of the options dictionary is greater than zero,
substitute use_tz for self . max_expr .
call the method self . xml . startElement with arguments string 'object' and attrs .
from django . core import serializers into default name space .
call the function getInnerText with addr and return value of the call to the force_text function,
replace '%s' with self . app_or_project use it substitute it for prefix prefix .
if character occurrence of '\\' is contained in path,
with lock,
substitute name for self . name .
substitute value under the best_doublecolon_start key of the hextets dictionary is an empty string .
if not,
call the function logging_config_func with an argument n, .
if not,
call the method __init__ from the base class of the class MultiValueField with 2 arguments: unpacked list args and unpacked dictionary kwargs .
.
join name into a string, return it .
call the method dig1 . execute with statement as the arguments .
if value is true,
call the function ungettext_lazy with an argument string 'Ensure this value has at least least one . ' .
if settings . TEMPLATE_DEBUG is true,
from django . utils . _os import safe_join into default name space .
get name attribute of caches object, return it .
import module sys .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
call the method logger . addHandler with an argument handler .
convert self to a string, return it .
join elements of output into a string, separated by newlines,
if InvalidTemplateLibrary, exception is caught,
call the method parser . add_argument with 6 arguments: string '--extension', action as a string 'store_true', dest as a string 'store_true',
if not,
substitute pubid for self . __upload_handlers .
dest as a string 'all' default as boolean True, help as boolean False and help as boolean False . call the method parser . add_argument with 5 arguments: string '--noinput', action as a string 'store_false',
if not,
common_prefix is None .
if not,
derive the class override from the HttpResponseRedirectBase base class .
substitute boundary for end .
substitute first element of first element for last .
call the method self . configure_filter with 5 arguments: name, value, attrs and choices,
substitute value for self . value .
return output .
call the timezone . now function, substitute the result for now .
substitute length of the length of the result for digit .
if formfield_callback is true,
try,
if fake is not contained in _DJANGO_DEPRECATED_LOCALES,
app_labels is an empty set .
call the function import_library with 2 arguments: nodelist_true and nodelist_false .
define the method as_tuple with 2 arguments: self and fixture_label .
if m is False,
return e .
define the method to_python with arguments self and data .
call the function six . iteritems with an argument base, substitute the result for fields .
default_error_messages is an tuple with an entry: return value of the function _ called with an argument,
if not,
if run_syncdb and loader . loader . detect_conflicts,
call the method payload with an argument val, from the base class of the class SimpleCookie .
call the method self . remove_potfiles .
call the method logging . addHandler with an argument boolean .
derive the class SafeBytes, from the bytes base class .
compile regex expression from regex . compile regex and substitute it for regex .
if not,
define the method is_ajax with arguments self and filename .
if ch is true,
derive the class DummyCache from the EmailMessage and func_name, base class .
define the method items with an argument self .
call the function mark_safe with an argument template, use it as an argument for the call to the function mark_safe,
call the BaseCache . __init__ method with arguments self, unpacked list args and unpacked dictionary kwargs .
return boolean False .
call the function _ with an argument tuple on the result of the function _ called with an argument string,
join elements of output into a string, return it .
substitute abspath for ULONG_PTR .
raise an CommandError exception with an argument string 'You values of '%s' in self . per_page,
derive the class Parser form the base class object .
if dirname and d are both true,
if self . settings_exception is not None,
replace all the value under the 'indent' key of the options dictionary, if the key exists substitute it for m, if not,
return usage .
call the os . path . dirname method with an argument fixture_name .
call the method fp . getvalue, return the result .
if regex is not None,
define the method __str__ with an argument self .
substitute input_data for self . conditions_nodelists .
if self . merge and conflicts is false,
call the method self . build_attrs with an argument attrs, substitute the result for final_attrs .
create a list with 2 elements: app_label and 'locale' into a valid path,
substitute the value under the PREV key of the substitutions dictionary for orig .
content . setter decorator,
substitute True for self . __upload_handlers .
otherwise if o is an instance of decimal . Decimal
substitute META for self . _meta .
derive the class Atom1Feed from the object base class .
import module re .
from django . utils . encoding import smart_text and force_text into default name space .
return boolean False .
if param is true and param is None,
define the method extend_nodelist with 4 arguments: self, nodelist, node and token .
define the function upath with an argument path .
from django . utils import six into default name space .
from __future__ import unicode_literals into default name space .
if self . is_reversed is an empty string .
if f . name is contained in cleaned_data,
child_nodelists is an tuple with 2 initial elements: strings num_args .
if self . _pk_field equals self . fk equals to self . fk .
call the __init__ method of the base class of the class FilePathField, with arguments: data and prefix set to false,
define the method _get_page_range with 2 arguments: self and message .
substitute value for value under the field . attname key of the data dictionary .
define the method __init__ with 2 arguments: self and language .
define the method __init__ with 2 arguments: self and file .
try,
call the function six . text_type with an argument bf .
derive the class SerializerDoesNotExist from the KeyError base class .
call the function time_format with 2 arguments: value and arg .
assign the result to sql . call the method connection . introspection . Client with the result as argument, assign the result to assign the sql .
if new_name starts with a string '_' .
call the method m . index call the result with the argument,
call the method self . check_for_whole_start_tag with connection and executor . loader as arguments .
define the method getvalue with an argument self .
call the method parser . add_argument with 3 arguments: string '--database', default set to DEFAULT_DB_ALIAS,
if PY3 is true,
if not,
get the value under the lang_code key of the link_prev dictionary, return it .
if TypeError or ValueError exceptions are caught,
return self . new_objects .
if not,
if x is not contained in unique_check, substitute the resulting list for self . namespaces .
define the method __init__ with 2 arguments: self and message .
define the method _get_count with an argument self .
substitute list_ for rollback and second_item, respectively .
and help set to return value of the method self . usage . call the method parser . add_argument with 5 arguments: string '-v', action as a string 'store_true',
tok is an empty list .
cache_timeout is integer 0 .
call the connection . cursor, method, substitute the result for cursor .
call the method self . _reset_dicts with an argument dict_, .
if ValueError exception is caught,
if s is not an instance of the six . string_types,
define the function method_decorator with 2 arguments value and arg .
return value of the function _ called with an argument value, return the result .
root dictionary root root root root root .
subtract 10 integer 2 .
do nothing .
define the method __nonzero__ with an argument self .
call the method self . style . NOTICE with an argument string "%s, from the beginning of the result of the function,
append a list containing string to it, use the result as an argument,
raise a SerializerDoesNotExist exception with an argument format .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
define the method __init__ with an argument self .
call the method call the method d . groups, use the result as the argument for the call to the,
return func .
evaluate the function StringIO .
derive the class EmailValidator from the object base class .
call the function warnings . warn with 2 arguments: string " and number is not an empty string .
try,
substitute match . image for name .
import module warnings .
if self . initial_forms is false,
raise an TemplateSyntaxError exception with an argument string "'%s' received takes self,
define the method __init__ with 5 arguments: self, stream and kwd_mark set to integer 60
if over_bytes is true,
if self has an 'error_dict' attribute,
define the method __iter__ with an argument self .
call the function urlsplit with an argument value, substitute the result for scheme .
substitute length of self . loopvars for function_name .
call the function ungettext with 3 arguments:
call the method self . build_attrs with 2 arguments: string '^/' and str, return the result .
sum t . lineno by t . contents .
join elements of tuples into a string, return it .
define the method list with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
if csrf_token is true,
define the method push with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
try,
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
form form instance of the form class, call the method self . coerce prefix set to self . auto_id and prefix as arguments,
if _cookie_encodes_correctly attribute of the _prefixes, if it exists,
call the function walk_to_end with 2 arguments: ch and pattern_iter .
help is a string "Prints Node: files to files .
try,
if not,
for p in return value of the method self . ignore_patterns called with an argument:
join self . fed and return it .
define the method serialize_headers with an argument self .
define the method clear with argument self .
finally perform,
set translation_function attribute of the base .
define the method __iter__ with an argument self .
call the function warnings . warn with an argument string "No fixture data found . ",
call the self . compile_messages with an argument msg, substitute it for msg .
if cache is an instance of BaseDatabaseCache class,
call the function re . sub with 3 arguments: raw string '-e',
return string "<UTC>" .
instantiate attribute attribute from the name object, if it exists,
raise an ValueError exception with an argument e .
call the method validators . deepcopy with 2 arguments: raw string '1',
return boolean False .
return result .
call the os . path . splitext with an argument base, substitute the result for base and ext .
define the method __init__ with 2 arguments: self and conditions_nodelists .
try,
append check to self . registered_checks .
if not,
instantiate a class Group with 2 arguments: string " where '%s' is replaced with param .
call the method self . _setup .
call the method handler . endElement with an argument string 'author' .
call the method logger . warning with an argument string 'natural' . %s %s', formated with request,
join c into a string, return it .
define the method back with an argument self .
define the method __init__ with 2 arguments: self and options set to None .
call the method self . make_writeable with 2 arguments potfile and locale .
if self . is_localized is true,
define the method add_arguments with 2 arguments self and parser .
sum j by integer -1 and integer 1, append the result to the previous result, return it .
if length of version equals integer 6,
define the method __getitem__ with 2 arguments: self and i .
yield string "# * arguments, on the result as the result,
define the method created_time with arguments self and name .
define the method __deepcopy__ with 2 arguments: self and memo .
if not,
with self . mutex perform,
call the function ugettext_lazy with an argument value, return the result .
try,
do nothing .
call the function getInnerText with an argument string 'DATE_INPUT_FORMATS', substitute the result for base56 .
substitute the result for value . call the method value . replace with 3 arguments: raw string '_',
call the method self . _isdst with an argument dt, if it evaluates to true,
return self . token .
return output .
for every format in self . input_formats
remove config dictionary element under 'handlers' key .
call the method copy . deepcopy with an argument self . true, substitute the result for obj . instance .
define the function iriencode with an argument .
substitute True for smart_str .
return func .
call the function force_str with an argument minutes .
define the method clean with an argument self .
get 'value' attribute of the _active object, if it exists substitute it for self . current_token .
derive the class MinValueValidator from the HttpResponseRedirectBase base class .
if ValueError or TypeError exceptions are caught,
define the method tzname with 2 arguments: self and dt .
if value under the 'author_name' key of the item dictionary is not None,
if ImportError exception is caught,
if pattern starts with return value of the method pattern . starts with an argument ' . ',
return default_key_func .
raise and exception InvalidCacheBackendError with string "Could not find backend '%s': %s", replace '%s' with backend and e .
return boolean False .
derive the class _LazyModule from the types base class .
attachment is an instance of a class SafeMIMEMultipart, created with arguments: content and encoding .
if locations is true,
file is a file in read mode, substitute it for file .
break the loop execution .
if current attribute of current is true,
join self . dirpath, self . dirpath, self . file and self . file into a file path,
call the method payload . add_arguments with an argument parser .
as long as field is not None,
call the method self . path with argument name, substitute the result for full_path .
try,
call the json . dumps method, use the result as an argument for the call to the json . dumps function,
call the method parser . add_argument with 2 arguments: string '--pythonpath' and help set to string ' .
join root and f into a file path, substitute it for f .
call the function select_template with an argument str, use the result as an argument for the call to the function MovedModule .
yield value under key key of self dictionary .
call the method self . parse_name with an argument bf_errors, use the result as an argument for the call to the function os . fromtimestamp,
call the method field . getAttribute with an argument obj, substitute the result for the value under the field . name key of the self . _current dictionary .
try,
call the function resolver . resolve with an argument request, substitute the result for value .
import module datetime .
return an empty string .
call the method get_language, on the first element of the result, split the first element of the result,
call the method m . group with 4 arguments: integer 2 and integer 1, respectively .
visible_issue_count is an integer 0 .
call the function re . compile with 2 arguments: raw string ' . ',
define the method _ipython with an argument self .
from django . template import loader and RequestContext into default name space .
call the connection . introspection . table_names method, substitute the result for tables .
if t . token_type is not EndToken,
if v is false or v is None or v is an empty list .
define the method clear with argument self .
derive the class RemovedInDjango19Warning from the SyndicationFeed base class .
derive the class QueryDict from the MultiValueDict base class .
return boolean False .
append '-' to digits .
raise an TemplateSyntaxError exception with an argument string "Invalid header: %r", where '%s' is replaced with filter_name .
return an empty string,
from django . utils import lru_cache into default name space .
define the method open with an argument self .
check_for_language is lambda function check_for_language with an argument x .
for every form in valid_forms,
if http_cookies . CookieError exception is caught,
return boolean False .
call the method d . . .
define the method delete with arguments self and name .
do nothing .
from functools import total_ordering into default name space .
substitute the result for value under the 'max_digits' key of cc dictionary converted to an integer,
return self . _request .
substitute choices for self . choices .
incomment is boolean False .
call the function translation with an argument settings . LANGUAGE_CODE, substitute the result for _default .
define the method add_arguments with 2 arguments self and parser .
define the method end_index with an argument self .
get the integer representation of the result of the method record .
finally perform,
if i is greater than or equal to length of subject,
decorator function register . filter with an argument is_safe set to boolean True .
return result .
call the method f . save_form_data with 2 arguments: instance and value under the f . name key of cleaned_data dictionary .
call the method apps . get_app_config with an argument app_label, substitute the result for app_config .
call the method parser . add_argument with 5 arguments: string '--noinput', action set to string 'store_false',
return the result of the function date . now and self . format_string, return the result .
if KeyError exception is caught,
define the method get_resolved_arguments with 2 arguments self and context .
call the function six . reraise with 3 arguments: DeserializationError
define the method has_key with self class instance, key and version defaulting to None as arguments .
call the method context . render_context . push with an argument context, substitute the result for context . render_context .
increment weight by integer 2 .
return result .
if self . verbosity is greater or equal to integer 2 .
raise an CommandError exception with an argument msg .
self . bcc is an empty list .
substitute self . choices for self . widget . choices .
if six . PY2 is true,
from django . apps import apps into default name space .
lbp is an integer 0 .
divide the result of the function _ called with an argument string,
raise an exception .
call the function date . year, with 3 arguments: d . year, d . month and d . day, return the result .
_wrapped is None .
from __future__ import unicode_literals into default name space .
raise an CommandError exception with an argument string "%r conflicts with the name of the name of
finally perform,
call the method self . _cache . incr with key and negative delta as arguments, return the result .
if value is not an instance of dict or value is an instance of dict type,
call the method add_arguments from the base class of class Command, with an argument parser .
decorator function register . filter with an argument is_safe set to boolean False .
substitute BOOL for self . _moved_attributes .
call the method __init__ from the base class of the class URLValidator, called with 2 arguments: attrs and choices,
call the method six . text_type with encoding and errors as arguments .
for every key and value under the key key of self dictionary .
if not,
substitute func for value under the 'widgets' key of the self . __dict__ dictionary .
substitute the result for nodelist . call the method parser . parse with an argument tuple with an element string bits, substitute the result for nodelist .
if m is true,
substitute complain for iterkeys .
if not,
define the method _read_limited with an argument self .
define the method __new__ with 3 arguments: cls, unpacked list args and unpacked dictionary kwargs .
try,
call the method match . group with an argument date, substitute the result for filter_name .
import module django . core . checks . weekday,
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
if lookup_view is contained in self . _callback_strs .
call the method stream . unget with an argument chunk .
substitute the result for value under the key key of the context dictionary is true,
write the result to the self . stdout . call the self . stdout . write method to self . stdout .
call the method self . compress with an argument list .
raise an AttributeError exception with an argument string "'%s' object has no no . " .
widget is an instance of HiddenInput class
if tags is true and is false and if tags is false, return value of the method checks . tag_exists called with an argument tag,
call the re . compile function with an argument middleware_class, substitute the result for units .
define the function wordwrap with 3 arguments: singular, plural and number set to None .
get the next element of the iterable pattern_iter, pattern_iter, assign the result for ch and escaped, respectively .
call the function ungettext with 3 arguments: singular, plural, number and number .
if not,
convert value to an integer and arg converted to an integer, return it .
substitute num for forms_to_delete .
call the self . convert method with i and self . decimal, store the result to the neg and value, respectively .
if self . asvar is true,
call the function restart_with_reloader, substitute the result for hfile .
define the method __init__ with 2 arguments: self and filter_expression .
widget . is_localized is boolean True .
_mtimes is a string _mtimes .
import module mimetypes .
define the method to_python with arguments self and value .
if file_name is an instance of Template class,
if count is lesser than or 4,
week_number is integer 1 .
raise an InvalidTemplateLibrary exception with an argument string "'%s . %s', where '%s' is replaced with taglib_module and e .
substitute smart_bytes for lbp .
substitute timeout for self . timeout .
return the result of the function format_html called with an argument path,
from django . utils . translation import ugettext_lazy and ugettext as _ into default name space .
call the self . msg method with the result of the function force_text called with an argument,
define the method handle_fk_field with 4 arguments: self, key and expires set to None .
call the function touch_import with 3 arguments:
if lang is None,
if file has an 'error_dict' attribute,
call the method parser . add_argument with 3 arguments: string '-v', string '--all', action set to 'store_true',
raise an exception .
do nothing .
call the method handler . addQuickElement with 2 arguments: string 'author' and value under the 'id' key of the self . feed dictionary .
derive the class Truncator, from the DateTimeBaseInput base class .
call the function force_text with an argument self . value, substitute the result for self . value .
return html .
define the method read with an argument self .
call the function allow_lazy with 2 arguments: strings and six . text_type, substitute the result for __unicode__ .
remove the entry under the BLOCK_CONTEXT_KEY key of the attrs dictionary .
get config dictionary value under 'handlers' key of config dictionary, use it as an key to get value under the 'stream' key of config dictionary .
get the value under the 'verbosity' key of the options dictionary, substitute it for self . verbosity .
define the method __repr__with with an argument self .
substitute 3 for base_name .
return self . parent_instance .
define the method delete with self class instance, key and version defaulting to None as arguments .
otherwise if name equals a string 'NOTPROVIDED',
import module sys .
call the method self . xml . endElement with argument string 'object' .
if OSError or ValueError exceptions are caught,
latest_date is an string '0' .
define the method __iter__ with an argument self .
substitute self . _encoding for encoding .
output_transaction is boolean True .
try,
if not,
substitute the result of the method m . end for rest .
if ignore_failures is true,
increment j by integer 1, substitute the result for i .
if not,
skip this loop iteration,
if port is True, substitute it for self . port .
if _active has an attribute 'process_view',
if not,
if terminal_char is not equal to string ')' .
substitute cleaned_data for request . values .
return value .
call the function re . compile with an argument raw string 'THOUSAND_SEPARATOR', substitute the result for msg_data .
call the method self . __dispatch with 3 arguments: value under the t, key of the self . __dispatch dictionary,
from django . core . management import call_command into default name space .
raise an ValueError exception with an argument string "Base36 takes keys %r: .
if not,
raise an ValidationError with 2 arguments: value under the 'required' key of the self . error_messages dictionary and code set to 'required' .
old_handler is an empty string .
define the method enter_command with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
define the method __repr__ with an argument self .
property decorator,
substitute element of elt list for param .
if ValueError exception is caught,
get value under the key key of the self . queryset dictionary, substitute it for value .
substitute link for value under the NEXT key of the root dictionary .
define the method add with 5 arguments, self class instance, key, value, timeout set to DEFAULT_TIMEOUT and version set to None .
call the method __init__ from the base class of the EmailBackend class with 2 arguments: unpacked list args and unpacked dictionary kwargs .
increment first element of parts by ':', append the parts to new_ip .
import module as as arguments .
call the method lookups . appendlist with 3 arguments: pattern . name and self . __kw,
define the function ungettext_lazy with 3 arguments: singular, plural and number set to None .
define the method is_valid with an argument self .
if name and "The respectively . raise an error .
append path to self . _js .
if IOError exception is caught,
from __future__ import unicode_literals into default name space .
call the method parser . add_argument with 4 arguments: string '--noinput', metavar set to None, dest set to string 'append',
if the the previous is true,
call the method gettext_module . find with 3 arguments: string 'django' path, path and list containing 4 entries:
call the method bmatch . format with an argument format_string, return the result .
call the method self . _get_scheme, return the result .
call the method f . close .
define the method __init__ with 2 arguments: self and func .
from django . core . management . base import AppCommand into default name space .
call the method bf . get_migratable_models with an argument label .
from django . core . management . base import BaseCommand and CommandError into default name space .
if not,
substitute SelectMultiple for widget .
if self . _request_middleware is None,
if _serializers is false,
lang is None .
return value .
return obj .
substitute pubid for self . pubid .
raise an MultiPartParserError with an argument string "'%s .
call the method handler . startElement with 2 arguments: string 'comments' and handler .
if value is None and attr is contained in declared_fields
otherwise if last element of row equals a string 'as',
self . _namespace_dict is an empty list .
call the method __init__ with 2 arguments: unpacked list args and unpacked dictionary kwargs .
for every k and v in result of the function six . iteritems with an argument fields
make a directory file .
import signal module .
define the method add_fields with 3 arguments: self, form and index .
create is a tuple containing 2 elements: None and an empty tuple .
property decorator,
if not,
define the function parse_cookie with 2 arguments: string '<ul and
raise an ValidationError with 2 arguments: value under the 'required' key of the self . error_messages dictionary and code set to 'required' .
derive the class FilterNode from Node base class .
define the method copy with an argument self .
substitute self . handle_app for self . content .
return an empty string .
nodelist is boolean True .
if not,
if i is true,
replace every occurrence of '\\' in a string, separated by whitespaces,
if fields is not None,
if TypeError or TypeError exceptions are caught,
call the function register_serializer with 2 arguments: _string_concat and doc substitute the result for iterator .
nofollow_attr is an empty list .
call the force_text function with an argument value, substitute the result for final_attrs .
use the result as an argument for the call to the function datetime . fromtimestamp, return the result . define the method as_text with 2 arguments: self and name .
derive the class self, from the Exception base class .
plural is an empty list .
return instance .
if not,
if callback is an instance of types . models_module,
substitute force_bytes for force_str .
derive the class FilterNode from list base class .
if safe_input is not None,
derive the class TranslatableFile from the DjangoRuntimeWarning base class .
if not,
define the method recipients with an argument self .
inplural is boolean False .
join p into default name space .
define the method configure_formatter with an argument self .
call the function loader with arguments name and dirs, assign the result to source and display_name .
import module sys .
get the value under the 'indent' key of the options dictionary, if it exists substitute it for self . merge .
raise an CommandError exception with an argument string "You must %s', at least one app label . " .
if self . is_bound is true,
convert self to boolean, return it .
if obj is instance of models . signals . signals .
raise an BadSignature exception with an argument string "The "%s" does not found" .
import module os .
if length of config_string is lesser than integer 1,
if field equals to NON_FIELD_ERRORS and NON_FIELD_ERRORS is contained in opts . error_messages,
define the function m2m_convert with an argument the argument .
define the method __init__ with 2 arguments: self and callback .
if only_initial is false,
define the method enter_command with 2 arguments: self and other .
if self . verbosity is greater or equal to integer 1,
otherwise if cmatches is true,
if not,
if path is not contained in self . empty_values,
derive the class IPAddressField from the OrderedDict base class .
define the function get_mod_func with 2 arguments value and arg set to None .
self . translate is boolean True .
from django . utils . deconstruct import deconstructible into default name space .
if confirm equals string '+',
call the function ugettext with an argument list, use the result as an argument for the call to the function avoid_wrapping
convert obj to lowercase, substitute it for total_forms .
call the function force_text with an argument initial, return the result .
get the value under the 'database' key of the options dictionary, substitute it for connection .
substitute stream for self . _stream .
import module os .
substitute '/' and '/' .
call the method field_stream . read, substitute the result for content .
for every cat in value under the 'categories' key of the item dictionary .
substitute the value under the db key of connections dictionary for table .
substitute translation for translation . _catalog .
if not,
substitute last element of bits .
return self . file . size .
convert self . name into boolean, return it .
if six . PY3 is true,
define the method validate with arguments self and value .
define the function method_decorator with 2 arguments: value and timezone set to None .
call the method self . can_write . release .
derive the class Select from Node base class .
call the method parser . add_argument with 3 arguments: string '-v', action set to string 'store_false',
call the BaseConverter function with one as argument, store the result in tables .
changed is boolean True .
yield ch and boolean False .
call the function sys . get_version . write with an argument django . core .
where '%s' is replaced with options,
substitute cmd for self . cmd .
return nothing .
try,
call the method t . nud substitute the result for left .
if not,
call the method parser . compile with 3 arguments: string '--no-initial-data',
field_list is an empty list .
substitute warning for self . warning .
substitute the result for value under the RESULT key of the options dictionary . call the function, function,
read data from buf, yield the result .
call the function urlsplit with an argument location, substitute the result for bits .
return the result . derive the class Deserializer from the six . Iterator base class .
call the method self . configure_custom with 4 arguments: length, truncate, text, truncate_len and truncate_len .
call the function datetime . time with an argument unpacked dictionary kw, return the result .
substitute path of path for path .
call the method self . validate_key with argument key .
call the method self . get_parent with an argument context, substitute the result for value .
if UnicodeError exception is caught,
if self . invoked_for_django is false,
return result .
return self . content .
from decimal import Decimal tuple into default name space .
call the method handler . get_cookie_signer with an argument salt, store the result in value .
define the function compile_func with 2 arguments: parser and token .
substitute RemovedInDjango19Warning for width .
decorator deconstructible,
call the method self . stdout . write with an argument string " all %s\n" of the migrations . " .
if not,
call the function set with 4 arguments: list of the return value of the list function called with 6 arguments:
add character ' . starts with string '-' and string '-' .
define the function divisibleby with an argument dirname .
define the function smart_urlquote with 2 arguments: x and check_path .
for every tok in _urllib_parse_moved_attributes,
define the method __init__ with 2 arguments: self and config .
if not,
d is a string d .
for every field_name in self . fields,
raise an ValueError exception with an argument string .
define the method S with an argument self .
for every obj in return value of the method self . queryset . all
from django . utils import six into default name space .
define the method __init__ with 2 arguments: self and fixture_label .
define the function check_errors with an argument kwargs dictionary .
for every attr in custom_sql,
skip this loop iteration .
if AttributeError exception is caught,
append list containing string '--no-location' to self . msguniq_options .
substitute connection for self . connection .
help is a string "Runs an empty set, ' . " .
call the function open_method with 3 arguments: form, instance, fields and exclude .
call the method handler . addQuickElement with 2 arguments: string 'link' and result .
if not,
property decorator,
if not,
return retval .
consume_next is integer 1 .
call the file . file method .
append the result to merge_migrations .
derive the class TranslatableFile from the object base class .
try,
call the method value . encode with an argument charset .
define the function media_property with 2 arguments: parser and token .
import module warnings .
if self . verbosity is greater than integer 0,
slice is an empty list .
if response is None,
return nothing .
call the method dig1 . split with 5 arguments, assign the result to instantiate and domain .
call the function get_language, substitute the result for language_code .
add ' . ' . ', substitute the result for absolute_max .
if number_equal is contained in color_names,
remove config dictionary element under 'level' key, if it exists substitute it for formatter .
if m is None,
substitute the resulting set value for result .
call the function RegexValidator with 2 arguments: string '^/' and return value of the function _ called with 2 arguments:
opts . fields is None .
take rawdata to the result, substitute it for rawdata .
try,
derive the class DeclarativeFieldsMetaclass from the dict base class .
call the method self . stdout . write with string " OK" as an argument .
if las equals integer 3
if idstring is None,
value under the 'widgets' key of the self . base_fields dictionary is an instance of IntegerField class,
parsed is boolean False .
raise an TemplateSyntaxError exception with an argument string "'%s' received takes large" . ",
value under the ORDERING_FIELD_NAME key of the form . fields dictionary is an instance of IntegerField class,
yield buffer_ .
define the method is_ajax with arguments self and config .
call the function re . compile with an argument string 'ascii', substitute the result for so .
import module tempfile .
call the method command . create_parser with 2 arguments: an empty string and name .
call the function warnings . warn with 2 arguments: string "django . %s' has has deprecated and will be removed in Django 1 . 9 .
substitute type from __call__ for __call__ .
from pprint import pformat into default name space .
safe is an instance of force_bytes class, called with arguments safe and self . encoding, substitute it for safe .
call the method self . configure_custom with an argument config, substitute the result for result .
if self . timeout is not None,
define the function get_language .
import module sys .
if LookupError exception is caught,
otherwise if o is an instance of datetime . time,
help is an the string "Prints the database tables . " .
if value under the 'author_email' key of the self . feed dictionary is not None,
raise an ValidationError with 3 arguments: value under the 'incomplete' key of the self . error_messages dictionary,
skip this loop iteration .
from wsgiref import Image into default name space .
from lib2to3 .
try,
extra_classes is an empty set .
if unpack_ipv4 is true,
define the function write_pot_file with 2 arguments: url and date .
return an empty list .
define the method _close_files with an argument self .
call the function localize with an argument output, substitute the result for output .
call the method apps . get_app_configs, convert the result into a list,
call the method handler . addQuickElement with 2 arguments: string 'link' and value under the 'feed_copyright' key of the self . feed dictionary .
call the function warnings . warn with 3 arguments: string "django . ', with the result perform,
if content_length is greater than settings . FILE_CHARSET,
substitute arg converted into an integer for length .
call the function _explode_shorthand_ip_string with an argument ip_str, substitute the result for ip_str .
from lib2to3 import RLock and Node into default name space .
return the result of the function force_str called with an argument self . __class__ . __name__,
call the method x on the self . index method on the result of the method x . index .
call the method lookups . appendlist with 2 arguments: name and a tuple with 3 entries:
if Model . microsecond is caught,
if not,
call the method parser . add_argument with 5 arguments: string '--all', action set to string 'store_false',
call the method parser . add_argument with 4 arguments: string 'args', metavar set to DEFAULT_TIMEOUT and help is a string '(use .
raise an VariableDoesNotExist exception with an argument bit, for every key and v in the result,
if length of bits is not equal to integer 2,
substitute cls for obj . __class__ .
self . error_list is an empty list .
define the function _checkLevel with an argument func .
get the value under the 'exclude' key of the options dictionary, if it is false,
call the method shutil . save_form_data with 2 arguments: string 'field' and new_path .
import module logging .
call the method next with an argument self . using, substitute the result for output .
if length of bits is not equal to integer 2,
try,
import module warnings .
substitute the second element of result for ip_str .
define the method setlistdefault with 2 arguments: self and field_name .
derive the class _OFFSET_UNION from the object base class .
call the function convert_old_style_list substitute the result for DNS_NAME .
substitute path and recursive for self . match and self . match .
derive the class datetime from the trans base class .
append f . name to time_str, .
otherwise if ch equals a string '(',
return an list containing 2 elements: an empty list and an empty list .
if value is an instance of str type,
if field is contained in self . errors, return boolean True, otherwise return boolean False .
call the function _generate_cache_header_key with arguments key_prefix and request, substitute the result for cache_key .
call the method self . _render with an argument handler .
do nothing .
from django . core . serializers . base import DeserializationError into default name space .
define the method render_node with 4 arguments: self, value, charset and needs_autoescape set to boolean False .
call the method p . communicate, substitute the result for output .
raise an NotImplementedError exception with an argument string 'subclasses of Storage must provide a valid method' .
from django . conf import settings into default name space .
try,
call the function warnings . warn with 2 arguments: string "The importing create has been . ",
return FASTCGI_HELP .
call the method self . _cache . set with key and self . _boundary, as arguments, assign the result to self . _cache .
if last element of parts is contained in self . empty_values,
if not,
define the method __init__ with an argument self .
otherwise if value under the 'unique' key of the options dictionary is true and value under the 'host' key of the options dictionary are false,
for every result and params in range
get the value under the 'interactive' key of the base . __dict__ dictionary, substitute it for number_value .
increment the length of toktext .
if length of fks_to_parent is integer 1,
if localized_fields is not None,
call the function hook with an argument format_string, return the result .
if not,
call the method calendar . isleap with an argument result, use the result as an argument for the call to the function calendar . process_events .
try,
increment self . loaded_object_count by one .
call the method self . data . month . weekday, with an argument self . data . month .
if other is contained in self . children, return boolean True, otherwise return boolean False .
from django . utils . encoding import smart_text into default name space .
call the method zfile . close .
if default is not false .
define the method handle with 6 arguments: self, app_or_project and target set to None .
split the second element of s t .
substitute the first element of bits for p_pattern .
substitute instance . _meta for opts .
do nothing .
get the value under the 'REMOTE_ADDR' key of the options dictionary, if it exists substitute it for .
if not,
if not,
import module warnings .
define the function _strip_once with an argument date .
define the method r with an argument self .
return None .
append rel_model to deps .
call the function re . compile with 2 arguments:
if second and third element of sys . version_info
if extra_context is false,
call the method self . _isdst with an argument dt, if it evaluates to true,
call the function getargspec with an argument current .
if las equals integer 1,
append string '</select>' to output .
if response . streaming is True,
substitute self for __iadd__ .
define the method to_python with arguments self and value .
return input_val .
call the method field . groupdict, substitute the result for hidden_widget .
if ImportError exception is caught,
return last element of list_ .
_empty_value is None .
import module os .
if self . allow_files is true,
return nothing .
if UnicodeError exception is caught,
define the method render with 4 arguments: self, name, value and attrs set to None .
default_error_messages is an an argument,
define the method next with an argument self .
call the method __init__ with 3 arguments: takes_context, args and kwargs from the base class of the class SortedDict, .
substitute the value under the bit key of the PALETTES dictionary for chunk_length .
substitute settings . DEFAULT_CHARSET for self . _charset, .
define the method _iterkeys with an argument self .
raise an CommandError exception with an argument string 'Unknown happened '%s' %s to %s", replace '%s' with url and e .
return a tuple containing string " %s\n" with length of graph . nodes element of graph . nodes
define the method id_for_label with an argument self .
match regular expression with the rawdata to the self . match .
define the method __repr__ with an argument self .
call the method dig1 . ancestry with an argument imported_objects use the result .
define the method is_secure with 5 arguments: self, name and notation_name .
if required is true and initial is not None,
call the method self . _set with key, substitute the result for pickled .
define the method _parse_header with arguments self and name .
call the method __get__ from the base class of the class FilePathField, with 2 arguments: instance and val2 .
if PY3 is true,
if os . name equals string 'nt',
define the method _get_filename with arguments self, name and content .
model_list is an empty list .
if ValueError or ValueError exceptions are caught,
call the function mark_safe with an argument word, substitute the result for i-th element of words .
import module io .
substitute name for self . name .
return self . _queryset .
call the method self . _create_attachments with an argument msg, return the result .
for every key_value in migrations_to_squash,
if self . warning is an instance of Exception .
convert new_name to a string and substitute it for new_name .
derive the class AppCommand from the BaseCommand base class .
if not,
call the method related . natural_key .
if length of bits is greater than integer 2,
if current_len equals a string truncate_len .
define the method __init__ with arguments self, name, params and params .
if value is true and value is not an instance of six . text_type,
for every f in files,
if self . verbosity is greater or equal to integer 2,
substitute initial_forms for total_forms .
add model to opts .
call the method chunk . find with an argument line, substitute the result for s .
raise an AttributeError exception with an argument string "This function is deprecated .
define the method __init__ with 4 arguments: self, exc_type, variable_name set to None and silent set to boolean False .
call the function six . text_type with an argument number, substitute the result for hextets .
docsring is a list containing 3 elements: last elements of tuples from 0 to the power index,
if first element of tzinfo equals a string '-' .
raise an TemplateSyntaxError exception with an argument string "'%s' statement too at least one .
define the method __new__ with 3 arguments: cls, unpacked list args and unpacked dictionary kwargs .
call the method addr . encode with argument string 'ascii' .
self . _done is boolean True .
while length of digits is smaller than max_width,
raise an AttributeError exception .
return boolean False .
replace '%s' in string " %s" with migration . ', where '%s' is replaced with migration . name .
substitute the value under the cache_key key of the _format_cache dictionary .
if not,
import module gzip .
call the method bmatch . match with an argument middle, if it evaluates to true,
derive the class VerbatimNode from the _LazyModule base class .
if KeyError exception is caught,
from django . core import validators into default name space .
if self . _is_rendered is false,
allow_multiple_selected is boolean False .
import module socket .
define the method __mod__ with 2 arguments: self and subcommand .
call the method e . is_overridden with an argument e . level .
define the method delete with self class instance, key and version set to None as arguments .
substitute varlist for self . val_expr .
call the method self . tag with 2 arguments function_name and compile_func .
if first element of args equals a string '?',
call the function re . compile with an argument string 'DATE_INPUT_FORMATS', substitute the result for MAXSIZE .
if match is true,
call the method os . path . splitext with an argument filename, convert the result to a file path .
get func . domain attribute of the func object, if it exists substitute it for use_grouping,
return func .
for every bytes in stream .
week_number is a string week_number .
if self . file has an attribute 'file',
default_error_messages is an string "%s field is None,
define the function flatatt with an argument d .
import module re .
call the function warnings . warn with 2 arguments: function_name and will be removed in Django 1 . 9 .
substitute string for __iadd__ .
decrement remaining .
call the method __init__ from the base class of the WSGIServer class with 2 arguments: unpacked list args,
derive the class SafeMIMEMultipart from the Exception base class .
substitute second for dictConfigClass .
if not,
if model is contained in created_models,
return result .
if self . require_all_fields is true,
import module hashlib .
if KeyError exception is caught,
raise an TypeError exception with an argument string "You must be a mapping . " .
property decorator,
call the self . _lock . writer method, with the result perform the following,
define the method _get_name with an argument self .
return default .
call the method self . expression substitute the result for retval .
from django . utils . functional import lazy into default name space .
define the function lock with arguments f and flags .
return first element of result .
substitute opname for func . __doc__ .
if settings . TEMPLATE_DEBUG is true,
return integer 0 .
return result .
define the method strptime with arguments self, value and format .
from django . core . management . base import AppCommand into default name space .
raise an TemplateSyntaxError exception with an argument string "'%s . only be be address . ",
call the method logging . _releaseLock . clear .
call the function get_language, substitute the result for language_code .
call the function avoid_wrapping with an argument value, return the result .
call the function ungettext with 2 arguments: return value of the function,
call the method selected_choices . new_datetime with an argument date, substitute the result for d .
if not,
define the method enter_command with arguments self and error_dict .
if not,
substitute True for SafeString .
return None .
derive the class DTDForbidden from the base class with the result .
try,
raise an TypeError with an argument string 'Subclasses must be None or a .
if field . rel . through . _meta . auto_created is true,
if f doesnt have an attribute '_fqdn',
missing_args_message is a tuple containing 2 database database fixture . " .
raise an NotImplementedError with an argument string 'subclasses of FileUploadHandler must provide a project method' .
import module tarfile .
call the method __new__ with 3 arguments: cls, unpacked list args and unpacked dictionary kwargs .
if iri is true,
from django . core . mail . backends . db_manager import EmailBackend as thread into default name space .
if settings . TEMPLATE_STRING_IF_INVALID is true,
define the method __init__ with an argument self .
append self . number to a string and append the result to %s . replace '%s' in string "%s, from %s" with self . number self . number . num_pages,
and encoding set to boolean True,
import module base64 .
import module datetime .
call the function os . path with an argument name, use the result as an argument for the call to the function os . path . normpath,
_fields_ is a list with 3 elements: integers with 3 elements: tuple with 2 elements: result of the function MovedAttribute, called with 3 arguments:
try,
if decimal_pos is not None,
set value under the DEFAULT_CACHE_ALIAS key of caches dictionary, if it exists return it,
raise an exception .
if bits is not equal to other,
for every attr in self . nodelist_loop,
append res to a list, substitute the result for res .
substitute EscapeBytes for self . month_none_value .
for every cmatch and refs in tuple .
substitute third and third element of bits for bits .
if _globs_ is None,
if ext is true,
call the method __init__ from the base class of the HttpResponse class, called with 2 arguments: unpacked list args,
substitute form . instance for obj .
errors is an empty list .
join elements of source into a list, substitute the result for piece .
raise an TemplateSyntaxError exception with an argument string, "'%s' takes one argument" .
call the method path . expanduser with an argument expanded_template .
from wsgiref import ceil into default name space .
derive the class SyndicationFeed from the object base class .
called with 2 arguments: value under the 'bindAddress' key of wsgi_opts
return attachment .
return None .
substitute self . _func_path for parser . restype .
wsgi_opts is a string 'Nominates not if value under the key 'maxspare' of options dictionary converted to an integer,
increment self . fixture_count by one .
call the method self . choice with an argument obj .
if not,
otherwise if timeout equals to integer 0,
derive the class TemplateResponse from the Structure base class .
call the function get_ns_resolver with 2 arguments: bit dictionary and parser .
add tuple containing an entry: return value .
import module sys .
substitute cls . __text_cast for cls . __str__ .
convert text into an integer, substitute it for c .
substitute self . queryset for qs .
if not,
return an instance of metaclass class,
for every v in self . empty_values, if v is false,
substitute the result for value . call the function mark_safe with 3 arguments: value, base, convert the result into a string,
from django . utils . translation import ugettext_lazy as _ and ugettext into default name space .
call the __init__ method of the base class of the class a class BaseModelForm .
for every pattern in self . loaders,
increment current_len by integer 1 .
return mail . modified_code .
return message .
if TypeError exception is caught,
substitute compressed for self . style_func .
define the method __init__ with 4 arguments: self, number, number and paginator .
from functools import lru_cache into default name space .
register . tag decorator,
write migration to self . app_label . write migration to self . app_label stream .
if it equals a string RAW
try,
substitute the '%s' with obj and indent it .
if cmatch is true,
try,
set attr . name attribute of the object object to attr .
call the method self . error_class substitute the result for value under the field key of self . _errors dictionary .
call the method form . instance with an argument exclude set to exclude .
call the method router . db_for_write with argument self . cache_model_class, substitute the result for db .
substitute value for self . value .
if self . m2m_data is true and save_m2m is true,
if data is None,
convert num to length and substitute it for length .
call the method self . _key_to_file with key and version as arguments .
loader is instance of MigrationLoader class, substitute it for loader .
try,
substitute the result for rest dictionary value under the m key of the self . m dictionary, substitute it for rest .
try,
import module copy .
substitute key for value under the KEY key of the oldroot dictionary .
call the method os . environ . copy, substitute the result for new_environ .
format is a instance of AutoField class, created with 3 arguments: string '%%' .
call the function form . add_prefix with an argument name, substitute the result for self . html_name .
for every key in self . keyOrder,
define the function b with an argument s .
if not,
call the method self . connection . disconnect_all .
if m is not None and n is not None,
call the to_python method from the base class of the class ModelMultipleChoiceField, with arguments v and self . _files .
if not,
if buffer_ is not None,
call the method __init__ from the base class of the class MultiValueDict, with 2 arguments: unpacked list args,
for every key in result,
call the function parse_accept_lang_header with an argument argv as an empty list .
if bcc is true,
call the method __init__ with 3 arguments: self, urlconf_name and namespace set to None .
return an instance of OrderedDict class, created with an argument fields .
do nothing .
return default .
if chunk_size is false,
define the function ugettext with an argument message .
if self . decimal_places is not None,
call the method handler . startElement with 2 arguments: string 'author' and result of the method self . __getstate__ .
if self . require_all_fields is true,
substitute EmailInput for chunk_size .
for every lineno and line in result,
derive the class MemcachedCache from the UploadFileException base class .
if field is an instance of models . forwards_plan and field . name is not None,
call the method __bool__ . __bool__ with an argument self, return the result .
_iterkeys is an empty string .
return text .
if incomment is true,
if not,
open the value under the 'umask' key of the options dictionary, preform it with the following,
call the method self . handle_file_complete .
if limit_choices_to callable object,
call the method self . _render with 3 arguments: length, truncate, self . _wrapped and length .
split path into parts by ', return the result .
get the next element assign the result for ch and escaped, respectively .
call the function get_template with an argument template, substitute it for template .
substitute instance of str_number for self . _func_path and self .
return nothing .
return value .
if context_instance is not contained in val
call the method smart_split_re . finditer with an argument self . template_string .
if old_style_list is false,
call the method self . xml . addQuickElement with an argument string created .
if ValueError exception is caught,
define the function dictConfig with an argument lang_string .
if third element of django . VERSION is not equal to other,
do nothing .
import module importlib .
call the method self . compile_function_error with arguments obj and field .
get format_type attribute of the func object, substitute it for func .
if name is true,
import module threading .
if self . loaded_object_count is false or obj is false,
define the function decorator_from_middleware with 2 arguments path and context .
call the method self . add_truncation_text with an argument message .
try,
i is integer 0 .
call the method parser . css_classes, with an argument filter_name substitute the result for filter_func .
substitute timeout for self . _remaining .
derive the class MIMEMixin from the object base class .
append bit to split list .
where '%s' is replaced with options . if options is contained in options,
call the function re . compile with an argument raw string exc .
substitute sysid for self . literal .
if can_fail is true,
if AttributeError exception is caught,
call the method self . xml . endElement with an argument string 'field' .
from django . http . cookie import SimpleCookie and parse_cookie into default name space .
target_app_labels_only is boolean False .
import module os .
otherwise if t . contents equals 'endcomment',
get config dictionary element under 'level' key, if it exists substitute it for level, if not, level is None .
define the method with arguments self and data .
substitute chr for program .
from django . utils . encoding import force_str and iri_to_uri into default name space .
define the function time_format with 4 arguments: value, format, None and use_l10n set to None .
define the method close with arguments self and unpacked dictionary kwargs .
from . import Warning, register and Tags into default name space .
call the method value . astimezone with an argument timezone, substitute the result for value .
for every app_config and model_list in app_list,
return boolean True .
substitute root for nonlocal_root .
get the value under the field name of the obj,
call the method copy . deepcopy with an argument self . LANGUAGE_CODE, substitute the result for self . fields .
return name and cmp_fmt .
call the function template_localtime with 2 arguments: value and use_tz set to context . use_tz, substitute the result for value .
if it is true,
self . invoked_for_django is boolean True .
try,
if not,
get the value under the 'database' key of the options dictionary, use it as a key to get the value from the connections dictionary, substitute the result for connection .
call the method fp . read with an argument settings . FILE_CHARSET, call the method decode on the result with an argument settings . FILE_CHARSET,
call the function new_method_proxy with an argument operator . error_list, substitute the result for __getitem__ .
substitute '%s' in string normal_row with '_' and d .
call the method self . stdout . flush .
value under the DELETION_FIELD_NAME key of the form . fields dictionary is an empty string,
call the method self . _get_validation_exclusions, substitute the result for lineno and offset .
try,
writer is an instance of MigrationWriter class, created with argument .
define the method to_python with arguments self and value .
substitute first element of s for s .
define the function _parse_header_params with an argument text .
call the method parser . delete_first_token .
otherwise if field . rel is true and field . rel is an instance of models . rel .
import module io .
define the method chunks with arguments self and chunk_size defaulting to None .
return nothing .
call the function re . compile with an argument raw string '^/' .
raise an exception .
call the function _trans . deactivate_all .
substitute error_messages for value under the 'error_messages' key of the attrs dictionary .
call the function get_callable with arguments lookup_view, and boolean True, substitute the result for lookup_view .
get the value under the key 'database' of the options dictionary, substitute it for exclude .
if version is None,
for every model in return value of the method apps . check called with argument unpacked dictionary kwargs,
update kwargs dictionary with self . fixture_object_count dictionary kwargs .
if app_path is not None,
get the value under the key 'exclude' of options dictionary, substitute the result for base_directory .
if start is greater than result,
define the method __init__ with 11 arguments: self, required, widget set to boolean False,
if exclude is true and f . name is contained in exclude,
call the encode function on the Header class instance, created with arguments addr and encoding, substitute the result for addr .
return data .
define the function m2m_convert with an argument etag .
if not,
call the method 'id' . format with an argument i, append the result to the end .
substitute fields for value under the 'fg' key of attrs dictionary .
call the method get_language, substitute the result for self . _dimensions_cache .
call the method __init__ from the base class of the class FilePathField, with arguments: self, name, content_type, size and content_type_extra .
for every basedir in filelist,
define the function get_default_timezone .
return msg_count .
raise an ValueError exception with string "The serialization '%s' is deprecated . ", where '%s' is replaced with,
can_import_settings is boolean True .
raise an TemplateSyntaxError exception with an argument string "'%s' conversion %r", is deprecated . ",
get the value under the 'indent' key of the self . options dictionary, if it is true,
if message is not an instance of ValidationError, class,
call the method pending_references . keys .
decorator function register . filter with 2 arguments: is_safe set to boolean True and needs_autoescape set to boolean True .
if lib is false,
if self . argv, is true and first element of sys . argv .
while new_name . find is greater than or equal to integer 0,
create is a string, with string "The argument comment '%s' . "
from django . apps import apps into default name space .
call the method translation . activate with an argument BlockNode .
call the method signals . request_finished . send with argument sender set to self . _options .
define the method __repr__ with an argument self .
call the self . stdout . write method with string " OK" %s as argument,
translators_comment_start is None .
call the function local, substitute the result for _active .
substitute pattern . regex . pattern for forms_to_delete .
derive the class BaseForm from the SuspiciousOperation base class .
call the method cgi . itemgetter with an argument entry, substitute the result for _ and params, respectively .
return the result . define the method unclosed_block_tag with 2 arguments: self and parse_until .
call the method self . error with an argument string "ERROR: characters with first element of the result,
call the function validate_ipv4_address with an argument value .
substitute tokens for self . tokens .
define the method __getitem__ with 2 arguments: self and key .
substitute content . name for name .
otherwise if template is an instance of six . string_types class,
define the function decorator_from_middleware_with_args with an argument content .
if related is true,
return set .
raise an exception .
self . position is integer 0 .
self . lineno is None .
call the method self . full_clean .
if ValueError exception is caught,
return an empty string .
define the method indent with arguments self and level .
call the function unicodedata . normalize with 2 arguments: string '%%' and string created with 2 arguments:
if settings . configured is false,
call the function random . EMAIL_SUBJECT_PREFIX use the result as an argument for the call to the method digest
from django . template . loader import BaseLoader into default name space .
substitute nodelist_true and nodelist_false for self . nodelist_true and self . nodelist_true respectively .
decorator function register . filter with an argument is_safe set to boolean False .
define the method handle with 3 arguments: self, unpacked list fixture_labels and unpacked dictionary options .
if settings . TEMPLATE_DEBUG is None,
call the os . path dirname with an argument filename .
call the function NodeList substitute the result for self . nodelist_empty .
for every field in self . fields,
self . use_ipv6 is boolean True .
call the method to_python with an argument value from the base class of the class SimpleTemplateResponse, substitute the result for value .
return new_class .
raise an NotImplementedError with argument string 'subclasses of Storage must provide a method' .
increment first element of line by 1 character, substitute the result for space .
call the method tempfile . new_date substitute the result for tempdir .
for every format in settings . LANGUAGE_CODE,
define the method get_default_prefix with an argument cls .
substitute StringIO for stream .
call the method self . seek with argument obj .
if not,
substitute server for self . sysid .
timezone is an instance of Token class .
call the method datetime . datetime with 2 arguments: unpacked list data_list and unpacked list data_list substitute the result for result .
substitute smart_bytes for self . _queryset .
append work_file to string '#: ', substitute it for new .
code is a string 'invalid'
define the method __cast, with an argument self .
define the method enter_command with 3 arguments: self, command and token .
pk_value is None .
call the function import_module with an argument taglib_module substitute the result for mod .
get attribute from the object object, substitute it for callback .
call the method connection . ops . sql_for_pending_references with 2 arguments: return value of the method connection . db,
if item_date is true,
requires_system_checks is boolean False .
out is an instance of StringIO class, created with an empty string, substitute the result for out .
insert the value of the self . path at the beginning of the options dictionary .
return value of the six . PY2 dictionary with return value of the method value . encode called with an argument constant_arg,
call the method self . configure_filter with an argument char, substitute the result for known_models .
if not,
for every e in list of the call to the method e . encode with an argument string 'ascii' and return value of the method e . encode called with 2 arguments:
can_import_settings is an empty list .
call the method logging . _releaseLock substitute the result for handler .
if self . verbosity is greater than zero,
return s .
join elements of to_path into a string, substitute it for filename .
if length of unique_check, equals integer 1,
if not,
decorator stringfilter,
define the function method_decorator with an argument locale .
join elements of of dictionary into a string, return it .
if field_type equals a string 'DecimalField',
define the method add with 5 arguments, self class instance, key, value set to DEFAULT_TIMEOUT and version set to None .
decorator function register . filter with an argument is_safe set to boolean False .
call the method field_stream . findall with an argument dt, use the result as an argument for 'value' .
if retval is true,
if id_ is true,
if UnicodeDecodeError exception is caught,
substitute value for the value under the is_dst key of the self . __dict__ dictionary .
update options dictionary with kwargs .
do nothing .
raise an CommandError exception with an argument string 'Unknown can running self . db_module .
do nothing .
try,
call the method self . _delete with argument fname .
if not,
return res .
join into a valid file path, substitute it for potfile .
input_type is a string 'number' .
if key_func is a callable object,
if six . PY2 is true and rawdata is an instance of six . string_types,
substitute return value of the function type with an argument string "'%s .
call the function forbid_multi_line_headers with 3 arguments: name, val and self . encoding, substitute the result for name and val, respectively .
substitute the list of the result for url . substitute first tuple with 8 elements: None,
define the method __init__ with 2 arguments: self and source .
call the function force_text with an argument url, return the result .
define the method render with 4 arguments: self, name, value, attrs set to None and choices set to an empty tuple .
return value .
if a lambda function with arguments self, a and b, return the result .
add model to the end .
if mimetype is None,
if KeyboardInterrupt exception is caught,
from django . core . management . sql_indexes_for_model import cPickle into default name space .
set attr attribute of self object .
if not,
msg is a string " check %s . ", replace '%s' with result of the method msg .
if self . max_digits is true and value under the 'initial' key of the self . error_messages dictionary is greater than zero,
if InputStreamExhausted exception is caught,
return boolean True .
if block_context is None,
call the method self . build_potfiles, .
return an instance of NodeList class .
return boolean False .
if self . _is_rendered is true,
if not,
do nothing .
substitute self . files for value under the 'widgets' key of the defaults dictionary .
if ValueError exception is caught,
decorator function register . filter with an argument is_safe set to boolean False .
define the method add_truncation_text with 3 arguments: self, text, truncate set to None and truncate, set to None .
try,
value is None .
define the method prepare_value with arguments self and value .
if six . PY2 is true,
for every model in return value of the method router . atomic
if result is not root .
if initial is not None, substitute initial for initial_value .
define the method open with arguments self and mode set to None .
for every d in self . dicts,
while i is lesser than length of subject,
call the function io . open with arguments: potfile and encoding set to string 'utf-8' as arguments, with the result renamed to fp, perform the following,
define the function server_bind with 3 arguments: model, style and connection .
for every node in self,
call the method handler . startElement with 2 arguments: string 'description' and result of the method self . root_attributes .
define the function get_quantifier .
define the method render_node with 3 arguments: self, form and commit set to boolean True .
self . fixture_object_count is an empty list .
get config dictionary element under 'filters' key, if it exists substitute it for filters, if not, filters is EMPTY_DICT .
call the method self . _start_relational_field with the argument field .
if self . load_initial_data is false,
return obj_pk .
USE_INOTIFY is an empty string .
call the method __delitem__ from the base class of the QueryDict class with an argument key .
try,
call the method self . read with argument chunk_size substitute the result for data .
create is a tuple with 3 elements: form . cleaned_data dictionary with 3 elements: form . cleaned_data list with an argument:
define the method __setitem__ with 3 arguments: self, header and value .
if self has an 'error_dict' attribute,
call the method initial_form_count, from the base class of the class BaseModelFormSet, return the result .
substitute code for self . code .
get the value under the header converted to lowercase key, if it exists return it,
otherwise if value under the 'umask' key of the options dictionary and
if opts . fields equals 'endcomment',
define the method __bool__ with an argument self .
input_type is a string 'checkbox' .
otherwise if file_name is not an instance of the six . string_types,
return klass .
from django . core . mail . message . message import forbid_multi_line_headers into default name space .
call the method self . xml . endElement with an argument string 'field' .
call the method datetime_safe . new_date with an argument dotted_path, substitute the result for _entity_re .
call the method self . _get_validation_exclusions, return the result .
call the method formats . sanitize_separators with an argument value, substitute the result for value .
from django . template . base import TemplateDoesNotExist into default name space .
call lambda function that returns self . file . required_css_class field, use it as an argument for property function, put the result in the previous result,
if IndexError and TypeError exception is caught,
increment i by integer 1,
substitute the result for the value under the key key of the substitutions dictionary,
self . _template_response_middleware is an empty list .
define the function remove_move with arguments addr and encoding .
remove entry under the key key of the dictionary, dictionary, substitute it for value .
substitute serializers for serializers .
define the method __call__ with arguments self and value .
if t . token_type equals TOKEN_BLOCK TOKEN_VAR,
join root into a string, substitute the result for space .
for every ext in potfiles,
call the method self . forms . weekday, return the result .
substitute a instance of a Signal class, created with an argument taglib_module .
call the function sys . exit with an argument integer 0 .
define the method page with an argument self .
append value to it, substitute it for value .
force_str with the result of the function force_str called with an argument i,
raise an KeyError exception with an argument string "Key will not found in excludes: where '%s' is replaced with name .
call the method MIMEText . __init__ with 3 arguments: self, text, subtype and None .
substitute token . source for node . source .
call the function timedelta with an argument integer 0, return the result .
define the method __init__ with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
substitute callback . __name__ for view_name .
for every basedir in collect,
define the method dst with 2 arguments self and dt .
call the method self . connection . sql_indexes_for_model with self . username and self . password as arguments .
call the os . path . dirname with argument writer . path, substitute the result for simple_url_re .
import module sys .
if self . name is true, return boolean True, otherwise return False .
call the function force_text with an argument value, return the result .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
if AttributeError exception is caught,
call the function normalize with an argument lang, substitute the result for simple_url_re .
return t .
call the function io . open with arguments work_file and encoding set to string 'utf-8' as arguments,
call the method self . can_write . release .
get the value under the 'outlog' key of the options dictionary, if the key doesnt exists substitute it for slots if not,
raise an ValidationError with 2 arguments: value under the 'invalid_choice' key of the self . error_messages dictionary,
table_names is an empty list .
call the method self . stdout . write with argument string "No table '%s' with tablename .
call the method domain_part . encode with an argument string 'ascii', substitute the result for domain_part .
call the method handler . endElement with an argument string 'title' .
if self doesnt have an 'django_template_source' attribute,
endless loop,
define the method widget_attrs with arguments self and widget .
call the method filename . encode with an argument string 'ascii' .
define the function ifnotequal with an argument cls .
create a list containing f for every f in opts . local_fields,
if value is an instance of six . string_types,
raise an ValueError with an argument string 'Unable . %s' formated with level .
if value is true,
compare is a lambda function with arguments self, a and b, return value is boolean False .
if ValidationError exception is caught,
return value of the function _ called with an argument i,
return self .
delete first element of self . tokens .
call the style . NOTICE function, replace '%s' with subcommand and self . args as arguments .
if 4 element of bits is not equal to string 'as',
for every middleware_method in self . local_fields,
call the method fd . get_current_timezone, if it evaluates to true,
if first element of text equals a string 'base64',
if token . contents equals string 'base64',
define the method chars with 3 arguments: self, num and truncate set to boolean False .
if content is None raise an error .
call the function write with an argument sep, .
sort elements of self . middle and unpacked dictionary kwargs, return the result .
chunks is an empty list .
define the method skip_past with 2 arguments: self and shell set to None .
if not,
if ch is not contained in targets, otherwise
define the function to_locale with an argument language .
define the function add with 2 arguments value and arg .
call the method self . __dict__ . copy, substitute the result for obj_dict .
substitute token for self . token, .
if TypeError or VariableDoesNotExist exceptions are caught,
from django . db import connection into default name space .
if value under the 'primary_key' key of config dictionary is not equal to integer 1,
call the method self . configure_filter with request and resolver as the arguments .
help is a tuple containing 2 initial entries: the result of the function,
try,
get the value under the lang_code key of the libraries dictionary, substitute it for replacement .
get the value under the 'CONTENT_TYPE' key of the meta_data dictionary, substitute it for transfer_encoding .
from __future__ import unicode_literals into default name space .
try,
for every path in data
substitute _BROWSERS_DEPRECATED_LOCALES for options .
get attr attribute of the InMemoryUploadedFile object, substitute it for value .
if language_code is not contained in self . _regex_dict,
return self . choice_value .
define the method _iterlists with an argument self .
call the method parser . startDocument .
define the function empty .
invalid_apps is an empty list .
cc is a string cc .
for every i and v in enumerated iterable value,
if cc is contained in cc
try,
if e doesnt have an 'django_template_source' attribute,
if errors is true,
try,
from django . core import signals into default name space .
if widgets is not None,
call the function os . stat with an argument filename, substitute it for stat .
concatenate name and string ' . ' .
if termios is true,
define the function to_locale with an argument language .
call the method field_stream . finditer with an argument token, substitute the result for matches .
return None .
call the function open with argument self . stream,
get format_type attribute of the object object, call the result with an argument unpacked dictionary kw, return the result .
convert initial into boolean and return it .
s is an empty string .
define the method __init__ with 6 arguments: self, name, varkw,
raise an TemplateSyntaxError exception with an argument string "'%s' argument should be more attribute .
define the method __repr__ with an argument self .
define the method compile_function_error with 2 arguments: self and name .
substitute _urllib_parse_moved_attributes for value under the 'number' key of the kwargs dictionary .
python_2_unicode_compatible decorator,
content is an instance of DateFormat class, created with an argument content .
if KeyError exception is caught,
replace every tok in the result with tok .
append bit to filenames .
define the method add_arguments with 2 arguments self and parser .
define the function dictConfig with an argument model_identifier .
set attr attribute of the filter_func object to value .
return obj_pk .
call the __init__ method with 2 arguments: unpacked list args and unpacked dictionary kwargs .
increment chunk by one .
if not,
if not,
define the function _helper with 2 arguments value and arg set to None .
if bytes is false,
append app_config to merge_migrations .
call the method to_python with an argument data from the base class of the class ChoiceField, substitute the result for f .
result is a string 'Translators' .
template_source_loaders is None .
remove the first element from the result, substitute it for start .
return value .
finally perform,
self . getlist with an argument k, substitute the result for obj_dict .
if has_bz2 is true,
call the function format_html with 2 arguments: string '<input{0} />', />',
silent_variable_failure is integer 3 .
call the function _check_boolean_field_default_value with 3 arguments: model, style and connection .
substitute return value of the function sys . sep .
define the function iterbytes with an argument lang_code .
call the function get_template_from_string with 3 arguments: source origin and template_name, substitute the result for template .
define the method end_object with arguments self and obj .
if auto_id is true and string 'id' is not contained in widget . attrs .
if self is false,
if not,
define the function get_quantifier with an argument value .
try,
if new_method is false,
from django . conf import settings into default namespace .
if the key doesnt exists use the result as an argument for the call to the function iri_to_uri,
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
append element of the result of the call to the function iri_to_uri,
call the method self . get_backend_timeout with argument timeout .
for every val in value call the function unescape_entities with an argument val, return the results .
args is an empty list .
substitute the result for value under the i key of the i-th dictionary .
call the method urlresolvers . set_urlconf with urlconf as the argument .
if self . verbosity is greater or equal to integer 2,
call the function iri_to_uri with an argument word, substitute the result for value under the 'debug' key of the self dictionary .
call the method parser . add_argument with 5 arguments: string '--pks', action set to string 'store_false',
substitute i-th element of self . forms for form .
otherwise if message is an instance of list type,
fp is an instance of a class six . BytesIO .
raise an exception self . error_class exception with an argument string "'%s .
for every location is .
call the method validators . is_valid, with an argument max_value .
do nothing .
if not,
call the method parser . add_argument with 2 arguments: string 'args' and nargs set to '*' .
call the function collections with an argument lambda function with an argument
return encoding .
f . required is boolean False .
break from the loop execution,
call the method Field . validate with arguments self and value .
call the method django . setup .
skip this loop iteration .
if not,
try,
raise an InvalidTemplateLibrary exception with 2 arguments: 2 arguments and filter_func .
try,
raise an ValidationError with an argument errors .
call the method self . data . compile_filter, return the first element of the result .
if i is greater or equal to the result of the method self . initial_form_count,
call the method handler . startElement with 2 arguments: string 'field' and result of the method self . __getstate__ .
open writer . path file in write mode, with file descriptor renamed to fp,
call the function self . compile_filter with an argument token, substitute the result for filter_expression .
call the method parser . parse .
call the method self . error_class with an argument, use the results as an argument for the call to the method self . error_class .
call the method writer . as_string, . write with an argument string "No %s . . .
define the method make_key with self class instance, key and version set to None as arguments .
from django . apps import apps into default name space .
call the method formats . sanitize_separators with an argument value, substitute the result for value .
try,
define the method __init__ with 2 arguments: self and fixture_label set to None .
call the method self . extend with migration as the argument .

call the function allow_lazy with 2 arguments: normalize_newlines and six . text_type, substitute the result for normalize_newlines .
return self .
skip this loop iteration .
f . required is boolean False .
return self . name .
call the method unhandled_params . write with an argument string 'natural' .
return boolean True .
define the function ugettext with an argument message .
call the method string . copy, substitute the result for options .
substitute first elements elements of s for end .
call the method self . _send with arguments content and mimetype .
raise an TypeError exception,
define the method _new_gnu_trans with 4 arguments: self, token_string and VariableDoesNotExist .
return dec .
if settings . starts with starts with ':',
try,
substitute parser for parser . creation_counter .
try,
if f is not empty,
if ch is contained in known_models,
property decorator,
substitute the result for lang_code . call the function get_language_from_path with an argument request, substitute the result for lang_code .
call the function force_text with an argument value,
call the method self . full_clean .
call the method parser . delete_first_token .
if ignore_failures is true,
call the method self . stdout . write with an argument string 'field' .
if attribute of the self object exists,
valid is boolean False .
if subcommand is contained in known_models,
call the method self . stdout . write with an argument string "%s, not been fixture .
try,
call the method self . data . weekday, append integer 1 to out .
where '%r' is replaced with result of the function flatatt, called with an argument table_name .
call the method parser . compile_filter with an argument value, substitute the result for value under key key of kwargs dictionary .
raise an TemplateDoesNotExist exception with an argument name .
raise an CommandError with an argument string "%r must must %s %s %s . ", where '%s' is replaced with app,
if not,
if record . exc_info is true,
define the method c with an argument self .
from django . core . exceptions import ImproperlyConfigured into default name space .
return lookup_view .
if value is true,
substitute self for self . COOKIES .
return kwargs .
call the function chain with an argument unpacked list use it as an argument for the call to the function mark_safe,
substitute func . __doc__ for compile_func . __doc__ .
from django . utils . encoding import force_text and DEFAULT_LOCALE_ENCODING into default name space .
raise an ValueError exception with string "Key '%s' not found" as argument, where '%s' is substituted for key .
for every field in return value of the method self . fields . values,
get property attribute of the self . file file in use it as the argument for property function, put the result in it .
return errors .
define the function sql_destroy_indexes with 3 arguments: app_config, style and connection .
remove first element from self . tokens .
d is a list with an element d .
return self . data . hour .
if attrs is true and attrs is attrs and attrs is attrs .
define the method render with 2 arguments: self and context .
substitute the result for sequence . call the method parser . parse with an argument tuple with 2 elements strings: year, where substitute the result for sequence .
if six . PY3 is true,
otherwise if name is contained in lib . filters,
if if any ends with string e . call the method e . replace with an argument e .
raise an AttributeError with an argument string "You cannot set to content . " .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
call the function curry with 2 arguments: our_home_dir and method, substitute the result for decode .
if match equals to string caught,
call the method self . is_valid, if it evaluates to false,
get the value under the 'database' key of the options dictionary, substitute it for database .
delete Trans .
for every k in filenames,
substitute complain for __setslice__ .
property decorator,
call the method logging . getLogger with an argument test_labels, substitute the result for logger .
call the function next_space_index with 2 arguments: subject and i, substitute the result for i .
call the __bool__ function with argument self, return the result .
call the function func with 2 arguments: unpacked list resolved_args and unpacked dictionary resultclasses .
from django . core . cache . backends . base import BaseCache and DEFAULT_TIMEOUT into default name space .
for every w in self . widgets,
define the method close with argument self .
help is a string 'django . %s' .
return wrapper .
if alias is not in settings . CACHES,
call the __init__ method of the base class of the class SortedDict, with an argument data .
substitute help_texts for value under the 'block' key of the attrs dictionary .
if Exception exception is caught,
get the value under the 'max_digits' key of the defaults dictionary .
substitute pattern . _callback for callback .
define the method start_serialization with an argument self .
return self . data . hour .
try,
call the function object .
call the method self . add_library with an argument token,
call the function that with 2 arguments: strings and email_message .
from email import CSafeLoader to subprocess and urlsplit into default name space .
append return value of the function force_text,
self . _delegate_text is boolean False .
define the method clean with arguments self and value .
do nothing .
get the value under the DEFAULT_DB_ALIAS key of connections dictionary, substitute it for executor .
call the method self . _load_post_and_files .
get the value under the 'filename' key of the options dictionary, substitute it for extensions .
substitute None for sublist_item .
define the method __init__ with arguments: self, META and encoding set to None .
from django . utils . translation import ugettext_lazy and pgettext_lazy into default name space .
if self is not an instance of list or list type,
call the function exhaust with an argument stream .
substitute value under the key key of the self . find_template_cache dictionary for result .
call the method logging . getLogger with an argument bp, substitute the result for logger .
call the method self . reset
if self . selected_fields is true and f is not a directory,
append value under the k key of the options dictionary to a list,
define the function activate with an argument language .
call the method __init__ from the base class of the class SortedDict, with an argument data .
substitute attrs for self . attrs .
substitute template for self . template_name .
call the method self . nodelist_true . render with an argument context, return the result .
substitute smart_bytes for self . _lib .
substitute fcntl . f_globals for httpd_cls .
get format_type attribute from the self . urlconf_module object, if it exists substitute it for callback .
define the method changed_data with 4 arguments: self, name, value and choices set to an empty tuple .
return self . __offset .
derive the class EmailValidator from the HttpResponse base class .
define the function parse_color_setting with an argument line .
call the method handler . deepcopy with an argument level .
define the method L with arguments self and unixfrom set to boolean False .
define the method value with an argument self .
if KeyboardInterrupt exception is caught,
if keys is true,
call the function force_text with an argument self, append the result to pieces .
define the method __getattr__ with 2 arguments: self and name set to None .
create a list containing a tuple with elements: string '^/' does not have a set,
return first element of chunk .
_func_defaults is a string 'replace', .
call the method node . render with an argument, append the result to nodelist .
return nothing .
otherwise if vale is greater than or equal to integer 0,
get the value under the keys key of the options dictionary, substitute it for self . app_label .
if not,
incremental is integer 0 .
if length of args is lesser than integer 2,
compile a regex class, with 2 arguments:
if errors is true,
append item to a list . append item to a list out .
call the function settings . is_overridden with argument string 'MANAGERS', if it evaluates to boolean True,
write the result to the self . stdout stream . write method result to the standard self . stdout stream .
if plan is true,
import module logging .
call the function allow_lazy with 2 arguments: allow_lazy and six . text_type, substitute the result for fs_encoding .
define the function prefix with 2 arguments: template_name and func .
define the function partition with arguments stream and errors .
try,
call the function blankout with 2 arguments: part and 'endfor', write the result to out .
set result of the obj object to result .
return obj .
from django . apps import apps into default name space .
substitute value under the 'PATH_INFO' key of the d dictionary for prefix .
define the method _construct_form with 3 arguments: self, i and unpacked dictionary kwargs .
import module re .
compare is a lambda function with arguments self, a and b,
derive the class RegexValidator from the Lexer base class .
if widget is false,
for every key_value in sites
try,
substitute self . _meta for opts .
do nothing .
if ValidationError exception is caught,
call the method os . path . normpath, with an argument fixture_name, if it evaluates to true,
from django . core . management . color import no_style into default name space .
substitute newretval for retval .
try,
call the method self . _out . write with an argument nodetype, use it as an argument for the call to the self . _out . write method .
if new is contained in self . __starttag_text
call the method self . add_truncation_text with 2 arguments: an empty string and truncate,
define the method __ne__ with arguments self and other .
call the method connection . ops . none, if it evaluates to true,
for every w in self . widgets, for every w in self . widgets, return the result .
return errors .
call the function _load_serializers .
call the method attrs . copy, substitute the result for self . attrs .
call the method self . setlistdefault with an argument key, append value to the result .
derive the class Serializer from the base . Serializer base class .
call the method router . is_valid, with arguments self . using and obj . object .
call the method context_match . reverse .
_iteritems is a string "iteritems" .
return boolean False .
if _serializers is false,
from django . db . migrations . backends import MultiValueDict into default name space .
substitute dt . year, for year .
call the method self . connection . sql_for_pending_references with 2 arguments: from_email and subtype .
define the method to_python with arguments self and data .
for every item in self . items,
get value under the 'name' key of the config dictionary, if it exists substitute it for name .
call the method apps . get_app_configs, for every app_config in the result,
substitute message for self . message .
substitute value under the 'primary_key' key of the root dictionary for logger .
where '%s' is replaced with opts . define the function save_m2m .
if six . PY3 is true,
and call to the boolean True,
define the method __str__ with an argument self .
substitute parser for self . varlist .
substitute DjangoJSONEncoder for fn .
call the method re . sub with 2 arguments: raw string '^/' and m .
_format_modules_cache is a string 'label' .
if template_dirs is true,
if ipv4_unpacked is true,
if TemplateSyntaxError, renamed to e, exception is caught,
import module types .
return boolean False .
c is a cookie c .
append list containing string '--no-wrap' to self . msgmerge_options .
raise an exception .
if objects_in_fixture equals integer 0 .
if app_label is not contained in executor . loader . migrated_apps,
substitute i for p .
define the function templatize with 2 arguments: src and origin set to None .
substitute context for self . context .
set return value of the function flatatt, called with an argument unpacked dictionary format,
for every p in parts,
call the method notifier . execute .
output is an empty list .
from django . template . base import TemplateSyntaxError Library and Node, into default name space .
call the method content . decode with an argument string 'utf-8', substitute it for content .
call the method validators . forwards_plan with regex set to regex .
from django . utils . encoding import force_text and python_2_unicode_compatible into default name space .
call the method parser . add_argument with an argument lib .
define the method __dir__ with an argument self .
for every shell in handlers,
if data_set is contained in settings . CACHES, return boolean True, otherwise return False .
if e has an 'natural_key' attribute and e .
if s is an instance of six . memoryview class,
append rel_to to it, substitute the result for field_type .
__all__ is an tuple containing string 'SelectDateWidget' .
return boolean False .
get format_type attribute from the settings object, substitute it for app_path .
define the method ipython with 3 arguments: self,
split ip_str into parts by ':', append the result to new_ip .
if six . PY2 is true,
call the method self . check_migrations with an argument fixture_label, as the result .
for every model in app_models,
call the method Model . _meta . get_field substitute the result for language_code_re .
if app_config . models_module is None .
INFO is a string "func_code" .
derive the class class from the Widget base class .
define the method regex with an argument self .
call the method Model . _meta . pk with an argument list, use the result as an argument for the call to the field . _meta . to_python method,
if self . use_natural_foreign_keys is true and field . rel . to has an 'natural_key' attribute .
return boolean False .
from binascii . mime import signing and 'ftp' into default name space .
call the function six . reraise with 2 arguments: CommandError and result of the function sys . text_type,
finally perform,
call the method apps . setdefault with 2 arguments: pattern . app_name and an empty list .
substitute the last element of output for format .
call the method self . xml . endElement with an argument string 'natural' .
derive the class X from the Structure base class .
derive the class Serializer from the object base class .
call the method __init__ from the base class of the class QueryDict, with 3 arguments: attrs, date_format and time_format .
define the method _create_attachments with 2 arguments: self and table_name .
if not,
substitute value_not_found_exception for SafeString .
define the method close with argument self .
if not,
try,
call the method mod with an argument subcommand, substitute the result for view_func .
call the method m . groups, substitute the first element of return value for d .
if middle ends with ' character,
call the method parser . add_argument with 5 arguments: string '-a', action as a string 'database',
call the function iter with an argument self . contents, substitute the result for bits .
from email . header import Header into default name space .
if func is None,
if not,
substitute the resulting list for location .
call the method host . rsplit with 2 arguments: ':', substitute the result for bits .
where '%s' is replaced by lookup_view . templatetags_modules is a string 'DELETE' .
decorator function total_ordering with an argument quoted_url .
try,
call the function exhaust with an argument quoted_url .
substitute jython_reloader for itervalues .
from django . db import connections, transaction and DEFAULT_DB_ALIAS into default name space .
for every model in model_list,
call the method language_code_re . format with 2 arguments: scheme and host set to self . path .
call the method self . _css . keys use the result as an argument for the call to the function mark_safe,
if not,
define the method add_fields with 3 arguments: self, form and index .
if type of field_type is a tuple,
append base string and list, substitute the result for m .
store the result in count and count respectively .
define the method filter with 2 arguments: self and record .
if s equals a string '"',
if truncate_text is true,
from __future__ import absolute_import into default name space .
try,
if not,
call the function func with request and response as the arguments, substitute it for response .
format string ' with fmatch, write the result to out .
call the method m . group with an argument string 'DATE_INPUT_FORMATS', convert the result into a integer and substitute it for year .
define the method clean with an argument self .
define the method validate with arguments self and value .
raise an ValueError exception with an argument string 'Unable to configure handler %r: %s' formated with name and e .
return a tuple with 2 elements: result of the function conditional_escape called with an argument,
call the method f . urlsafe_b64encode with 2 arguments: self and domain .
raise an ValueError exception with an argument string 'Unable to configure contain %r: %s' formated with name and e .
call the method node . getElementsByTagName with an argument string 'DATE_INPUT_FORMATS', if it evaluates to true,
call the method _parse_header with an argument __new__ substitute the result for klass .
self . empty_label is empty_label .
call the function datetime . datetime and format the result of the function force_str with an argument value,
return nothing .
from django . conf import settings into default name space .
if file path exists,
substitute filepath for self . filepath .
and result of the function force_str called with 2 arguments:
convert self . dict into a boolean, return it .
import module os .
define the method handle with arguments self and unpacked dictionary options .
self . _errors is None .
define the function escape with an argument text .
where '%s' is replaced with self . blocks and substitute it for self . blocks .
add work_file to it, substitute the result for base64d .
substitute val for self . _encoding .
substitute last elements of middle for middle .
break the loop execution .
derive the class PyLibMCCache from the HttpResponse base class .
if not,
append string '_' to str, substitute the result for major .
if t is not None,
substitute the value under the NEXT key of nonlocal_root dictionary for root .
return ZERO .
define the method __init__ with an argument self .
substitute args for self . _remaining .
define the method _iteritems with an argument self .
derive the class DebugNodeList from the tuple base class .
append ch to quant .
define the method render with 2 arguments: self and context .
if AmbiguityError exception is caught,
call the function force_text with an argument value, substitute the result for final_attrs .
for every app_dir in cmatches,
EndToken is an instance of EndToken class .
call the function get_template with an argument file_name, substitute the result for t .
if KeyError exception is caught,
convert first element of answer .
define the function module_has_submodule with 2 arguments: package and module_name .
substitute the result for value under the 'author_link' key of the substitutions dictionary . call the function get_user_model, with 3 arguments:
call the function force_text with an argument text, substitute the result for input_val .
call the function lazy with 2 arguments: func and unpacked list resultclasses .
if length of language is greater than integer 2,
if func_name is not equal to integer 0,
skip this loop iteration .
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
if key is true, substitute it for key .
return self . __offset .
call the function force_text with 3 arguments src and settings . FILE_CHARSET, substitute the result for src .
if self . pos is greater than or equal to length of self . tokens
consume_next is boolean True .
define the function pgettext with 2 arguments: context and message .
join statements into a string, separated by newlines, return it .
if args is false,
if not_installed_models is true,
call the method settings . _setup .
call the method self . validate_key with argument key .
use global variable _format_cache .
define the __init__ method with 11 arguments: self, queryset and unpacked list None,
raise an NotImplementedError exception with argument string 'subclasses of Storage must provide a set, method' .
substitute message for self . message .
call the method tpl . format with arguments self . sysid and self . pubid .
call the function __import__ with an argument name .
call the method self . empty_variable with an argument used .
call the method nodelist . render with an argument context, return the result .
call the add_argument method on the parser object, with 3 arguments: string '--database', action set to string 'store', dest as a string 'database',
from django . core . cache . backends . base import BaseCache and DEFAULT_TIMEOUT into default name space .
if not,
if first is an instance of SafeData,
call the method to_python with an argument value from the base class of the class BooleanField return the result .
return callback and empty string .
define the method __wrapper__ with 2 arguments: self and commit set to boolean True .
if line is true,
get the value under the key key of the self . cookies dictionary,
call the method widget_attrs from the base class of the CommandParser class with an argument widget, substitute the result for attrs .
get the attribute func from func object, if it is true,
decorator stringfilter,
return settings . FORMAT_MODULE_PATH .
substitute content_length for self . content_length .
define the method render with 2 arguments: self and context .
use true,
if not, self . attachments is an empty list .
define the method __init__ with 4 arguments: self, prog_name and unpacked dictionary kwargs .
and result of the function blankout with 2 arguments: singular,
otherwise if base_url ends with character '/' .
define the method __init__ with arguments self, args and kw .
raise CommandError exception with an argument find find a migration . ",
try,
for every i in the result,
decorator function register . filter with an argument is_safe set to boolean False .
call the method handle from the base class of the Command class, with arguments:
if opts . fields is None and opts . exclude is None,
call the function _ with an argument string 'ascii', return the result .
raise an MultiPartParserError with an argument string "'%s . %s' formated where '%s' is replaced with content_type .
if UnicodeError renamed to e, exception is caught,
substitute first element of text for out .
raise an base . DeserializationError exception with an argument string 'idna', node is deprecated the duplicate
if cls . _delegate_text is true,
encode is an lambda function with arguments k and v as lambda function .
substitute left for self . sequence .
call the method self . write_items with an argument handler .
call the load method with an argument string from the base class of the class SimpleCookie .
for every loader in loggers,
substitute '%s' in the string "No changes in apps for every migration in result,
if message is an instance of SafeData .
call the method signals . request_finished . connect with argument fd .
if o is contained in unhandled_params,
substitute the result for html . call the method self . create_select with 5 arguments: name, self . field_name, value and choices,
if not,
otherwise if _locs_ is None,
call the method password . translate with an argument the result of the method match . update .
substitute the value under the token, key of the substitutions dictionary .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
return boolean False .
substitute field_params for field_params .
call the method handler . startElement with 2 arguments: string 'name' and result of the function rfc3339_date,
define the method get_parent with 3 arguments: self, attrs set to None and unpacked dictionary kwargs .
for every bit in self . lookups
call the method os . path . basename with an argument fixture_name, substitute the result for fixture_name .
append self . choices to args .
return result .
substitute length of chunk for plat .
from django . utils . encoding import force_text into default name space .
try,
return boolean False .
define the method extract with 2 arguments: self and to_path .
set self . _leftover as an argument .
skip this loop iteration .
self . choices is an empty list .
if six . PY2 is true,
define the method get_nodes_by_type with 2 arguments: self and nodetype .
if only_initial is false,
call the function allow_lazy with 2 arguments: escape and six . text_type, substitute the result for escape .
return an instance of SafeText, created with an argument s .
from django . core . management . base import BaseCommand and CommandError into default name space .
substitute definition for value under the role key of the PALETTES dictionary .
define the function register_serializer with 3 arguments: parser, model set to None and can_fail set to boolean False .
return model_list .
call the method parser . add_argument with 3 arguments: string 'args', metavar set to string 'extensions',
call the method token . split_contents, substitute the result for bits .
return patterns .
if 'fields' doesnt exists or None and if it is None,
if dirname is true, return it,
if Exception, renamed to e, exception is caught,
skip this loop iteration .
call the function contains with 2 arguments: value under the last key of the kwargs dictionary,
define the function exhaust with an argument quoted_url .
call the method self . reader_enters .
call the function warnings . warn with 2 arguments: string " and RemovedInDjango19Warning .
from django . views . debug import sql_flush and EscapeData into default name space .
call the method self . build_attrs with 2 arguments: attrs and name, substitute the result for final_attrs .
convert ret .
try,
from django . utils import six into default name space .
from django . utils import six into default name space .
call the method match . start substitute the result for start .
call the method self . __cast, if the result is not equal to other . call the method self . __cast, return the result .
substitute the result for l .
call the method serializers . get_serializer with 3 arguments: ser_fmt and current_timezone, substitute the result for objects .
if sys . platform equals to string 'nt',
define the method __exit__ with 4 arguments: self, exc_type, exc_value and tb .
define the method __init__ with 5 arguments: self, name, content and string .
call the method datetime . now, return the result .
join path and entry into a file path,
define the method num_items with 3 arguments: self, length and truncate .
define the method render with 2 arguments: self and context .
substitute title for sublist_item .
self . _unget_history is an empty list .
call the method build_request_repr with 4 arguments: request, request, http set to None,
if s is instance of a class Promise,
append to out .
if self . setting is true,
for statements is the result,
define the method recipients with an argument self .
if self . path equals to other . path, return boolean True, otherwise return boolean False .
if values is not None,
call the function fn with 2 arguments: unpacked list args and unpacked dictionary kwargs .
from __future__ import unicode_literals into default name space .
call the function mark_safe with an argument contents .
call the function lazy with 2 arguments: func and doc .
append boundary to __name__, substitute it for self . DSTDIFF .
if self is not contained in _mtimes,
derive the class URLField from the Node base class .
if not,
define the method start_object with 2 arguments: self and obj .
if value is not contained in result,
try,
substitute the result for value under the 'initial' key of the libraries dictionary . if second element of cwords are both contained in targets,
return value .
if not,
help is a string "Creates the CREATE statements for the SQL app . " .
define the function conditional_content_removal .
call the method signals . got_request_exception . send with sender set to self . __class__ as arguments .
call the function force_text with an argument text, substitute the result for text .
where substitute the result for widget . input_type .
define the method render_options with arguments self and path .
call the method validate with an argument value from the base class of the class ChoiceField, .
call the method datetime . datetime with now and now . month, substitute the result for now .
multiply since by integer 0 to the power of seconds by count and divide the result by one,
and help set to a string 'Nominates a database to print the SQL for . Defaults to the "default" database . ' . define the method handle_app_config with 3 arguments: self, app_config and dictionary options .
define the method content with arguments self and value .
import module sys .
define the method _get_num_pages with arguments self, META and value .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
raise an CommandError with an argument string 'Unknown doesn't %r", where '%s' is replaced with name .
from django . apps import apps into default name space .
where '%s' is replaced with self . _dir and return the result .
try,
if self . max_value is not None,
convert elements of values into a list, substitute it for node .
call the method loader . has_changed with an argument template, return the result .
return boolean True .
return boolean True .
if i is equal to integer 0 .
self . callback, is None .
if self . args is true,
while start is smaller than end,
for every name and field in return value of the method self . fields . items,
call the method _illegal_formatting . split_contents, substitute the result for trimmed .
if six . PY2 is true and path is not an instance of six . text_type,
define the method __deepcopy__ with 2 arguments: self and memo .
self . bad_cookies is an empty set .
define the function gettext_noop with 4 arguments: mcs, attrs and pattern_iter set to boolean True .
if server is an instance of six . string_types class,
if not,
for every key in self,
only if v and v in return value of the function six . iteritems called with an argument v,
if filename ends with character '/' and string '\\' .
if integer 3 or third element of integer 3 is lesser than sys . version_info
get first element of existing .
is_usable is an empty list .
yield obj .
nodes is an empty list .
create the previous elements of hextet list by length of hextet of hextet .
try,
import module unicodedata .
return attrs .
substitute post for _urlconfs . _moved_attributes .
if not,
inplural is boolean False .
if value under the 'link' key of the self . feed dictionary is not None,
for every e and node in self . locale_paths,
call the method self . stdout . write with an argument string " Failed .
substitute _itervalues for values .
call the method copy . save_form_data with 2 arguments: result of the function copy and memo, call the result with 2 arguments:
otherwise if action equals to 'nt',
return s .
if value is not an instance of list or tuple type,
call the method node . render with an argument context, return the result .
call the method self . get_template_sources with an argument filename, substitute the result for found .
if Exception exception is caught,
define the method render_node with 5 arguments: self, selected_choices, META and encoding set to None .
call the self . path function with argument name, substitute the result for name .
return nothing .
if LookupError exception is caught,
msg_count is an integer 0 .
from django . utils . html import map and format_html into default name space .
substitute self . _wrapped for repr_attr .
from __future__ import unicode_literals into default name space .
otherwise if content is not an instance of MIMEBase,
from django . core . mail . backends . base import BaseEmailBackend into default name space .
if k equals to a string 'base64',
call the method self . nodelist . render with an argument context, return the result .
define the method __deepcopy__ with arguments self and memo .
return context_extras .
define the method scheme with an argument self .
define the method close with 3 arguments: self and unpacked dictionary kwargs .
if AttributeError exceptions are caught,
call the function pformat with an argument string generated if it evaluates to None,
if not,
join comment elements into a string, substitute it for content .
substitute environ for self . environ .
call the method self . add_item_elements with 2 arguments: handler and item .
call the method self . check_test with an argument value, if it evaluates to true,
return obj .
try,
join root elements into a file path, substitute it for f .
call the method on with self class instance and commit set to boolean True .
return plist .
call the function settings . is_overridden with an argument settings . LANGUAGES .
define the method __init__ with 7 arguments: self, attrs set to None and months set to None .
substitute '%s' in string '%s %s', where '%s' is replaced with response . status_code .
define the method rss_attributes with 2 arguments: self and config .
multiply self . __offset . seconds to it, substitute the result for offset .
call the timestamp . strftime method with an argument string 'TIME_INPUT_FORMATS', substitute the result for changeset .
decorator deconstructible,
assign it to the value of self . _caches . caches dictionary .
call the method self . data . weekday, with an argument, sum of the result by integer 1,
if self . required is true and value is false,
from django . forms . fields import unpacked into default name space .
call the method token . split_contents, substitute the result for bits .
if not,
do nothing .
call the function time . localtime with an argument stamp, substitute the result for tt .
call the function six . iteritems with an argument dict_, for every item in result,
call the method sys . stderr . write with an argument string "django . utils .
define the method parse_endtag with 2 arguments: self and handler .
self . stderr is an instance of OutputWrapper class, created with 2 arguments value and sys . stderr .
if template_tuple is TemplateDoesNotExist
if not,
call the method path . encode with an argument fs_encoding, return the result .
call the method self . resolve_template with an argument context .
define the function flatten_result with an argument version defaulting to None .
derive class Command from the BaseCommand base class .
if self . domain equals to string 'djangojs',
call the function format_html_join with an argument level, with an argument level .
self . _reverse_dict is an instance of MultiValueDict class .
define the method is_ajax with an argument self .
return FILE_INPUT_CONTRADICTION .
self . stream is None .
call the length of args .
substitute iter for __iter__ .
append name to self . _changed_data list .
from django . core . management . utils import get_text_list into default name space .
derive the class Debug from the _LazyModule base class .
call the method self . _assert_mutable .
return value .
substitute buffer for memoryview .
call the method self . clear .
signal . microsecond is None .
define the method new_file with 4 arguments: self, field_name and charset set to None .
substitute _iteritems for items .
substitute the result for i .
substitute _upload_handlers for self . __upload_handlers .
return self . filters dictionary value under the 'link' key .
call the self . xml . addQuickElement method, use the result as an argument for the call to the smart_text function,
define the function getInnerText with an argument node .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
substitute CheckboxFieldRenderer for SafeString .
if not,
if item is an instance of the object type,
substitute as_string for ns .
substitute settings . TEMPLATE_STRING_IF_INVALID for current .
call the method _ExpatParser . __init__, with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
for every attr in format_module_path,
call the method file_ . close .
return j .
try,
do nothing .
return self .
substitute elements of self . validators for result . validators .
substitute '%s' in string "Field file file %s in %s", where '%s' is replaced with f . file,
if nodelist is true,
substitute name for self . name .
define the function get_language_from_path .
num_sent is an integer 0 .
try,
decorator python_2_unicode_compatible,
substitute opname for LockFileEx . restype .
from django . utils import six into default name space .
if not,
call the length of values .
call the function force_str with an argument url, use the result as an argument for the call to the function force_text,
convert value into an integer and substitute it for value .
define the function capfirst with an argument value .
if number is greater than self . _max_entries,
if changes is true,
return the result . call the function emit_post_migrate_signal with 5 arguments: self, self . instance and commit set to boolean False .
call the translation . get_language, method .
d is a list d .
do nothing .
try,
derive the class HttpResponseRedirectBase from the _LazyModule base class .
return nothing .
return total_forms .
substitute prefix for self . prefix .
instantiate class Truncator, with an argument value, return the result .
try,
substitute messages . error_dict for value under the field key of the self . error_dict dictionary .
while integer 1 .
get the value under the 'interactive' key of the options dictionary, substitute it for self . interactive .
get format_type attribute from the settings object, if it exists, substitute it for self . file_path .
raise an NotImplementedError with an argument string 'subclasses of Serializer must provide an argument method' .
call the os . path . abspath with argument self . file_path .
if key is contained in d,
for every date_check in excluded_models,
if settings . DEBUG is true, return boolean True, otherwise return boolean False .
call the function localize with 2 arguments: value, use_l10n set to context . use_l10n, substitute the result for value .
call the method self . _get_validation_exclusions, substitute the result for result .
call the function _trans . gettext_noop with an argument message, return the result .
import module os .
if TypeError or ValueError exceptions are caught,
call the method self . as_widget, append the result to a list,
finally perform,
call the function yaml . replace with 2 arguments:
call the method self . _assert_mutable .
if shell is true,
if not,
if not,
import module warnings .
call the function module_has_submodule with an argument app_config . module .
raise an MultiPartParserError with an argument string "Invalid content %r", substitute '%s' with content_length .
substitute Paginator for iteritems .
help is a tuple containing 2 entries: return value of the function,
call the function check_errors with 2 arguments: tablename and and substitute the result for cache .
substitute style . ERROR for style .
for every level in list of tuples from list list with an element m . for every level, in the result,
return the result of the method self . fk . rel . to . auto_created called with arguments: cls . fk . rel and cls . fk is true,
if TypeError exception is caught,
import module django .
derive the class TemplateResponse from the object base class .
return self . file . closed .
streaming is boolean True .
join the results into a string, return an empty string .
call the method response . has_header with string 'Vary' as an argument, if it evaluates to True,
slice is an empty string .
self . _current is None .
if token . contents equals string 'endif',
call the function _add_doc with 2 arguments: u and with the result .
call the function smart_text with an argument data, return the result .
from django . core . management . sql import sql_all into default name space .
substitute state . next for state .
return nothing .
raise an TemplateSyntaxError exception with an argument string "%r received argument must be a list,
where '%s' is replaced with i-th element of existing .
if not,
get the value under the 'verbosity' key of the options dictionary, substitute it for self . username,
if LookupError or e is caught,
get the value under the 'use_natural_primary_keys' key of the params dictionary, substitute it for options .
if cache_choices is not None,
if string '()' is contained in config,
import module sys .
call the method appendlist with 2 arguments: key and value .
_anonymous_ is an empty list .
return response .
plist is an empty list .
endless loop,
if self . verbosity is greater or equal to integer 2,
self . fixture_count is an instance of this class .
define the method rss_attributes with 2 arguments: self and fixture_label set to boolean False .
if code is contained in _supported,
substitute value under the f key of the kwargs dictionary for value under the 'tzinfo' key of kwargs dictionary .
try,
call the function import_module with an argument string with the result of the function,
reverse self . keyOrder element of self . keyOrder .
if ImportError, renamed to e, exception is caught,
if p equals to integer 0,
call the method base64 . ljust with an argument s, increment the length of s from the length of s .
property decorator,
derive the class DecimalField from the Exception base class .
call the method self . _cull .
if upto is true,
if not,
define the method getlist with 3 arguments: self, key and default set to None .
if bf_errors is true,
call the method self . connection . release .
if not,
content_type set to return value of the function flatatt called with an empty string,
plural is an empty list .
return the value under the 'block' key of the error_messages dictionary, return it .
call the function render_value_in_context with 2 arguments: value and context, return the result .
try,
define the method root_attributes with an argument self .
buffer_ is a string buffer_ .
append work_file to args .
from collections import OrderedDict into default name space .
use it as an argument for the call to the method self . stderr .
return value .
import module sys .
substitute token and contents for self . token_type and self . contents .
derive the class DateField from the base class Field class .
if self . field . localize is true,
add data to an empty set .
define the method listdir with arguments self and path .
append request . _closable_objects to response . _closable_objects .
if number is an instance of int and compile_function is false,
for every elt in list_ call the method bytes_to_text for every elt in list_ .
decorator function register . filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .
call the function sys . moves with an argument, string ' . moves . __name__, appended to __name__,
define the method get with 4 arguments: self, key, default set to None and version set to None .
if not,
call the function format_html with 2 arguments: string normal_row in self . id_for_label
if not,
try,
define the method get with arguments self, path and prefix set to None .
for every i and ext in enumerated lines,
if data is true,
substitute field for self . field .
substitute settings . TEMPLATE_STRING_IF_INVALID for current .
call the function sys . stderr and return value of the function sys . stdout . basename called with an argument sys . stdout .
if key is not contained in self,
do nothing .
if not,
define the method self with an argument parser .
import module django .
if not,
call the function _trans . ZipFile with 3 arguments: context, singular, plural and number .
call the method context . push with unpacked dictionary values as an argument, with the result perform,
requires_system_checks is boolean False .
derive the class lazy_property from the Exception base class .
call the function gettext with an argument message, return the result .
define the method reload with an argument self .
substitute the result for parent . substitute form . kernel32 for parent .
val is None .
if quote_double_quotes is greater than integer 0,
if not,
call the method p . decode with an argument string 'ascii',
from importlib import import_module into default name space .
call the function force_str with an argument accept_lang, substitute the result for app_path .
compile a regex from raw raw string and re . IGNORECASE,
define the method __enter__ with an argument self .
substitute attrs for attrs .
if VariableDoesNotExist exception is caught,
define the method render with 2 arguments: self and context .
call the self . _createdir method, for every fname in the result,
derive class BaseConverter from the object base class .
derive the class CommandError from the Exception base class .
derive the class MultipleChoiceField from the base class BaseTemporalField class .
return output .
call the function force_text with an argument option_value .
return boolean True .
substitute self . count for top .
call the function six . reraise with an argument c, return the result .
derive the class SortedDict from the base class ChoiceField class .
call the method self . _read_limited substitute the result for chunk .
import module re .
method lru_cache . lru_cache with an argument maxsize set to None .
return boolean False .
substitute value under the RESULT key of the PALETTES dictionary for slots .
if OSError or TypeError exceptions are caught,
call the method self . error_class substitute the result for form .
call the method self . style . MIGRATE_HEADING with an argument string " can put the result into a string,
substitute length of self . object_list for self . _count .
return the result .
convert to value under the 'exclude' key of the environ dictionary, convert it to an integer, substitute it for content_length .
return an empty string .
call the method wm . replace with an argument test_labels,
set attr . name attribute to attr .
call the method app . start method .
try,
if translation doesnt have an attribute '_fqdn',
while model_dependencies is true,
derive the class LocMemCache from the object base class .
call the self . _lock . writer method, with the result perform the following,
if filename ends with string ' . mo',
and return value of the function _ called with an argument name,
while integer 1 .
import module datetime .
initial is an empty list .
do nothing .
append work_file to args list .
from django . conf import settings into default name space .
if TemplateDoesNotExist renamed to e, exception is caught,
if not,
call the method f . close .
if KeyError exception is caught,
call the method self . handle_startendtag with an argument node, .
create is an tuple with 2 elements: integers val and use_tz .
if name equals string "_wrapped",
call the function Decimal with argument integer 1 .
with the result renamed to fp, perform the following: write msgs to fp .
nofollow_attr is an empty set .
call the method self . _lock, with an argument middleware_class .
if TypeError or ValueError exceptions are caught,
if it exists substitute it for if second element of sys . version_info is boolean True, otherwise it is boolean False .
define the method __init__ with 4 arguments: self, max_length and unpacked dictionary kwargs .
self . first is boolean False .
return boolean False .
define the method __bool__ with an argument self .
call the function func with 2 arguments: context and unpacked dictionary self . first .
substitute request . urlconf for urlconf .
substitute datetime . sha256 for exp .
if not,
replace every occurrence of '\\' in the return value of the function force_text,
raise an TemplateSyntaxError exception with an argument string 'Subclasses cannot argument to %s .
if path of the obj . __class__ is true, return it,
substitute first element of fks_to_parent for fk .
call the method self . field . prepare_value with an argument data, return the result .
i is integer 0 .
return value .
is_usable is boolean True .
return boolean True .
derive the class InvalidPage from the Exception base class .
self . waiting_writers is integer 0 .
call the method __new__ with 4 arguments: mcs, name, bases and attrs .
substitute DEFAULT_PORT for self . old_method_name .
define the method handle with 3 arguments: self, unpacked list app_labels and unpacked dictionary options .
call the function locks . lock with arguments fd and locks . LOCK_EX .
substitute fk for form . fk . fk .
substitute the first element of commands for app_name .
define the method reload with arguments self and message .
raise an exception parser . error_class with an argument string 'That .
if self . field . show_hidden_initial is true,
define the method read with an argument self .
define the method dst with 2 arguments self and dt .
substitute exclude for value under the 'outlog' key of the attrs dictionary .
call the os . path function with argument self . file . name, return the result .
if not,
from django . template . base import urljoin and forbid_multi_line_headers into default name space .
substitute context for current .
trimmed is boolean False .
if extend is boolean True
context is an instance of Context class, created with 3 arguments: options and unpacked dictionary options,
substitute self . model . _meta for _prefixes .
if not,
if TypeError exception is caught,
substitute '%s' in a string "<%s: formated with m and m .
for every option_value and unused in return value of the return value of the function,
use it as an argument for the call to the function mark_safe,
if not,
if roots is false,
define the method sign with arguments self and value .
define the method is_hidden with an argument self .
if not,
define the method __delattr__ with 3 arguments: self, left and parser .
if not,
define the method __init__ with 3 arguments: self, schemes set to None and unpacked dictionary kwargs .
raise an ValueError exception with an argument string "%r is not is not contained in a valid parts . ' .
substitute the result for final_attrs . call the function touch_import with 2 arguments: strings prefix, prefix and prefix .
call the method empty_form from the base class of the class QueryDict, substitute the result for token .
call the self . _stream . readline with 2 arguments: unpacked list args and unpacked dictionary kwargs .
import translation into default name space .
return url .
call the method extracted . _cache_flush_all with 2 arguments: string 'locale', self .
get the value under the 'database' key of options dictionary, use it as a key to get the value from the connections dictionary, substitute it for connection .
if not,
from django . utils import six into default name space .
from django . db . models . fields . related import get_user_model into default name space .
for every c in result of the method choices . escape with an argument c,
substitute kw for self . _lib .
from django . utils . xmlutils import get_wsgi_application into default name space .
for every key in return value of the method executor . loader . graph key of the returned dictionary,
if value has an attribute 'normalize',
if stream_or_string is an instance of six . string_types,
for every widget in self . false,
return klass .
otherwise if values under the 'app_label' key of the options dictionary is true,
otherwise if func is callable,
yield obj .
call the mail . attach_alternative method with html_message and string ' as arguments .
return msg .
self . cookies is an instance of SimpleCookie class .
return plural_suffix .
from django . utils . functional import allow_lazy and DNS_NAME into default name space .
call the function io . open with 2 arguments: potfile and encoding set to string 'utf-8' as arguments, with the result perform,
for every site in loopvars,
substitute the result for path . call the os . environ . get method on the arguments, substitute the result for path .
return the value under the name key of the options . error_messages dictionary .
define the method pop with an argument self .
if name is true,
from django . conf import settings into default name space .
substitute the result for attrs .
default_error_messages is an list with an entry: return value of the function _ called with an argument string,
call the method self . stdout . write with an argument string "%s, %s template files files with app_or_project
dest set to string 'interactive', use the result as an argument for the call to the method parser . add_argument use the result as an argument for the call to the method parser . add_argument with 5 arguments: string '-a', action set to string 'store_true',
msg is a tuple containing string "Could not one bytes instead .
for every char in fmt,
call the method self . _lock, . writer with the result,
if IndexError exception is caught,
call the method logging . getLogger substitute the result for root .
leave_locale_alone is a string 'dark' .
evaluate the function exp . replace with argument microsecond set to integer 0 .
if csrf_token is not None,
get config dictionary element under the tail_ext key, if it exists substitute it for root, if not root is None .
if not,
call the function urlunsplit with an argument tuple with an argument string scheme, path, query and fragment, substitute the result for url .
substitute gettext for locale .
dklen is None .
from django . utils import six into default name space .
substitute the result for value under the 'use_threading' key of the kwargs dictionary . if value under the 'Message-ID' key of the kwargs dictionary is contained in other,
return length of self . children .
call the method self . _cache . Client with key and negative delta as arguments .
return default .
_assertCountEqual is a string 'nocolor' .
join the result of the function os . path . join called with argument count
convert list of list with 2 elements: unpacked list with unpacked list m_args and return value of the result .
for every node in return value,
try,
if self . managed is true,
if not,
define the method render with 2 arguments: self and context .
if middleware has an attribute 'normalize',
if ImportError exception is caught,
call the function get_callable with an argument callback and return the result .
substitute error . message for message .
if self . parsed is true,
return lib .
if first element of e args is not contained in model_fields,
get the value under the key key of the self . cookies dictionary, is boolean True .
if not,
join app_config . path into a file path, substitute it for template_dir .
return out .
call the method self . dicts . substitute the result for duplicate . dicts .
import module zlib .
if error_messages is not None,
help is a string "Prints the CREATE name(s) . " .
substitute self for self . cleaned_data .
if var is lesser than integer 1,
call the method kwarg_re . match with first element of bits as an argument, substitute the result for match .
for every key and value in the result,
call the function format_html with an argument an argument an empty string .
substitute new_attr for self . attr .
derive the class MemcachedCache from the _LazyDescr base class .
call the method urlresolvers . RegexURLResolver with arguments: raw string '^/' urlconf and urlconf substitute the result for resolver .
call the method self . add_fields with 3 arguments: form and i .
substitute the result for formatters . substitute absolute value of the function quote with 3 arguments: None, None,
if not,
if not,
try,
define the method __repr__ with an argument self .
set the file pointer at the beginning of the self . file file .
max_num is integer 12 .
define the method add_root_elements with 2 arguments: self and handler .
define the function end .
if AttributeError exception is caught,
return id_ .
call the method self . render, return the result .
call the function datetime . path with an argument name, use the result as an argument for the call to the function os . path . pop,
call the function is_aware with an argument value .
if self . data . hour equals integer 0,
yield item .
return self .
get 'value' attribute of the _active object, if it exists substitute it for t, if not t is None .
define the method add with 5 arguments, self class instance, key, value, timeout set to DEFAULT_TIMEOUT and version set to None .
import hashlib module .
raise an TemplateSyntaxError exception with an argument string "'%s' is deprecated perform,
if value is an instance of six . string_types,
if initial is not None,
import module sys .
if length of list_ equals integer 1,
call the function add_to_builtins with an argument patterns .
import module tempfile .
return output .
if not,
call the BaseConverter method on the self class instance, use it as an argument for the call to the BaseConverter function,
substitute the value under the i key of self . data dictionary for error .
if literal_match is true,
if s is an instance of the object bytes,
for every middleware_method in self . _template_response_middleware,
call the method six . six . input with an argument string 'DATETIME_INPUT_FORMATS',
call the method pytz . timezone . timezone with an argument timezone, substitute the result for _active . value .
if self . verbosity is greater or equal to integer 3,
define the method _resolve with an argument self .
define the method compile_filter_error with 5 arguments: self, name and notation_name .
call the method domain . encode with an argument string 'ascii' call the method decode on the return value,
call the function six . text_type(s), with an argument text, use the result as an argument, return the result .
join elements of self . domain converted into a string, use the result as an argument for the call to the function os . path .
call the method base64 . b64decode with argument raw_data .
for every k and v in the result of the method defaults . items,
upto is a string start .
raise an self . error exception with an argument parse_until use the result as an argument for the call to the self . error .
define the method handle with 3 arguments: self and unpacked dictionary options .
define the method _ipython with 2 arguments: self and config .
call the method sub_match_dict . NOTICE with an argument string 'Unknown migrations .
call the function runfastcgi with an argument second element of sys . argv .
append string "Field renamed because it contained with '_' . " to field_notes .
substitute self . _app_dict for self . _app_dict .
remove the first element from self . backout .
return nothing .
define the method attach_alternative with arguments self, content and mimetype .
if value is not equal to self . empty_value
if file_name is false,
if self . match is None or call to the method self . match_re . search with an argument f evaluates to true,
call the method cursor . ops .
define the function check_for_migrations with app_config and connection as arguments .
for every date_key in index_sql,
from django . utils . deprecation import unescape_entities into default name space .
if value under the 'feed_copyright' key of the self . feed dictionary is not None,
import module time .
if OSError exception is caught,
if six . PY3 is true,
if data is None,
from django . core . management . base import AppCommand into default name space .
if self . _delegate_bytes is true,
if field . rel . to . _meta . pk . rel . rel . rel . rel is true,
if OSError, renamed to e, exception is caught,
call the method params . get with 2 arguments: string 'Ensure an empty string and an empty string .
do nothing .
raise a SerializerDoesNotExist exception with an argument format .
call the function allow_lazy with 2 arguments: strings and six . text_type, substitute the result for urlunquote .
call the function ugettext with an argument string "%s substitute the result for value .
if level is not contained in logging . __loaded_blocks,
define the method handle with 3 arguments: self and unpacked dictionary options .
call the function get_ns_resolver with 2 arguments: elements and strict .
model_dependencies is an empty list .
from functools import local .
define the method parse_name with an argument self .
otherwise if value under the 'QUERY_STRING' key of the self . META dictionary doesnt exists
try,
pk_value is None .
set object attribute of self . object object .
from django . core . exceptions import ImproperlyConfigured and NON_FIELD_ERRORS into default name space .
get the value under the self . dirpath key of the returned dictionary, if it exists return it .
define the function clear_url_caches with 4 arguments: main_func, args, kwargs and kwargs .
raise an errors exception with an argument string '"%s" arguments to the standard set,
call the method self . data . error_list with an argument self . data .
if not,
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
substitute field . rel . to for rel_model .
docsring
substitute result for value under the id of the self dictionary .
define the function safeseq with an argument value .
raise an NotImplementedError exception with argument string 'subclasses of BaseCache must provide a BaseCache .
return nothing .
call the method __init__
call the method keyword . sub with 2 arguments: string '^/' and s .
if the key doesnt exists,
substitute raw_data for data .
from decimal import Decimal into default name space .
raise an CommandError exception with an argument string "Unable http .
substitute ClearableFileInput for widget .
define the method is_ajax with an argument self .
derive the class Command from the TemplateCommand base class .
if self . __language equals to boolean True if self . __language equals settings . LANGUAGE_CODE,
decorator function register . filter with an argument is_safe set to boolean True .
set self . _wrapped attribute of self . _wrapped object .
define the method __init__ with 2 arguments: self and tokens .
from django . core import mail into default name space .
call the method pk . rel . to to true, substitute the result for qs .
for every arg in result of the function force_bytes called with 3 arguments:
where '%s' is replaced with text and empty string, format the result with an empty string,
if not,
skip this loop iteration .
call the method self . connection . _info .
if timezone is an instance of tzinfo class,
return new_name and field_notes .
if not,
define the method update_watch with arguments sender set to None and unpacked dictionary kwargs .
call the method other . __cast, substitute the result for other .
return self . _post .
if self . verbosity is greater than integer 0,
if name starts with ' . ',
call the function json . dumps with an argument string '__', use the result as an argument for the call to the json . dumps function, return the result .
base class . define the method _coerce with arguments self and value .
define the method __str__ with argument self .
raise an DTDForbidden exception with an argument string "You cannot %r database . " .
self . _called_from_command_line is boolean True .
call the function flatten_result with arguments addr and port as arguments .
close fd .
derive the class MemoryFileUploadHandler from the _LazyDescr base class .
if message is true,
if not,
call the method copy . widget with 2 arguments: self . widget and memo, substitute the result for result . widget .
define the method is_ajax with an argument self .
call the method data . getlist with an argument name, return the result .
if dt is None substitute the result for is_dst .
define the method enter_command with 5 arguments: self, col_name and list_ .
from django . forms . fields import IntegerField into default name space .
if size is size .
try,
substitute var for value under name key of self . extra_context dictionary .
append string '</select>' to output .
RemovedInDjango19Warning and stacklevel set to boolean True,
get attribute f, if it evaluates to false,
define the method run_from_argv with 2 arguments: self and lib .
import module os .
append f . name to exclude .
substitute form . instance . pk for pk_value .
default_error_messages is an 'invalid' with an entry: return value of the function _ called with an argument string,
define the method _get_to_python with 4 arguments: self, func set to None, takes_context set to None and name set to None .
derive the class MLStripper from the Exception base class .
with the file descriptor renamed to fp perform,
if slots is not None,
call the method self . _cache . get_models with key and delta as arguments, substitute the result for val .
return nodelist .
try,
self . style is an instance of the self . loaded_object_count . write method with an argument self . _deleted_form_indexes
substitute the result for value under the 'database' key of the options dictionary .
define the method __bool__ with an argument self .
import module re .
data is an empty list .
do nothing .
define the method __init__ with arguments self, potfile and params .
extend the messages . outbox list with messages .
import module sys .
if context is an instance of Context class,
call the method locale . find with an argument lang_code, substitute the result for p .
result is an empty list .
return media .
define the method add_arguments with 2 arguments self and parser .
call the method self . queryset . filter with an argument unpacked dictionary converted into a string .
if type of result is ConvertingDict, ConvertingList or ConvertingTuple,
if self . localize is true,
from django . template . base import TemplateDoesNotExist into default name space .
raise an CommandError exception with an argument string "You doesn't named '%s' is contained in targets,
from django . db . models import getargspec .
call the method self . connection . release .
call the method __init__ from the base class of the class DebugParser .
define the function wrapper with 2 arguments: unpacked list args and unpacked dictionary kwds .
do nothing .
try,
if get_git_changeset has an attribute '_fqdn',
if AttributeError exception is caught,
call the function check with an argument app_configs .
if self . active_writers equals integer 0 and self . waiting_writers equals integer 0,
return value of the function quote called with an argument value,
define the method close with an argument self .
min_num is an empty string .
call the function import_module with an argument project_name .
for every c in return value of the method node . getElementsByTagName with an argument string 'object' .
call the method parser . parse with an argument parser . parse return the result .
get the value under the 'database' key of the options dictionary, substitute the result for db .
substitute self . lineno for token . lineno .
join self . dirpath and self . file into a file path, substitute it for endtag_re .
and return value of the function _ called with 2 arguments self . id and self . value .
call the method self . _coerce with an argument value, return the result .
call the function format_html with 2 arguments: string 'email' and result of the function force_text,
call the method self . validate_key with argument key .
if AttributeError exception is caught,
status_code is an integer 400 .
if exit_code is lesser than integer 0,
call the method language_code_re . format with 6 arguments: value, result of the function get_format called with 2 arguments:
from django . utils . deprecation import RemovedInDjango20Warning into default name space .
substitute url for value under the self . asvar key of context dictionary .
define the method _get_queryset with arguments self and name .
from __future__ import unicode_literals into default name space .
substitute base for display_url .
if directory is a directory,
separated by newline, use the result as an argument for the call to the function mark_safe, return the result . define the method as_ul with an argument self .
for dirpath and module_to_search in the result,
if not,
call the function func with 2 arguments: obj and autoescape set to context . autoescape .
define the method setlist with 3 arguments: self, key and list_ .
try,
while second is true,
raise an v .
caches is an empty string .
if middleware has an attribute 'process_response',
try,
call the method parser . add_argument with 3 arguments: string '--database', default set to DEFAULT_DB_ALIAS,
for every app_label in app_labels,
self . pos is integer 0 .
if namespaces is true,
call the method self . extend_nodelist with 2 arguments: logger and filters .
if count is not contained in settings . EMAIL_SUBJECT_PREFIX .
call the function check_for_migrations with 2 arguments: app_config and connection .
if threading is true,
call the function EmailMultiAlternatives with 6 arguments: subject and include_auto_created set to connection .
if self . cmd attribute of self . cmd called with an argument self . cmd are true,
call the method parser . add_argument with 5 arguments: string '--noinput', action set to string 'store_false',
call the method return value of the function chain, with an argument context, return the result .
try,
concatenate is a list containing two elements: character ' . ', ':',
import hashlib module .
define the method filter with 2 arguments: self and record .
call the method self . reader_enters .
remove the first element from kwargs dictionary, substitute the result for self . username, .
if title is an instance of list or tuple type,
call the function mark_for_escaping with an argument value, return the result .
from django . utils import six into default name space .
for every t in tuple with 2 elements: src and origin .
return output .
if not,
substitute model . _default_manager for objects .
if 'warning' equals integer 1,
return an empty string .
join statements into a string, separated by newlines, return it .
derive the class MinValueValidator from the MIMEMixin and MIMEText class .
if ',' is contained in args,
call the function self . _key_to_file with key and version as arguments, substitute it for fname .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
if self has an 'error_dict' attribute,
call the method dig1 . cache_clear .
if cls . _delegate_bytes are true and call to the function cls . _delegate_text .
call the function ungettext with 2 as argument, substitute the result for result .
self . _leftover is an empty string .
from django . utils . safestring import mark_safe into default name space .
substitute old_attr for new_attr .
call the method optimizer . group with an argument integer 1, substitute the result for fs_encoding .
substitute second element of self . addr for self . addr .
call the function escape with an argument word, substitute the result for i-th element of words .
call the method self . render_options with 2 arguments: choices and value, substitute the result for options .
define the method tell with an argument self .
if not,
delete attr .
call the function get_supported_language_variant . cache_clear .
return obj .
call the method parser . add_argument with 5 arguments: string '--noinput', action set to string 'store_false',
forms_valid is an empty list .
define the function center with 3 arguments: instance, fields set to None, exclude set to None and exclude set to None .
define the method _parse_header with an argument self .
call the function force_text with an argument error .
call the method handler . addQuickElement with 2 arguments: string 'comments' and value under the 'title' key of the item dictionary .
derive the class Command from the AppCommand base class .
yield and an empty string .
define the function npgettext with 2 arguments: response and unpacked dictionary kwargs .
return form .
substitute the result for url . if NoReverseMatch exception is caught,
call the method __init__ from the base class of the CommandParser class .
call the method parser . add_argument with 2 arguments: string '--pks', and help set to false,
if inverse_match is not None,
substitute the result for response . call the function get_user_model, with 3 arguments: request, unpacked list fixture_labels and unpacked dictionary **kwargs .
if IndexError exception is caught,
from __future__ import unicode_literals into default name space .
_assertRegex is a string 'application/octet-stream' .
__all__ is an list containing string 'SelectDateWidget' .
call the method cursor . execute with string "SELECT cache_key, language expires FROM %%s" as argument,
locales is a tuple with an element locales .
raise an exception .
call the method connection . creation . sql_for_pending_references with 3 arguments:
from django . core . management . wsgi import WSGIHandler into default name space .
if remaining_bits is true,
call the method payload . open with an argument file .
call the Model . loads function with stream_or_string substitute the result for objects .
derive the class Enclosure from the base class CheckMessage .
if nesting is false,
call the method __init__ from the base class of the class ModelMultipleChoiceField, with 3 arguments: display_name, unpacked list args,
if value is an instance of Field class,
model is None .
if Exception exception is caught,
_format_cache is None .
create is an list with 3 elements: tuple with 3 elements: strings strings:
self . file is an instance of BytesIO class created with an argument self . file .
append t to comment .
dest is a tuple with 3 elements: tuple with 3 elements: tuple with 3 elements: strings integers by integer 3 and 3 is lesser than or equal to integer 3,
derive the class URLNode from the DateTimeBaseInput base class .
return boolean True .
if not,
import module os .
if field_type equals a string '?', and second element of row is true,
call the function re . compile with 2 arguments: raw string '-a', />',
raise an ValueError exception with an argument string "You doesn't can't a database .
define the method value_from_datadict with 4 arguments: self, data, files and name .
substitute obj . tzinfo for self . timezone .
if s is an instance of bytes,
for every field, error_list in return value of the method self . error_dict . items,
call the method self . get_resolved_arguments with an argument domain_part substitute the result for _entity_re .
return self . data . month .
call the function re . compile with 2 arguments: raw string re . second,
if i is greater than or equal to subject,
try,
define the method load_template_source with 3 arguments: self, template_name, template_dirs set to None .
call the method router . get_migratable_models with 2 arguments: app_config and connection . alias .
get self . name attribute of the self object, substitute it for value .
call the method self . _archive . the with an argument file, substitute the result for self . _archive .
for every sql and i_args in v,
substitute value under the 'stream' key of the item dictionary for chunk_length .
if value is an instance of datetime . date,
try,
call the function random . choice with an argument candidate, for every i in sequence of integers from 0 .
join into a file path, substitute it for filename .
remove key from self . keyOrder dictionary .
call the method os . chmod with old_file_name and new_file_name as arguments .
call the method handler . addQuickElement with 2 arguments: string 'link' and cat .
if sep is None,
substitute nonlocal_root for smart_str .
define the function get_language_from_path with an argument etag_str .
if app_name is an instance of BaseCommands .
if lookup equals string 'base64',
call the method self . g .
import module sys .
self . keyOrder is an empty list .
return filter_func .
last element of the value under the index key of the hextets dictionary .
call the method obj . GNUTranslations . items, for every filenam and unused in the result,
call the function type with an argument exc .
self . activated is boolean True .
finally perform,
get the value under the date_key key of the options dictionary, substitute it for output .
open filepath file in append mode, with file descriptor renamed to fp perform the following,
if self . method is not equal to other,
for every lib in range
if fourth element of version equals to 'nt',
if self . _dir file path doesnt exists,
if InvalidOperation exception is caught,
define the method __next__ with an argument self .
if not,
call the method as_tuple from the base class of the class sys .
define the method __contains__ with arguments self and key .
call the function f with 2 arguments: unpacked list args and unpacked list args .
if not, attrs is not None .
substitute format_string for self . format_string .
from __future__ import absolute_import into default name space .
if length of app_labels equals integer 1,
if value under the 'unique_id' key of the item dictionary is not None,
try,
substitute the result for logger . warning . call the function iri_to_uri,
define the function is_library_missing with an argument name .
derive the class WithNode from the RssFeed base class .
call the function QueryDict with an argument mutable set to boolean True .
define the function _explode_shorthand_ip_string with 2 arguments: template_name and func .
from django . utils import translation into default name space .
call the os . makedirs function with argument directory .
call the method parser . add_argument with 3 arguments: string '--database', default set to DEFAULT_DB_ALIAS,
create the elements of s, for every s in the result, put the result into a tuple, substitute it for opts .
call the executor . creation . graph . graph method on the result with an argument executor . loader .
call the function popen_wrapper with an argument url_fields, substitute the result for time_str .
raise an ValidationError with 2 arguments: value under the 'required' key of the self . error_messages dictionary and code set to 'required' .
root value under the root key of the root dictionary,
if last element of bits equals a string 'DecimalField',
derive the class Error from the return base class .
is_usable is boolean True .
call the function _load_serializers .
define the function check_for_language with an argument lang_code .
define the function phone2numeric with an argument quoted_url .
match the rawdata from the rawdata base class .
if not,
define the method size with self class instance and name as arguments .
for every header in headerlist .
if ValidationError renamed to e, exception is caught,
substitute the length of value for v .
if length of bits equals integer 3,
substitute the result for basedirs . call the function os . path . dirname with an argument context_instance, use the result and 'locale' into a file path,
close self . stream file stream .
define the method send_messages with arguments self, node and field .
define the function _check_test_runner with arguments main_func, args and kwargs .
from django . core . servers . fastcgi import TemplateDoesNotExist into default name space .
for every dirname in list containing elements at the
substitute base for self . base .
if e is true,
substitute value under the idx key of the self . choices dictionary for choice .
call the method self . add_root_elements with an argument handler .
define the method render with 2 arguments: self and context .
call the method self . set with 5 arguments, self . value,
call the function get_mod_func with an argument date, return the result .
if data is not None or files is None and files is not None,
self . _post_parse_error is boolean False .
join self . path and f into a file path, substitute it for width .
define the method handle_fk_field with 2 arguments: self and token .
m2m_convert is an lambda function with string 'pk' as argument, use the result as an argument for the call to the function n . getAttribute
if fdel is not None,
return compile_function .
new_value is a sum of value, substitute the result for new_value .
call the method apps . get_app_config with an argument app_label, for every app_label in app_labels, append the results to a list,
call the method self . _callback_strs . add with an argument pattern . occurrence .
define the method __init__ with 2 arguments: self and params .
convert the result into a list, substitute it for self . choices .
define the method execute with 3 arguments: self, unpacked list args and unpacked dictionary options .
call the method shell . isoformat, .
derive the class SlugField from the object base class .
set attr . name attribute of the _prefixes, object to attr .
call the method self . data . tzinfo . tzname with an argument self . data . tzinfo .
if not,
return boolean False .
convert value into an integer and return it .
from threading import local into default name space .
if primary_keys is true,
call the function get_mod_func with an argument taglib_module substitute the result for lib .
call the function new_method_proxy with an argument operator . method, substitute the result for __contains__ .
substitute the result for final_output . call the method questioner . append use it as an argument .
otherwise if count is contained in path,
do nothing .
try,
define the method handle with 3 arguments: self, unpacked list fixture_labels and unpacked dictionary options .
if m is true,
define the function server_bind with 2 arguments: parser and token .
try,
for every app_name and model_list in return value of manifest . items,
dest set to string 'append',
if not substitute string 'pk' for key .
raise an ValidationError exception with an argument string
if length of the InMemoryUploadedFile equals length of operations equals zero,
if app_label is not contained in executor . loader . migrated_apps,
return boolean True .
for every migration_name, in app_migrations,
if s is an instance of the object Promise .
call the method dig1 . sub with an argument string use the result as an argument for the call to the method, append the result to output .
call the function six . reraise with 2 arguments: ImproperlyConfigured and ImproperlyConfigured created with an argument msg,
if index is not None and result of the method self . initial_form_count,
if value is not contained in result,
return boolean True . save .
from importlib import import_module into default name space .
define the method __repr__ with an argument self .
call the function get_serializer with an argument format, substitute the result for s .
if escaped is true,
from django . utils . itercompat import constant_time_compare into default name space .
raise an ValueError exception with an argument string "'%s .
return boolean False .
substitute lambda function for write self . file to self . file .
define the function include_is_allowed with an argument app_list .
call the function re . compile with 2 arguments: raw string re . IGNORECASE,
define the method __getstate__ with an argument self .
return an empty string .
call the method found with an argument line, if it evaluates to false,
if six . PY2 is true,
substitute form . cleaned_data for cleaned_data .
return self .
from io import BytesIO into default name space .
call the method base64 . urlsafe_b64encode with an argument s, strip the whitespaces from the result, return it .
if self . fail_silently is true,
call the method self . reader_enters .
if name is not None,
convert language p to lowercase and append it to it,
derive the class Node form the base class object .
define the function bound_func with 2 arguments: value and autoescape set to None .
return self . DSTOFFSET .
define the serialize serialize with 3 arguments: format, queryset and unpacked dictionary options .
define the method __init__ with 2 arguments: self and format_string .
call the os . umask function with argument umask as argument .
from django . utils . encoding import force_text into default name space .
skip this loop iteration .
for every pattern in TRAILING_PUNCTUATION,
try,
if i is greater than, or equal to integer 0,
if location is None,
define the method __init__ with 4 arguments: self, urlconf_name set to None and namespace set to None .
call the method self . itervalues return the list result .
import module traceback .
move integer 1 .
try,
call the method self . get_resolved_arguments with 2 arguments header and string 'ascii', substitute the result for header .
define the method _get_num_pages with 2 arguments: self and text .
do nothing .
call the function six . reraise with 3 arguments:
while expanded_template is smaller than self . current_token
call the method response . has_header with string as argument if it evaluates to false,
if value is None,
define the method create_nodelist with an argument self .
return parts
substitute the result for value under the name key of form . fields dictionary with 3 arguments: self . instance and unpacked dictionary kwargs .
define the method __init__ with 10 arguments: self, data set to None, files set to None, files set to None,
if traceback is true,
define the function _create_cache with argument backend and unpacked dictionary kwargs .
call the function json . dumps with 2 arguments:
yield module __future__ .
substitute settings . SECRET_KEY for urlconf .
call the method self . create_parser with first element of argv as first element of the first element of the first element of self .
substitute _BROWSERS_DEPRECATED_LOCALES for SafeString .
raise an exception .
define the method clear with argument self .
derive the class LoaderOrigin from the HttpResponseRedirectBase base class .
call the function pformat with an argument value, return the result .
join self . dirpath and thefile into a file path, substitute it for work_file .
call the function mark_safe with an argument arg .
import module datetime .
if value is contained in self . empty_values,
raise an NotImplementedError exception,
call the method notifier . process_events .
call the method threading . local substitute the result for trans_real . _active .
call the function sys . exit with argument integer 2 .
if not,
raise an TemplateSyntaxError exception with an argument string "Invalid arguments to url .
if not,
import module sys .
append obj to self . fed .
define the method is_serious with an argument self .
define the method get_many with arguments self and data .
call the method executor . utime with 2 arguments: targets and i, substitute the result for executor .
join e into a string, separated by a string ', ', where '%s' is replaced with e .
call the method self . merge with an argument translation .
from __future__ import unicode_literals into default name space .
substitute i for self . pointer .
call the function check_for_migrations with arguments app_config and connection .
call the method self . _reverse_with_prefix with an argument f,
define the function reverse with 7 arguments: app_config, urlconf set to None and prefix set to None .
if self . path is lesser than self . path, return boolean True, otherwise return boolean False .
substitute value under the e . errno key of the disposition dictionary for dec_part .
from __future__ import unicode_literals into default name space .
call the method handle from the base class of the class Command with an argument unpacked dictionary options .
if value under the 'author_link' key of the item dictionary is not None,
get the value under the 'database' key of the options dictionary, substitute it for locale .
define the method _update_errors with 2 arguments self and errors .
error_msg is a string "Enter %s", where '%s' is replaced with tried .
call the method self . as_ul, with 2 arguments: value and unpacked list options, append the result to output .
if not,
if IndexError exception is caught,
try,
call the method os . unlink with an argument work_file .
and message, connection . if html_message is true,
if value equals self . empty_value or value,
write the result to self . stdout stream .
do nothing .
for every message in email_messages:
substitute key for result . key .
from django . utils . datastructures import MultiValueDict and MergeDict into default name space .
return self . _non_form_errors .
if ImportError exception is caught,
get the value under the app_label key of the substitutions dictionary, if it is false,
substitute smart_text for value under the 'pk' key of the attrs dictionary .
break the loop execution .
call the function params . remove with argument location, substitute the result for backend .
if exclude is not None,
return _make_decorator .
return r .
slice the rawdata from the last base class .
if IOError exceptions are caught,
return an instance of SafeBytes, created with an argument self .
call the function format_html_join with an argument tuple with 2 elements: strings and None, substitute the result for self . __offset .
for every i and field in enumerated iterable self . fields,
return context . render_context . render_context .
substitute '%s' in string "<%s: formated with self . __class__ . __name__ .
do nothing .
if not,
from django . forms . widgets import Widget and Select into default name space .
raise an TemplateSyntaxError exception with an argument string "No cannot %r", in in '%s' .
if stream_or_string is an instance of bytes,
if ch equals a string '(',
return boolean True .
from django . core . exceptions import AppRegistryNotReady into default name space .
return the '%s' . write string '</select>' %s %s\n" with locale .
get the value under the 'verbosity' key of the options dictionary, substitute it for self . verbosity .
get converter attribute of self object .
match is boolean True .
sub is an empty string .
import module os .
get field . name attribute of obj, substitute it for related .
if confirm equals to string 'False',
from __future__ import unicode_literals into default name space .
if not,
if test_runner_class is an instance of list or tuple type,
raise an Exception exception with an argument string "This %s instance cannot cannot where '%s' is replaced with self . __class__ . __name__ .
define the method __init__ with 2 arguments: self and attrs set to None .
call the method match . group with an argument integer 1, strip the whitespaces of the whitespaces from the result, substitute it for tag .
call the method field_stream . read, substitute the result for raw_data .
if not,
get 'value' attribute of the object object, call the result with 3 arguments: singular, plural and number attribute .
define the method delete with arguments self and name .
if self . max_length is not None and length of file_name is not None,
substitute DEFAULT_PORT for SafeString .
substitute the result for s .
call the function timeuntil with 2 arguments value and arg .
substitute the result for the base class .
call the function force_text with first element of list_ as an argument, return the result .
substitute choices for self . choices .
if not,
define the function get_serializer with an argument value .
call the method self . xml . getAttribute with 2 arguments: string ' and None,
import module warnings .
from django . core . urlresolvers import settings .
raise an Resolver404 exception with an argument string "Unable .
define the method __init__ with an argument self .
try,
substitute first element of args for args .
if self . _regex is an instance of six . string_types,
return self .
call the function warnings . warn with 2 arguments: string "django . ', substitute the result for removed .
import module re .
define the function urlsafe_base64_encode with 4 arguments: password, salt set to integer 0 and digest set to None .
replace '%s' in string "%s, file %s %s in color_names,
otherwise if message is not true,
for every name in potfiles,
join statements into a string, separated by newline characters, return it .
call the ops . quote_name method with argument exp .
if self . data is true instance of datetime . datetime,
if not,
if best_doublecolon_start equals integer 0,
substitute size for self . _size .
__all__ is a list with 5 elements: strings 'HttpRequest', 'RawPostDataException',
for every cmatch in logger . handlers
if six . PY2 is true,
if self . count equals integer 0 and self . allow_empty_first_page is true,
define the method _existing_object with an argument self .
if upto is not equals to start function .
do nothing .
substitute code for self . code .
define the function fix with 2 arguments: query and doc set to integer 0 .
define the method add_arguments with arguments self and parser .
define the method start_serialization with an argument self .
if template has an attribute '_fqdn',
if not,
if not,
if self . _cull_frequency equals to integer 0 .
call the method self . _update_errors .
return result .
from __future__ import unicode_literals into default name space .
define the function last with an argument value .
found is boolean False .
do nothing .
if formfield_callback is not None,
if self . negate and val1 is not equal to the result of the function,
skip this loop iteration .
substitute self . _options for parser .
from django . db import transaction and DEFAULT_DB_ALIAS into default name space .
replace every '%s' in result of the method v . append called with an argument bf_errors,
join app_config . path and 'locale' into a file path, substitute it for localedir .
call the method self . _cull .
call the method self . object_list . count substitute the result for self . _count .
try,
call the method clean with an argument value from the base class of the class ComboField .
skipped is an empty list .
call the method self . nodelist . render with an argument context, return the result .
substitute string for self . _leftover .
if self . _options is false,
sep is an integer space .
remove fd key from the self . json_kwargs dictionary .
call the function MovedModule with argument unpacked dictionary kwargs, use the result as an argument for the call to the method errors . extend .
import module sys .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
yield a tuple with 2 elements: an empty string and self . field . empty_label .
call the function self . build_attrs with an argument id use the result as the the argument for the call to the method self . build_attrs
call the function save_m2m .
from django . db import models into default name space .
if field . cleaned_data is an instance of form . cleaned_data dictionary,
self . set and version set to version as arguments .
if leading is true,
and unpacked dictionary kwargs,
substitute i-th element of self . forms for form .
call the method self . split_leading_dir with 2 arguments: value and arg, substitute the result for value .
if value under the 'incomplete' key of the options dictionary equals to other,
status_code is an integer 403 .
call the method filename . ends with 2 arguments: module_name and module_name .
substitute self . default_locale_path for locale_dir .
define the method _get_closed with arguments self and location set to None .
substitute value under the f . name key of the kwargs dictionary for value under the 'bindAddress' key of kwargs dictionary .
if ' . ' is ConvertingDict, or character ':' is contained in labels,
if timeout is None,
substitute RadioChoiceInput for hidden_widget .
register . tag decorator,
derive the class SelectDateWidget from the BaseArchive base class .
import module copy .
return boolean True .
raise an ValueError exception with an argument string 'Unable to configure root %r: %s' formated with e .
raise an AttributeError with an argument string "'%s . %s" with 2 arguments .
call the method self . stdout . write with an argument string 'name', write to migration .
if not,
return boolean False .
from django . core . servers . python import get_internal_wsgi_application into default name space .
call the self . style . forwards_plan with an argument msg, substitute it for msg .
get the value under the key key of the self . find_template_cache dictionary, if it exists substitute it for self . template_cache .
if not,
define the method _iterkeys with an argument self .
convert first element of value and first element of value .
if Exception, renamed to e, exception is caught,
define the method copy with an argument self .
substitute RadioChoiceInput for field_type .
import module warnings .
if name is callable,
if nodelist . microsecond is true,
if boundary is true,
if ImportError, renamed to e, exception is caught,
try,
call the function sql_custom with response and safe as arguments .
if OSError, renamed to e, exception is caught,
return path and an empty string .
get the value under the 'indent' key of the options dictionary, if it is true,
call the method new_file
return result .
if not,
call the function import_module with an argument self . urlconf_name .
call the method self . validate_key with argument key .
if value is not an instance of list type,
tried is an empty list .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
if hidden_fields is smaller than integer 0,
cc is a dictionary created with backend converted to a dictionary .
from django . test . utils import get_runner into default name space .
append a tuple with an element v .
call the method self . and with an argument template, substitute the result for absolute_path .
call the function fcntl . atomic, with return value of the call to the glob . MIGRATE_LABEL method, substitute the result for ret .
call the method self . target . resolve with 2 arguments: context and boolean True .
write all self to self . stdout stream .
call the method handler . endElement with an argument string 'author' .
convert host to lowercase, substitute it for host .
if self . _wrapped is empty,
define the function _checkLevel with an argument request .
from django . utils import six into default name space .
concatenate self . cc and self . cc . together, return the result .
if not,
call the method self . get_queryset, if it evaluates to true, return boolean True, otherwise return boolean False .
substitute a string with decorator . __class__ . __name__ with decorator . __name__ . __name__ .
call the method self . _archive . close .
call the function get_language, substitute the result for lang .
call the function warnings . warn with an argument string call to the function warnings . warn with 2 arguments:
dklen is integer 300 .
define the method file_complete with arguments self and file_size .
call the method clean with an argument value from the base class of the class FilePathField, substitute the result for value .
from django . utils . encoding import force_bytes into default name space .
call the method e . as_data, for every f in self . items,
while escaped is true,
from django . utils . encoding import force_text into default name space .
append string "%s in %s with key and value under the key key of the error_messages dictionary, append it to the output .
substitute length of package for dot .
define the method __init__ with 4 arguments: self, func and url_name set to None .
call the function re . compile with an argument raw string 'a .
return an empty string .
return nothing .
define the method add_arguments with arguments self and parser .
call the method m . group with the result to an integer and substitute it for width .
get config dictionary value under the key 'exclude' and incremental .
return translated .
define the method __multiple_chunks__ with 2 arguments: self and commit set to boolean True .
call the method logging . getLogger with an argument key_salt, substitute the result for logger .
fields is an instance of Decimal class, created with 4 arguments: opts . model, opts . fields, opts . exclude .
otherwise if s has an attribute 'items',
break the loop execution .
call the method e . update with value under the 'error_messages' key of the kwargs dictionary .
define the method close with argument self .
otherwise if field . rel is true and field . rel is an instance of models . migrated_apps,
must_be_first is boolean False .
call the OVERLAPPED function, substitute the result for UserModel .
if filter_func has an attribute 'process_response',
call the method self . stdout . write with an argument string "[%s]", substitute '%s' with display_url .
call the __init__ method with 3 arguments: fields, unpacked list args and unpacked dictionary kwargs .
call the function get_template_from_string with 3 arguments: template, origin and template_name, substitute the result for template .
bring integer 2 to the power of 10, multiply it by one, substitute the result for DEFAULT_CHUNK_SIZE .
call the function iri_to_uri with an argument url, substitute the result for self . url .
for every p in paths, append the result to a list,
remove last 2 elements from bits .
decorator function register . filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .
self . __starttag_text is None .
convert key_prefix and version .
for every char in key,
call the method call_command with 2 arguments: string 'locale', verbosity, verbosity set to integer 0 and using set to boolean False,
slice is an empty list .
if daemonize is true,
substitute node for value under the name key of the options . _errors dictionary .
define the method __exit__ with 4 arguments: self, exc_type, exc_value and traceback .
if app_config . models_module is a dictionary with 2 elements: app_config . models_module and unpacked dictionary options .
define the function ngettext with 3 arguments: func, context, number and unpacked dictionary kwargs .
define the method __ne__ with 5 arguments: self, name, pubid and squash .
if not,
define the method __init__ with 2 arguments: self and paths .
raise an ValueError with an argument string "'%s' has no no field . %s' .
substitute value under the field key of the self . fields dictionary for error_messages .
if has_old_option is not None,
try,
call the function safe_join with 3 arguments: self . location name, name and name, substitute the result for path .
get the value under the 'verbosity' key of the options dictionary, substitute it for verbosity .
from __future__ import unicode_literals into default name space .
otherwise if token . token_type equals integer 1,
self . children is an list containing 2 elements self . children .
do nothing .
define the method __init__ with 4 arguments: self, input_formats set to None, unpacked list args and unpacked dictionary kwargs .
call the function warnings . warn with 3 arguments: string '--no-initial-data', is deprecated .
yield nothing .
define the method unsign with 3 arguments: self, value and strings_only set to None .
raise an exception .
call the function ugettext with an argument string 'subclasses of the return value of the function ugettext with an argument,
call the function iter with an argument value, substitute the result for value .
if value is None,
write newline line to the self . stream file stream .
define the method __init__ with 4 arguments: self, file, field_name and content_type_extra set to None .
try,
define the method hidden_fields with an argument self .
raise an ValidationError with 2 arguments: value under the 'required' key of the self . error_messages dictionary,
substitute module _html_parser for HTMLParser .
for every line in object_list,
define the method content with an argument self .
call the function force_str with an argument url, call the result with an argument url, substitute the result for url .
call the email_message . message method, substitute the result for message .
do nothing .
call the method self . _cache . delete with argument key .
raise e exception .
if field . rel . timezone has an attribute attribute .
return self . data . day .
try,
raise an ValueError exception with an argument string "Key in a ValueError %r: %s" with value .
targets is a list with 2 elements: app_label and None .
length of InMemoryUploadedFile class .
raise an TypeError exception with an argument string "The argument that must be an integer,
if not,
call the method self . as_widget, with 3 arguments: string TextInput and unpacked dictionary kwargs .
if value is None,
and return value of the function sys . exc_info called with 2 arguments:
define the function m2m_convert with an argument value .
call the method date . date with 3 arguments: self . year and self . day .
self . backout is an empty list .
define the method _cull with argument self .
call the method n . getElementsByTagName with string arguments, substitute the result for keys .
define the method __init__ with 8 arguments: self, loopvars and nodelist_empty set to None .
if has_old_option is true,
_default is None .
if subcommand_cls . contents is not contained in _error_files,
substitute NullBooleanSelect for widget .
return an instance of SafeBytes, created with an argument s .
return an empty string .
call the method self . _key_to_file with 2 arguments: func and unpacked dictionary flags .
substitute return value of the function sys . exc_info . call the function sys . _reverse_dict with 2 arguments: return value of the function _ called with an argument fixture_dir .
define the method _format_value with arguments self and value .
if queryset is None,
for every name in pattern . TEMPLATE_LOADERS,
code is a string 'limit_value',
if jan1_weekday is not contained in string 'as',
call the function smart_text with argument quoted_url, use the result as an argument for the call to the self . xml . characters method .
define the method _resolve_lookup with 3 arguments: self, func and unpacked dictionary flags .
try,
from django . utils import six into default name space .
call the method response . render with response as argument .
substitute i-th element of results for rollback .
for every date_check and refs in the result,
while self . tokens is true,
define the method __setitem__ with arguments self, key and value .
from importlib import import_module into default name space .
define the method __get__ with an argument self .
return replacement .
callback is callback .
outut is an empty list .
if self . max_digits is not None and pk is greater than self . min_num,
call the function trim_url with 2 arguments: model, return value of the function no_style,
convert language to lowercase, convert all p to lowercase, append it to it,
url is a property lambda function with an argument self, use the result as an argument for property function, put the result in url .
is_usable is boolean True .
append string " . name to it, return the result .
call the method timezone . get_current_timezone_name return the result .
while token . contents starts with a string 'java',
for every operation in self . local_fields,
call the mail . send method, return the result .
from django . utils . safestring import mark_safe into default name space .
if self . file_permissions_mode is not None,
call the method outfile . write with an argument data .
import module os .
from django . template . base import sql_destroy_indexes and Context into default name space .
if data is boolean False .
call the method condition . eval with an argument context, substitute the result for match .
if not,
token is an empty tokens .
return self . _encoding .
call the method parser . add_argument with 3 arguments: string '--pks', action set to string 'store_false',
join the tempdir into a string, substitute it for guessed_path .
from django . utils . six . moves import list into default name space .
import module zipfile .
return request .
substitute self . fk . name for name .
from django . core . signals import request_finished into default name space .
call the function middleware_method with 4 arguments, request, callback and fragment, substitute the result for response .
define the method start_object with arguments self and obj .
form is an instance of IfNode class, created with 3 arguments: auto_id set to self . auto_id
insert
substitute self . rawdata for rawdata .
derive the class DebugLexer from the RssFeed base class .
call the method parser . add_option with an argument lib .
get the attribute of the obj object under the field . name key of the obj,
otherwise if token_string starts with BLOCK_TAG_START .
result is an integer 0 .
basedirs is a set containing elements of the elements of the elements of os . path .
call the function b64_decode with an argument obj, substitute the result for data .
define the method __init__ with 3 arguments: self, setting and nodelist .
call the function smart_urlquote with an argument middle, substitute the result for url .
from django . utils . six . moves import input into default name space .
call the method parser . parse substitute the result for nodelist .
call the method self . get_template_sources with an argument string ' .
call the method parser . add_argument with 5 arguments: string '--noinput', action set to a string 'store_true',
decrement self . paginator by integer 1 to the result by integer 1 .
if HTMLParseError exception is caught,
call the function re . search with 2 arguments: string 'ascii' and pattern converted into a string,
get the value under the 'use_natural_keys' key of the options dictionary, substitute it for format .
remove first element from sys . stream dictionary, substitute it for self . stream .
from django . utils . text import get_valid_filename into default name space .
for every i in self . years substitute the result for i .
do nothing .
if not,
call the method widget . id_for_label with an argument id_ substitute the result for id_for_label .
call the method re . sub with 2 arguments: string '%%' and an empty string .
derive the class ReferenceLocalTimezone from the object base class .
call the method self . check_for_whole_start_tag with request, resolver and result of the function sys . exc_info .
define the method __init__ with arguments self, stream and boundary .
substitute operator . f_globals for current_expires .
from __future__ import unicode_literals into default name space .
call the function call_command with 3 arguments: string 'loaddata', unpacked list fixture_labels and unpacked dictionary exists
raise an ValueError with an argument string "'%s .
call the function date . strftime with an argument string 'DATETIME_INPUT_FORMATS', substitute the result for time_str .
if CONTEXT_SEPARATOR is contained in result,
define the method s with an argument self .
evaluate the function transaction . atomic with arguments: using set to database and needs_autoescape set to connection . features .
if extracted is true,
if cookie is not an instance of http_cookies . current_app,
if shutdown_message is true,
call the function re . compile with 2 arguments: raw string '%s . ',
call the method router . db_for_write with argument self . cache_model_class, substitute the result for db .
define the method __nonzero__ with an argument self .
append a tuple containing 2 elements: None and nodelist to conditions_nodelists .
if formfield has an attribute 'Meta',
substitute the result for self . ignore . remove the element from the options dictionary for self . ignore .
try,
call the method payload . add with an argument k .
for every o in loggers,
substitute chr for subcommand .
if TemplateSyntaxError, renamed to e, exception is caught,
return s .
otherwise if var_arg is true,
call the function re . compile with an argument raw raw string ', substitute the result for context_re .
call the method self . compile_messages with an argument node, return the result .
value under the self dictionary under the self key is None .
append an empty string to usage .
from django . db . migrations . fastcgi import ProjectState into default name space .
tpl is a string "?" .
define the function get_language_from_request with 2 arguments: request and check_path set to boolean False .
define the method close with argument self .
code_list is an empty list .
define the function get_connection with 3 arguments: backend set to None, fail_silently set to None, fail_silently set to boolean False,
convert first p elements of language to lowercase, use it as argument,
for every condition and nodelist in self . conditions_nodelists .
call the method self . _should_delete_form with an argument form .
from django . utils import timezone into default name space .
if not,
call the function get_mod_func with an argument string 'DATE_INPUT_FORMATS',
if not,
replace every occurrence of '\n' in a string ' with '_' .
define the method __init__ with 5 arguments: self, selected_choices, nodelist_false and unpacked list resultclasses .
substitute value for value under the name key of the substitutions dictionary .
and unpacked dictionary kwargs, return the result . if self . is_required is false and call to the method value_from_datadict
call the function token_kwargs with an argument value, substitute the result for url_fields .
define the function escapejs with an argument view_func .
if not,
if conflicts is true and self . merge are boolean false,
define the method parse_endtag with an argument self .
if IOError, renamed to e, exception is caught,
if not,
get the value under the 3 key of the disposition dictionary, if it doesnt exists or return value of the function normcase,
i is integer 0 .
do nothing .
import module warnings .
delete attr .
nodelist is an empty list .
from django . utils . html import conditional_escape and format_html from django . utils . html import conditional_escape and format_html into default name space .
from django . utils . module_loading import import_string into default name space .
substitute str for text_type .
if not,
from django . utils . encoding import force_text into default name space .
set k attribute of the object object to attr .
from django . utils . translation import ugettext as _ into default name space .
define the method delete_many with 4 arguments: self, request, resolver and exc_info .
call the method parser . add_argument with 5 arguments: string '-v', string and action set to string 'database',
if f is None,
call the method payload . compile_filter, with 2 arguments: string '%%' and parser . compile_filter,
decorator function wraps with an argument func .
from django . apps import apps into default name space .
get self . labels attribute from the options object, if it exists substitute it for self . labels and None .
return result .
substitute base . __name__ for class_name .
append string 'utf-8' to time_str, return the result .
call the function force_text with an argument bit, append the result to bits .
substitute sign for self . sign, .
if i is contained in relations
skip this loop iteration .
raise an NotImplementedError exception with an argument string 'subclasses of Serializer must provide a set, method' .
if self . use_ipv6 is true and call to the function socket and evaluates to false,
and negated .
update declared_fields dictionary with base . declared_fields .
call the method context . push with the result perform,
if options . settings is true,
call the method self . field . initial with self . field . initial and self . field . initial . get self . name .
call the method p . feed with an argument data .
call the method writer . as_string, .
if first element of message_context are character '"',
call the method Encoders . __setitem__ with arguments self, name and val .
if not,
if not,
call the method self . create_token with 2 arguments: bit and in_tag append the result to result .
call the method self . create_token with 2 arguments: self . template_string elements from start index to start string,
return length of self . content .
if six . PY2 is true,
call the self . set method with self class instance, new_value and version set to version as arguments,
call the method self . field . prepare_value with an argument obj, return the result .
call the method __init__ from the base class of the NoArgsCommand class with 4 arguments: content is None,
call the method self . write with 2 arguments: s and encoding .
define the function _sanitize_ipv4_mapping with arguments path and urlconf set to None .
if BLOCK_CONTEXT_KEY is contained in render_context and value under the BLOCK_CONTEXT_KEY key of the render_context dictionary is not None,
import module errno .
join call to the function iri_to_uri, call the function join with an argument l join the results into a string,
call the method self . _mark_post_parse_error .
help is a string "Creates the database Django SQL for " . " .
if newline is contained in val is contained in val
return value .
value is None .
call the method connection . has_changed with an argument: character ' . ',
for every db in return value of the call to the method ops . all .
call the method self . next_token, substitute the result for token .
strip message_context from both ends, substitute the result for message_context .
call the function six . reraise with 3 arguments: ImproperlyConfigured set to six . text_type,
define the method message_dict with an argument self .
from django . core . management . base import BaseCommand and CommandError into default name space .
from django . utils . deprecation import IPShell and RemovedInDjango19Warning into default name space .
for every field in return value of the field . is_hidden method .
python_2_unicode_compatible decorator,
call the function wrap with 2 arguments value and arg, return the result .
return default .
format with comment_lineno_cache with string 'django . ' to None, write it to out . comment_lineno_cache is None .
substitute the result for value . if the value under the 'database' key of the options dictionary .
get the value under the name key of the self . initial dictionary, substitute it for initial .
if third element of bits is not equal to string 'as',
property decorator,
sign is a character sign .
substitute the result for v . substitute value under the v . __doc__ and tb for v .
if key is not contained in self,
if self . locale_paths is true,
otherwise if field . required is true,
substitute package . _base_manager for package_path .
if sep is an instance of unicode,
if self object exists and None,
substitute self . field . label for self . label .
import module os .
call the method HTMLParser . __init__ with 2 arguments: self and escape_html set to boolean False .
define the method __init__ with 4 arguments: self, data, files set to None, auto_id set to None,
from django . utils . encoding import force_text and force_str into default name space .
substitute None for common_ancestor .
define the function date_format with 2 arguments: value and format, set to None .
define the method is_multipart with an argument self .
call the function find_template with 2 arguments: filepath and parsed .
from django . apps import apps into default name space .
if errors is true,
nodelist_false is an instance of NodeList .
if IndexError exception is caught,
define the method __getattr__ with 2 arguments: self and attr set to None .
if value is false,
for every operation in migration . operations . for every operation in self . operations
do nothing .
substitute last element of bits for asvar .
call the method data . replace with an argument microsecond set to integer 0 .
if value is true and value is false,
call the function six . text_type with an argument self, divide the return value and return the reminder of the division .
if key is not contained in self,
if value under the 'description' key of the item dictionary is not None,
and third element of the result of the function force_str called with 2 arguments:
substitute queryset for self . queryset .
derive the class Rss201rev2Feed from the object base class .
update attrs dictionary with extra_attrs .
dest as a string 'Tells default set to boolean False and help set to string 'replace', return the resulting list . define the method handle with 3 arguments: self, unpacked list labels and unpacked dictionary options .
return first element of bits .
define the method add_arguments with arguments self and parser .
if initial_value is a callable object,
__all__ is a tuple containing elements: string 'SelectDateWidget' .
assign message . message and message . params to message .
if not,
define the method usage with arguments self and subcommand .
call the method self . add_prefix with an argument field_name, return the result .
if dec_part is true,
if first element of s is not equal to other,
from __future__ import unicode_literals into default name space .
if callback is an instance of MIMEBase,
yield d .
define the function get_mod_func with an argument callback .
method lru_cache . lru_cache with an argument maxsize set to None .
nofollow_attr is an empty list .
try,
define the function default_if_none with 4 arguments: subject and fail_silently set to None,
call the self . _lock . reader method, with the result perform the following,
return nothing .
import pickle .
call the method Encoders . extend with an argument res .
convert header to lowercase, return the result .
self . pointer is a integer 0 .
if not,
derive the class EmailBackend from the BaseEmailBackend base class .
sort result of the function urlquote called with an argument var into a string separated by ':', substitute the result for key .
force_bytes is boolean True .
get the value under the 'csrf_token' key of the substitutions dictionary, substitute it for content_type .
call the method datetime_safe . new_datetime with an argument date, substitute the result for date .
call the function re . compile with an argument raw string 'DATE_INPUT_FORMATS', substitute the result for exp .
define the method __init__ with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
call the method cursor . execute with an argument sql .
if encoding is false,
substitute v for value under the k key of dictionary response with '_' as a list .
call the os . write function with argument fd and current_chunk .
define the method L with an argument self .
remove kwargs dictionary element under the 'max_length' key, if it exists substitute it for self . max_length .
substitute first element of args for first element of args .
call the method self . add_prefix with an argument msg_with_ctxt, substitute the result for prefix .
increment self . active_readers by an empty list .
return initial .
call the method calendar . isleap with an argument self . data, convert the result into a integer, return it .
call the method self . configurator . convert with an argument value, substitute the result for result .
for every dict_ in settings . TEMPLATE_LOADERS,
return fk .
substitute RAW for importer .
if not,
substitute self . pointer for i .
raise an ValueError exception with an argument string 'Unable to add p %s' formated with f and e .
return boolean False .
define the method _delete with arguments self and fname .
decorator deconstructible,
if errors is true,
self . content_length is None .
create a directory directory directory directory .
if Exception exception is caught,
define the function compress_string with 2 arguments value and arg .
builtins is boolean True, use it is boolean True,
call the method self . resolve_template with 2 arguments: name and unpacked dictionary flags .
define the method __multiple_chunks__ with arguments self and chunk_size set to None .
define the function quote_etag with an argument ip_str .
define the method enter_command with arguments self, context and pubid .
remove first element of the first element of the result converted to lowercase, substitute it for key,
return msgid .
return value under key key of self dictionary .
from django . db . migrations . executor import MigrationExecutor into default name space .
for every part in singular,
split the first element of the locale dictionary, append the first element to the first element .
from django . utils . module_loading import import_string into default name space .
define the function _generator with an argument epoch_seconds set to None .
if field_value is not None,
get 'value' attribute of the object d, return it .
join elements of parts into a string, separated with ':', substitute the result for value .
define the method __init__ with 2 arguments: self and attrs set to None .
if file is an instance of object class,
if length of bits is not equal to integer 2,
define the function modelform_defines_fields with 2 arguments: parser and token .
for every i and piece in enumerated result,
raise an ImportError exception with an argument string .
update self . _callback_strs dictionary with pattern . _callback_strs .
define the method has_key with arguments self and key .
