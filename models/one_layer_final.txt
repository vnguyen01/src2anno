if e . connection_reset is false,
append filename to self . backout .
decorator function register . filter with an argument is_safe set to boolean True .
substitute value under the idx key of d dictionary for d .
call the function func with 2 arguments: unpacked list resolved_args and unpacked dictionary resultclasses .
if self . _leftover is true,
return self . _caches . caches .
do nothing .
call the method context_match . group with an argument integer 1, substitute the result for message_context .
from django . conf import settings into default name space .
help is a string "Prints a list containing the SQL of the current of the current of the given directory . ' .
for every migration in merge_migrations, call the method executor . mktime with an argument migration . name for every migration in merge_migrations,
define the method render with an argument self .
if length of words is greater than length,
if not,
if self . required is false,
call the method self . as_table, .
call the method inner . copy,
define the function ljust with 2 arguments text and memodict .
if app_config . models_module is None,
return _cached_filenames .
substitute namespaces for value under the language_code key of the self . _namespace_dict dictionary .
from django . utils . http import cookie_date into default name space .
do nothing .
derive the class Loader from the BaseLoader base class .
if not,
substitute '%s' in a tuple with 3 elements: strings table_name and string '%s .
where '%s' is replaced with self . id . define the method display with an argument self .
define the function convert_old_style_list with an argument list_ .
try,
dirs is an empty list .
define the method __init__ with 4 arguments: self, max_value set to None, min_value set to None,
if result is not None,
call the os . path . dirname function with filename as argument, substitute the result for dirname .
get the value under the 'indent' key of the options dictionary, substitute it for self . domain .
if self . instance . pk is not None,
join usage into a string, separated by newlines, return it .
for every k and v in the result,
call the method self . autocomplete with an argument contents .
substitute windll . media for base .
from django . utils import formats into default name space .
filesize_number_format with result of division of bytes by bytes,
call the function bytes with 2 arguments: i and i, return the result .
attrs is a string '<could %s, attrs for every form in return value of the function form . attrs called with 3 arguments: attrs,
shown is an empty set .
raise an exception .
for every node in result,
define the method __repr__ with an argument self .
call the method sys . stderr . write with an argument string 'field' . %s', where '%s' is replaced with e .
join dirpath and f into default name space .
call the function settings . is_overridden with argument string 'MANAGERS', if it evaluates to boolean True,
if key is contained in dict_,
call the function getargspec with an argument func, substitute the result for args and defaults, respectively .
if UnicodeDecodeError exception is caught,
call the function force_text with an argument value, substitute the result for compressed .
from django . utils . encoding import force_str into default name space .
sum sign and dec_part, return the result .
do nothing .
define the function static with an argument s .
call the method initial_form_count from the base class of the class BaseInlineFormSet, return the result .
substitute v for value under k key of self dictionary .
create the last element, elements of filename .
call the method match . end, substitute the result for new_path .
otherwise if first element of g equals a character "'",
return boolean True .
if ext is false and content_type is true,
close zfile close .
call the function get_urlconf with argv as an argument, substitute the result for __unicode__ .
substitute reason for self . _boundary .
define the method __init__ with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
if not,
define the method id_for_label with 2 arguments: self and id_ .
docsring
call the function re . compile with an argument raw string 'DATE_INPUT_FORMATS', substitute the result for __unicode__ .
define the method auto_id with an argument self .
call the method self . _update_errors with an argument f, return the result .
from django . forms . models import everything into default name space .
return new_value .
if self . _errors is None,
substitute safe for value under the 'initial' key of kwargs dictionary .
get the value under the self . status_code key of the libraries dictionary, if it exists substitute it for self . reason_phrase .
if call to the function response . has_header with string 'Cache-Control' as an argument returns boolean False,
convert item to a list and substitute it for self . cc .
return nothing .
if value under the 'verbosity' key of the options dictionary is greater than zero,
substitute input_data for self . settings_exception, .
call the method self . xml . startElement with 2 arguments: string 'field' and attrs .
from django . core import serializers into default name space .
call the function getInnerText with arguments addr and email_message . encoding,
replace '%s' in string with self . app_or_project, substitute it for prefix .
if '/' is contained in path and return value of the function path . find called with an argument string '\\' is contained in path,
with lock,
substitute name for self . name .
value under the best_doublecolon_start key of the hextets dictionary is an empty list .
if not,
call the function logging_config_func with an argument quoted_url .
if not,
call the __init__ method from the base class of the class ModelMultipleChoiceField, with 2 arguments: unpacked list args and unpacked dictionary kwargs .
instance . keyOrder is an empty list .
call the method self . base_url with an argument name, use the result as an argument for the call to the function _get_timezone_name, return the result .
call the method dig1 . execute with statement as an argument .
if value is true,
substitute the result for message . call the function ungettext_lazy with 3 arguments: string 'Ensure this value has at least %(limit_value)d
if settings . TEMPLATE_DEBUG is true,
from django . utils . _os import safe_join into default name space .
get value under the DEFAULT_CACHE_ALIAS key of the caches dictionary, if it exists return it, otherwise return an empty list .
import module sys .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
call the method logger . removeHandler with an argument handler .
convert self to a string, return it .
join elements of output into a string, separated by newline characters, use it as an argument for the call to the function mark_safe, return the result .
if smtplib . tm_isdst is true,
call the method parser . add_argument with 5 arguments: string 'args', action set to string 'store_true',
if not,
substitute chr for self . _cached_loaders .
call the method parser . add_argument with 5 arguments: string '--noinput', action set to string 'store_false',
if not,
common_prefix is None .
if not,
derive the class override from the base class ChoiceField class .
substitute boundary for end .
substitute greater element integer 0 and end for last .
for every widget in self . locale_paths,
substitute value for self . value .
return output .
call the timezone . now function, substitute the result for now .
substitute the length of the result for digit .
if err_log is true,
try,
if opname is not contained in app_list_value,
call the method set with an argument app_labels substitute the result for app_labels .
return an instance of JsLexer class, created with 3 arguments: mcs, nodelist_false and unpacked list values .
define the method run_from_argv with 2 arguments: self and memodict .
if m is false,
return e .
define the method to_python with arguments self and data .
call the function six . iteritems with an argument base . base_fields convert the result to a list, append fields to it, substitute it for fields .
default_error_messages is an dictionary with 3 entries: return value of the function _ called with an argument,
if not,
if run_syncdb and executor . loader is true,
call the method _construct_form with argument val, from the base class of the class SimpleCookie .
call the method self . remove_potfiles .
call the method logging . Handler with an argument boolean True .
derive the class SafeBytes, from bytes and SafeData base classes .
regex regex regex from regex regex regex and substitute the result for regex .
if not,
define the method _get_scheme with arguments self and filename .
if ch is true,
derive the class TemplateCommand from the MIMEMixin and Popen base class .
define the method items with an argument self .
use the result as an argument for the call to the function mark_safe,
call the method BaseCache . __init__ with arguments self, unpacked list args and unpacked dictionary kwargs .
return boolean False .
call the function _ with 2 arguments: return value of the function _ called with an argument bf_errors,
join elements of output into a string, return it .
substitute chr for ULONG_PTR .
raise an CommandError exception with an argument string "%r values of values of '%s' replaced with self . leave_locale_alone
derive the class Parser form the base class object .
if y and d are both true,
if self . settings_exception is not None,
call the function params . get with 3 arguments: key,
return usage .
call the os . path . dirname function with argument fixture_name, substitute the result for fixture_dirs .
call the method fp . getvalue, return the result .
if regex is not None,
define the method __str__ with an argument self .
substitute varlist for self . conditions_nodelists .
if self . merge and conflicts are both true,
call the method self . build_attrs with an argument attrs, substitute the result for final_attrs .
basedirs is a list with elements of the return value of the function os . path . join called with 2 arguments: return value of the function,
substitute the value under the KEY key of the substitutions dictionary for media_attrs .
content . setter decorator,
substitute varlist for self . _cached_loaders .
otherwise if o is an instance of decimal . Decimal class,
substitute META for self . _meta .
derive the class TemplateLiteral from the object base class .
import module re .
from django . utils . encoding import smart_text and force_text into default name space .
return boolean False .
if param is not contained in params and compile_function is None,
define the method extend_nodelist with 3 arguments: self, nodelist, node and token .
define the function upath with an argument path .
from django . utils import six into default name space .
from __future__ import unicode_literals into default name space .
substitute the result for final_attrs . if self . use_ipv6 is an empty string .
if f . name is contained in cleaned_data
child_nodelists is a tuple with 2 elements: strings child_nodelists and 'nodelist_false' .
if self . _pk_field equals self . _pk_field equals to self . fk .
call the method __init__ from the base class of the class BaseInlineFormSet, with 3 arguments: data, files and prefix .
define the method handle_fk_field with arguments self and message .
substitute value for value under the field . attname key of the data dictionary .
define the method __init__ with 2 arguments: self and language .
define the method __init__ with 2 arguments: self and file .
try,
call the method six . text_type with an argument bf append the result to hidden_fields .
derive the class SerializerDoesNotExist from the KeyError base class .
call the function time_format with 2 arguments: value and arg, return the result .
assign the result to the sql and param_dict, respectively . assign the result to the sql and sql respectively . assign the result to the sql and sql respectively . assign the result to the sql and param_dict, respectively . assign the result to the sql and sql respectively . assign the result to the sql and connection . assign the result to the sql and connection . assign the result to the sql and connection . assign the result to the sql and connection . assign the result to the sql and connection . assign the result to the sql and connection . __dict__ . call the method connection . introspection . get_relations with tables as argument, assign the result to the sql and connection .
if new_name starts with a string '_',
call the method m . index with an argument string 'DATE_INPUT_FORMATS', convert the result to lowercase, substitute it for month .
get the value under the connection . loader . loader . loader . loader . loader . migrated_apps, substitute the result for slots .
define the method getvalue with an argument self .
call the method parser . add_argument with 3 arguments: string '--database', default set to DEFAULT_DB_ALIAS,
if PY3 is true,
if not,
get the value under the lang_code key of the substitutions dictionary .
if ValueError or TypeError exceptions are caught,
return self . new_objects .
if not,
substitute value under the x key of the self . namespaces dictionary for self . namespaces .
define the method __init__ with 2 arguments: self and message .
define the method is_ajax with an argument self .
substitute list_ for lexer_class and parser_class .
call the method parser . add_argument with 5 arguments: string 'args', string '-e', action set to string 'store_true',
substitute value under the name key of the toks dictionary for tok .
cache_timeout is integer 0 .
call the method connection . cursor, substitute the result for cursor .
call the method self . _reset_dicts with an argument dict_,
if ValueError exception is caught,
if s is not an instance of the object six . string_types class,
define the function slugify with 2 arguments value and arg .
if value is true, return boolean True, otherwise return boolean False .
root dictionary root under the root key of the root dictionary .
subtract integer 3 to the end, substitute the result for get_method_globals .
do nothing .
define the method __nonzero__ with argument self .
call the method self . style . NOTICE with an argument:
append tuple containing elements of self . program to a list,
raise a SerializerDoesNotExist exception with an argument format .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
define the method __init__ with an argument self .
call the method d . rsplit with 3 arguments: exp
return func .
s is an instance of StringIO class .
derive the class DecimalField from the object base class .
call the method call the function warnings . warn with an argument string "AppCommand . management can't number is not None,
try,
substitute match . __path__ for name .
import module warnings .
if self . initial_forms is false,
raise an TemplateSyntaxError exception with an argument string "'%s' received too contain arguments" .
define the method __init__ with 4 arguments: self, stream and typed, respectively .
if endbmatch is true,
if self has an 'error_dict' attribute,
define the method __iter__ with an argument self .
call the BaseConverter function with 5 arguments: value, an empty string, substitute the result for scheme .
substitute length of self . loopvars for num_loopvars .
call the function ungettext with 3 arguments:
call the method self . create_table with 2 arguments: string 'field' and data, return the result .
call the method t . lineno with an argument, t . contents, substitute the result for get_method_defaults .
join elements of '\\' into a string, return it .
define the method list with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
if csrf_token is true,
define the method push with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
try,
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
call the method self . auto_id with 3 arguments: form, self . auto_id and prefix set to boolean True,
get 'value' attribute of the _prefixes, object, if it is None,
call the function walk_to_end with 2 arguments: ch and pattern_iter .
help is a string "Prints natural files to files . " .
try,
if not,
for every p in return value of the self . ignore_patterns method,
join self . fed into a string, return it .
define the method define with an argument self .
define the method clear with argument self .
finally perform,
set opname attribute of the base object .
define the method __iter__ with an argument self .
call the function warnings . warn with an argument string "No fixture fixture found for found . ",
call the method self . get_resolved_arguments with an argument msg, substitute it for msg .
if cache is an instance of BaseDatabaseCache class,
call the function re . sub with 3 arguments: string 'field' and value under the 1 key of the raw dictionary,
return string 'https' .
get name attribute from the attribute object, use it as the name of the attribute to get from other object,
raise an ValueError exception with an argument e .
call the method validators . get_migration with 2 arguments: string 'NFC' and unpack_ipv4 set to integer 0,
return boolean False .
return result .
call the function os . path . splitext with an argument base .
define the method __init__ with 2 arguments: self and conditions_nodelists .
try,
append check to self . registered_checks .
if not,
call the function Group with 2 arguments: string "No formated with param and None, append it to result .
call the method self . _setup .
call the method handler . endElement with an argument string 'author' .
call the method logger . warning with 3 arguments: string "django . utils . %s' and request . path, respectively .
join c into a string, return it .
define the method tell with an argument self .
define the method __init__ with 2 arguments: self and options set to None .
call the method self . create_table with 2 arguments: potfile and locale, .
if self . is_localized is true,
define the method add_arguments with 2 arguments self and parser .
sum integer 60, multiply the result by one,
if length of version equals integer 6, raise an error .
define the method __getitem__ with 2 arguments: self and i .
yield string "# * Remove %r with one field . " as the result .
define the method created_time with arguments self and name .
define the method __deepcopy__ with 2 arguments: self and memo .
if not,
with self . mutex perform,
return an instance of ugettext_lazy class with an argument value .
try,
do nothing .
docsring
replace every occurrence of '&' in value for every occurrence in return value of the method self . replace
call the method self . _isdst with an argument dt, if it evaluates to true,
return self . token .
return output .
for every format in self . input_formats .
remove config dictionary element under 'handlers' key, if it exists substitute it for value under '()' key of config dictionary .
call the method copy . deepcopy with an argument self . widgets, substitute the result for obj . widgets .
define the function clear_url_caches .
substitute library for ngettext_lazy .
return a tuple with 2 elements: self . func and self . kwargs .
call the function force_str with an argument minutes .
define the method clean with an argument self .
get 'value' attribute of the _active object, if it exists substitute it for self . _lib .
derive the class DecimalField from the HttpResponseRedirectBase base class .
if TypeError or ValueError exceptions are caught,
define the method tzname with 2 arguments: self and dt .
if value under the 'pubdate' key of the item dictionary is not None,
if ImportError exception is caught,
if pattern equals a tuple with an element host and return value of the method pattern . starts with an argument host evaluates to true,
return cached .
raise and exception InvalidCacheBackendError with string "Could not find backend %s", %s", where '%s' is replaced with backend and e .
return boolean False .
derive the class _LazyModule from the base class types .
attachment is an instance of a InteractiveMigrationQuestioner class, created with 3 arguments: content and encoding .
if locations is true,
open handle file in read mode, substitute the result for file .
break from the loop execution .
otherwise if current attribute of current is true,
join self . dirpath, self . dirpath and self . file into a file path,
call the method parser . add_arguments with an argument parser .
while field . rel is not None,
call the method self . path with argument name, substitute the result for full_path .
try,
call the function json . dumps use the result as an argument for the call to the json . dumps function, return the result .
call the method parser . add_argument with 2 arguments: string 'name' and help set to string ' . ',
join root and f into a file path, substitute it for f .
substitute the result for current_expires . call the function trim_url with an argument string 'DATE_INPUT_FORMATS', substitute the result for current_expires .
yield value under key key of self dictionary .
call the function _ with an argument new_class, assign the result to _ and parser_class .
call the method field . getAttribute with an argument obj, substitute the result for value under the field . name key of the self . _current dictionary .
try,
call the method resolver . resolve with an argument request, substitute the result for value .
import module datetime .
return an empty string .
call the function get_language,
call the method m . group with 5 arguments: integer 1 and integer 1, assign the result to result and rest, respectively .
creation_counter is an integer 0 .
regex is a raw string regex . regex,
define the method total_form_count with an argument self .
from django . template import loader and Context into default name space .
call the method connection . introspection . table_names substitute the result for tables .
if t . token_type does not EndToken,
if v is not None, return boolean False, otherwise return boolean False . call the function v with an argument v set to an empty string,
define the method clear with argument self .
RemovedInDjango19Warning and RemovedInDjango19Warning . derive class RemovedInDjango19Warning from the _LazyDescr base class .
derive the class QueryDict from the base class MultiValueDict .
return boolean False .
append string '-' to digits .
raise an TemplateSyntaxError exception with an argument string "Invalid must %r", where '%s' is replaced with filter_name .
return an empty string .
from django . utils import lru_cache into default name space .
define the method open with argument self .
call the function check_for_language with an argument x, substitute the result for check_for_language .
for every form in valid_forms,
if http_cookies . CookieError exception is caught,
return boolean False .
call the method d . groupdict, substitute the result for httpd_cls .
define the method delete with arguments self and name .
do nothing .
from functools import total_ordering into default name space .
substitute the result for value under the NEXT key of the kwargs dictionary converted to an integer,
return self . urlconf_module .
substitute choices for self . choices .
incomment is boolean False .
call the function translation with an argument settings . LANGUAGE_CODE, substitute the result for _default .
define the method add_arguments with 2 arguments self and parser .
define the method end_index with an argument self .
get the integer representation of the integer 0 to the integer 0 .
finally perform,
if i is greater than or equal to length of subject,
decorator function register . filter with an argument is_safe set to boolean True .
return result .
call the method f . save_form_data with 2 arguments: instance and value under the f . name key of cleaned_data dictionary .
call the method apps . get_app_config with an argument app_label, substitute the result for app_config .
call the method parser . add_argument with 5 arguments: string '--noinput', action set to string 'store_false',
call the method date . now with an argument context_instance, use the result as an argument for the call to the function time . now .
if KeyError exception is caught,
define the method __add__ with 2 arguments: self and context .
call the function six . reraise with 3 arguments: DeserializationError return value of the function six . reraise called with an argument e,
define the method has_key with self class instance, key and version defaulting to None as arguments .
call the method context . render_context . push .
increment weight by integer 2 .
return result .
if self . verbosity is greater or equal to integer 2,
raise an CommandError exception with an argument msg .
self . bcc is an empty list .
substitute self . choices for self . widget . choices .
if six . PY2 is true,
from django . apps import apps into default name space .
lbp is an integer 0 .
MONTHS is a tuple with 2 elements: strings
raise an exception .
call the method date . year with 3 arguments: d . year, d . month and d . day .
_wrapped is None .
from __future__ import unicode_literals into default name space .
raise an CommandError exception with an argument string "%r conflicts with the name of the name of the template module . ",
finally perform,
call the method self . _cache . incr with key and delta as arguments, return the result .
if value is not an instance of SafeData,
call the method add_arguments from the base class of the Command class with an argument parser .
decorator function register . filter with an argument is_safe set to boolean False .
substitute BOOL for opfunc . _moved_attributes .
call the method __init__ from the base class of the class NullBooleanSelect with 2 arguments: attrs and choices,
call the method six . text_type with encoding and errors as the arguments, return the result .
for every key and value under the key key of self dictionary converted to an integer for every key and value in self class .
if not,
substitute func for value under the 'block' key of the self . __dict__ dictionary .
substitute the result for nodelist . call the method parser . parse with an argument tuple with an element tuple with an element string nodelist, substitute the result for nodelist .
if m is true,
substitute complain for ngettext_lazy .
if not,
define the method z with an argument self .
define the method __new__ with 3 arguments: cls, unpacked list args and unpacked dictionary kwargs .
try,
call the method match . group with an argument localedir, substitute the result for filter_name .
import module django . core . checks . . .
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
if lookup_view is contained in self . _max_entries,
call the method stream . unget with an argument chunk .
for every key and v in return value of the method self . var_name called with 2 arguments:
write the result to self . stdout . call the method self . stdout . write with an argument string 'field' .
call the method self . compress with an argument list, return the result .
raise an AttributeError exception with an argument string "'%s' object has no no attribute . " .
widget is an instance of HiddenInput class
if tags is true and if tags is true and if tags is false,
call the function re . compile with an argument raw string 'DATE_INPUT_FORMATS', substitute the result for input_format .
define the function constant_time_compare with 3 arguments: singular, plural and number set to None .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
call the function ungettext with 3 arguments: singular, plural and number, substitute the result for result .
if not,
convert value into an integer and return it .
increment num by self . _cull_frequency .
call the method self . convert with 3 arguments: i, self . decimal_digits self . decimal_digits and character self . digits, substitute the result for neg and value, respectively .
if self . asvar is true,
call the function local, substitute the result for simple_url_re .
define the method __init__ with 2 arguments: self and filter_expression .
widget . is_localized is boolean True .
_mtimes is an string _mtimes .
import module mimetypes .
define the method to_python with arguments self and value .
if file_name is an instance of Template class,
if num_loopvars is lesser than the result of the function timedelta called with an argument final_attrs,
week_number is integer 1 .
raise an InvalidTemplateLibrary exception with an argument string "%r doesn't %r '%s': %s", where '%s' is replaced with taglib_module and e .
BLOCK_CONTEXT_KEY is a string 'alternative' .
self . timeout is timeout .
for every path in return value of the function,
from django . utils . translation import ugettext_lazy and ugettext as _ into default name space .
where '%s' is replaced with result of the method self . msg,
define the method _construct_form with 5 arguments: self, key, value, salt set to an empty string,
call the function getInnerText with 3 arguments: strings
if lang is None,
if file has an attribute 'process_view',
call the method parser . add_argument with 5 arguments: string 'args', string '-e', action set to string 'store_true',
raise an exception .
do nothing .
call the method handler . addQuickElement with 2 arguments: string 'title' and value under the 'id' key of the self . feed dictionary .
derive the class Truncator, from the DefusedXmlException base class .
call the function force_text with an argument self . value .
return html .
define the method read with an argument self .
call the function allow_lazy with 2 arguments: _string_concat and six . text_type, substitute the result for get_method_globals .
remove the entry under the 'QUERY_STRING' key of the attrs dictionary, if it exists substitute it for formfield_callback if not formfield_callback is None .
get config dictionary element under 'handlers' key of config dictionary,
get the value under the 'verbosity' key of the options dictionary, substitute it for self . verbosity .
define the method next_token with an argument self .
substitute str for reloader .
return self . parent_instance .
define the method delete with self class instance, key and version defaulting to None as arguments .
otherwise if name equals a string 'content-disposition',
import module sys .
call the method self . xml . endElement with an argument string 'object' .
if OSError, or AttributeError exceptions are caught,
substitute string '0' for smart_str .
define the method __iter__ with an argument self .
substitute self . _encoding for encoding .
output_transaction is boolean True .
try,
if not,
substitute the result for rest key of the rest dictionary, substitute the result for rest .
if app_output is true,
increment j by integer 1, substitute the result for i .
if not,
skip this loop iteration .
if not self . port is an empty string .
if _active has an attribute "value",
if not,
if terminal_char is not equal to string 'as',
request . resolver_match is an empty string .
return value .
call the function re . compile with an argument raw string 'DATE_INPUT_FORMATS', substitute the result for get_method_self .
call the method self . __dispatch with 3 arguments:
from django . core . management import call_command into default name space .
raise an ValueError exception with an argument string "'%s . %s' . ", where '%s' is replaced with,
if not,
raise an ValidationError with 2 arguments: value under the 'required' key of the self . error_messages dictionary and code set to 'required' .
has_bz2 is an empty string .
define the method create_variable_node with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
define the method __repr__ with an argument self .
property decorator,
substitute second element of elt for param .
if ValueError exception is caught,
get the value under the key key of the self . queryset dictionary, substitute it for value .
substitute link for value under the NEXT key of the last dictionary .
define the method add with 5 arguments, self class instance, key, value, timeout set to DEFAULT_TIMEOUT and version set to None .
call the __init__ method from the base class of the EmailBackend class with 2 arguments: unpacked list args and unpacked dictionary kwargs .
append hextet to new_ip .
import module cgi as importlib_find .
call the method lookups . appendlist with 3 arguments: pattern . name and pattern . default_args .
define the function ungettext_lazy with 3 arguments: singular, plural and number set to None .
define the method is_valid with an argument self .
if name is not false raise an error with argument string "The name is not exist to be name .
append path to self . _js .
if IOError exception is caught,
from __future__ import unicode_literals into default name space .
call the method parser . add_argument with 3 arguments: string 'args', string '-e', default set to None, dest set to string 'extensions',
if the result is true,
call the method gettext_module . find with 2 arguments: string 'django' path and a list containing an empty string,
call the method zbuf . format with an argument format_string, return the result .
call the method self . as_table, return the result .
call the method f . close .
define the method __init__ with 2 arguments: self and func .
from django . core . management . base import AppCommand into default name space .
call the method bf . attrgetter with an argument label and an empty string .
from django . core . management . base import BaseCommand and CommandError into default name space .
if not,
substitute SelectMultiple for widget .
if self . _request_middleware is None,
if only_initial is false,
lang is None .
return value .
return obj .
substitute pubid for self . pubid .
raise an MultiPartParserError with 2 arguments: return value of the function join_tokens, called with an argument boundary .
call the method handler . endElement with 2 arguments: string 'author' and an empty string .
if value is None and attr is contained in declared_fields
otherwise if last element of args equals a string 'parsed',
self . _cached_loaders is an empty list .
call the method __init__ from the base class of the class CheckboxChoiceInput with 2 arguments: unpacked list args and unpacked dictionary kwargs .
for every k and v in return value of the function six . iteritems called with an argument fields,
make a directory top_dir .
import module signal .
define the method add_fields with 3 arguments: self, form and index .
substitute the tuple with 2 elements: None and empty tuple with 2 elements: None and empty tuple .
property decorator,
if not,
define the function find_command with 3 arguments: mcs, set to input_date_formats,
raise an ValidationError with 2 arguments: value under the 'required' key of the self . error_messages dictionary and code set to 'required' .
derive the class FirstOfNode from Node base class .
define the method copy with an argument self .
substitute self . default_timeout for self . content .
return an empty string .
nodelist is boolean True .
if not,
if i is true,
replace every occurrence of '\\' in return value of the function force_text with 2 arguments: string '\\' and template_dirs, replace every occurrence of '\\' in the result,
if fields is not None,
if ValueError or TypeError exceptions are caught,
iterator is an instance of MigrationWriter class, created with 2 arguments: sub_stream and doc .
ret_ip is an empty list .
call the function force_text with an argument value, call the function force_text with an argument value, substitute the result for final_attrs .
use the result as an argument for the call to the function datetime . fromtimestamp, return the result . define the method modified_time with arguments self and name .
derive the class Http404 from the Exception base class .
plural is an empty list .
return instance .
if not,
if callback is an instance of types . time,
substitute force_bytes for force_str .
derive the class IfNode from list base class .
if min_num is not None,
derive the class URLField from the SyndicationFeed base class .
if not,
define the method as_text with an argument self .
inplural is boolean False .
join p into a file path, substitute it for f .
define the method as_text with an argument self .
assign the result to source and display_name . source . assign the result to source and display_name .
import module sys .
get the value under the 'verbosity' key of the options dictionary, if it exists substitute it for self . merge .
raise an CommandError exception with an argument string "You must should at least one one app .
if self . is_bound is true,
convert self . _regex_validator into a boolean, return it .
if obj is an instance of models . signals class,
raise an BadSignature exception with an argument string "'%s . does not does not exist, where '%s' is replaced with subject .
import module os .
if length of empty_label is lesser than length of data,
if field equals NON_FIELD_ERRORS and opts . error_messages is contained in opts . error_messages
define the function clear_url_caches .
define the method __init__ with 2 arguments: self and callback .
if only_initial is false,
define the method recipients with 2 arguments: self and other .
if self . verbosity is greater or equal to integer 1,
otherwise if pluralmatch is true,
if not,
if path is not contained in self . _namespace_dict,
derive the class BaseModelForm from the collections base class .
define the function parse_color_setting with 2 arguments value and arg set to None .
self . translate is boolean True .
from django . utils . deconstruct import deconstructible into default name space .
if confirm equals a string 'yes'
call the function avoid_wrapping with an argument ugettext use the result as an argument for the call to the avoid_wrapping function,
substitute greater element of the result for total_forms .
call the function force_text with an argument initial_value and return value of the function force_text,
get the value under the 'database' key of the options dictionary, use it as the key to get the value from the connections dictionary, substitute the result for connection .
substitute stream for self . _stream .
import module os .
append character '/' to it, substitute the result for display_url .
call the method field_stream . read, substitute the result for content .
for every cat in value under the 'categories' key of the item dictionary . for every cat in value under the 'categories' key of the item dictionary .
call the ops . quote_name method with argument self . _table on the object under the db key of connections dictionary, substitute the result for table .
substitute translation for translation . _catalog .
if not,
substitute last element of bits for DEFAULT_LOCALE_ENCODING .
return self . file . size .
convert self . name to boolean, return it .
if six . PY3 is true,
define the method validate with arguments self and value .
define the function smart_urlquote with 2 arguments value and timezone set to None .
call the method self . can_write . release .
derive the class SimpleLazyObject from Node base class .
call the method parser . add_argument with 5 arguments: string '--noinput', action set to string 'store_true',
call the BaseConverter function with string 'pk' as argument, substitute the result for initial_value .
changed is boolean True .
yield ch and boolean False .
call the method sys . get_version . write with an argument django . checks .
for every option in _urllib_request_moved_attributes,
substitute cmd for self . cmd .
return nothing .
try,
call the method t . nud with an argument self, substitute the result for left .
if not,
call the method parser . add_argument with 3 arguments: string '--noinput', string '-e',
new_result is an empty list .
substitute warning for self . warning .
get the value under the 'liveserver' key of the options dictionary and substitute it for value under the 'max_digits' key of the options dictionary .
read data from buf, yield the result .
call the urlsplit with an argument location, substitute the result for bits .
derive the class Deserializer from the six . Iterator base class .
call the method self . fetch_command with 3 arguments: length, truncate, text, truncate_len and truncate_len .
call the function datetime . time with an argument unpacked dictionary kw, return the result .
substitute path for path .
call the method self . validate_key with argument key .
call the method self . configure_custom with an argument context, substitute the result for value .
if UnicodeError exception is caught,
if self . can_order is false,
return result .
return self . content .
from decimal import Decimal and Context into default name space .
call the method field_stream . get_cookie_signer with an argument salt, substitute the result for value .
define the function compile_func with 2 arguments: parser and token .
substitute RemovedInDjango19Warning for ngettext_lazy .
decorator deconstructible,
call the method self . stdout . write with an argument string " No %s\n" . ",
if not,
docsring
if event starts with ':',
define the function server_bind with an argument dirname .
define the function sanitize_separators with 2 arguments: x and string .
for every tok in custom_sql,
define the method __init__ with 2 arguments: self and config .
if not,
d is a string d,
for every field_name in self . fields,
raise an ValueError with an argument string "'%s . %s' formated with s .
define the method __getinitargs__ with an argument self .
for every obj in self . queryset . all method self . queryset . all .
from django . utils import six into default name space .
define the method __init__ with 2 arguments: self and nodetype .
define the function _check_test_runner with an argument kwargs dictionary .
for every attr in _moved_attributes,
skip this loop iteration .
if AttributeError exception is caught,
append list containing string '--no-wrap' to self . msguniq_options .
substitute connection for self . connection .
help is a string "Prints an existing migrations . " .
call the function flatten_result with 3 arguments: form, instance, fields and exclude set to None .
call the method handler . addQuickElement with 2 arguments: string 'title' and translation_function .
if not,
property decorator,
if not,
return retval .
daemonize is integer 1 .
call the method self . file . close .
append string 'django . core . __name__ .
derive the class override from the LocaleRegexProvider base class .
try,
call the method value . encode with an argument charset, substitute the result for value .
define the function include_is_allowed with 2 arguments: parser and token .
import module warnings .
if self . verbosity is greater than integer 0,
sql_files is an empty list .
if response is None,
return nothing .
call the method addr . split with arguments character '@' and integer 1, substitute the result for int_part and domain .
call the function get_language, substitute the result for language_code .
append ' . ' to it, substitute the result for simple_url_re .
if as_ is contained in seen_data,
remove config dictionary element under 'level' key, if it exists substitute it for formatter .
if m is None,
where '%s' is replaced with result of the function,
return an instance of a RegexValidator class, created with 3 arguments: return value of the function _ called with an argument string,
opts . fields is None .
call the function force_str with rawdata as argument, substitute it for rawdata .
try,
derive the class ChunkIter from the dict base class .
write string " No %s\n" with self . stdout .
if last equals integer 3,
if idstring is None,
value under the 'feed_copyright' key of the self . base_fields dictionary is an instance of IntegerField class, created with an argument widget .
parsed is boolean False .
raise an TemplateSyntaxError exception with an argument string "'%s' received received (%s) argument arguments" .
value under the ORDERING_FIELD_NAME key of the form . fields dictionary,
yield buffer_ .
define the method load_template with 2 arguments: self and config .
call the function re . compile with an argument raw string 'DATE_INPUT_FORMATS', substitute the result for absolute_max .
import module tempfile .
call the method command . create_parser with 2 arguments: an empty string and name, substitute the result for parser .
call the function warnings . warn with 2 arguments: string "django . utils . %s' has deprecated and will be removed in Django 1 . 9 . ",
substitute type . __call__ for __call__ .
from pprint import pformat into default name space .
call the function force_bytes with 2 arguments: safe and self . encoding, substitute the result for safe .
call the method self . configure_custom with an argument config, substitute the result for result .
if self . timeout is not None,
define the function get_language .
import module sys .
if LookupError exception is caught,
otherwise if o is an instance of datetime . time,
help is a string "Prints the database database . " .
if value under the 'author_email' key of the self . feed dictionary is not None,
raise an ValidationError with 2 arguments: value under the 'required' key of the self . error_messages dictionary,
skip this loop iteration .
from PIL import defaultdict into default name space .
from lib2to3 . util import token into default name space .
try,
extra_classes is an empty set .
if unpack_ipv4 is true,
define the function npgettext with 2 arguments: url and date .
return an empty list .
define the method _close_files with an argument self .
substitute the result for output . call the function localize with 2 arguments: output and use_l10n set to context . use_l10n .
for every app_config in reversed list return value of the method apps . get_app_configs,
call the method handler . addQuickElement with 2 arguments: string 'title' and value under the 'feed_copyright' key of the self . feed dictionary .
call the
if content_length is greater than settings . CACHES,
substitute arg converted into an integer for length .
call the function _explode_shorthand_ip_string with an argument ip_str, substitute the result for ip_str .
from lib2to3 . mime import TextInput, and Node into default name space .
return the result of the function force_str with an argument self . __class__ . __name__,
call the method x . index with an argument localedir, on the result to x .
call the method lookups . appendlist with 3 arguments: name, tuple containing 2 elements: '<' and tuple containing 3 entries:
if Model . SMTPException exception is caught,
if not,
call the method parser . add_argument with 5 arguments: string '--locale', action set to string 'store_true',
call the method parser . add_argument with 4 arguments: string 'args', metavar set to string 'extensions',
raise an VariableDoesNotExist exception with an argument string "'%s . lookup for key and bit in the result,
if length of bits is not equal to integer 2,
substitute cls for obj . __class__ .
self . error_list is an empty list .
define the method _dec with an argument func .
get the value under the 'filename' key of the options dictionary, if it is false,
call the function shutil . start_new_thread with 2 arguments: string 'ascii' and new_path .
import module logging .
call the method next with an argument self . _wrapped, substitute the result for output .
if length of bits is not equal to integer 2,
try,
import module warnings .
call the function ip_str . rsplit with 2 arguments: ':', and integer 1 and second element of the return value of the ip_str .
define the method get_unique_error_message with 2 arguments: self and field_name .
derive the class RequestContext from the object base class .
call the function local, substitute the result for DNS_NAME .
substitute path and recursive for self . path and self . regex respectively .
derive the class datetime from the _LazyDescr base class .
append f . name to the end .
otherwise if ch equals a string '(',
return a list containing 2 elements: an empty string and an empty list .
if value is an instance of str,
if field is contained in self . errors, return boolean True, otherwise return boolean False .
call the function _generate_cache_header_key with arguments key_prefix and request, substitute the result for cache_key .
call the method self . _update_errors with an argument handler .
do nothing .
from django . core . serializers . base import DeserializationError into default name space .
define the method get_many with 4 arguments: self, value, charset and subtype set to boolean False .
call the method p . RLock, substitute the result for output and errors .
raise an NotImplementedError exception with argument string 'subclasses of Storage must provide a provide method' .
from django . conf import settings into default name space .
try,
call the method call the function warnings . warn with string "The "The module has been Django arguments . " .
return saved_instances .
call the method self . _cache . set with arguments key, value and self . get_backend_timeout
if parts is contained in self . _namespace_dict,
if not,
define the method __init__ with an argument self .
otherwise if value under the 'socket' key of the options dictionary is true and values under the 'socket' key of the options dictionary and values under the 'socket' key of the options dictionary is false and values under the 'socket' key of the options dictionary .
for every result and params in the result,
get the value under the old_method_name key of the base . __dict__ dictionary, substitute it for clear_checkbox_label .
append length of "'" to start .
if length of fks_to_parent is integer 1,
if localized_fields is not None,
call the function lazy_number with an argument format_string, return the result .
if not,
call the method calendar . start_new_thread with an argument result .
try,
increment self . loaded_object_count by one .
call the method self . data . month use the result as an argument for the call to the method self . data . month .
if other is contained in self . children, return boolean True, otherwise return boolean False .
from django . utils . encoding import smart_text into default name space .
close zfile close .
if default is not EndToken,
define the method handle with 3 arguments: self, app_or_project and target, respectively .
split s by one, substitute the result for t .
substitute second element of p_pattern for p_pattern .
substitute instance . _meta for opts .
do nothing .
get the value under the 'indent' key of the options dictionary, if it exists substitute it for initial_value, if not,
if not,
if not,
import module warnings .
define the function remove_tags with an argument date .
define the method r with an argument self .
return None .
append rel_model to deps .
call the function re . compile with 2 arguments: raw string '^/' and re . IGNORECASE,
if first and second element of sys . version_info equals integer 3,
if extra_context is false,
call the method self . _isdst with an argument dt, if it evaluates to true,
call the function getargspec with an argument current .
if last equals integer 1 .
append string '</select>' to output .
if response . streaming is false,
substitute the result for value under the 'initial' key of the substitutions dictionary .
define the method to_python with arguments self and value .
return input_val .
call the method field . getAttribute substitute the result for hidden_widget .
if ImportError exception is caught,
return last element of list_ .
_empty_value is None .
import module os .
if self . to_field_name is true,
return nothing .
if UnicodeError exception is caught,
define the method render with 4 arguments: self, name, value and attrs set to None .
default_error_messages is an dictionary with 3 entries: return value of the function _ called with an argument string,
define the method next with an argument self .
call the method __init__ from the base class of the class BaseModelFormSet, with arguments: takes_context, args, kwargs and kwargs .
substitute value under the bit key of the substitutions dictionary for orig .
substitute settings . DEFAULT_CHARSET for self . _cached_loaders .
define the method _iterkeys with an argument self .
raise an CommandError exception with an argument string 'Unknown '%s' in %s to '%s . ", where '%s' is replaced with url and e .
append plan_node to title .
define the method id_for_label with an argument self .
match regular expression with rawdata string match and string match . match . match .
define the method __repr__ with an argument self .
call the method readline . process_response with an argument nodetype, use the result as an argument for the call to the method readline . close,
define the method load_template with 4 arguments: self, name, value, base, base, pubid and notation_name .
if required is true and initial is not None,
call the method self . _set with key, pickled and timeout as arguments .
define the method bound_data with arguments self and name .
call the method __get__ from the base class of the class FilePathField, with 2 arguments: instance and default_list, return the result .
if is_relation,
if os . name equals string 'nt',
define the method __delattr__ with 3 arguments: self, name and content .
model_list is an empty list .
if ValueError, or ValueError exceptions are caught,
call the function mark_safe with an argument word, substitute the result for i-th element of words .
import module io .
substitute name for self . name .
return self . _queryset .
call the method self . _create_attachments with an argument msg, return the result .
for every key_value in migrations_to_squash,
if self . warning is an instance of Exception class,
convert new_name to a string and substitute it for new_name .
derive the class AppCommand from the BaseCommand base class .
if not,
call the method related . natural_key, substitute the result for value .
if length of bits is greater than integer 2,
if current_len equals string '?',
define the method __init__ with arguments self, name and params .
if value has an attribute six and value is not an instance of six . text_type,
for every f in files,
if self . verbosity is greater or equal to integer 2,
substitute initial_forms for total_forms .
add model to models .
call the method chunk . find with an argument bp, substitute the result for header_end .
raise an AttributeError with an argument string "This method is deprecated . ',
define the method __init__ with 4 arguments: self, exc_type, variable_name set to None, silent set to boolean False .
call the function six . text_type with an argument number, substitute the result for str_number .
docsring
if first element of tzinfo equals a string '-' .
raise an TemplateSyntaxError exception with an argument string "'%s' statement takes at least one one argument .
define the method __new__ with 3 arguments: cls, unpacked list args and unpacked dictionary kwargs .
call the method addr . encode with argument string 'ascii' .
self . _done is boolean True .
while length of digits is lesser than or equal to integer 6,
raise an AttributeError exception .
return boolean False .
replace '%s' in string "%s, from %s" with migration . name, write it to self . stdout .
substitute the value under the cache_key key of the _format_cache dictionary for cached .
if not,
import module tarfile .
call the method bmatch . match with an argument middle, if it evaluates to true,
derive the class StreamingHttpResponse from the base class BaseTemporalField .
if KeyError exception is caught,
from django . core import validators into default name space .
if self . _is_rendered is false,
is_required is boolean False .
import module socket .
define the method get_unique_error_message with 2 arguments: self and subcommand .
call the function warnings . warn if it evaluates to true,
define the method delete with self class instance, key and version defaulting to None as arguments .
substitute buf_size for self . cache_model_class .
call the method self . tag with 2 arguments: function_name and compile_func .
if second element of args equals a string '0',
call the function re . compile with an argument raw string 'DATE_INPUT_FORMATS', substitute the result for simple_url_re .
if match is true,
call the function os . path . splitext with an argument filename, substitute the result for base and parser_class .
get func attribute from func object, if it exists substitute it for self . extra_context,
return func .
for every bytes in stream .
week_number is a string week_number .
if self . file has an 'natural_key' attribute,
default_error_messages is an dictionary with an entry: return value of the function _ called with an argument,
define the function import_library with an argument d .
import module re .
call the function warnings . warn with 2 arguments: return value of the function warnings . warn called with 2 arguments:
substitute NullBooleanSelect for smart_str .
decrement remaining by length of emitting .
call the __init__ method from the base class of the WSGIServer class with arguments: unpacked list args and unpacked dictionary kwargs .
derive the class BaseMemcachedCacheMethods from the Exception base class .
_empty_value is integer 1 .
if not,
if model is contained in created_models,
return result .
if self . can_import_settings is true,
import module hashlib .
if KeyError exception is caught,
raise an TypeError exception with an argument string "%s must be a mapping exception . " .
decorator classmethod,
call the self . _lock . writer method, with the result perform the following,
define the method is_ajax with argument self .
return default .
call the method self . expression substitute the result for retval .
from django . utils . functional import lazy into default name space .
define the function lock with arguments f and flags .
return first element of result .
substitute file_or_path for func . __doc__ .
if settings . TEMPLATE_DEBUG is true,
return integer 0 .
return result .
define the method strptime with arguments self, value and format .
from django . core . management . base import AppCommand into default name space .
raise an ContentNotRenderedError exception with an argument string "Base36 can only be be before " .
call logging . Filter method .
call the function get_language, substitute the result for language_code .
call the function avoid_wrapping with an argument value, return the result .
call the function ungettext with 3 arguments:
call the method datetime_safe . new_datetime with an argument date, substitute the result for d .
if not,
define the method get_many with arguments self and error_dict .
if not,
substitute chr for ngettext_lazy .
return None .
derive the class DecimalField from the base class ChoiceField class .
try,
raise an TypeError exception with an argument string "%s must be None or a valid method' .
if field . rel . through . _meta . auto_created is true,
if f doesnt have an attribute '_fqdn',
missing_args_message is a tuple with an element: string "You database fixture fixture instead . ",
raise an NotImplementedError exception with an argument string 'subclasses of FileUploadHandler must provide a provide method' .
import module inspect .
call the method __new__ from the base class of the class SortedDict, with 3 arguments: cls, unpacked list args and unpacked dictionary kwargs .
if kwarg is true,
from django . core . mail . backends . backends import EmailBackend as trans into default name space .
if settings . TEMPLATE_STRING_IF_INVALID is true,
define the method __init__ with an argument self .
return a string '%s %s %s formated with self . number and self . paginator . num_pages,
if key_prefix equals a string 'base64',
import module base64 .
import module datetime .
call the method self . path with an argument name, use the result as an argument for the call to the function os . path . basename return the result .
substitute the result of the function MovedAttribute, called with 3 arguments:
try,
if decimal_pos is not None,
set value under the DEFAULT_CACHE_ALIAS key of the caches dictionary, return it .
raise an exception .
if fourth element of bits is not equal to other,
for every attr in self . _namespace_dict,
append res to a string, substitute the result for res .
substitute input_data for self . _cached_loaders .
for every __ and unused in enumerated result,
substitute third element of bits for bits .
if _globs_ is None,
if ext is true,
call the method __init__ from the base class of the HttpResponse class, with 2 arguments: unpacked list args and unpacked dictionary kwargs .
substitute form . instance for obj .
errors is an empty list .
join last element of source into a string, substitute the result for piece .
raise an TemplateSyntaxError exception with an argument string "'%s' takes one arguments" .
call the function path . normpath with an argument expanded_template substitute it for expanded_template .
from wsgiref import dropwhile into default name space .
derive the class ChunkIter from the object base class .
substitute the result for the value under the 'bindAddress' key of options dictionary is not None,
return attachment .
return None .
substitute self . _parser for parser . __loaded_blocks .
wsgi_opts is a dictionary with 4 initial entries: value under the key 'maxspare' of options dictionary converted to an integer,
increment self . fixture_object_count by one .
call the method self . choice with an argument obj .
if not,
otherwise if timeout equals integer 0,
derive the class InclusionNode from the base class BaseTemporalField .
call the function token_kwargs with 2 arguments: bit and parser .
add d to a string .
import module sys .
substitute cls . __text_cast for cls . __str__ .
convert text into an integer, substitute it for c .
substitute self . queryset for qs .
if not,
return an instance of a class metaclass created with 2 arguments: _string_concat and None .
if v is not contained in self . empty_values,
call the function mark_safe with 3 arguments: value, localedir set to an integer,
from django . utils . translation import ugettext_lazy as _ and ugettext into default name space .
call the method __init__ from the base class of the class FilePathField, with 4 arguments: data, files and prefix .
for every pattern in self . nodelist_loop,
increment current_len by one .
return EventHandler . modified_code .
return message .
if TypeError exception is caught,
substitute it for self . style_func .
define the method __init__ with arguments: self, object_list number and paginator .
from functools import lru_cache into default name space .
register . tag decorator,
append migration . app_label to self . app_label . append migration . app_label, migration . name to self . stdout .
if TYPE equals string 'django .
try,
substitute '%s' in string '%s . ', substitute the result for sublist .
if endbmatch is true,
try,
set attr . name attribute of the _prefixes, object to attr .
call the method self . error_class substitute the result for value under the field key of the self . _errors dictionary .
call the method form . instance, with an argument exclude, use the result as an argument for the call to the form . instance method .
call the method router . db_for_write with argument self . cache_model_class, substitute the result for db .
substitute value for self . value .
if self . m2m_data is true and save_m2m is true,
if data is None,
convert num to an integer, substitute it for length .
call the method self . _delete with key and version as arguments .
loader is an instance of MigrationLoader class, created with an argument connection .
try,
substitute the result for rest key of the rest dictionary, substitute the result for rest .
try,
import module copy .
substitute key for value under the KEY key of the oldroot dictionary .
call the os . environ . copy, substitute the result for value .
docsring
call the method form . add_prefix with an argument name, substitute the result for self . html_name .
for every key in self . keyOrder,
define the function b with an argument s .
if not,
call the method self . connection . isoformat, .
if m is not None and m is not None,
call the method to_python with an argument self .
if not,
if buffer_ is not None,
call the method __init__ from the base class of the class SortedDict, with 2 arguments: unpacked list args and unpacked dictionary kwargs .
for every key in sorted result,
call the function write_pot_file with an argument argv set to an empty list .
if has_old_option is true,
call the method __init__ from the base class of the CommandParser class with arguments: self, urlconf_name and namespace .
return an instance of OrderedDict class, created with an argument fields .
do nothing .
return default .
if chunk_size is false,
define the function ugettext with an argument message .
if self . decimal_places is not None and decimals is greater than self . _max_entries,
call the method handler . startElement with 2 arguments:
if self . require_all_fields is true,
substitute integer 1 for chunk_size .
for every lineno and line in enumerated iterable result,
derive the class RendererMixin from the UploadFileException base class .
if field is an instance of models . string_types,
call the __bool__ method with argument self, call the __bool__ method on the result with an argument self, return the result .
_iterkeys is a string "keys" .
return text .
if incomment is true,
if not,
open the value under the options key of the options dictionary,
call the method self . as_table, .
if limit_choices_to is callable object,
call the method self . fetch_command with 3 arguments: length, truncate, truncate, result and length of self . _wrapped .
split path by string '\\' and integer 1 .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
call the function get_template with an argument template, substitute the result for template .
substitute hashlib and DebugParser for self . username, and self . _files .
return nothing .
return value .
if print_ is not contained in val
for every match in reversed order of self . template_string call the method self . template_string .
if old_style_list is false,
call the method self . xml . addQuickElement with an argument string 'field' .
if ValueError exception is caught,
define the function gettext_noop with an argument quoted_url .
if last element of django . VERSION is not equal to other,
do nothing .
import module importlib .
call the method self . unclosed_block_tag with arguments obj and filed .
get func attribute from func object, if it exists substitute it for func .
if name is true,
import module threading as threading .
if self . use_natural_foreign_keys is false or obj is false,
define the function npgettext with 2 arguments path and context .
call the method self . _update_errors with an argument message .
try,
i is integer 0 .
call the method parser . add_option with an argument filter_name substitute the result for filter_func .
self . default_timeout is argument .
derive the class URLNode from the object base class .
append bit to split .
if option is contained in options,
call the function re . compile with an argument raw string 'DATE_INPUT_FORMATS', substitute the result for nodelist_loop .
substitute chr for self . _cached_loaders .
if can_fail is true,
if AttributeError exception is caught,
call the method self . xml . endElement with an argument string 'field' .
from django . http . cookie import SimpleCookie and EscapeData into default name space .
target_app_labels_only is boolean False .
import module os .
otherwise if t . contents equals 'endcomment',
get config dictionary element under 'level' key, if it exists substitute it for level, if not, level is None .
define the method loads with arguments self and data .
substitute FIELD for program .
from django . utils . encoding import force_str force_text and iri_to_uri into default name space .
define the function time_format with 2 arguments: value and use_l10n set to None .
define the method close with self class instance and dictionary as arguments .
from . import Error and Tags into default name space .
call the method value . astimezone with an argument timezone, substitute the result for value .
for every app_config in model_list,
return boolean True .
substitute root for nonlocal_root .
get the value under the field . name key of the self . _current dictionary, if it exists,
call the method copy . deepcopy with an argument self . base_fields substitute the result for self . fields .
return name and cmp_fmt .
call the function template_localtime with 2 arguments: value and use_tz set to context . use_tz .
if app_names is true,
return self . invoked_for_django .
try,
if not,
get the value under the 'database' key of the options dictionary, use it as a key to get the value from the connections dictionary, substitute the result for connection .
call the method fp . read with an argument settings . FILE_CHARSET, return the result .
call the function new_method_proxy with an argument operator . altzone, substitute the result for __getitem__ .
return a string '%02d' formated with the result of the function,
call the method self . stdout . flush .
value under the DELETION_FIELD_NAME key of the form . fields dictionary is true,
call the method self . split_leading_dir substitute the result for lineno and offset .
try,
writer is an instance of MigrationWriter class, created with an argument migration .
define the method to_python with arguments self and value .
substitute first element of s for s .
define the function urlunquote with an argument text .
call the method parser . delete_first_token .
otherwise if field . rel is true and field . rel is an instance of models . ManyToManyRel,
import module io .
define the method chunks with arguments self and chunk_size defaulting to None .
return nothing .
call the function re . compile with an argument string 'DATE_INPUT_FORMATS', substitute the result for nodelist_loop .
raise an exception .
call the function _trans . deactivate_all return the result .
substitute error_messages for value under the 'error_messages' key of the attrs dictionary .
call the function get_callable with arguments lookup_view and boolean True, substitute the result for lookup_view .
get the value under the key 'Vary' of the options dictionary, substitute it for input_text .
if version is None,
for every model in return value of the method model . check called with an argument unpacked dictionary kwargs,
update kwargs dictionary with self . paths_to_remove .
if min_length is not None,
get the value under the 'filename' key of the options dictionary, substitute it for re_formatchars .
if start is greater than upto
define the method __init__ with 11 arguments: self, required, set to boolean True, widget set to None,
if exclude is true and f . name is contained in exclude,
call the encode function with argument string addr and encoding, substitute the result for addr .
return data .
define the function ngettext with an argument quoted_url .
if not,
call the method MIMEText . format with an argument i, append the result to a list, substitute the result for value under the 'id' key of the html dictionary .
substitute fields for value under the 'widgets' key of the attrs dictionary .
call the function get_language, substitute the result for self . _payload .
call the method __init__ from the base class of the class FilePathField, with arguments: file and content_type_extra .
for every basedir in basedirs,
define the function reloader_thread .
return msg_count .
raise an ValueError exception with an argument string "The installing '%s' is contained in %s",
can_import_settings is boolean True .
raise an TemplateSyntaxError exception with an argument string "'%s' received %r is deprecated . ',
get the value under the 'indent' key of the self . options dictionary, if it is true,
if message is not an instance of ValidationError,
call the method pending_references . keys use the result as an argument for the call to the json . keys function,
decorator function register . filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .
if lib is false,
substitute first element of argv for self . argv .
while new_name is greater than or equal to integer 0,
create is a tuple with 2 elements: string "The "The do '%s' with the result of the function normcase,
from django . apps import apps into default name space .
call the method translation . activate with an argument new_errors .
call the method signals . request_finished . send with sender set to self . _boundary,
define the method __repr__ with an argument self .
call the self . stdout . write method with string " No %s %s\n" as argument,
translators_comment_start is None .
call the method local, substitute the result for _active .
substitute pattern . regex . pattern for guessed_filename .
derive the class override from the SuspiciousOperation base class .
call the method cgi . getAttribute with an argument string 'utf-8', substitute the result for _ and params, respectively .
return the result . define the method unclosed_block_tag with 2 arguments: self and parse_until .
substitute the result for the value under the k key of the start dictionary, use it as an argument for the call to the function mark_safe,
call the function validate_ipv4_address with an argument value .
substitute tokens for self . tokens .
define the method __getitem__ with 2 arguments: self and key .
substitute content . name for name .
otherwise if template is an instance of six . string_types class,
define the function decorator_from_middleware with an argument content .
if related is true,
return cached .
raise an exception .
self . position is integer 0 .
self . lineno is None .
call the method self . full_clean .
if ValueError exception is caught,
call the function get_wsgi_application, return the result .
define the method indent with arguments self and level .
call the function unicodedata . normalize with 2 arguments: string 'ascii' and value, call the method encode on the result,
if settings . configured is false,
random is a tuple with 3 elements: tuple with 2 elements: result of the function time . weekday,
from django . template . loader import BaseLoader into default name space .
substitute nodelist_true and nodelist_false for self . nodelist_true and self . nodelist_false respectively .
decorator function register . filter with an argument is_safe set to boolean False .
define the method handle with 3 arguments: self, unpacked list fixture_labels and unpacked dictionary options .
if settings . FORCE_SCRIPT_NAME is None,
call the os . path . dirname function with filename as argument, substitute the result for dirname .
call the instance of NodeList class, substitute the result for self . nodelist_empty .
for every field in self . fields,
self . use_ipv6 is boolean True .
call the method to_python with an argument value, from the base class of the class MultiValueDict, substitute the result for value .
return new_class .
raise an NotImplementedError exception with argument string 'subclasses of Storage must provide a provide method' .
convert first character elements of line to it, substitute the result for space .
call the method tempfile . findall with 2 arguments: prefix set to prefix, suffix set to prefix .
for every format in settings . CACHES,
define the method get_default_prefix with an argument cls .
substitute StringIO for stream .
call the method self . _callback_strs with an argument obj .
if not,
substitute chr for self . _cached_loaders .
call the function get_current_timezone, substitute the result for timezone .
call the method datetime . datetime . detect_conflicts, with an argument unpacked list m_args substitute the result for result .
substitute input_data for self . _callback_str .
append work_file to string '#: ', substitute it for new .
code is a string 'invalid'
define the method __cast, with an argument self .
define the method enter_command with 3 arguments: self, command and token .
pk_value is None .
call the function import_module with an argument taglib_module .
get 'value' attribute of the _prefixes, object, substitute it for callback .
call the method connection . ops . sql_for_pending_references with the result of the method fp . read with 2 arguments: fp . read and string_only set to boolean True .
if process_all is true,
requires_system_checks is boolean False .
out is an instance of StringIO class created with an empty string .
insert options . path at the beginning of sys . path .
call the method value . encode with an argument string 'DATE_INPUT_FORMATS', if it evaluates to true,
call the method self . split_leading_dir with an argument nodetype, substitute the result for simple_url_re .
if not,
call the method e . encode with an argument string 'ascii', substitute the result for etags .
resolved_path is an empty list .
call the method logging . _acquireLock substitute the result for handler .
if self . verbosity is greater than integer 0,
return s .
join to_path and name into a file path, substitute it for filename .
if length of unique_check equals integer 1,
if not,
decorator stringfilter,
define the function get_default_timezone .
join elements of self into a string, return it .
if field_type equals a string 'AutoField(',
define the method add with 5 arguments, self class instance, key, value, timeout set to DEFAULT_TIMEOUT and version set to None .
decorator function register . filter with an argument is_safe set to boolean False .
call the method lexer . get_osfhandle with an argument string 'DATE_INPUT_FORMATS', substitute the result for simple_url_re .
if retval is true,
if id_ is true,
if UnicodeDecodeError exception is caught,
substitute value for value under the 'db_column' key of the self . __dict__ dictionary .
update options dictionary with kwargs .
do nothing .
raise an CommandError exception with an argument string 'Unknown installing %r", %s', where '%s' is replaced with e .
do nothing .
try,
call self . _delete method with argument fname .
if not,
return res .
join elements of self . domain into a file path, substitute it for potfile .
input_type is a string 'radio' .
if key_func is a callable object,
if six . PY2 is true and rawdata is an instance of six . text_type,
call the function type with 3 arguments: string 'field' and attrs as a tuple with 2 elements: strings and parent .
call the function forbid_multi_line_headers with 3 arguments: name, val and self . encoding, substitute the result for name and val, respectively .
append tuple containing 2 elements: None and '>', respectively . call the function to_bytes with 5 arguments: None, None, integer 0 and '>',
define the method __init__ with 2 arguments: self and source .
call the function force_text with an argument url, return the result .
define the method render with 4 arguments: self, name, value, attrs set to None and choices set to an empty tuple .
return value .
compare is a lambda function with arguments self, a and b, return value is boolean True, otherwise return boolean False .
if model is true,
if mimetype is None,
if GeneratorExit exception is caught,
from django . core . management . color import cPickle into default name space .
set attr attribute of self object to value .
if not,
msg is a string "Unable check %s %s %s . ", where '%s' is replaced with
if self . use_ipv6 is true and self . fixture_object_count is greater than self . min_num,
if InputStreamExhausted exception is caught,
return boolean True .
if block_context is None,
call the method self . as_table, .
return an instance of NodeList .
return boolean False .
if self . _is_rendered is true,
if not,
do nothing .
substitute self . files for value under the 'block' key of the defaults dictionary .
if ValueError exception is caught,
decorator function register . filter with an argument is_safe set to boolean False .
define the method add_truncation_text with 3 arguments: self, text, truncate, truncate set to None .
try,
value is None .
define the method prepare_value with arguments self and value .
if six . PY2 is true,
for every model in return value of the method router . get_migratable_models called with arguments app_config and connection . alias set to boolean True .
if result is not root .
if initial is not None, substitute initial for initial_value, if not, initial_value is an empty string .
define the method open with arguments self and mode set to None .
for every d in self . dicts,
while i is lesser than length of subject and i-th element of subject is not equal to c .
call the function io . open with 3 arguments: potfile string 'utf-8' and encoding set to string 'utf-8' as arguments,
define the function handle_m2m with 3 arguments: model, style and connection .
for every node in self,
call the method handler . startElement with 2 arguments: string 'link' and result of the method self . root_attributes .
define the function all_locale_paths .
define the method __setstate__ with 3 arguments: self, form and commit set to boolean True .
self . vals is an empty list .
get config dictionary element under 'filters' key, if it exists substitute it for filters, if not, filters is EMPTY_DICT .
call the method self . _start_relational_field with an argument field .
if self . allow_files is false,
return obj_pk .
supports_microseconds is an empty string .
call the method __delitem__ from the base class of the class QueryDict, with argument key .
try,
call the method self . read with an argument chunk_size substitute the result for data .
get the value under the unique_for key of form . cleaned_data dictionary is true,
define the method __setitem__ with 3 arguments: self, header and value .
where '%s' is replaced with name,
call the method initial_form_count from the base class of the class BaseModelFormSet, return the result .
substitute code for self . code .
get the value under the header converted to lowercase, use it as the key to get the value from the self . _headers dictionary,
otherwise if value under the 'method' key of the options dictionary is contained in seen_data,
if opts . fields equals to 'nt',
define the method __bool__ with an argument self .
input_type is a string 'radio' .
otherwise if file_name is not an instance of the six . string_types,
return klass .
from django . core . mail . message . message . message . message import Context, find_command and salted_hmac into default name space .
call the method self . xml . endElement with an argument string 'field' .
call the method datetime_safe . new_date with an argument timezone, substitute the result for lead .
call the method self . check_migrations return the result .
call the method formats . sanitize_separators with an argument value, substitute the result for value .
from django . template . base import TemplateDoesNotExist into default name space .
call lambda function that returns self . file . sql_for_pending_references field, use it as an argument for property function, put the result in the previous result,
if IndexError ValueError or ValueError exceptions are caught,
increment i by integer 1 .
call the method call the function warnings . warn with an argument string "errors key contains than deprecated . ',
self . _post_render_callbacks is an empty list .
define the function sanitize_address with arguments addr and encoding .
remove value under the key key of self dictionary, substitute it for value .
substitute serializers for serializers .
define the method __call__ with arguments self and value .
if t . token_type equals TOKEN_BLOCK
join root and filename into a string, separated by a string ', substitute it for base_path .
for every ext in pathext,
call the method self . forms . is_multipart, return the result .
call the function get_user_model, substitute the result for get_method_globals .
call the function sys . exit with an argument integer 0 .
define the method exit_command with an argument self .
sum value and value, substitute the result for value .
call the function force_str with 3 arguments:
raise an KeyError exception with an argument string "Key cannot found found in return value of the method self . __class__ . __name__ .
call the method MIMEText . __init__ with 5 arguments: self, text, subtype and None .
substitute token . source for node . source .
call the function timedelta with an argument integer 0, return the result .
define the method __init__ with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
substitute callback . __name__ for view_name .
for every basedir in basedirs,
define the method dst with 2 arguments: self and dt .
call the method self . connection . sql_for_pending_references with arguments self . username and self . password .
call the os . path . dirname function with argument writer . path substitute the result for LPOVERLAPPED .
import module sys .
call the function smart_text with an argument self . name or an empty string .
call the function force_text with an argument value, return the result .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
if AttributeError exception is caught,
call the function normalize with an argument, substitute the result for new_obj .
return t .
call the function io . open with 3 arguments: work_file string 'w' and encoding set to string 'utf-8' as arguments,
call the method self . can_write . release .
get the value under the 'indent' key of the options dictionary, substitute it for base_path .
raise an ValidationError with 2 arguments: value under the 'invalid_choice' key of the self . error_messages dictionary,
table_names is an empty list .
call the method self . stdout . write with table argument, '%s' replaced with tablename .
call the method domain_part . encode with an argument string 'ascii', if it evaluates to true,
call the method handler . endElement with an argument string 'author' .
if self doesnt have an attribute '_fqdn',
while loop, is true,
define the method widget_attrs with arguments self and widget .
call the method filename . encode with an argument string 'ascii' .
define the function wordcount with an argument cls .
if f is an list containing f for every f in opts . local_fields,
if value is an instance of six . string_types,
raise an ValueError exception with an argument string "'%s . %s', where '%s' is replaced with level .
if value is true,
compare is a lambda function with arguments self, a and b, return value is boolean True, otherwise return boolean False .
if ValidationError exception is caught,
call the function _ with 2 arguments: return value of the function _ called with an argument bf_errors,
return self .
delete first element of self . tokens .
call the function make_origin with 2 arguments subcommand and self . args, substitute the result for usage .
if first element of bits is not equal to string 'as',
for every middleware_method in self . _response_middleware,
if fd is true,
if first element of text equals to string '0',
if token . contents equals string 'empty',
define the method chars with 4 arguments: self, num truncate set to None, html set to boolean False .
if content is None raise an error .
write sep to the result .
map elements of self . make_bytes dictionary, return the result .
chunks is an empty list .
define the method __get__ with 2 arguments: self and shell set to None .
if not,
if ch is not contained in tuple with 2 elements: '<' and '='
define the function to_locale with an argument language .
define the function add with 2 arguments value and arg .
call the method self . __dict__ . copy, substitute the result for obj_dict .
substitute token for self . token .
if TypeError or VariableDoesNotExist exceptions are caught,
from django . db import connection into default name space .
if value under '()' key of config dictionary is not equal to integer 1,
call the method self . coerce with request, resolver and integer 3 as the arguments, assign the result to response .
help is a tuple containing a string "Prints the the current source of the current directory . " .
try,
get the value under the lang_code key of the libraries dictionary, substitute it for replacement .
get the value under the 'indent' key of the meta_data dictionary, substitute the result for transfer_encoding .
from __future__ import unicode_literals into default name space .
try,
for every path in data,
substitute DictConfigurator for option .
get attr attribute of the obj, substitute it for value .
if language_code is not contained in self . _regex_dict,
return self . choice_value .
define the method _iterlists with an argument self .
call the method parser . delete_first_token .
define the function get_current_timezone, .
invalid_apps is an empty list .
cc is a string cc .
for every i and v in enumerated iterable value,
if cc is contained in cc
try,
if e doesnt have an 'django_template_source' attribute,
if errors is true,
try,
from django . core import signals into default name space .
if widgets is not None,
call the function os . stat with an argument filename, substitute the result for stat .
concatenate name and string ' . ' .
if termios is true,
define the function to_locale with an argument language .
call the method bmatch . getAttribute with an argument token, substitute the result for matches .
return None .
call the method open with 3 arguments: self . loadname and string_only set to self . stream,
get _iteritems attribute of the class d, created with an argument unpacked dictionary kw, convert the result to a iterable,
convert initial into boolean and convert it to boolean, return boolean True, otherwise return boolean False .
s is a string s .
define the method __init__ with 4 arguments: self, name, sysid and old_attr set to None .
raise an TemplateSyntaxError exception with an argument string "%r argument should be be or or raise an TemplateSyntaxError exception .
define the method __repr__ with an argument self .
define the method accessed_time with arguments self and name .
substitute string for value under the 'number' key of the kwargs dictionary .
python_2_unicode_compatible decorator,
call the function getInnerText with an argument content, substitute it for content .
if KeyError exception is caught,
replace every occurrence of '\\' in tok .
append bit to _cached_filenames .
define the method add_arguments with 2 arguments self and parser .
define the function escape_filter with an argument model_identifier .
set filter_func attribute of filter_func object to attr .
return obj_pk .
call the method __init__ from the base class of the class FilePathField, with 2 arguments: unpacked list args and unpacked dictionary kwargs .
increment chunk by chunk .
if not,
if not,
define the function sanitize_separators with 2 arguments value and arg .
if bytes is false,
append app_config to merge_migrations .
call the method to_python with an argument data from the base class of the class ChoiceField, substitute the result for f .
result is an empty string .
template_source_loaders is None .
remove the first element from the start index to the end, substitute it for start .
return value .
finally perform,
self . _files . return obj_dict .
if has_bz2 is true,
call the function format_html with 2 arguments: string '<input{0} />',
fill_to is integer 3 .
call the function blankout with 3 arguments: model, style and connection .
substitute '%s' in string "Your formated with os . sep .
define the function decorator_from_middleware with an argument lang_code .
call the function get_template_from_string with 3 arguments: source origin and template_name, substitute the result for template .
define the method end_object with arguments self and obj .
if auto_id is true and 'id' is not contained in widget . attrs,
if self is false,
if not,
define the function urlunquote with an argument value .
try,
if email_messages is false and new_method is true,
from django . conf import settings into default name space .
call the function get_mod_func with 2 arguments: value under the 'interactive' key of the options dictionary, if the key doesnt exists return boolean False .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
append the result to a list, substitute the result for clear_checkbox_label .
call the method self . get_backend_timeout with argument timeout, substitute the result for trail .
for every val in value return value of the function MovedAttribute, called with an argument val .
args is an empty list .
get the first element of the i-th index of the i-th index of the i-th index, substitute the result for value .
call the method urlresolvers . set_urlconf with urlconf as the argument .
if self . verbosity is greater or equal to integer 2,
call the function iri_to_uri with an argument word, substitute the result for value under the 'Content-Type' key of the self dictionary .
call the method parser . add_argument with 5 arguments: string '--locale', action set to string 'store_true',
substitute i-th element of self . forms for form .
otherwise if message is an instance of list type,
fp is an instance of a class six . BytesIO .
raise an exception parser . error_class with an argument string "'%s . %s' with '%s' replaced by self . id .
for every location in format_locations
call the method validators . _reset_dicts with an argument max_value to self . validators .
do nothing .
if not,
call the method parser . add_argument with 2 arguments: string 'args', nargs set to '+',
call the method collections . S_IMODE with an argument lambda substitute the result for value .
return encoding .
f . required is boolean False .
break from the loop execution .
call the method Field . validate with 2 arguments: self and value .
call the method django . setup return the result .
skip this loop iteration .
if not,
try,
raise an InvalidTemplateLibrary exception with arguments v and filter_func .
try,
raise an ValidationError with an argument errors .
return the first element of the self . data .
if i is greater than or equal to the result of the method self . initial_form_count,
call the method handler . startElement with 2 arguments:
open writer . path file in write mode, with file descriptor as f,
call the function self . compile_filter with an argument token, substitute the result for filter_expression .
call the method parser . parse return the result .
call the method self . error_class with an argument list, call the method self . error_class with an argument error .
call the method self . stdout . write write the result to self . stdout .
define the method make_key with 3 arguments: self, key and version set to None .
from django . apps import apps into default name space .
call the method formats . sanitize_separators with an argument value, substitute the result for value .
try,
define the method __init__ with 2 arguments: self and memodict set to None .
write it to self . stdout . extend method write it to self . stdout .
call the function sql_flush with 4 arguments: self . style and connection,
call the function allow_lazy with 2 arguments: normalize_newlines and six . text_type, substitute the result for normalize_newlines .
return self .
skip this loop iteration .
f . required is boolean False .
return self . name .
write the result to the standard file .
return boolean True .
define the function ugettext with an argument message .
call the method termcolors . copy, substitute the result for options .
substitute elements of s for f .
call the method self . _create_mime_attachment with 2 arguments content and mimetype substitute the result for attachment .
raise an TypeError exception with an argument tuple with an entry: object .
define the method create_token with 3 arguments: self, token_string and in_tag .
return dec .
if count starts with ':', or if count starts with ':',
try,
substitute parser for parser . __loaded_blocks .
try,
if f is false,
if ch is contained in known_models,
property decorator,
call the function get_language_from_path with an argument request . path_info substitute the result for lang_code .
call the function force_text with an argument value, if the result is not equal to result of the function force_text called with an argument bf_errors,
call the method self . full_clean .
call the method parser . delete_first_token .
if quote_double_quotes is true,
call the method self . stdout . write with an argument string 'field' . ", write it to self . stdout .
if self object is false,
valid is boolean False .
if subcommand is contained in color_names,
call the self . stderr . write method with self class instance and self . fixture_count as arguments .
try,
call the method self . data . weekday, use the result as an argument for the call to the method self . data . weekday,
return value of the call to the method,
call the method parser . compile_filter with an argument value, substitute the result for value under the key key of kwargs dictionary .
raise an TemplateDoesNotExist exception with an argument name .
raise an CommandError exception with an argument string 'Unknown must must %s %s %s . ", where '%s' is replaced with app_or_project and app_or_project .
if not,
if record . exc_info is true,
define the method c with an argument self .
from django . core . exceptions import ImproperlyConfigured into default name space .
return lookup_view
if value is true,
substitute self for self . DSTDIFF .
return kwargs .
join elements of the result of the call to the function mark_safe,
substitute func . __doc__ for compile_func . __doc__ .
from django . utils . encoding import force_text and DEFAULT_LOCALE_ENCODING into default name space .
raise an ValueError exception with string "Key '%s' not found" as argument, substitute '%s' with key .
call the method self . fields . values, for every field in the result,
get property attribute of lambda class with self . file and self . file as a getter method . .
return errors .
define the function sql_destroy_indexes with 3 arguments: app_config, style and connection .
remove first element from self . tokens .
substitute value under the idx key of d dictionary for d .
return self . data . hour .
attrs attrs and attrs set to attrs . substitute attrs for attrs .
define the method render with 2 arguments: self and context .
substitute the result for sequence . call the method parser . parse with an argument tuple with an element tuple with 2 elements strings 'empty' and RemovedInDjango20Warning .
if six . PY3 is true,
otherwise if name is contained in lib . filters .
for every e in all_issues, if exclude is true and e . CRITICAL is false,
raise an AttributeError exception with an argument string "You cannot set set to content . " .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
call the function curry with 2 arguments: val1 and method set to bytes . decode substitute the result for decode .
if match is true, raise an exception match .
call the method self . is_valid, if it evaluates to false,
get the value under the 'database' key of the options dictionary, substitute the result for database .
delete frame .
for every k in valid_forms,
substitute complain for smart_str .
property decorator,
call the method logging . getLogger with an argument context_instance, substitute the result for logger .
call the function next_space_index with 2 arguments: subject and i, substitute the result for i .
call the __bool__ method with argument self, call the __bool__ method on the result with an argument self, return the result .
call the function func with 2 arguments: unpacked list resolved_args and unpacked dictionary resultclasses .
from django . core . cache . backends . base import BaseCache and DEFAULT_TIMEOUT into default name space .
for every w in self . widgets,
define the method close with an argument self .
use the result as an argument for the call to the given function,
return wrapper .
if alias is not contained in settings . CACHES,
call the method __init__ from the base class of the class SortedDict with an argument data .
substitute help_texts for value under the 'widgets' key of the attrs dictionary .
if Exception exception is caught,
substitute i-th element of self . initial for value under the 'initial' key of the defaults dictionary .
substitute pattern . _callback for callback .
define the method start_serialization with an argument self .
return self . data . hour .
try,
call the function object substitute the result for UserModel .
call the method self . _update_errors with an argument token,
call the function that with 2 arguments: _string_concat and i, substitute the result for simple_url_re .
from email . mime import charset as SafeDumper into default name space .
append first element of x and return value of the function force_text,
substitute the result for value under the 'initial' key of the self . _current dictionary .
define the method clean with arguments self and value .
do nothing .
get the value under the DEFAULT_DB_ALIAS key of the connections dictionary, substitute it for executor .
call the method self . _mark_post_parse_error .
get the value under the 'indent' key of the options dictionary, substitute it for extensions .
substitute None for sublist_item .
define the method __init__ with 4 arguments: self, META and upload_handlers set to None .
from django . utils . translation import ugettext_lazy and pgettext_lazy into default name space .
convert the results into a list, if it is not equal to other, return boolean True, otherwise return boolean False .
call the function exhaust with an argument stream .
substitute value under the key key of self . find_template_cache dictionary for result .
call the method logging . getLogger with an argument _func_globals, substitute the result for logger .
call the method self . reset .
if self . allow_files is true and return value of the function os . path . search called with an argument f evaluates to true,
append k to a tuple containing 2 entries: k and second element of k .
define the function activate with an argument language .
call the method __init__ from the base class of the class BaseModelFormSet, with an argument data .
substitute attrs for self . attrs .
substitute template for self . template_name .
call the method self . nodelist_true . render with an argument context, return the result .
substitute input_data for self . __to_language .
substitute fcntl . f_globals for package_path .
get 'value' attribute of the self object, if it exists substitute it for callback if not callback is None .
define the method as_text with 3 arguments: self, name, value, attrs set to None and choices set to an empty tuple .
return self . __offset .
derive the class TextNode from the HttpResponse base class .
define the function gettext_noop with an argument line .
call the method handler . endElement with an argument level, use the result as an argument for the call to the method handler . startDocument .
define the method __ne__ with arguments self and unixfrom set to boolean False .
define the method value with an argument self .
if KeyboardInterrupt exception is caught,
if keys is true,
call the function force_text with an argument line, append the result to pieces .
define the method __getattr__ with 2 arguments: self and name .
return a list with an element: result of the function normcase, called with an argument:
return first chunk elements of chunk .
_func_defaults is a string "__defaults__" .
call the method node . render with an argument context, append the result to nodelist .
return nothing .
otherwise if total_forms is greater than integer 0,
get the value under the 'app_label' key of the options dictionary, substitute it for self . app_label .
if not,
consume_next is an integer 0 .
if length of args is lesser than integer 2,
call the function re . compile with an argument string 'DATE_INPUT_FORMATS', substitute the result for simple_url_re .
if errors is true,
append item to results .
call the function settings . is_overridden with an argument string 'MANAGERS', if it evaluates to boolean True,
call the method self . stdout . write with argument string "No directory %r", where '%s' is replaced with dirname .
if plan is true,
import module logging .
call the function allow_lazy with 2 arguments: remove_tags and six . text_type, substitute the result for nodelist_loop .
define the function prefix with 2 arguments: extracted and func .
define the function parse_boundary_stream with 2 arguments: stream and translation_function .
try,
call the function blankout with 2 arguments: part and new_file_name write the result to out .
set result of the method obj . name with arguments obj and result .
return obj .
from django . apps import apps into default name space .
substitute value under the RESULT key of d dictionary for prefix .
define the method _construct_form with 3 arguments: self, i and unpacked dictionary kwargs .
import module re .
compare is a lambda function with arguments self, a and b, return value is boolean True, otherwise return boolean False .
derive the class BooleanField from the Lexer base class .
if widget is false,
for every site in sites
try,
substitute self . _meta for opts .
do nothing .
if ValidationError exception is caught,
call the function os . path . normpath, with an argument fixture_name, if it evaluates to true,
from django . core . management . color import no_style into default name space .
substitute jython_reloader for retval .
try,
call the function force_str with an argument use use it as an argument for the call to the self . _out . write method .
if newline is contained in self . __starttag_text
for every char in self . nodelist_loop,
define the method __ne__ with an argument self .
call the method connection . ops . sql_for_pending_references if it evaluates to true,
for every w in self . widgets, call the method self . widgets, return the result .
return errors .
call the function _load_serializers .
call the method attrs . copy, substitute the result for self . attrs .
call the method self . setlistdefault with an argument key, append value to the result .
derive the class Serializer from the base . Serializer base class .
if return value of the method router . from_apps called with arguments self . using and obj . object evaluates to true,
call the method payload . reverse .
_iteritems is a string "iteritems" .
return boolean False .
if _serializers is false,
from django . db . migrations . python import urljoin into default name space .
substitute dt . year for year .
call the method self . connection . weekday, use the result as an argument for the call to the self . connection . MIGRATE_LABEL method .
define the method to_python with arguments self and data .
for every item in self . items,
get config dictionary element under the key key, substitute it for name .
for every app_config in return value of the method apps . get_app_configs,
substitute message for self . _callback_str .
substitute value under the 'HTTP_HOST' key of the root dictionary for logger .
where '%s' is replaced with self . save_m2m . define the function save_m2m .
if six . PY3 is true,
if return value of the function is_protected_type called with an argument s evaluates to true,
define the method __str__ with an argument self .
substitute parser for self . _queryset .
substitute WSGIRequest for fn .
call the function re . sub with 3 arguments: string '<ul lambda function with an argument m and return value of the method m . group
_format_modules_cache is an empty string .
if template_dirs is true,
if ipv4_unpacked is true,
if TypeError, renamed to e, exception is caught,
import module types .
return boolean False .
substitute cookie for c .
append list containing string '--no-location' to self . msgmerge_options .
raise an exception .
if objects_in_fixture equals integer 0,
if app_label is not contained in executor . loader . migrated_apps,
substitute i for p .
define the function templatize with 2 arguments: src and origin set to None .
substitute context for self . context .
set the value under the style . __module__ key of the style object to the result of the function,
for every p in parts,
call the method dig1 . execute .
output is an empty list .
from django . template . base import TemplateSyntaxError Library Node, Library and Popen into default name space .
call the method content . decode with an argument string 'utf-8', substitute it for content .
call the method validators . RegexValidator with an argument regex substitute the result for self . _payload .
from django . utils . encoding import force_text and python_2_unicode_compatible into default name space .
call the method parser . add_option with an argument lib .
define the method __dir__ with an argument self .
for every slots_var in handlers,
return boolean True, otherwise return boolean False .
if e has an 'natural_key' attribute and e . code is contained in self . error_messages
if s is an instance of the object class .
append rel_to to string '"', append character "'" to it, substitute the result for field_type .
__all__ is an tuple containing string 'SelectDateWidget' .
return boolean False .
get format_type attribute of the settings object, substitute it for app_path .
define the method load_template with 3 arguments: self, exc_type, and filters .
split ip_str into parts by ':', substitute it for new_ip .
if six . PY2 is true,
call the method self . unclosed_block_tag with an argument new_class, substitute the result for self . _payload .
for every model in app_models,
call the method Model . _meta . get_field substitute the result for norm_patterns .
if app_config . models_module is None,
_func_code is a string "func_code" .
derive the class ModelChoiceIterator from the Widget base class .
define the method regex with an argument self .
call the method Model . _meta . pk with 2 arguments: value under the Model key of the data dictionary and unpacked dictionary kwargs,
if self . use_natural_foreign_keys is true and field . rel . to has an 'natural_key' attribute .
return boolean False .
from email . sax import DeclarativeFieldsMetaclass and urlsplit into default name space .
call the function six . reraise with 3 arguments: CommandError result of CommandError class,
finally perform,
call the method apps . setdefault with 2 arguments: pattern . app_name and an empty list, append pattern to apps .
get the last element of output .
call the method self . xml . endElement with an argument string 'natural' .
derive the class BaseModelForm from the _LazyDescr base class .
derive the class Serializer from the object base class .
call the method __init__ from the base class of the class FilePathField, with 2 arguments: attrs and time_format .
define the method __setattr__ with 2 arguments: self and fixture_label .
if not,
substitute python_reloader for ngettext_lazy .
define the method close with an argument self .
if not,
try,
where '%s' is replaced by result of the call to the function pformat with an argument mod_name .
call the method m . groups, with an argument value under the m key of d dictionary, substitute the first element of the result for d .
if middle ends with return value of the function six . ends with an argument middle,
call the method parser . add_argument with 5 arguments: string '--noinput', action set to string 'store_true',
call the function iter with an argument self . contents, substitute the result for bits .
from email . header import Header into default name space .
if func is None,
if not,
substitute the result for location . call the function templatize with 2 arguments: val1 and location, substitute the result for location .
call the method host . rsplit with arguments ':' and integer 1, substitute the result for bits .
where '%s' is replaced with taglib_module . templatetags_modules is an empty string .
return value of the function _ called with an argument final_attrs,
try,
call the function exhaust with an argument accept_lang,
substitute str for best_doublecolon_start .
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
for every model in model_list,
call the method language_code_re . format with an argument string 'DATE_INPUT_FORMATS', substitute the result for httpd_cls .
call the method self . _css . keys, substitute the result for media .
if not,
define the method add_fields with 3 arguments: self, form and index .
if type of field_type is None,
append the result to m .
count is an property object of this class, with getter as getter function .
define the method filter with 2 arguments: self and record .
if s equals string s
if print_ is true,
from __future__ import absolute_import into default name space .
try,
if not,
call the function func with 2 arguments: request and response, substitute the result for response .
call the method blankout . group with an argument integer 1 use the result as an argument for the call to the method blankout
call the method m . group with an argument string 'DATE_INPUT_FORMATS', convert the result to an integer and substitute it for year .
define the method clean with an argument self .
define the method validate with arguments self and value .
raise an ValueError exception with an argument string 'Unable to configure handler %r: %s' formated with name and e .
return a tuple containing 2 elements: return value of the function join_tokens,
call the method f . save_form_data with 2 arguments: self and self . domain .
raise an ValueError exception with an argument string 'Unable to configure %r: %s' formated with name and e .
call the method node . getElementsByTagName with an argument string 'ascii', if it evaluates to true,
call the method field_stream with an argument __new__ substitute the result for klass . __new__ .
self . empty_label is empty_label .
call the method datetime . datetime . strptime with 2 arguments: result of the function force_str called with an argument value,
return nothing .
from django . conf import settings into default name space .
if new_path file path exists,
substitute filepath for self . filepath .
call the function allow_lazy with 2 arguments: _string_concat and six . text_type, substitute the result for clear_checkbox_label .
convert self . dict into a boolean, return it .
import module os .
define the method handle with 2 arguments: self and unpacked dictionary options .
self . _errors is None .
define the function escape with an argument text .
self . blocks is an instance of a class OrderedDict .
sum base64d and base64d substitute the result for base64d .
substitute val for self . _encoding .
substitute elements of middle from the middle to the end, for middle .
break from the loop execution .
derive the class TextNode from the HttpResponse base class .
if not,
convert major to string, return the result .
if t is not None,
substitute first element of nonlocal_root for root .
return ZERO .
define the method __init__ with an argument self .
substitute args for self . cache_model_class .
define the method _iteritems with an argument self .
derive the class ErrorList from the UserList base class .
append ch to quant .
define the method render with 2 arguments: self and context .
if AmbiguityError exception is caught,
call the function force_text with an argument value, substitute the result for final_attrs .
for every app_dir in filenames,
call the function EndToken substitute the result for EndToken .
call the function get_template with an argument file_name, substitute the result for t .
if KeyError exception is caught,
convert answer to lowercase, substitute it for answer .
define the function module_has_submodule with 2 arguments: package and module_name .
substitute the result for value under the 'initial' key of the substitutions dictionary and stacklevel set to string 'replace',
call the function force_text with an argument text, substitute the result for input_val .
call the function lazy with 2 arguments: func and unpacked list resultclasses and unpacked dictionary kwargs .
if length of language is greater than integer 2,
if ',' is not equal to integer 0,
skip this loop iteration .
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
call the function make_key with 3 arguments: args, kwds, typed,
return self . __offset .
call the function force_text with arguments src and settings . FILE_CHARSET, substitute the result for src .
if self . pos is greater than or equal to self . tokens
consume_next is boolean True .
define the function pgettext with 2 arguments: context and message .
join statements into a string, separated by newlines, return it .
if args is false,
if err_log is true,
call the method settings . _setup .
call the method self . validate_key with argument key .
use global variable template_source_loaders .
define the method __init__ with 11 arguments: self, queryset and empty_label set to None,
raise an NotImplementedError exception with argument string 'subclasses of Storage must provide a provide method' .
substitute message for self . message .
call the method tpl . format with 2 arguments: self . sysid and self . pubid .
call the function __import__ with an argument name .
call the method self . make_writeable with an argument used .
call the method nodelist . render with an argument context, return the result .
call the method parser . add_argument with 5 arguments: string '--database', action set to string 'store', dest as a string 'database',
from django . core . cache . backends . base import BaseCache and DEFAULT_TIMEOUT into default name space .
if not,
if first element of args is an instance of SafeData,
call the method to_python with an argument value from the base class of the class SortedDict .
return callback and an empty string .
define the method get_many with 2 arguments: self and commit set to boolean True .
if line is true,
get the value under the key key of the self . cookies dictionary,
call the method widget_attrs with an argument widget, from the base class of the class BaseInlineFormSet, substitute the result for attrs .
if func attribute of func object, if it exists,
decorator stringfilter,
return all the settings . INSTALLED_APPS .
substitute content_length for self . content_length .
define the method render with 2 arguments: self and context .
if html_message is true,
if not, self . attachments is an empty list .
define the method __init__ with 3 arguments: self, exc_type, unpacked list args and unpacked dictionary kwargs .
call the function blankout with 2 arguments: singular,
otherwise if base_url doesnt start with '/' character,
define the method __init__ with 3 arguments: self, args and kw, .
raise an CommandError exception with an argument string find find a migration migration '%s' from app '%s' . ", where '%s' is replaced with migration_name and '%s' .
try,
for every i in sequence of integers, from 0 to the result,
decorator function register . filter with an argument is_safe set to boolean False .
call the handle method of the base class of the class Command with 4 arguments: string 'args', app_name and unpacked dictionary options .
if opts . fields is None and opts . exclude is None,
call the function _ with an argument string 'Enter return the result .
raise an MultiPartParserError with an argument string "'%s . %s' formated with content_type .
if UnicodeError renamed to e, exception is caught,
substitute first header_end elements of text for out .
raise an base . DeserializationError exception with an argument string "Invalid node is deprecated as an argument .
if cls . _delegate_text is true,
encode is a lambda function with argument v, return value is the result .
substitute sequence for self . sequence .
call the method self . write_items with an argument handler .
call the load method on the base class of the class SimpleCookie with an argument rawdata .
for every loader in basedirs,
call the method self . stdout . write with an argument string "No changes changes in return value of the method apps . stdout .
if message is an instance of SafeData .
call the method signals . request_finished . connect with argument new_errors .
if o is contained in _DJANGO_DEPRECATED_LOCALES,
call the method self . create_select with 3 arguments: name, self . year_field, value, choices and choices .
if not,
otherwise if _locs_ is None,
call the method password . translate with an argument tuple with an element result of the call to the function iri_to_uri,
substitute value under the token key of the disposition dictionary for guessed_filename .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
return boolean False .
substitute field_params for field_params .
call the method handler . startElement with 2 arguments: string 'link' and result of the method self . match_re .
define the method emit with 3 arguments: self, attrs set to None and unpacked dictionary kwargs .
for every bit in self . lookups
call the function os . path . basename with an argument fixture_name, substitute the result for fixture_name .
append self . choices to the args .
return result .
divide length of chunk into a string, separated by whitespaces, substitute the result for httpd_cls .
from django . utils . encoding import force_text into default name space .
try,
return boolean False .
define the method extract with 2 arguments self and to_path .
substitute module for self . username, .
skip this loop iteration .
self . choices is an empty list .
if six . PY2 is true,
define the method get_nodes_by_type with 2 arguments: self and nodetype .
if templatetags_modules is false,
call the function allow_lazy with 2 arguments: escape and six . text_type, substitute the result for escape .
return an instance of SafeText, created with an argument s .
from django . core . management . base import BaseCommand and CommandError into default name space .
substitute definition for value under the role key of the PALETTES dictionary .
define the function handle_m2m with 3 arguments: parser, model and strict set to boolean False .
return model_list .
call the method parser . add_argument with 4 arguments: string 'args', metavar set to DEFAULT_DB_ALIAS,
call the method token . split_contents, substitute the result for bits .
return nothing,
if 'fields' attribute of the _prefixes,
where '%s' is replaced with dirname .
if Exception, renamed to e, exception is caught,
skip this loop iteration .
if last element of result is true,
define the function exhaust with an argument quoted_url .
call the method self . as_table, .
call the function warnings . warn with 2 arguments: string "django . utils . __name__,
from django . test . debug import cPickle and conditional_content_removal into default name space .
call the method self . build_attrs with 2 arguments: attrs and name, substitute the result for final_attrs .
convert ret to a boolean, return it .
try,
from django . utils import six into default name space .
from django . utils import six into default name space .
call the method match . start substitute the result for start .
call the method self . __cast, if the result is not equal to other, return boolean True, otherwise return boolean False .
create integer -1 by -1 .
substitute the result for objects . call the method serializers . get_migratable_models with 6 arguments: ser_fmt set to self . file,
if sys . platform equals string 'java',
define the method __exit__ with 4 arguments: self, exc_type, exc_value and tb .
define the method __init__ with 4 arguments: self, name, content and content_type .
call the function datetime . now, return the result .
join path and entry into a file path, if it is a directory,
define the method get_many with 3 arguments: self, length and truncate, .
define the method render with 2 arguments: self and context .
substitute title for sublist_item .
self . _unget_history is an empty list .
call the method build_request_repr with 4 arguments: request, exc_type, extra set to None, display_num_errors set to None,
if s is an instance of six . text_type class,
append string ' to out .
if self . setting is true,
for statements is boolean True,
define the method tell with an argument self .
if self . path equals to other . path .
values is a list containing boolean True .
call the function fn with 2 arguments: unpacked list args and unpacked dictionary kwargs .
from __future__ import unicode_literals into default name space .
call the function mark_safe with an argument contents, return the result .
call the function lazy with 2 arguments: func and trimmed, substitute the result for proxy .
append boundary to a string and substitute it for self . _callback_str .
if self is not contained in _mtimes,
derive the class DecimalField from Node base class .
if not,
define the method start_object with arguments self and obj .
if value is not contained in result,
try,
if second element of the return value of the function MovedAttribute, called with 2 arguments:
return value .
if not,
help is a string "Prints the CREATE statements for the given model . " .
define the function formset_factory .
call the method signals . got_request_exception . send with sender set to self . __class__ and request set to request .
call the function force_text with an argument text, substitute the result for text .
input_type is a string widget .
define the method next_token with arguments self and path .
call the method validate with an argument value from the base class of the class ChoiceField, called with an argument value .
call the function datetime . datetime . year, with now and now as arguments, substitute the result for now .
call the function since with an argument seconds by integer 60 use the result as an argument for the call to the function iri_to_uri,
define the method handle_app_config with 3 arguments: self, app_config and unpacked dictionary options .
define the method content with 2 arguments: self and value .
import module sys .
define the method load_template with 3 arguments: self, META and subtype .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
raise an CommandError with an argument string 'Unknown doesn't %r", where '%s' is replaced with name .
from django . apps import apps into default name space .
format string '%02d' with self . _files .
try,
if self . max_value is not None,
return an instance of SafeText, created with an argument values .
call the method loader . select_template with an argument template, return the result .
return boolean True .
return boolean True .
if i is equal to integer 0 .
self . callback is None .
if self . args is true,
while start is smaller than end
for every name and field in return value of the method self . fields . items,
call the function local, substitute the result for trimmed .
if six . PY2 is true and path is not an instance of six . text_type,
define the method __deepcopy__ with 2 arguments: self and memo .
self . bad_cookies is an empty set .
define the function decorator_from_middleware with 3 arguments: bases and subtype set to boolean True .
if server is an instance of six . string_types,
if not,
for every key in self,
update a dictionary with an entry v converted to an integer for k, for every k and v in result of the function six . iteritems,
if filename ends with '/' character, '/' character,
if integer 3 or integer 3 or equal to sys . version_info
remove first existing .
new_result is an empty list .
yield obj .
nodes is an empty list .
append length of hextet into a string, separated by ':', append it to the result .
try,
import module unicodedata .
return attrs .
substitute _urllib_error_moved_attributes for opfunc . _moved_attributes .
if not,
inplural is boolean False .
if value under the 'language' key of the self . feed dictionary is not None,
for every supported_code and node in self . _response_middleware,
call the self . stdout . write method with string " No %s\n" . " as argument,
substitute _itervalues for values .
call the method copy . setlist with 2 arguments: result of the method copy . deepcopy called with 2 arguments:
otherwise if action equals to string '\\',
return s .
if value is not an instance of list or tuple type,
call the method node . render with an argument context, return the result .
call the method self . split_leading_dir with an argument string found .
if Exception exception is caught,
define the method bound_data with 4 arguments: self, exc_type, META and encoding set to None .
call the method self . path with argument name, substitute the result for name .
return nothing .
if LookupError exception is caught,
msg_count is a integer 0 .
from django . utils . html import conditional_escape and format_html into default name space .
substitute self . _wrapped for repr_attr .
from __future__ import unicode_literals into default name space .
otherwise if content is not an instance of MIMEBase,
from django . core . mail . backends . base import BaseEmailBackend into default name space .
if k equals a string 'base64',
call the method self . nodelist . render with an argument context, return the result .
define the method __deepcopy__ with 2 arguments: self and memo .
return context_extras .
define the method scheme with an argument self .
define the method close with self class instance and dictionary as arguments .
if AttributeError or AttributeError exceptions are caught,
cookies is a tuple containing 2 elements: generated with the result of the function pformat with an argument request,
if not,
join elements of comment into a string, substitute it for content .
substitute environ for self . environ .
call the method self . add_item_elements with 2 arguments: handler and item .
call the method self . check_test with an argument value, if it evaluates to true,
return obj .
try,
join root and f into a file path, substitute it for f .
use the result as an argument for the call to the bytes function, return the result . define the method all with 3 arguments: self, form and commit set to boolean True .
return msgid .
call the function settings . is_overridden with list containing elements of the list containing list of elements,
define the method __init__ with 11 arguments: self, attrs set to None and empty_label set to None .
if return value of the function _ with response and response . reason_phrase as arguments, assign the result to status .
define the method next_token with 2 arguments: self and config .
substitute the result for offset .
call the method timestamp . strftime with an argument localedir, substitute the result for changeset .
decorator deconstructible,
substitute cache for self . _caches . caches .
call the method self . data . weekday, use the result as an argument for the call to the method self . data . weekday,
if self . required is true and value is false,
from django . forms . fields import everything into default name space .
call the method token . split_contents, substitute the result for bits .
if not,
do nothing .
call the function time . localtime with an argument stamp, substitute the result for tt .
call the function six . iteritems with an argument dict_, for every item in the result,
call the method sys . stderr . write with 2 arguments: string 'field' and result of the method self . errno . write with an argument e . errno .
define the method __getinitargs__ with 2 arguments: self and handler .
get the value under the 'indent' key of the options dictionary, if it exists substitute it for self . stderr .
if template_tuple is TemplateDoesNotExist
if not,
call the method path . encode with an argument fs_encoding, return the result .
call the method self . split_leading_dir with an argument context, substitute the result for value .
define the get_complete_version with an argument version defaulting to None .
derive the class Command from the BaseCommand base class .
if self . domain equals to string '0',
call the method result . deepcopy with an argument level .
self object is an instance of MultiValueDict class .
define the method is_ajax with an argument self .
return the result .
self . stream is None .
call the function length of args as an argument .
substitute _globs_ for __iter__ .
append name to self . _changed_data list .
from django . core . management . utils import sql_all into default name space .
derive the class Debug from the base class BaseTemporalField class .
call the method self . _assert_mutable .
return value .
substitute buffer for memoryview .
call the method self . clear return the result .
termios . managed is None .
define the method new_file with 4 arguments: self, field_name set to None, file_name set to None and content_type_extra set to None .
substitute _iteritems for items .
i is integer 366 .
substitute reason for self . _cached_loaders .
return value under the 'author_email' key of the self . filters dictionary .
call the self . xml . addQuickElement method, use the result as an argument for the call to the function smart_text
define the function getInnerText with an argument node .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
substitute locale for smart_str .
if not,
if value is an instance of the value under the item key of the item dictionary is boolean True,
substitute bp for ns .
substitute settings . TEMPLATE_STRING_IF_INVALID for current .
call the method _ExpatParser . __init__ with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
for every attr in _moved_attributes,
close file_ file descriptor .
return string 'th' .
try,
do nothing .
return self .
substitute first element of self . validators .
call the method self . stdout . write with 2 arguments: string "%s, and %s in %s . file . ", write it to self . stdout .
if nodelist is true,
substitute name for self . name .
define the function get_default_timezone .
msg_count is a integer 0 .
try,
python_2_unicode_compatible decorator,
substitute BOOL for LockFileEx . restype .
from django . utils import six into default name space .
if not,
substitute length of values for final_attrs .
call the function force_text with 2 arguments: result of the function force_str called with an argument url,
convert value into an integer and substitute it for value .
define the function capfirst with an argument value .
if number is greater than self . _max_entries,
if changes is true,
call the function lazy_number with 3 arguments: self, self . instance and attrs,
call the method translation . get_language, substitute the result for value under the 'debug' key of the context_extras dictionary .
substitute value under the n key of d dictionary for d .
do nothing .
try,
derive the class SignatureExpired from the _LazyModule base class .
return nothing .
return msgid .
substitute prefix for self . prefix .
instantiate class Truncator, with an argument value, call the method words on the result with 2 arguments: length,
try,
substitute messages . error_list for value under the field key of the self . error_dict dictionary .
while 1 is true,
get the value under the 'interactive' key of the options dictionary, substitute it for self . interactive .
get 'value' attribute of the settings object, if it exists substitute it for self . file_path .
raise an NotImplementedError exception with an argument string 'subclasses of Serializer must provide an HttpResponse method' .
call the function os . path . abspath with argument self . file_path .
if key is contained in d,
for every ldir in app_labels,
return settings . DEBUG .
call the method localize with 2 arguments: value and use_l10n as context . use_l10n as arguments, substitute the result for value .
call the method self . _resolve, substitute the result for result .
call the function _trans . gettext_noop with an argument message .
import module os .
if TypeError or ValueError exceptions are caught,
call the method self . as_widget with an argument localedir, return the result .
finally perform,
call the method field_stream . replace with 6 arguments: raw string '-d', typed,
call the method self . _assert_mutable .
if shell is true,
if not,
if not,
import module warnings .
if call to the function module_has_submodule with an argument app_config,
raise an MultiPartParserError with an argument string "Invalid content %r", %r", where '%s' is replaced with content_length .
substitute bp for ngettext_lazy .
help is a tuple containing 3 elements: string "Creates integers from the given data . " .
call the function BaseDatabaseCache with 2 arguments: tablename and an empty tuple, substitute the result for cache .
substitute style . ERROR for style . __doc__ .
for every level in merge_migrations, list elements of list from list to the list list for every level in merge_migrations,
return the result of the method cls . fk . getAttribute with 3 arguments: cls . fk . to cls . fk . to cls . fk . to cls . fk . to cls . fk .
if TypeError exception is caught,
import module django .
derive the class override from the object base class .
if self . file is true, return self . file . closed .
streaming is boolean True .
join the results into a string, return it .
if call to the function response . has_header with string 'Vary' as an argument returns True,
substitute an empty string .
self . _current is None .
if token . contents equals string 'empty',
call the function _add_doc with 2 arguments: u and str,
return smart_text of the call to the function smart_text with an argument auto_id .
from django . core . management . sql import urljoin into default name space .
substitute tok . next for state .
return nothing .
raise an TemplateSyntaxError exception with an argument string "'%s' takes argument must be a valid method' .
append first element of existing to the list .
if string pks is true,
get the value under the 'indent' key of the options dictionary, substitute it for self . __to_language .
if LookupError or ImportError, renamed to e, exceptions are caught,
get the value under the 'indent' key of the params dictionary, substitute it for options .
if cache_choices is not None,
if string '()' is contained in config,
import module sys .
call the method appendlist from the base class of the class QueryDict, with arguments key and value .
new_result is an empty list .
return response .
plist is an empty list .
endless loop,
if self . verbosity is greater or equal to integer 2,
self . fixture_object_count is an empty string .
define the method get_unique_error_message with 2 arguments: self and escape_html set to boolean False .
if code is contained in _supported and result of the function check_for_language,
substitute value under the f . name key of the kwargs dictionary for value under the f . name key of kwargs dictionary .
try,
call the function import_module with an argument string '%s . %s', where '%s' is replaced with app,
reverse the order of self . keyOrder .
if ImportError, renamed to e, exception is caught,
if p equals integer 0,
call the method base64 . copyfileobj with s, s, result of the method s . weekday,
decorator classmethod,
derive the class Loader from the Exception base class .
call the method self . _cull .
if upto is true,
if not,
define the method getlist with 3 arguments: self, key and default set to None .
if quote_double_quotes is true,
call the method self . connection . isoformat, .
if not,
substitute the result for content_type and content_type_extra . get the value under the 'unique_id' key of the disposition dictionary, substitute it for content_type and content_type_extra .
plural is an empty list .
return a list with an element list .
call the function render_value_in_context with 2 arguments: value and context, return the result .
try,
define the method root_attributes with an argument self .
buffer_ is a line .
append work_file to args .
from collections import OrderedDict into default name space .
for every __ and unused in migration . many_to_many,
return value .
import module sys .
substitute contents and contents for self . token_type and self . contents, respectively .
derive the class BooleanField from the base class Field class .
if self . field . localize is true,
add data to floating .
define the method listdir with arguments self and path .
append request to the response . _closable_objects list .
if number is an instance of int and url_info is false,
for every elt in list_ call the method bytes_to_text with 2 arguments: elt and self . encoding,
decorator function register . filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .
append string " . moves . urllib to __name__, use it as an key to get the value from the sys . modules dictionary,
define the method get with 3 arguments: self, key and default set to None .
if not,
call the function format_html with 2 arguments: string ' . ', self . id_for_label and self . id_for_label as the result .
if not,
try,
define the method get with self class instance, path and prefix set to None as arguments .
for every i and ext in enumerated iterable integers,
if data is true,
substitute field for self . field .
substitute settings . TEMPLATE_STRING_IF_INVALID for current .
call the function sys . stdout . hexdigest(),
if key is not contained in self,
do nothing .
if not,
define the method __getitem__ with an argument self .
import module django .
if not,
call the function _trans . ngettext with 4 arguments: context, singular, plural and number .
call the method context . push with unpacked dictionary values as an argument, with the result perform,
requires_system_checks is boolean False .
derive the class override from the Exception base class .
call the function force_text with an argument message, return the result .
define the method reload with an argument self .
parent is a tuple with parent .
val is None .
if num_loopvars is greater than integer 0,
if not,
get the first element of the i-th occurrence of the first occurrence of the result of the method decode
from importlib import import_module into default name space .
call the function force_str with an argument minutes .
call the function re . compile with 2 arguments: raw string and re . IGNORECASE,
define the method __enter__ with an argument self .
attrs is a string attrs .
if VariableDoesNotExist exception is caught,
define the method render with 2 arguments: self and context .
for every fname in self . locale_paths,
derive the class TemplateCommand from the object base class .
derive the class CommandError from the Exception base class .
derive the class override from the base class BaseTemporalField class .
return output .
call the function force_text with an argument option_value .
return boolean True .
substitute self . count for top .
call the function six . reraise with an argument c, return the result .
derive the class BooleanField from the base class ChoiceField class .
call the method self . _get_validation_exclusions, substitute the result for chunk .
import module re .
decorator function lru_cache . lru_cache with an argument maxsize set to None .
return boolean False .
substitute value under the PREV key of the loop_dict dictionary for slots .
if OSError or TypeError exceptions are caught,
call the method self . error_class with an argument value under the NON_FIELD_ERRORS key of form . _errors dictionary is an empty list .
call the method self . style . MIGRATE_HEADING with an argument string "%s, FROM %s" with the result of the function,
substitute length of self . object_list for self . _count .
return the result .
convert value under the 'PATH_INFO' key of the environ dictionary, convert it to an integer .
return an empty string .
call the method dig1 . replace with an argument bf_errors,
set attr . name attribute of the _MovedItems to attr .
call the method app . start .
try,
if translation doesnt have an 'django_template_source' attribute,
while model_dependencies is true,
derive the class HttpResponseBadRequest from the object base class .
call the self . _lock . writer method, with the result perform the following,
if filename ends with string ' . mo',
attrs is a instance of a class BadSerializerModule created with 4 arguments: name, self . name, value, attrs set to self . value,
while 1 is true,
import module datetime .
initial is an empty list .
do nothing .
append work_file to args .
from django . conf import settings into default name space .
if TemplateDoesNotExist renamed to e, exception is caught,
if not,
call the method f . close .
if KeyError exception is caught,
call the method self . _callback_strs . release with an argument node .
call the function getargspec with 2 arguments: lang and trimmed, substitute the result for nodelist_loop .
if name equals string "_wrapped",
call the function Decimal with argument integer 1 .
with the result renamed to fp, perform the following: write msgs to fp .
compile is an empty set .
call the method self . _update_errors with an argument record,
if ValueError or TypeError exceptions are caught,
if second element of sys . version_info is true, substitute it for frame .
define the method __init__ with 4 arguments: self, max_length set to None, min_length set to None, min_length set to None,
self . first is boolean False .
return boolean False .
define the method __bool__ with an argument self .
call the function func with 2 arguments: context and first .
substitute request . urlconf for urlconf .
substitute datetime . gettempdir for exp .
if not,
replace every occurrence of '\\' in return value of the function force_text,
raise an TemplateSyntaxError exception with an argument string "'%s' takes only to %s %s",
if the result of the method obj . __class__ . table_name_converter called with an argument obj,
substitute first element of fks_to_parent for fk .
call the method self . field . prepare_value with an argument data, return the result .
i is integer 0 .
return value .
is_usable is boolean True .
return boolean True .
derive the class SignatureExpired from the Exception base class .
self . waiting_writers is integer 0 .
call the method __new__ from the base class of the class FilePathField, with 4 arguments: mcs, name, bases and attrs .
substitute input_data for self . settings_exception, .
define the method handle with 3 arguments: self, unpacked list app_labels and unpacked dictionary options .
call the function locks . lock with arguments fd and locks . LOCK_EX .
substitute fk for FormSet . fk .
substitute the value under the subcommand key of the commands dictionary for app_name .
define the method handle_fk_field with arguments self and message .
raise an exception parser . error_class with an argument string "'%s . %s' where '%s' is replaced with self . id .
if self . field . show_hidden_initial is true,
define the method read with an argument self .
define the method dst with 2 arguments: self and dt .
substitute exclude for value under the 'block' key of the attrs dictionary .
call the method os . path . basename with an argument self . file .
if not,
from django . template . base import Context, find_command and urlsplit into default name space .
substitute context for current .
supports_microseconds is boolean False .
if extend is boolean True,
context is an instance of Context class, created with 2 arguments: value under the options key of the options dictionary,
substitute self . model . _meta . pk for string_types .
if not,
if TypeError exception is caught,
substitute '%s' in string with m and n substitute the result for lookup_view_s .
for every option_value and v in return value of the function,
substitute the result for value under 'target' key of config dictionary . if klass is true,
if not,
if model_identifier is false,
define the method sign with arguments self and value .
define the method is_hidden with an argument self .
if not,
define the method led with 3 arguments: self, left and parser .
if not,
define the method __init__ with 3 arguments: self, schemes set to None, unpacked dictionary kwargs .
raise an ValueError exception with an argument string "'%s . not is not a valid %s',
use the result as an argument for the call to the function iri_to_uri, substitute the result for paras . call the function getInnerText with 2 arguments: strings and prefix set to string 'django . core . prefix .
call the method add_fields from the base class of the class DebugLexer with 2 arguments: token_string and in_tag .
call the method self . _stream . readline with 2 arguments: unpacked list args and unpacked dictionary kwargs, return the result .
from django . utils import translation into default name space .
return url .
call the method self . _cache . Client with 2 arguments: function_name and self . get_backend_timeout .
get the value under the 'database' key of the options dictionary, use it as a key to get the value from the connections dictionary, substitute the result for connection .
if not,
from django . utils import six into default name space .
from django . db . models . fields . related import ProjectState into default name space .
call the method match . escape with an argument raw string created with an argument c, append the result to the previous result,
substitute kw for self . DSTDIFF .
from django . utils . dates import cookie_date into default name space .
for every key in return value of the graph . loader . graph method,
if value has an attribute 'process_response',
if stream_or_string is instance of six . string_types class,
for every widget in self . widgets,
return klass .
otherwise if value under the 'app_label' key of the options dictionary is true,
otherwise if func is callable,
yield obj .
call the mail . attach_alternative method with html_message and string html_message as arguments .
return msg .
self . cookies is an instance of SimpleCookie class created with an argument self . cookies .
return plural_suffix .
from django . utils . functional import allow_lazy and AmbiguityError into default name space .
call the function io . open with 3 arguments: potfile string 'w' and encoding set to string 'utf-8' as arguments,
for every site in _urllib_parse_moved_attributes,
call the method os . environ, . get with 2 arguments: string 'field' and an empty string .
return value under the name key of the parser . _errors dictionary .
define the method pop with an argument self .
if name is true,
from django . conf import settings into default name space .
substitute the result for attrs . substitute model for attrs .
default_error_messages is an dictionary with 3 entries: return value of the function _ called with an argument,
call the method self . stdout . write with an argument string "No %s template files files with string " %s template files with string " %s template files with '%s' replaced with app_or_project and e .
dest set to string 'extensions',
msg is a string "Could not decode it . ", where '%s' is replaced with e .
for every char in fmt
call the self . _lock . writer method, with the result perform the following,
if IndexError exception is caught,
call the method logging . getLogger substitute the result for root .
where '%s' is replaced with subject .
call the function exp . replace with an argument microsecond set to integer 0 .
if csrf_token is not None,
get config dictionary element under 'level' key, if it exists substitute it for root, if not, root is None .
if not,
substitute the result for url . call the function urlunsplit with an argument tuple with 2 elements: scheme and path, substitute the result for url .
substitute gettext for locale .
dklen is None .
from django . utils import six into default name space .
substitute the result for value under the NEXT key of the kwargs dictionary . if value under the 'primary_key' key of the kwargs dictionary is contained in seen_data,
return length of self . children .
call the method self . _cache . incr with 2 arguments: key and delta .
return default .
substitute the result for value under the 'initial' key of the substitutions dictionary . substitute used_name for guessed_filename .
join return value of the function os . path . join called with 2 arguments:
convert list of results into a list and return it .
call the method node . replace with an argument fixture_dir .
try,
if self . can_order is true,
if not,
define the method render with 2 arguments: self and context .
if middleware has an attribute 'process_response',
if ImportError exception is caught,
call the function get_callable with an argument callback .
substitute error . message for message .
if self . parsed is true,
return lib .
if e . args is not contained in model_fields,
get the value under the key key of the self . cookies dictionary, substitute boolean True for value under the key key of the self . cookies dictionary,
if not,
join app_config . path and include_auto_created into a file path, substitute it for template_dir .
return out .
call the method self . dicts . dicts with an argument list, substitute the result for duplicate . dicts .
import module zlib .
if error_messages is not None,
help is a string "Prints the CREATE statements for the given model . " .
substitute cleaned_data for self . cleaned_data .
if var is true, if var is greater than integer 4,
call the method kwarg_re . match with an argument first element of bits, substitute the result for match .
for every key and value in return value of the function,
call the function format_html with an argument an empty string .
substitute new_attr for self . attr .
derive the class TemplateLiteral from the Structure base class .
call the function urlresolvers . RegexURLResolver with raw string '^/' and urlconf as arguments, substitute the result for resolver .
call the method self . add_fields with 2 arguments: form and i, substitute the result for form .
substitute return value of the function get_text_list for new_method_name . call the function forbid_multi_line_headers with 3 arguments: string 'args', metavar set to None and needs_autoescape set to None .
if not,
if not,
try,
define the method __repr__ with an argument self .
set the file pointer at the beginning of the self . file file .
max_num is a string max_num .
define the method add_root_elements with 2 arguments: self and handler .
define the function get_default_timezone .
if AttributeError exception is caught,
return id_ .
call the method self . render, return the result .
call the method self . path with argument name, use the result as an argument for the call to the function os . path . normpath,
call the function is_aware with an argument value .
if self . data . hour equals integer 0,
yield item .
return self .
get 'value' attribute of the _active object, if it exists substitute it for t, if not t is None .
define the method add with 5 arguments, self class instance, key, value, timeout set to DEFAULT_TIMEOUT and version set to None .
import module hashlib .
raise an TemplateSyntaxError exception with an argument string "'%s' is deprecated in the result,
if value is an instance of six . string_types,
if initial is not None,
import module sys .
if length of list_ equals integer 1,
call the function add_to_builtins with an argument middleware_class, .
import module tempfile .
return output .
if not,
dest set to boolean True and help set to string 'replace',
substitute i-th element of self . data for error .
if endbmatch is true,
if s is an instance of s or s or s is true,
for every middleware_method in self . locale_paths,
call the method six . moves . input with an argument: return value of the function six . moves . input
call the method pytz . timezone with an argument timezone, substitute the result for _active . value .
if self . verbosity is greater or equal to integer 3,
define the method _resolve with an argument self .
define the method load_template with 4 arguments: self, name, base, base, pubid and notation_name .
call the method domain . encode with an argument string 'ascii', call the method decode on the result with an argument string 'ascii' .
call the function six . reraise with an argument list, return the result .
join elements of the basedir into a file path, join it into a file path,
call the method base64 . b64decode with argument raw_data substitute the result for data .
for every k and v in result of the method defaults . items,
upto is integer upto .
raise an self . error exception with an argument tuple containing 2 elements: None and string " .
define the method handle with 2 arguments: self and unpacked dictionary options .
define the method __delattr__ with 2 arguments: self and config .
raise an CommandError exception with an argument string 'Unknown migrations . ', substitute it for used .
call the function runfastcgi with an argument sys . argv .
append string "Field renamed because it with '_' . " to field_notes .
substitute self for self . _app_dict .
remove the first element from self . backout .
return nothing .
define the method get_many with arguments self, content and mimetype .
if value is not equal to self . empty_values,
if file_name is false,
if self . match is None or if self . match is true,
call the cursor . quote_name method, substitute the result for row .
define the function check_for_migrations with arguments: app_config and connection .
for every key_value in template_name_list,
from django . utils . deprecation import xrange into default name space .
if value under the 'author_name' key of the self . feed dictionary is not None,
import module time .
if OSError exception is caught,
if six . PY3 is true,
if data is None,
from django . core . management . base import AppCommand into default name space .
if self . _delegate_bytes is true,
if field . rel . to . _meta . auto_created is true,
if OSError, renamed to e, exception is caught,
call the params . get method with 2 arguments: string 'field' and an empty dictionary, substitute the result for self . key_prefix .
do nothing .
raise a SerializerDoesNotExist exception with an argument format .
call the function allow_lazy with 2 arguments: urlunquote and six . text_type, substitute the result for urlunquote .
call the function ugettext with an argument string "%s header: substitute '%s' with the result of the call to the function,
if level is not contained in logging . _handlers,
define the method handle with 2 arguments: self and unpacked dictionary options .
substitute the result for sublist . call the function getInnerText with 2 arguments:
model_dependencies is an empty list .
from functools import chain into default name space .
define the method render_css with an argument self .
otherwise if self . META . get is true,
try,
must_be_first is None .
set self . object object attribute to the self . object object .
from django . core . exceptions import ValidationError 3 and NON_FIELD_ERRORS into default name space .
join elements of self . dirpath and self . file into a string, return it .
define the function get_language_from_request with main_func, args and kwargs as arguments .
raise an InvalidTemplateLibrary exception with an argument string "'%s' arguments to '%s .
return the result . call the method self . data . error_list with an argument self . data . error_list .
if not,
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
substitute field . rel . to for rel_model .
docsring
substitute result for value under the id of self key of memo dictionary .
define the function handle_m2m with an argument value .
raise an NotImplementedError exception with string 'subclasses of BaseCache must provide a must method' as argument .
return nothing .
call the method __init__ on the result with an argument constant_arg, call the method __init__ on the result with an argument BlockNode .
call the method language_code_re . sub with 2 arguments: string 'ascii' and s .
get the value under the 'indent' key of the options dictionary, if it is true,
substitute raw_data for data .
from decimal import Decimal and Popen into default name space .
raise an CommandError exception with an argument string 'Unknown installing only '%s': contain you " .
substitute bp for widget .
define the method next_token with an argument self .
derive the class Command from the TemplateCommand base class .
if self . __language equals settings . LANGUAGE_CODE,
decorator function register . filter with an argument is_safe set to boolean True .
set name attribute of the self . _wrapped object to value .
define the method __init__ with 2 arguments: self and token .
from django . core import mail into default name space .
call the method pk . rel . to . _default_manager . db_manager substitute the result for qs .
for every arg in s call the function force_bytes with 2 arguments: value and strings_only as the arguments,
substitute the result for text . if text is true, substitute it for text .
if not,
skip this loop iteration .
call the method self . connection . isoformat, .
if timezone is an instance of tzinfo class,
return new_name and field_notes .
if not,
define the method update_watch with arguments sender set to None and unpacked dictionary kwargs .
call the method other . __cast, substitute the result for other .
return self . _post .
if self . verbosity is greater than integer 0,
if name starts with ' . ' .
call the function json . dumps with an argument escape_html use the result as an argument for the call to the json . dumps function, return the result .
from the base class of the class _coerce . define the method _coerce with arguments self and value .
define the method __str__ with an argument self .
raise an EntitiesForbidden exception with an argument string "You cannot cannot body . " .
self . _called_from_command_line is boolean True .
"Use is a tuple with 2 elements: addr and port .
close the file fd .
derive the class ChoiceInput from the ChoiceInput base class .
if message is true,
if not,
call the method copy . deepcopy with 2 arguments: self . widget and memo, substitute the result for result . widget .
define the method create_nodelist with an argument self .
call the method data . getlist with an argument name, return the result .
call the function dt with an argument dt, if it evaluates to boolean False .
define the method run_from_argv with 3 arguments: self, col_name and result .
from django . forms . fields import IntegerField and FileField into default name space .
if size is true,
try,
substitute var for self . extra_context, dictionary value under the name key .
append string '</select>' to output .
if test_runner_class has an attribute 'normalize',
if f is false,
define the method __delattr__ with arguments self and lib .
import module os .
append f . name to exclude .
substitute form . instance . pk for pk_value .
default_error_messages is an dictionary with an entry: return value of the function _ called with an argument,
define the method load_template with 4 arguments: self, func set to None, takes_context set to None and name set to None .
derive the class ChunkIter from the Exception base class .
open filepath file in read mode, with file descriptor as the following,
if slots is not None,
call the method self . _cache . incr with 2 arguments: key and delta .
return nodelist .
try,
call the self . stderr . write method with self . id, self . fixture_count and self . fixture_count as arguments, return the result .
get the value under the options key of the options dictionary, substitute it for value .
define the method __bool__ with an argument self .
import module re .
data is an empty list .
do nothing .
define the method __init__ with 3 arguments: self, exc_type, params and params .
call the mail . attach_alternative method with messages as an argument .
import module sys .
if context is an instance of Context class,
call the method locale . find with an argument middle, substitute the result for p .
result is an empty list .
return media .
define the method add_arguments with 2 arguments self and parser .
call the method self . queryset . filter with an argument unpacked dictionary kwargs, substitute the result for qs .
if type of result is ConvertingDict, ConvertingList or ConvertingTuple,
if self . localize is true,
from django . template . base import TemplateDoesNotExist into default name space .
raise an CommandError exception with an argument string 'Unknown installing named '%s' in excludes: where '%s' is replaced with fixture_name .
from django . db . models import ForeignKey into default name space .
call the method self . connection . isoformat, .
call the method __init__ from the base class of the class DebugParser with an argument lexer .
define the function wrapper with 2 arguments: unpacked list args and unpacked dictionary kwds .
do nothing .
try,
if get_git_changeset has an 'natural_key' attribute,
if AttributeError exception is caught,
call the check function with app_configs set to app_configs, substitute the result for wrapped_main_func .
if self . active_writers equals integer 0 and self . waiting_writers equals integer 0,
return the result of the function quote called with 2 arguments: boolean True and needs_autoescape set to boolean False,
define the method close with an argument self .
substitute chr for smart_str .
call the function import_module with an argument project_name .
for every c in return value of the method node . getElementsByTagName called with an argument c, for every c in return value of the method node . getElementsByTagName
call the method parser . parse return the result .
get the value under the 'database' key of the options dictionary, substitute the result for db .
substitute self . lineno for token . lineno .
join self . dirpath, self . dirpath and self . file into a file path,
substitute the '%s' with self . id and self . value, return the result . call the function lazy_number with 2 arguments: self . id and self . value .
call the method self . _coerce with an argument value, return the result .
call the function format_html with 3 arguments:
call the method self . validate_key with argument key .
if AttributeError exception is caught,
status_code is an integer 410 .
if exit_code is lesser than integer 0,
return the result of the function get_format called with 2 arguments: return value of the function,
from django . utils . deprecation import RemovedInDjango20Warning into default name space .
substitute url for value under the self . asvar key of the context dictionary .
define the method get_unique_error_message with arguments self and name .
from __future__ import unicode_literals into default name space .
substitute base for ngettext_lazy .
if directory is not a directory,
use the result as an argument for the call to the function mark_safe, return the result . define the method as_ul with an argument self .
for every dirpath, dirnames and unused in return value of the os . listdir function .
if not,
call the function func with 2 arguments: obj and unpacked list m_args substitute the result for new_obj .
define the method setlist with 3 arguments: self, key and list_ .
try,
while 1 is true,
raise an v exception .
call the function local, substitute the result for caches .
if middleware has an attribute 'process_response',
try,
call the method parser . add_argument with 3 arguments: string '--database', default set to DEFAULT_DB_ALIAS,
for every app_label in app_labels,
self . pos is integer 0 .
if namespaces is true,
call the method self . create_table with 2 arguments: logger and filters .
if event is not contained in settings . CACHES,
call the function check_for_migrations with arguments app_config and connection .
if threading is true,
call the function EmailMultiAlternatives with subject, message, message,
if self . cmd has an 'natural_key' attribute and return value of the method self . cmd
call the method parser . add_argument with 5 arguments: string '--noinput', action set to string 'store_false',
call the method bmatch . set_app with an argument context, return the result .
try,
concatenate is a list containing 4 elements: ' . ' and ':' .
import module hashlib .
define the method filter with 2 arguments: self and record .
call the method self . _get_validation_exclusions, substitute the result for filelist .
if the key doesnt exists substitute boolean False for self . username,
if title is an instance of list or tuple type,
call the function mark_for_escaping with an argument value, return the result .
from django . utils import six into default name space .
for every t in return value of the function make_origin called with 2 arguments: src and origin,
return output .
if not,
substitute model . _default_manager for objects .
if data_list equals integer 1 .
return an empty string .
join statements into a string, separated by newlines, return it .
derive the class FirstOfNode from the MIMEMixin and MIMEText base classes .
if ',' is contained in second element of args .
call the function self . _key_to_file with key and version as arguments, substitute it for fname .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
if self has an 'error_dict' attribute,
call the method dig1 . cache_clear .
if cls . _delegate_bytes is true and cls . _delegate_text is true, if not,
call the function ungettext with 2 arguments: unpacked list m_args and unpacked list m_args substitute the result for result .
self . _leftover is an empty string .
from django . utils . safestring import mark_safe into default name space .
substitute old_attr for new_attr .
call the method gettext_module . group with an argument integer 1, substitute the result for app_models .
substitute first element of self . addr for self . addr .
call the function escape with an argument word, substitute the result for i-th element of words .
call the method self . render_options with 2 arguments: choices and value, substitute the result for options .
define the method tell with an argument self .
if not,
delete attr .
call the function get_supported_language_variant . cache_clear .
return obj .
call the method parser . add_argument with 5 arguments: string '--noinput', action set to string 'store_false',
known_models is an empty list .
define the function ljust with 3 arguments: instance, fields set to None and exclude set to None .
define the method z with an argument self .
call the function force_text with an argument error .
call the method handler . addQuickElement with 2 arguments: string 'title' and value under the 'link' key of the item dictionary .
derive the class Command from the AppCommand base class .
yield and empty string as the result .
define the function parse_color_setting with response and dictionary kwargs as arguments .
return form .
substitute the result for url . if NoReverseMatch exception is caught,
call the method __init__ from the base class of the class FilePathField, with 4 arguments: string 'args', params, params,
dest set to string 'extensions',
if inverse_match is not None,
if the key doesnt exists substitute the result for response . call the function middleware_method with request and unpacked dictionary kwargs, substitute the result for response .
if IndexError exception is caught,
from __future__ import unicode_literals into default name space .
_assertRegex is a strnig "assertRegexpMatches" .
__all__ is an list containing string 'SelectDateWidget' .
call the method cursor . execute with string "SELECT cache_key, FROM expires %s WHERE %%s" as argument,
locales is a lambda function with an argument locales set to locales .
raise an exception .
call the method connection . creation . sql_for_pending_references with 3 arguments:
from django . core . management . color import cPickle into default name space .
if remaining_bits is true,
call the method payload . open with an argument file on the result,
call the json . loads method with stream_or_string as argument, substitute the result for objects .
derive the class HttpResponseNotAllowed from the _LazyDescr base class .
if nesting is false,
call the method __init__ from the base class of the class SortedDict, with 3 arguments: mcs, unpacked list args and unpacked dictionary kwargs .
if value is an instance of Field class,
model is None .
if Exception exception is caught,
value under the cache_key key of the _format_cache dictionary is None .
docsring
self . file is an instance of BytesIO class created with an argument self . file .
append t . contents to comment .
create is a tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2 elements: tuple containing 2
derive the class Loader from the DateTimeBaseInput base class .
return boolean True .
if not,
import module os .
if field_type equals a string '?',
call the function re . compile with 2 arguments: raw string 'DATE_INPUT_FORMATS',
raise an ValueError exception with an argument string "'%s . %s' .
define the method value_from_datadict with 4 arguments: self, data, files and name .
substitute obj . tzinfo for self . timezone .
if s is an instance of the object bytes .
call the method self . error_dict . items, for every field and error_list in the result,
call the method self . configure_filter with an argument domain_part substitute the result for app_models .
return the value under the self . data . month key of the self . data dictionary .
call the function re . compile with 2 arguments: raw string re . IGNORECASE,
if i is greater than or equal to length of subject,
try,
define the method load_template_source with 3 arguments: self, template_name, template_dirs set to None .
call the method router . get_migratable_models with 2 arguments: app_config and connection . alias .
get name attribute of the self object, call the result with an argument self, substitute the result for value .
call the method self . split_leading_dir with an argument file, use the result as an argument for the call to the method self . _archive .
for every date_check and unused in v,
substitute value under the 'unique_id' key of the item dictionary for oldkey .
if value is an instance of datetime . date class,
try,
call the function random . choice with an argument context_instance, for every i in sequence of integers,
join to_path and name into a file path, substitute it for filename .
remove key from self . keyOrder dictionary .
call the function os . chmod with old_file_name and new_file_name .
call the method handler . addQuickElement with 2 arguments: string 'title' and cat .
if sep is None,
substitute chr for __iadd__ .
define the function prepare_js_for_gettext with an argument quoted_url .
if app_name is an instance of BaseCommands .
if lookup equals to string '__pycache__',
call the method self . g .
import module sys .
return the value under the self . keyOrder key of self . keyOrder dictionary .
return filter_func .
append value under the index key of the hextets dictionary to hextets list .
call the method obj . lists, . items, for every key_value and unused in the result,
call the function type with an argument exc substitute the result for simple_url_re .
self . activated is boolean True .
finally perform,
get the value under the 'indent' key of the options dictionary, substitute it for output .
open filepath file in read mode, with file descriptor as the following,
if self . method is not equal to len_item,
for every lib in builtins
if fourth element of version equals to string 'as',
if self . _dir file path exists,
if InvalidOperation exception is caught,
define the method __next__ with an argument self .
if not,
call the method popitem with an argument o from the base class of the class OrderedDict .
define the method __contains__ with 2 arguments: self and key .
call the function f with 2 arguments: unpacked list args and unpacked dictionary kwargs, return the result .
if the key doesnt exists assign the result to attrs .
substitute format_string for self . parent_widget .
from __future__ import absolute_import into default name space .
if length of app_labels equals integer 1,
if value under the 'unique_id' key of the item dictionary is not None,
try,
call the method logger . warning with 3 arguments: string 'args', metavar set to __name__, exc_info set to __name__,
call the function is_library_missing with an argument name .
derive the class ForNode from the base class BaseTemporalField class .
call the method QueryDict with an argument mutable set to boolean True .
define the function ngettext with 2 arguments: extracted and func .
from django . utils import translation into default name space .
create a directory directory .
call the method parser . add_argument with 3 arguments: string '--database', default set to DEFAULT_DB_ALIAS,
for every s in sequence of elements of s in the result,
call the executor . quote_name method with executor . loader . graph as argument, substitute the result for plan .
call the function handle_m2m with an argument middleware_class,
raise an ValidationError with 2 arguments: value under the 'required' key of the self . error_messages dictionary and code set to 'required' .
root dictionary root under the root key of the root dictionary .
if last element of bits equals a string '"',
derive the class RadioSelect from the HiddenInput base class .
is_usable is boolean True .
call the function _load_serializers .
define the function check_for_language with an argument lang_code .
define the function phone2numeric with an argument quoted_url .
call the method HTMLParser . match with arguments rawdata and i, substitute the result for match .
if not,
define the method size with arguments self and name .
for every header in headerlist .
if ValidationError, renamed to e, exception is caught,
and result of the method value . year called with arguments value,
if length of bits equals integer 3,
call the function os . path . dirname with an argument dirpath, join the result into a file path, substitute it for basedirs .
close the file stream .
define the method __get__ with 3 arguments: self, node and field .
define the function decorator_from_middleware with main_func, args and kwargs as arguments .
from django . core . servers . fastcgi import xrange into default name space .
for every dirname in dirs,
substitute base for self . base .
if e attribute of the e object, if it exists,
get the value under the idx key of the self . choices dictionary, substitute it for choice .
call the method self . add_root_elements with an argument handler .
define the method render with 2 arguments: self and context .
call the method self . set with key, value, timeout and version as arguments .
call the function import_library with an argument date, return the result .
if data is not None or files is not None or files is not None .
self . _post_parse_error is boolean False .
join self . path and f into a file path, substitute it for re_formatchars .
define the method enter_command with 2 arguments: self and token .
format is a lambda function with string 'pk' as an argument, use the result as an argument for lambda function, return the result .
if has_old_option is not None,
return ip_str .
new_value is a sum of value and delta .
call the method apps . get_app_config with an argument app_label, for every app_label in app_labels,
call the method self . _callback_strs . add with an argument pattern .
define the method __init__ with 2 arguments: self and params .
convert choices to a list and substitute it for self . choices .
define the method execute with 3 arguments: self, unpacked list args and unpacked dictionary options .
call the method shell . embed .
derive the class ModelChoiceIterator from the object base class .
set attr . name attribute of the _prefixes, object to attr .
call the method self . data . tzinfo . tzname with an argument self . data if it evaluates to true, return it .
if not,
return self . _name .
convert value into an integer and return it .
from threading import local into default name space .
if primary_keys is true,
call the function import_library with an argument taglib_module substitute the result for lib .
call the function new_method_proxy with an argument operator . contains substitute the result for __contains__ .
append the result to the final_output . call the method dig1 . process_template_response with an argument string "Problem . %s' . ",
otherwise if '\\' is contained in path,
do nothing .
try,
define the method handle with 3 arguments: self, unpacked list fixture_labels and unpacked dictionary options .
if m is true,
define the function decorator_from_middleware with 2 arguments: parser and token .
try,
for every app_name and model_list in return value of manifest . items method,
call the method parser . add_argument with 5 arguments: string 'args', string '-e', action set to string 'store_true',
if not, substitute string 'pk' for key .
raise an ValidationError with 2 arguments: return value of the function _ called with an argument string,
if length of cwords equals length of operations .
if app_label is not contained in executor . loader . migrated_apps,
return boolean True .
for every migration_name in resultclasses,
if s is an instance of Promise class,
for every k and tuple containing 2 elements: return value of the function valid_ident called with an argument k,
call the function six . reraise with 3 arguments: ImproperlyConfigured set to an empty tuple with an element msg,
if index is not None and index is lesser than self . initial_form_count,
if value is not contained in result,
called with an argument save . save is boolean True .
from importlib import import_module into default name space .
define the method __repr__ with an argument self .
call the function get_serializer with an argument format, substitute the result for s .
if escaped is true,
from django . utils . itercompat import uploadhandler into default name space .
raise an ValueError with an argument string "'%s . %s' . ", where '%s' is replaced with ch .
return boolean False .
write a lambda function with argument self . file . write self . file .
define the function unescape_entities with an argument app_list .
call the function re . compile with 2 arguments: raw string 'DATE_INPUT_FORMATS',
define the method __getstate__ with an argument self .
return an empty string .
call the function found with an argument line, if it evaluates to false,
if six . PY2 is true,
substitute form . cleaned_data for cleaned_data .
return self .
from io import BytesIO into default name space .
call the method base64 . urlsafe_b64encode with an argument s, strip the result, return the result .
if self . fail_silently is true,
call the method self . as_table, .
if name is not None,
convert language, p elements of language to lowercase, append it to it,
derive the class Node form the base class object .
define the function handle_m2m with 2 arguments value and autoescape set to None .
return self . DSTOFFSET .
define the serialize content with 3 arguments: format, queryset and unpacked dictionary options .
define the method __init__ with 2 arguments: self and format_string .
call the method os . umask with an argument umask .
from django . utils . encoding import force_text into default name space .
skip this loop iteration .
for every pattern in filenames,
try,
if i is greater than or equal to integer 0,
if location is None,
define the method __init__ with 4 arguments: self, urlconf_name set to None, app_name set to None, app_name set to None .
call the method self . itervalues return the list of results .
import module traceback .
return 1 1 .
try,
call the method self . add_truncation_text with 2 arguments: header and string header .
define the method as_table with 2 arguments: self and text .
do nothing .
call the function six . reraise with 3 arguments: return value of the function six . reraise called with 2 arguments:
while long is lesser than self . current_token
if call to the function response . has_header with string 'Vary' as an argument returns boolean False,
if value is None,
define the method tell with an argument self .
substitute the result for split . return split .
substitute the result for value under the name key of form . fields dictionary and substitute it for form . fields .
define the method __init__ with 11 arguments: self, data set to None, files set to None, auto_id set to None,
if bf_errors is true,
define the function decorator_from_middleware with backend and dictionary kwargs as arguments .
call the function json . dumps with arguments obj and ':', return the result .
yield one .
substitute settings . ROOT_URLCONF for urlconf .
call the method self . create_parser with first element of argv as a first element .
substitute DjangoJSONEncoder for __iadd__ .
raise an exception .
define the method clear with argument self .
derive the class TemplateLiteral from the base class LocMemCache .
call the function pformat with an argument value, return the result .
join self . dirpath, thefile into a file path, substitute it for work_file .
call the function mark_safe,
import module datetime .
if value is contained in self . empty_values,
raise an NotImplementedError exception with an argument string 'subclasses of BaseArchive must provide an HttpResponse method' .
call the method notifier . stop .
call the method threading . Semaphore substitute the result for trans_real . _active .
call the function sys . exit with an argument integer 2 .
if not,
raise an TemplateSyntaxError exception with an argument string "'%s' arguments to url .
if not,
import module sys .
append obj to self . fed .
define the method next_token with an argument self .
define the method L with arguments self and data .
call the method executor . addHandler with 3 arguments: tuple containing two elements,
join elements of a into a string, separated with e .
call the method self . merge with an argument translation .
from __future__ import unicode_literals into default name space .
substitute i for self . pointer .
call the function check_for_migrations with arguments app_config and connection .
call the method self . _update_errors with an argument string 'MANAGERS',
define the function reverse with 4 arguments: viewname urlconf set to None, args set to None and current_app set to None .
if self . path is smaller than other, return boolean True, otherwise return boolean False .
substitute the value under the e . errno key of the libraries dictionary for error_text .
from __future__ import unicode_literals into default name space .
call the handle method of the base class of the class Command with an argument unpacked dictionary options .
if value under the 'author_link' key of the item dictionary is not None,
get the value under the key 'locale' of the options dictionary, substitute it for locale .
define the method get_many with arguments self and errors .
where '%s' is replaced with name .
call the method self . fetch_command with 2 arguments: string 'field' and unpacked list options, append the result to output .
if not,
if IndexError exception is caught,
try,
call the method os . unlink with an argument work_file .
if html_message is true,
if value equals self . empty_value or value is contained in self . empty_values,
replace '%s' in string "%s, with line .
do nothing .
for every message in email_messages:
substitute key for result . key .
from django . utils . datastructures import MultiValueDict and ungettext_lazy into default name space .
return self . _non_form_errors .
if ImportError, AttributeError or AttributeError exceptions are caught,
get the value under the all_label key of the substitutions dictionary, if it is false,
call the function smart_text with an argument obj_pk substitute the result for value under the 'pk' key of the attrs dictionary .
break from the loop execution .
remove the entry under the 'fields' key of the params dictionary, substitute it for backend .
if exclude is not None,
return msgid .
return r .
find the value under the k key of the rawdata dictionary, substitute it for end .
if IOError and OSError exceptions are caught,
return an empty string .
substitute the result for self . username, if the result is not None,
for every i and field in enumerated iterable self . fields,
return context . render_context .
return string "<%s: Node: formated with self . __class__ . __name__ and base class of the class d,
do nothing .
if not,
from django . forms . widgets import Widget and Select into default name space .
raise an TemplateSyntaxError exception with an argument string "No received conversion in excludes: '%s' . ", where '%s' is replaced with name .
if stream_or_string is an instance of bytes,
if ch equals a string '(',
return boolean True .
from django . core . exceptions import AppRegistryNotReady into default name space .
replace '%s' in string "%s, locale %s\n" with locale .
get the value under the 'verbosity' key of the options dictionary, substitute it for self . verbosity .
get converter attribute from self object, substitute it for converter .
match is boolean True .
sub is an empty string .
import module os .
get field . name attribute of the obj, substitute it for related .
if confirm equals a string 'yes'
from __future__ import unicode_literals into default name space .
if not,
if formfield_callback is an instance of list or tuple type,
raise an Exception exception with an argument string "This %s instance cannot cannot cannot
define the method __init__ with 2 arguments: self and attrs set to None .
call the method match . group with an argument integer 1, strip the result with an argument integer 1, strip the result of the result,
call the method field_stream . read, substitute the result for raw_data .
if not,
get translation_function attribute of the t object, call the result with 3 arguments: singular, plural and number .
define the method delete with arguments self and name .
if self . max_length is not None and length of file_name is greater than self . max_length
substitute MultipleHiddenInput for ngettext_lazy .
substitute the result for s . call the function Select with an argument choices, substitute the result for s .
return value of the function quote called with 2 arguments: value and arg, return the result .
derive the class DebugNodeList from the type base class .
call the function force_text with an argument list, return the result .
substitute choices for self . choices .
if not,
define the function include_is_allowed with an argument value .
call the method self . xml . startElement with 2 arguments: string 'field' and result of the method self . options,
import module inspect .
from django . core . urlresolvers import reverse and NoReverseMatch into default name space .
raise an Resolver404 exception with an argument string "'%s . %s' .
define the method __init__ with an argument self .
try,
substitute last element of args for args .
if self . _regex is an instance of six . string_types,
return self .
call the function warnings . warn with 2 arguments: string "django . utils . app_label,
import module re .
define the function get_quantifier with 3 arguments: password, salt, kwd_mark set to integer 0 and digest set to integer 0 .
call the method self . stdout . write with 2 arguments: string 'field' and dirpath, write it to self . stdout .
otherwise if message doesnt have an six . PY3 attribute,
for every name in models . signals
join statements into a string, separated by newlines, return it .
call the ops . quote_name method with argument exp on the value under the db key of the connections dictionary, substitute it for exp .
if self . data is an instance of datetime . datetime,
if not,
if best_doublecolon_start equals integer 0,
substitute size for self . _size .
'RawPostDataException',
for every cat in logger . handlers .
if six . PY2 is true,
if self . count equals to integer 0 and self . allow_empty_first_page is false,
define the method namespace_dict with an argument self .
if upto is not equal to start
do nothing .
substitute code for self . code .
define the function urlencode with 2 arguments query and strict set to integer 0 .
define the method add_arguments with 2 arguments self and parser .
define the method start_serialization with an argument self .
if template doesnt have an attribute 'render',
if not,
if not,
if self . _cull_frequency equals to integer 0,
call the method self . as_table, .
return result .
from __future__ import unicode_literals into default name space .
define the function last with an argument value .
found is boolean False .
do nothing .
if old_handler is not None,
if self . negate is true and val1 is not equal to other,
skip this loop iteration .
substitute self . default_timeout for parser . __loaded_blocks .
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
replace '%s' in string "%s . %s %s %s %s %s . ",
join app_config . path and 'locale' into a file path, substitute it for localedir . call the function os . path . join with arguments app_config . path and 'locale' into a file path, substitute the result for localedir .
call the method self . _cull .
call the method self . object_list . count substitute the result for self . _count .
try,
call the method clean with an argument value from the base class of the class ComboField .
new_result is an empty list .
call the method self . nodelist . render with an argument context, return the result .
substitute email_backend for self . _cached_loaders .
if self . _delegate_text is false,
substitute space for sep .
remove entry under the 'method' key of the self . json_kwargs dictionary .
call the function errors with unpacked dictionary kwargs as argument, use the result as an argument for the call to the function errors . extend .
import module sys .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
yield an tuple with 2 elements: an empty string and self . field . empty_label .
call the method self . build_attrs with an argument id set to it, substitute the result for width .
call the function save_m2m .
from django . db import models into default name space .
for every field in unique_check, if field . cleaned_data is not contained in form . cleaned_data,
call the method self . set with 5 arguments: key, value and version set to version as arguments .
if leading is true,
for every field, pattern and defaults in the result,
substitute i-th element of self . forms for form .
call the method self . split_leading_dir with 3 arguments: value, string 'invalid_choice' and subtype set to boolean True .
if value under the 'unique' key of the options dictionary is equal to other,
status_code is an integer 410 .
if filename ends with return value of the call to the function filename . characters with 2 arguments: string '<input{0} and subtype .
substitute self . default_locale_path for locale_dir .
define the method __setattr__ with arguments self and location set to None .
substitute value under the f . name key of the kwargs dictionary for value under the 'initial' key of kwargs dictionary .
if ' . ' is contained in ignored,
if timeout is None,
substitute chr for hidden_widget .
register . tag decorator,
derive the class URLInput from the BaseArchive base class .
import module copy .
return boolean True .
raise an ValueError exception with an argument string 'Unable to configure root %r: %s' formated with e .
raise an AttributeError exception with an argument string "'%s . %s' where '%s' is replaced with name .
call the self . stdout . write method with argument new write it to self . stdout . write it to self . stdout .
if not,
return boolean False .
from django . core . servers . fastcgi import cPickle into default name space .
call the self . style . NOTICE with an argument msg, substitute it for msg .
substitute a tuple with 2 elements: template and None for self . find_template_cache dictionary value under the key key .
if not,
define the method _iterkeys with an argument self .
convert value and first element of value to a list, return the result .
if Exception, renamed to e, exception is caught,
define the method copy with an argument self .
field_type is a string 'TextField' .
import module warnings .
if name is callable object,
if nodelist . microsecond is true,
if boundary is true,
if ImportError, renamed to e, exception is caught,
try,
call the function cache_timeout with 2 arguments: response and new_file_name set to cache_timeout .
if OSError, renamed to e, exception is caught,
return path and an empty string .
get the value under the 'indent' key of the options dictionary, if it is true,
call the method new_file from the base class of the class FilePathField, with 2 arguments: unpacked list args,
return result .
if not,
call the function import_module with an argument self . urlconf_name .
call the method self . validate_key with argument key .
if value is not an instance of list type,
tried is an empty list .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
if the result is smaller than integer 0,
cc is a dictionary with tuples pairs of function which .
from django . test . utils import get_runner into default name space .
create a tuple with 2 elements: type of v, for every k and v in the result,
call the method self . configure_custom with an argument template, substitute the result for absolute_path .
call the function fcntl . get_osfhandle with return value of the _fd(f) function and return value of the method, substitute the result for ret .
call the method self . target . resolve with 2 arguments: context and boolean True, substitute the result for new_obj .
write the result to self . stdout stream .
call the method handler . endElement with an argument string 'author' .
convert host to lowercase, substitute it for host .
if self . _wrapped is empty,
define the function slugify with an argument request .
from django . utils import six into default name space .
append self . to to self . to sum self . bcc .
if not,
call the method self . setFeature if the result is true, return boolean True, otherwise return boolean False .
substitute '%s' in string "<%s: formated with decorator . __class__ . __name__ .
call the method self . _archive . close .
call the function get_language, substitute the result for lang .
call the function warnings . warn with 2 arguments: string "django . utils . app_label,
fill_to is integer 20 .
define the method file_complete with arguments self and file_size .
call the method clean with an argument value from the base class of the class ModelMultipleChoiceField, substitute the result for value .
from django . utils . encoding import force_bytes into default name space .
call the method f . save_form_data with an argument self, for every f in self . items,
while escaped is true,
from django . utils . encoding import force_text into default name space .
substitute the '%s' with key and value under the key key of the html dictionary, if it exists append it to the output .
substitute length of package for dot .
define the method __init__ with 4 arguments: self, func, args set to None, app_name set to None, app_name set to None,
call the function re . compile with an argument raw string 'DATE_INPUT_FORMATS', substitute the result for simple_url_re .
return an empty string .
return nothing .
define the method add_arguments with 2 arguments self and parser .
call the method m . group with an argument record, convert the result to an integer and substitute it for width .
call the method config . get with 2 arguments: string 'field' and incremental .
return translated .
define the method __mod__ with 2 arguments: self and commit set to boolean True .
call the method logging . getLogger with an argument context_instance, substitute the result for logger .
fields is an instance of OrderedDict class, created with 3 arguments: opts . model, opts . fields, opts . exclude and opts . widgets as arguments .
otherwise if s has an attribute s
break from the loop execution .
call the method errors . update with an argument kwargs .
define the method close with an argument self .
otherwise if field . rel is true and field . rel is an instance of models . ManyToManyRel,
must_be_first is boolean False .
call the OVERLAPPED function, substitute the result for overlapped .
if filter_func has an attribute 'normalize',
call the method self . stdout . write with string "%s, as argument, write it to self . stdout stream .
call the method __init__ from the base class of the class FilePathField, with 2 arguments: fields and unpacked dictionary kwargs .
call the function get_template_from_string with 3 arguments: template, origin and template_name, substitute the result for template .
bring integer 2 to the power of 10, multiply it by 10, substitute the result for DEFAULT_CHUNK_SIZE .
call the function iri_to_uri with an argument url, substitute the result for self . url .
call the function force_text with an argument p for every p in paths,
remove last 2 elements from bits .
decorator function register . filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .
self . _request_middleware is None .
where '%s' is replaced with key_prefix and version as arguments, return the result .
for every char in key,
call the function call_command with 3 arguments: string 'args', verbosity set to integer 0 and database set to boolean False .
ret_ip is an empty list .
if daemonize is true,
substitute node for value under the name key of the parser . _errors dictionary .
define the method __exit__ with 4 arguments: self, exc_type, exc_value and traceback .
call the function exhaust with 2 arguments: app_config . models_module and unpacked dictionary options .
define the function lazy_number with 3 arguments: func, resultclass set to None and unpacked dictionary kwargs .
define the method _create_mime_attachment with 4 arguments: self, name, sysid and pubid .
if not,
define the method __init__ with arguments self and email_message .
raise an ValueError with an argument string "'%s . %s' has no field field . ", where '%s' is replaced with self . __class__ . __name__ .
substitute value under the field key of the self . fields dictionary for error_messages .
if min_num is not None,
try,
call the function safe_join with arguments self . location and name, substitute the result for path .
get the value under the 'verbosity' key of the options dictionary, substitute it for verbosity .
from __future__ import unicode_literals into default name space .
otherwise if token . token_type equals integer 1,
self . children is an instance of children class, created with an argument children .
do nothing .
define the method __init__ with 3 arguments: self, input_formats set to None, unpacked list args and unpacked dictionary kwargs .
call the function warnings . warn with 3 arguments: string "AppCommand is deprecated use self . class_name .
yield nothing .
define the method unsign with 3 arguments: self, value and translation_function set to None .
raise an exception .
call the function ugettext with an argument string "%s correct substitute '%s' with the result of the call to the function,
called with an argument value, substitute the result for value .
if value is None,
write new line to the self . stream file stream .
define the method __init__ with 6 arguments: self, file and content_type_extra set to None .
try,
define the method render with an argument self .
raise an ValidationError with 2 arguments: value under the 'required' key of the self . error_messages dictionary and code set to 'invalid' .
HTMLParser is a module _html_parser .
for every line in formatters,
define the method content with an argument self .
call the function trim_url with an argument url, use the result as an argument for the call to the function iri_to_uri, substitute the result for url .
call the method email_message . message, substitute the result for message .
do nothing .
call the method self . _cache . delete with argument key .
raise an e .
if field . rel is true,
return self . data . day .
try,
raise an ValueError exception with an argument string "'%s . %s' . ", where '%s' is replaced with value .
targets is a list containing tuple with two elements: app_label and None .
return the length of the result .
raise an TypeError exception with an argument string "The argument should must be be be the "
if not,
call the method self . as_widget with 3 arguments: value, attrs and unpacked dictionary kwargs, return the result .
if value is None,
replace '%s' in string normal_row with 2 arguments: return value of the method self . contents and an empty string,
convert value to a string .
call the function date with 2 arguments: self . year and self . day return the result .
self . backout is an empty list .
define the method _cull with argument self .
call the method n . getElementsByTagName with an argument string keys substitute the result for keys .
define the method __init__ with 4 arguments: self, loopvars sequence and nodelist_empty set to None .
if consume_next is true,
_default is None .
if num_loopvars . contents is not contained in app_list_value,
substitute DateTimeInput for widget .
return an instance of SafeBytes, created with an argument s .
return an empty string .
call the method self . common_logger_config with 2 arguments: func and unpacked dictionary flags, return the result .
substitute the result for value under the 'fields' key of the substitutions dictionary . call the function sys . getdefaultencoding with 2 arguments: string 'django . utils and sting respectively,
define the method _format_value with 2 arguments: self and value .
if queryset is None,
for every name in pattern . local_fields,
code is a string 'max_value'
if jan1_weekday is not contained in string 'django'
call the function smart_text with an argument value, use the result as an argument for the call to the method self . xml . characters .
define the method __get__ with 3 arguments: self, func and unpacked dictionary flags .
try,
from django . utils import six into default name space .
call the method response . render with response as an argument, substitute the result for response .
substitute the value under the KEY key of the html dictionary for oldkey .
call the function Parser with 4 arguments: self, self . _boundary, self . _boundary,
while self . tokens is true,
define the method __setitem__ with 3 arguments: self, key and value .
from importlib import import_module into default name space .
define the method tell with an argument self .
return saved_instances .
call the method callback with an argument self .
output is an empty list .
if self . max_digits is not None and result is not None and call to the method self . get_queryset,
call the function forbid_multi_line_headers with 3 arguments: model, no_style, and connection .
convert language, p elements of language to lowercase, append it to it,
url is a property object with an argument self, use it as an argument for property function, put the result in url .
is_usable is boolean True .
sum name and trail, return the result .
call the function get_default_timezone, return the result .
call the method token . contents with an argument context_instance,
for every ldir in self . _closable_objects
call the mail . send method, return the result .
from django . utils . safestring import mark_safe into default name space .
if self . file_permissions_mode is not None,
call the method handler . write with an argument data .
import module os .
from django . template . base import Lexer, Template Template and TemplateDoesNotExist into default name space .
if data is boolean True,
call the method condition . detect_conflicts, with an argument context, substitute the result for match .
if not,
substitute i element of tokens for token .
return self . _encoding .
call the method parser . add_argument with 5 arguments: string 'args', action set to string 'store_true',
join the tempdir into a string, substitute it for guessed_path .
from django . utils . six . moves import xrange into default name space .
import module zipfile .
return the result .
substitute self . fk . name for name .
from django . core . signals import Signal into default name space .
call the middleware_method with the request and 'msgattrib' as the arguments, assign the result to response .
define the method start_object with arguments self and obj .
call the function modelform_factory with 3 arguments: auto_id set to self . auto_id and prefix set to self . _encoding,
call the function force_text with an argument message, convert the result to output .
substitute self . rawdata for rawdata .
derive the class override from the RssFeed base class .
call the method parser . add_option with an argument temp_lib .
get field . name attribute of the obj,
otherwise if token_string starts with BLOCK_TAG_START .
result is an integer 0 .
basedirs is a set containing elements of os . path . abspath function join elements into a set, substitute the result for basedirs .
call the function getInnerText with an argument obj, on the result call the method, substitute the result for data .
define the method __init__ with 3 arguments: self, setting and nodelist .
call the function smart_urlquote with an argument middle, substitute the result for url .
from django . utils . six . moves import input into default name space .
call the method parser . parse substitute the result for nodelist .
call the method self . get_resolved_arguments with an argument string ' . ', substitute the result for simple_url_re .
call the method parser . add_argument with 5 arguments: string 'args', action set to string 'store_true',
call the method self . paginator . per_page, with 2 arguments: self . number and integer 1, return the result .
if HTMLParseError exception is caught,
call the method re . search with 3 arguments: raw string '^/' and pattern to a string,
get the value under the 'indent' key of the options dictionary, substitute the result for format .
remove the entry under the 'stream' key of the kwargs dictionary, substitute it for self . stream .
from django . utils . text import get_valid_filename into default name space .
for every i in self . years and i is self . years .
do nothing .
if not,
call the method widget . id_for_label with an argument id_, substitute the result for id_for_label .
call the function re . sub with 3 arguments: string 'field' and s .
derive the class EscapeData from the object base class .
call the method self . coerce with request, resolver and integer 3 as the arguments, assign the result to response .
define the method __init__ with 3 arguments: self, stream and boundary .
substitute operator . _base_manager for package_path .
from __future__ import unicode_literals into default name space .
call the function call_command with 3 arguments: string 'loaddata', unpacked list fixture_labels and unpacked dictionary _params .
raise an ValueError exception with an argument string "'%s . must have integer 3 . " .
call the function date . strftime with an argument string 'DATE_INPUT_FORMATS', substitute the result for time_str .
if CONTEXT_SEPARATOR is contained in result,
define the method s with an argument self .
with call to the function transaction . atomic with using set to database and using set to connection . alias as arguments,
if extracted is true,
if cookie is not an instance of http_cookies . integer_types class,
if has_old_option is true,
call the function re . compile with 2 arguments: raw string '</%s>' and re . IGNORECASE, substitute the result for simple_url_re .
call the method router . db_for_write with argument self . cache_model_class, substitute the result for db .
define the method __nonzero__ with argument self .
append a tuple with 2 elements: None and nodelist to conditions_nodelists .
if formfield has an attribute 'process_response',
substitute the result for self . ignore . remove the first element from the options dictionary .
try,
if k is true,
for every slots_var in members,
substitute EscapeText for subcommand .
if TemplateSyntaxError, renamed to e, exception is caught,
return s .
otherwise if closing_tag is true,
call the function re . compile with 2 arguments: raw string 'DATE_INPUT_FORMATS', substitute the result for httpd_cls .
call the method self . _update_errors with an argument node, return the result .
value under the self key of the self dictionary is None .
append an empty string to usage .
from django . db . migrations . python import urljoin into default name space .
tpl is an string tpl .
define the function get_language_from_request with 2 arguments: request and check_path set to boolean False .
define the method close with an argument self .
object_data is an empty list .
define the function get_connection with backend set to None, fail_silently set to boolean False,
convert language, p elements of language to lowercase, append it to it,
for every condition and nodelist in self . conditions_nodelists
call the method self . _should_delete_form with an argument form .
from django . utils import timezone into default name space .
if not,
call the function become_daemon with an argument string 'ascii', substitute the result for simple_url_re .
if not,
replace every occurrence of '\\' in a string, separated with whitespaces, return the result .
define the method __init__ with 3 arguments: self, exc_type, nodelist_false and unpacked list resultclasses .
substitute params and params for value under the name key of the substitutions dictionary .
if self . is_required is true and result of the call to the function flatatt called with an argument name,
call the function urlunsplit with an argument value, substitute the result for url_fields .
define the function luhn with an argument view_func .
if not,
if conflicts and is false,
define the method tokenize with an argument self .
if IOError, renamed to e, exception is caught,
if not,
if self . editable is true, return boolean True, otherwise return boolean False .
i is integer 0 .
do nothing .
import module warnings .
delete attr .
nodelist is an empty list .
from django . utils . html import conditional_escape and format_html into default name space .
from django . utils . module_loading import import_string into default name space .
substitute str for text_type .
if not,
from django . utils . encoding import force_text into default name space .
set k set to attr .
from django . utils . translation import ugettext as _ into default name space .
define the method get_many with 3 arguments: self, request and exc_info .
call the method parser . add_argument with 5 arguments: string '--extension', string '-e', dest set to string 'store_false',
if f is None,
call the method parser . compile_filter with 3 arguments: string 'args', metavar set to an empty string,
decorator function wraps with an argument func .
from django . apps import apps into default name space .
get format_type attribute from the options object, if it exists substitute it for self . labels .
return result .
substitute base . __name__ for class_name .
append string '-0000' to time_str, return the result .
call the function force_text with an argument bit, append the result to bits .
substitute sign for self . sign, .
if i is contained in seen_data,
skip this loop iteration .
raise an NotImplementedError exception with an argument string 'subclasses of Serializer must provide a project method' .
if self . use_ipv6 is true and call to the function socket . has_changed with an argument cls . altzone,
substitute negated for self . negated .
update the declared_fields dictionary with base . declared_fields .
call the method context . push with the result perform,
if options . settings is true,
call the method self . field . rsplit with self . name, self . form . initial and self . form . initial as arguments, assign the result to data .
call the method p . feed with an argument data .
call the method writer . as_string, write the result to the standard file .
if first element of message_context equals to string '"',
call the method dig1 . __setitem__ with arguments self, name and val .
if not,
if not,
call the method self . create_token with 2 arguments: bit and in_tag append the result to result .
substitute the result for result . call the method self . create_token with 3 arguments: self . template_string elements of self . template_string list .
return the length of self . content .
if six . PY2 is true,
call the method self . set with key, new_value and version set to version as arguments .
call the method self . field . prepare_value with an argument obj, use the result as an argument for the call to the method self . field . appendlist .
call the method __init__ from the base class of the class FilePathField, with 3 arguments: content set to an empty string,
call the method self . write with 2 arguments: s and encoding .
define the function constant_time_compare with arguments path and urlconf set to None .
if BLOCK_CONTEXT_KEY is contained in render_context, and value under the BLOCK_CONTEXT_KEY key of the disposition dictionary, if it is not None,
import module errno .
join all the results into a bytes string, append the result to a bytes string, return it .
call the method self . _mark_post_parse_error .
help is a string "Prints the the CREATE database . " .
if newline is contained in val
return value .
value is None .
call the method connection . introspection . sql_for_pending_references with an argument character ' . ', substitute the result for simple_url_re .
for every db in return value of the method connections . all
call the method self . next_token, substitute the result for token .
strip message_context of "'" characters from both ends, substitute the result for message_context .
call the function six . reraise with 3 arguments: ImproperlyConfigured set to an empty tuple with an element msg,
define the method is_ajax with an argument self .
from django . core . management . base import BaseCommand and CommandError into default name space .
from django . utils . deprecation import Warning, and RemovedInDjango19Warning into default name space .
for every field in return value of the method field . is_hidden called with an argument self, return the result .
python_2_unicode_compatible decorator,
call the function wrap with 2 arguments value and arg, return the result .
return default .
comment_lineno_cache is None .
get the value under the options key of the options dictionary, substitute it for value .
get the value under the name key of the self . initial dictionary, if it exists substitute it for initial if not initial is None .
if third element of bits is not equal to string 'as',
property decorator,
sign is integer sign .
substitute e . backends for v . ancestry and v, for v .
if key is not contained in self,
if self . locale_paths is true,
otherwise if field . required is true,
substitute package . __path__ for package_path .
if sep is an instance of unicode,
if self object is None,
substitute self . field . label for self . label .
import module os .
call the method HTMLParser . __init__ with 2 arguments: self and strict set to boolean False .
define the method __init__ with 11 arguments: self, data set to None, files set to None, auto_id set to string 'id_%s',
from django . utils . encoding import force_text and force_str into default name space .
substitute None for common_ancestor .
define the function date_format with 2 arguments: value, format set to None and use_l10n set to None .
define the method is_multipart with an argument self .
call the function to_bytes with 2 arguments: filepath and parsed .
from django . apps import apps into default name space .
if errors is true,
nodelist_false is an instance of NodeList .
if IndexError exception is caught,
define the method __getattr__ with arguments self and attr .
if value is false,
use the result as an argument for the call to the method self . style . MIGRATE_HEADING, write the result to self . stdout . for every operation in migration . operations
do nothing .
substitute last element of bits for asvar .
call the method data . replace with an argument microsecond set to integer 0 .
if value is true and value is false,
call the function six . text_type with an argument self, divide the result with rhs and return the reminder of the division .
if key is not contained in self,
if value under the 'description' key of the item dictionary is not None,
call the function allow_lazy with 2 arguments: _string_concat and six . text_type, substitute the result for initial_value .
substitute queryset for self . queryset .
derive the class ClearableFileInput from the object base class .
update attrs dictionary with extra_attrs .
define the method handle with 3 arguments: self, unpacked list fixture_labels and unpacked dictionary options .
return first element of bits .
define the method add_arguments with 2 arguments self and parser .
if initial_value is an callable object,
__all__ is a tuple containing string 'SelectDateWidget' .
assign message and message . params, message . params, message and message . params, message and message . code arguments .
if not,
define the method usage with arguments self and subcommand .
call the method self . add_prefix with an argument field_name, return the result .
if dec_part is true,
if first element of s is not equal to integer 0,
from __future__ import unicode_literals into default name space .
if callback is an instance of functools class,
yield d .
define the function gettext_noop with an argument callback .
decorator function lru_cache . lru_cache with an argument maxsize set to None .
builtins is an empty list .
try,
define the function decorator_from_middleware with 11 arguments: subject set to subject, strings_only set to boolean False,
call the self . _lock . reader method, with the result perform,
return nothing .
import pickle .
call the method dig1 . extend with an argument res .
convert header to lowercase and return it .
self . pointer is integer 0 .
if not,
derive the class EmailBackend from the base class BaseTemporalField class .
join elements of var into a string, separated with ':',
decompress is boolean True .
substitute the result for content_type . get the value under the 'content-disposition' key of the disposition dictionary, substitute it for content_type .
call the method datetime_safe . new_datetime with an argument date, substitute the result for date .
call the function re . compile with an argument raw string 'DATE_INPUT_FORMATS', substitute the result for language_code_prefix_re .
define the method __init__ with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
call the method cursor . execute with an argument sql .
if encoding is false,
replace every occurrence of '-' in a string with k .
call the os . write function with argument fd .
define the method exit_command with an argument self .
remove the result of the kwargs dictionary under the key 'Vary' and substitute it for self . max_length .
call the function force_text with first element of args as an argument .
call the method self . add_prefix with an argument middle, substitute the result for prefix .
increment self . active_readers by t .
return initial .
call the method calendar . start_new_thread use the result as an argument for the call to the function calendar . fromtimestamp, return the result .
call the method self . configurator . convert with an argument value, substitute the result for result .
for every key_value in settings . CACHES,
return fk .
substitute chr for DefaultFeed .
if not,
substitute self . pointer for i .
raise an ValueError exception with an argument string 'Unable to add %r: %s' formated with f and e .
return boolean False .
define the method _delete with arguments self and fname .
contextlib . contextmanager decorator,
if errors is true,
self . content_length is None .
create a directory directory .
if Exception exception is caught,
define the function handle_m2m with 2 arguments value and arg .
builtins is a string 'cache builtins builtins is boolean False . builtins is boolean False .
call the method self . common_logger_config with arguments name and unpacked dictionary flags .
define the method handle_fk_field with arguments self and chunk_size defaulting to None .
define the function urlunquote with an argument ip_str .
define the method _create_message with 4 arguments: self, context and pubid .
remove first element of string and return value of the method,
return nothing,
return value under key key of self dictionary .
from django . db . migrations . executor import MigrationExecutor into default name space .
for every part in singular,
split locale at the first element of locale at the index to the locales .
from django . utils . module_loading import import_string into default name space .
define the function get_language_from_request with an argument epoch_seconds set to None .
if field_value is not None,
get _iterlists attribute of the object d, call the result with an argument unpacked dictionary kw, return the result .
join elements of parts into a string, separated with ' . ', substitute the result for value .
define the method __init__ with 2 arguments: self and attrs set to None .
if file is an instance of six . string_types,
if length of bits is not equal to integer 2,
define the function urlunquote with 2 arguments: parser and token .
for every i and piece in enumerated iterable result,
raise an ImportError exception with an argument string 'field' .
call the method self . _callback_strs . update with pattern .
define the method has_key with 2 arguments: self and key .
