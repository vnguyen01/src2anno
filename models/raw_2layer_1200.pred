if e . connection_reset is false,
append filename to self . attachments .
decorator function register . filter with an argument is_safe set to boolean True .
substitute value under the key key of the d dictionary for d .
call the function func with 2 arguments: unpacked list unpacked dictionary kwds,
if self . _leftover is true,
return the value under the db key of the self . _caches dictionary .
do nothing .
call the method context_match . group with an argument integer 1, substitute the result for message_context .
from django . conf import settings into default name space .
help is a string "Creates a CREATE a database for the given model . " .
for every migration in all_issues,
define the method render with an argument self .
if length of words is greater than length,
if not,
if self . required is false,
call the method self . _clean_fields .
call the method password . copy with 2 arguments: return value of the function digest, with an argument name,
define the function truncatechars with 2 arguments: text and deactivate .
if app_config . models_module is None,
return _cached_filenames .
substitute file_size for value under the language_code key of the self . _namespace_dict dictionary .
from django . utils . http import BaseEmailBackend into default name space .
do nothing .
derive the class Loader from the BaseLoader base class .
if not,
zip is a tuple with 2 elements: tuple with 2 elements: '<' and string ' .
define the method display with an argument self .
define the function convert_old_style_list with an argument list_ .
try,
dirs is an empty list .
define the method __init__ with 6 arguments: self, max_value set to None, min_value set to None,
if result is not None,
call the function os . path . dirname with an argument filename, substitute the result for norm_patterns .
get the value under the key of the options dictionary, substitute it for self . domain .
if self . instance . pk is not None,
join '%s' into a string, separated by newlines, return it .
call the method self . _iteritems, for every k and v in the result,
call the method self . create_var with an argument contents .
substitute http_cookies . __class__ for base .
from django . utils import formats into default name space .
sum bytes by bytes, substitute the result for value . otherwise if bytes is smaller than KB,
call the function bytes with 2 arguments: i and empty dictionary .
attrs is a string "%s is a instances of the class DateField, created with 4 arguments:
excluded_apps is an empty set .
raise an exception .
for every node in return value of the method call . nodelist,
define the method __repr__ with an argument self .
call the method sys . stderr . write with an argument string "Unable . %s', where '%s' is replaced with e .
join dirpath and f into a file .
call the function settings . is_overridden with an argument string 'MANAGERS', if it evaluates to true,
if key is contained in dict_,
call the function getargspec with an argument func, substitute the result for name and defaults .
if UnicodeDecodeError exception is caught,
call the function force_text with an argument value, substitute the result for fext .
from django . utils . encoding import force_st into default name space .
concatenate sign and dec_part, return the result .
do nothing .
define the function calculate_app_template_dirs with an argument s .
call the method initial_form_count from the base class of the class SortedDict return the result .
substitute v for value under k key of self dictionary .
sum last elements of filename to the result, append the result to filename .
call the function match . end .
otherwise if first element of g is deprecated
return boolean True .
if ext is false and content_type is true,
call the method zfile . close .
call the function unescape_entities with an argument argv .
substitute text_kwargs for self . _callback_str .
define the method __init__ with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
if not,
define the method id_for_label with 2 arguments: self and id_ .
substitute the '%s' of the result for value under the TOTAL_FORM_COUNT key of the substitutions dictionary . substitute
call the function re . compile with an argument raw string '0', substitute the result for __unicode__ .
define the method auto_id with an argument self .
call the method self . format_output with an argument f, return the result .
from django . forms . models import unpacked into default name space .
return new_value .
if self . _errors is None,
substitute safe for value under the library_name key of the kwargs dictionary .
call the method mutable . get with 2 arguments: self . status_code and True,
if call to the method response . has_header with string 'Vary' as an argument,
convert cc to a list, substitute it for self . cc .
return nothing .
if value under the 'verbosity' key of options dictionary is greater than integer 0,
substitute varlist for self . day_none_value .
call the method self . xml . startElement with 2 arguments: string 'field' and attrs .
from django . core import serializers into default name space .
recipients is a list containing 4 entries: return value of the method conflicts . encoding,
replace '%s' in string "Execution with self . app_or_project, substitute it for prefix .
if character '/' is true and path is contained in path,
with lock,
substitute name for self . name .
value under the hextets key of the hextets dictionary is an empty string .
if not,
call the function logging_config_func with an argument accept_lang, .
if not,
call the __init__ method of the base class of the class FilePathField, with 2 arguments: unpacked list args and unpacked dictionary kwargs .
self . keyOrder is an empty list .
call the method self . base_url with 2 arguments: self . base_url and name, return the result .
call the method block_context . execute with an argument statement .
if value is true,
call the function ungettext_lazy with 2 arguments: raw string 'Ensure this value (it has (it has arguments:
if settings . TEMPLATE_DEBUG is true,
from django . utils . _os import safe_join into default name space .
get the value under the DEFAULT_CACHE_ALIAS key of the caches object, if it exists return it, otherwise return boolean False .
import module sys .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
call the method logger . addHandler with an argument handler .
convert self to lowercase, return it .
call the function mark_safe with an argument output use the result as an argument for the call to the function mark_safe,
if smtplib . SMTPException exception is caught,
call the method parser . add_argument with 6 arguments: string string '--noinput', action as a string 'store_true',
if not,
substitute pubid for self . pubid .
dest set to string 'interactive', default set to boolean False and help as a string 'Tells Django to NOT prompt the user for input of any kind . ' . call the method parser . add_argument with 5 arguments: string '--noinput', action as a string 'store_true',
if not,
ser_fmt is None .
if not,
derive the class TemplateLiteral from the base class RendererMixin .
substitute boundary and next for next .
call the method pop with 2 arguments: integer 0 and end .
call the method self . set_cookie with 3 arguments: name, value and choices, for every widget in the result,
substitute value for self . value .
return output .
call the function timezone . utcnow, substitute the result for now .
append length of prefixed for migration_name .
if get_git_changeset is true,
try,
if opname is not contained in default_settings,
app_labels is an empty set .
call the function date_format with 3 arguments: display_name, nodelist_false and unpacked list kw, return the result .
define the method accessed_time with 2 arguments self and email_message .
if m is false,
return e .
define the method to_python with arguments self and data .
call the function six . iteritems with an argument base . iteritems, append the result to a list,
default_error_messages is an string "Error with return value of the function _ called with an argument string,
if not,
if run_syncdb . loader is true and executor . loader is false,
call the method prepare_value with an argument val from the base class of the class SimpleCookie .
call the method self . remove_potfiles .
call the method logging . connect with an argument boolean True .
derive the class BlockNode from the bytes base class .
call the function re . compile with arguments: regex and re . IGNORECASE, substitute the result for regex .
if not,
define the method rendered_content with arguments self and filename .
if ch is true,
derive the class AssignmentNode from the MIMEMixin base class .
define the method items with an argument self .
call the function mark_safe with an argument template, return the result .
call the BaseCache . __init__ method with self class instance, unpacked list args, unpacked dictionary kwargs as arguments .
return boolean False .
substitute '%s' in integer 0 and string with 3 entries: return value of the function _ called with 2 arguments:
join elements of output into a string, return it .
substitute DjangoJSONEncoder for ULONG_PTR .
raise an CommandError with an argument string "errors values . %s', where '%s' is replaced with self . settings_exception,
derive the class Parser form the base class object .
if y, and d is true,
if self . _cull_frequency is not None,
call the function params . get with 2 arguments: value under the 'filename' key of the params dictionary,
return usage .
call the function os . path . dirname with an argument fixture_name, substitute the result for fext .
call the method fp . getvalue, return the result .
if regex is not None,
define the method __str__ with an argument self .
substitute conditions_nodelists for self . conditions_nodelists .
if self . merge and conflicts is false,
call the method self . build_attrs with an argument attrs, substitute the result for final_attrs .
call the function os . path . join with 3 arguments:
escaper is a list with 3 initial initial and negated .
content . content decorator,
substitute old_mod for self . _cached_loaders .
otherwise if o is an instance of decimal . time,
substitute True for self . _meta .
derive the class ExternalReferenceForbidden from the object base class .
import module re .
from django . utils . encoding import smart_text and force_text into default name space .
return boolean False .
if param is not contained in config,
define the method extend_nodelist with 3 arguments: self, nodelist, node and token .
define the function force_text with an argument path .
from django . utils import six into default name space .
from __future__ import unicode_literals into default name space .
convert the result to a string and substitute it for simple_url_re . if not,
if f . name is contained in cleaned_data,
child_nodelists is an tuple with 2 initial elements: strings strings .
if self . var equals self . fk .
call the __init__ method from the base class of the class BaseInlineFormSet, with 4 arguments: data, files set to prefix and unpacked dictionary kwargs .
define the method tokenize with 2 arguments: self and message .
substitute value for the value under the field . attname key of the data dictionary .
define the method __init__ with 2 arguments: self and language .
define the method __init__ with 2 arguments: self and file .
try,
call the method six . text_type with an argument bf .
derive the class InputStreamExhausted from the KeyError base class .
call the function time_format with 2 arguments: value and arg, return the result .
get the value under the 'PATH_INFO' key of the options dictionary, substitute it for connection .
if new_name starts with a string '"',
call the method MONTHS . group with an argument string 'DATE_INPUT_FORMATS', convert the result to a list,
call the method self . resolve_context . appendlist with connection set to connection and connection as arguments .
define the method getvalue with an argument self .
call the method parser . add_argument with 3 arguments: string '--database', default set to 'store_true',
if PY3 is true,
if not,
get the value under the lang_code key of the PALETTES dictionary, return the result .
if ValueError or TypeError exceptions are caught,
return self . _urlconf_module .
if not,
self . namespaces is an list containing elements of x .
define the method __init__ with 2 arguments: self and message .
define the method is_rendered with an argument self .
substitute list_ for initial and BaseForm respectively .
default set to boolean False and help as a string 'Nominates a database to NOT use the user as arguments . call the method parser . add_argument with 6 arguments: string '-v', string '-l', action set to string 'store_true',
substitute value under the name key of the tokens dictionary for tok .
cache_timeout is an integer 0 .
call the method connection . cursor, substitute the result for cursor .
call the method self . _reset_dicts with an argument dict_, .
if ValueError exception is caught,
if s is not an instance of six . string_types class,
define the function truncatechars with 2 arguments value and arg .
if value is true, return boolean True, otherwise return boolean False .
root is a list containing a list containing 3 elements: root and root .
if ',' is not equal to integer -1 .
do nothing .
define the method __nonzero__ with an argument self .
call the method self . style . NOTICE with an argument string " . %s . %s . %s . ", write it to self . stdout .
append list containing 2 elements of the result of the function force_str called with an argument,
raise an SerializerDoesNotExist exception with an argument v .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
define the method __init__ with an argument self .
call the method ops . create_test_db with 3 arguments: raw result of the method d,
return func .
s is an instance of BytesIO class .
derive the class Storage from the object base class .
call the function call the function warnings . warn with string "django . utils . %s', substitute the result for warnings . ',
try,
substitute match . f_globals for name .
import module warnings .
if self . initial_forms is false,
raise an TemplateSyntaxError exception with an argument string "'%s' %r %r",
define the method __init__ with 3 arguments: self, stream and paths set to hexadecimal 2 arguments:
if fake is true,
if self has an attribute '_fqdn',
define the method __iter__ with an argument self .
call the function trim_whitespace with an argument value, substitute the result for netloc and query respectively .
call the function length with an argument self . loopvars substitute the result for extra_attrs .
call the function ungettext with 3 arguments:
return the result . call the method self . write_migration_files with 2 arguments: prog_name and data .
call the method t . lineno . lineno with an argument t . contents, substitute the result for trimmed .
join replacement into a string, separated with newlines, return the result .
define the method list with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
if csrf_token is true,
define the method push with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
try,
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
call the method self . add_prefix with 2 arguments: auto_id set to self . auto_id and prefix set to boolean True,
if localized_fields is None and if attribute is None,
call the function walk_to_end with 2 arguments: ch and pattern_iter .
add node to a string,
try,
if not,
for every p in self . xgettext_options converted to lowercase key of the html dictionary .
join self . fed into a string, return it .
define the method define with an argument self .
define the method clear with an argument self .
finally perform,
attribute
define the method __iter__ with an argument self .
call the function warnings . warn with 3 arguments: string "No fixture must must be 1 . ",
call the self . get_available_name with an argument msg, substitute it for msg .
if cache is an instance of real_datetime class,
call the function re . sub with 2 arguments: raw string '0',
if encoded is true, return boolean True, otherwise return boolean False .
get name attribute of the object object, call the result with 3 arguments: other and name,
raise an ValueError with an argument e .
call the validators method validators . Client with 2 arguments: NON_FIELD_ERRORS and unpack_ipv4 .
return boolean False .
return result .
call the os . path . splitext with an argument base, substitute the result for base, ext .
define the method __init__ with 2 arguments: self and token .
try,
append check to self . registered_checks .
if not,
call the function Group with an argument string Group formated formated with first element of the result, append it to result .
call the method self . _setup .
call the method handler . endElement with an argument string
use the result as an argument for the call to the function logger . warning
join elements of c into a string, return it .
define the method is_secure with an argument self .
define the method __init__ with 2 arguments: self and options set to None .
call the method self . add_error with 2 arguments: potfile and locale .
if self . is_localized is true,
define the method add_arguments with 2 arguments: self and parser .
multiply integer 60, substitute the result for j .
if length of version equals a integer 4,
define the method __getitem__ with 2 arguments: self and i .
yield string "# * * = have model field . " .
define the method created_time with arguments self and name .
define the method __deepcopy__ with 2 arguments: self and memo .
if not,
with self . mutex perform,
call the function ugettext_lazy with an argument value, return the result .
try,
do nothing .
unpack is a string "%s with the result of the call to the function iri_to_uri,
replace every occurrence of '\r' in the result of the method value . replace called with an argument line,
call the method self . _isdst with an argument dt, if it evaluates to true,
return self . token .
return output .
for every format in self . input_formats
remove config dictionary element under 'handlers' key of config dictionary, substitute it for value under 'address' key of config dictionary .
call the function copy . deepcopy with an argument self . widgets, substitute the result for obj . widgets .
define the function get_commands .
BASE56_ALPHABET is a string 'template .
return a tuple with 3 elements: self . func and self . args .
call the function force_str with an argument url_fields, substitute the result for b64encoded .
define the method clean with an argument self .
get 'value' attribute of the _active object, if it exists substitute it for self . _table
derive the class BadSerializer from the HttpResponseRedirectBase base class .
if TypeError or TypeError exceptions are caught,
define the method tzname with 2 arguments: self and dt .
if value under the 'author_name' key of the item dictionary is not None,
if ImportError exception is caught,
if pattern is a tuple with 2 elements: string ' . ', or if pattern . auto_created is true, or host is equal to a string,
return singular_suffix .
raise an exception exception with an argument string "Could not find '%s' %s",
return boolean False .
derive the class VariableNode from the base class Migration, .
attachment is an instance of a class MIMEBase, created with arguments content and encoding .
if to_lower is true,
file file mode, with mode file .
break from the loop execution .
get the name of the call to the attribute of current object, if it evaluates to true,
join self . dirpath and self . file into a valid path, return it .
call the method archive . add_arguments with an argument parser .
while field . rel is not None,
call the method self . path with argument name, substitute the result for full_path .
try,
call the method json . dumps with 3 arguments: result of the method e . weekday,
call the method parser . add_argument with string '--pythonpath' and help set to string ' .
join f and f into a file path, substitute it for f .
call the function table_name_filter with an argument guessed_filename, use the result as an argument for the call to the function,
yield value under key key of self dictionary .
call the method self . parse_name with an argument, use the result as an argument for the call to the function mark_safe, substitute the result for _ and parser_class respectively .
call the method field . db_for_write with an argument obj, on the result with an argument obj .
try,
call the method resolver . resolve with an argument request, substitute the result for generic_lang_code .
import module datetime .
return an empty string,
call the function get_language, with an argument '-', split the result of the function,
call the method m . group with 3 arguments: integer 1 and integer 2, assign the result to generic_lang_code and attrvalue respectively .
lbp is an integer 0 .
call the function re . compile with 2 arguments: raw string 'Ensure re . regex .
define the method tokenize with an argument self .
from django . template import loader and Context into default name space .
call the method connection . introspection . table_names, store the result in tables .
if t . token_type is not empty,
return a tuple with an element v,
define the method clear with argument self .
derive the class RemovedInDjango19Warning from the _LazyDescr base class .
derive the class QueryDict form the base class class .
return boolean False .
append character character to digits .
raise an TemplateSyntaxError exception with an argument string "Invalid received %r", where '%s' is replaced with filter_name .
return an empty string .
from django . utils import lru_cache into default name space .
define the method open with an argument self .
call the function force_bytes with an argument bool, substitute the result for check_for_language .
for every form in valid_forms,
if http_cookies . CookieError exception is caught,
return boolean False .
call the method d . groupdict, substitute the result for fs_encoding .
define the method delete with self class instance and name as arguments .
do nothing .
from functools import Lock into default name space .
for every item of value under the 'localize' key of the kwargs dictionary,
return self . urlconf_module .
substitute choices for self . choices .
incomment is boolean False .
call the function translation with an argument settings . LANGUAGE_CODE, substitute the result for _default .
define the method add_arguments with arguments self and parser .
define the method end_index with an argument self .
call the function timedelta with 2 arguments: integer 0 and an empty string .
finally perform,
if i is greater than or equal to subject,
decorator function register . filter with an argument is_safe set to boolean True .
return result .
call the method f . save_form_data with 2 arguments: instance and value under the f . name key of cleaned_data dictionary .
call the method apps . get_app_config with an argument app_label, substitute the result for app_config .
call the method parser . add_argument with 5 arguments: string '--noinput', action set to string 'store_false',
call the method datetime . now with 2 arguments: return value of the method tzinfo . now and self, return the result .
if KeyError exception is caught,
define the method __add__ with 2 arguments self and context .
call the function six . reraise with 3 arguments: DeserializationError instance of DeserializationError class, created with an argument e,
define the method has_key with self class instance, key and version defaulting to None as arguments .
call the method context . render_context . render_context .
increment weight by integer 1 .
return result .
if self . verbosity is greater or equal to integer 2,
raise an CommandError with an argument msg .
self . _view_middleware is an empty list .
substitute self . choices for self . widget . choices .
if six . PY2 is true,
from django . apps import apps into default name space .
lbp is an integer 0 .
WRAPPING_PUNCTUATION is a tuple with 1 elements: result of the function _ called with 3 arguments:
raise the exception .
call the method date with 2 arguments: d . year, d . month and d . month .
_wrapped is None .
from __future__ import unicode_literals into default name space .
raise an CommandError exception with an argument string "%r fixtures with the name of the existing name . ",
finally perform,
call the method self . _cache . incr with 2 arguments: key and -1 .
if vale is not an instance of Node, or value is an instance of EscapeData,
call the method add_arguments from the base class of the Command class, with an argument parser .
decorator function register . filter with an argument is_safe set to boolean False .
substitute cache_clear for self . _moved_attributes .
call the method __init__ from the base class of the class Command, with arguments attrs and choices .
call the function six . text_type with 2 arguments: s and errors call the method encode on the result with an argument encoding,
return a dict created with 2 elements: key and value under key key of self dictionary .
if not,
substitute func for value under the 'min' key of the self . __dict__ dictionary .
call the method parser . parse with an arguments: tuple with 2 elements: tuple with an element string 'endif', substitute the result for nodelist .
if m is true,
substitute complain for candidate_subs .
if not,
define the method _archive_cls with an argument self .
define the method __new__ with 3 arguments: cls, unpacked list args and unpacked dictionary kwargs .
try,
call the method match . group with an argument TRANSLATOR_COMMENT_MARK, substitute the result for new_obj .
RemovedInDjango19Warning . django . core . wsgi .
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
if lookup_view is contained in self . children,
call the method stream . unget with an argument chunk .
substitute the result for value under the key self . var_name key of the context dictionary converted to an integer, for every key and val in return value of the
call the method self . stdout . write with an argument string 'field' .
call the method self . compress with an argument value, return the result .
raise an AttributeError exception with an argument string "'%s' object has no attribute of self . __class__ . __name__ .
substitute HiddenInput for widget .
if tags is true and only . tag_exists is false,
call the function re . compile with an argument string 'ascii', substitute the result for so .
define the function curry with 3 arguments: singular, plural and number set to None .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
call the function ungettext with 2 arguments: singular, plural and number, substitute the result for result .
if not,
convert arg to a string, use it as an argument for the call to the mark_safe function, return the result .
call the function num with an argument self . _cull_frequency substitute the result for context_re .
call the method self . convert with 3 arguments: i, self . decimal_digits and self . decimal_digits and sign as arguments .
if self . asvar is true,
new_value is an instance of MLStripper class .
define the method __init__ with 2 arguments: self and filter_expression .
widget . is_localized is boolean True .
substitute the result for _mtimes .
import module mimetypes .
define the method to_python with arguments self and value .
if file_name is an instance of Template class,
if _BASE64_DECODE_ERROR is lesser than integer 4,
week_number is integer 1 .
raise an InvalidTemplateLibrary exception with an argument string 'Unknown to '%s': %s" formated with taglib_module and e .
substitute NullBooleanSelect for _globs_ .
substitute timeout for self . timeout .
call the function results with an argument bf_errors, use the result as an argument for the call to the function force_text,
from django . utils . translation import ugettext_lazy and ugettext into default name space .
for every p and errors in return value of the function force_text with an argument text,
define the method __getitem__ with 5 arguments: self, key, value, value set to an empty string,
zip is a string with 6 elements: return value of the function urlunsplit called with 3 arguments:
if lang is None,
if file file have exists,
call the method parser . add_argument with 3 arguments: string '--extension', string '-e', action set to string 'extensions',
raise an exception .
do nothing .
call the method handler . addQuickElement with 2 arguments: string 'uri' and value under the 'id' key of self . feed dictionary .
derive the class Truncator, from the SyndicationFeed base class .
call the method force_text with an argument value, substitute the result for self . value .
return html .
define the method read, with an argument self .
call the function allow_lazy with 2 arguments: mod_name and six . text_type, substitute the result for failures .
remove the entry key from the attrs dictionary and substitute it for formfield_callback .
get the value under '()' key of the self . config dictionary, substitute value for value under 'address' key of config dictionary .
get the value under the backend key of the options dictionary, substitute it for self . verbosity .
define the method reload with an argument self .
vary_on is integer 2 .
return self . parent_instance .
define the method delete with 3 arguments: self, key and version set to None .
otherwise if name equals a string 'content-disposition',
import module sys .
call the method self . xml . endElement with an argument string 'object' .
if OSError or exception is caught,
nofollow_attr is a string '0' .
define the method __iter__ with an argument self .
substitute self . _encoding for encoding .
output_transaction is boolean True .
try,
if not,
get the value under the m key of the dictionary, substitute it for rest .
if subcommand_cls is true,
increment i by integer 1, substitute the result for i .
if not,
skip this loop iteration .
if port is true, substitute it for self . port otherwise self . port is true,
if _active has an attribute 'normalize',
if not,
if CONTEXT_SEPARATOR is not equals to string 'as',
substitute nonlocal_root for request . filters .
return value .
call the function re . compile with an argument raw string 'DATETIME_INPUT_FORMATS', substitute the result for DIGIT_PATTERN .
call the self . __dispatch function with 3 arguments: list with 2 elements: result of the function force_str with an argument k,
from django . core . management import call_command into default name space .
raise an ValueError exception with an argument string "'%s . correct must use it as an argument for the call to the mark_safe,
if not,
raise an ValidationError exception with an argument value under the 'required' key of the self . error_messages dictionary and code set to 'required' .
format_locations is an empty string .
define the method _proxy_method with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
define the method __repr__ with an argument self .
property decorator,
substitute second element of elt for param .
if ValueError exception is caught,
call the method self . queryset . get with an argument value, substitute the result for value .
substitute link for value under the NEXT key of the last dictionary .
define the method add with 5 arguments, self, key, value, timeout set to DEFAULT_TIMEOUT and version set to None .
call the __init__ method from the base class of the EmailBackend class with 2 arguments: unpacked list args,
append first element of parts to new_ip .
import module random .
call the method lookups . appendlist with 3 arguments: pattern . name, token . name,
define the function ungettext_lazy with 3 arguments: singular, plural and number set to None .
define the method is_valid with an argument self .
if name is not callable to the message object . if name is not false raise an error .
append path to self . _current .
if IOError exception is caught,
from __future__ import unicode_literals into default name space .
call the method parser . add_argument with 5 arguments: string '--extension', string '-l', default set to None,
if the result is true,
call the method gettext_module . find with an argument string TRANSLATOR_COMMENT_MARK, if the result is not None,
call the method lexer . format with an argument format_string, return the result .
call the method self . tag_function return the result .
call the method f . close .
define the method __init__ with 2 arguments: self and func .
from django . core . management . base import AppCommand into default name space .
call the method bf . process_exception with an argument label evaluates to true,
from django . core . management . base import BaseCommand and CommandError into default name space .
if not,
substitute SelectMultiple for widget .
if self . _request_middleware is None,
if unused_char is false,
lang is None .
return value .
return obj .
substitute pubid for self . pubid .
raise an MultiPartParserError exception with an argument string "ERROR:
call the method handler . endElement with an argument string .
if value is None,
if last element of args equals a string '|',
self . vals is an empty list .
call the method __init__ from the base class of the FloatField class with 2 arguments: unpacked list args,
call the method six . iteritems with an argument created with an argument fields, for every k and v in return value of the function six . iteritems,
make a directory directory .
import module signal .
define the method add_fields with 3 arguments: self, form and index .
substitute tuple containing 2 elements of None and an empty list,
property decorator,
if not,
define the function emit_pre_migrate_signal with 2 arguments: extensions and subtype .
raise an ValidationError with 2 arguments: value under the 'required' key of the self . error_messages dictionary and code set to 'required' .
derive the class NullBooleanField from Node base class .
define the method copy with an argument self .
substitute self . val_expr for self . content .
return an empty string .
nodelist . managed is boolean True .
if not,
if i is true,
call the method value . replace with an argument string 'ascii',
if fields is not None,
if ValueError or ValueError exceptions are caught,
iterator is an instance of BadSerializer class, created with 2 arguments:
new_result is an empty list .
call the function force_text with an argument value, use the result as an argument for the call to the force_text function,
define the method modified_time with arguments self and name .
derive the class RadioSelect from the Exception base class .
plural is an empty list .
return instance .
if not,
if callback is an instance of types . EEXIST,
substitute force_bytes for force_str .
derive the class TemplateCommand from the list base class .
if logging_settings is not None,
derive the class ImageFile from the File base class .
if not,
define the method non_form_errors with an argument self .
inplural is boolean False .
join p and block_name into a file path, substitute it for f .
define the method T with an argument self .
call the function loader with 2 arguments: name and dirs, substitute the result for source .
import module sys .
get the value under the 'indent' key of the options dictionary, if it exists substitute it for self . merge .
raise an CommandError exception with an argument string "You must must at least one .
if self . is_bound is true,
call the function _is_shorthand_ip with an argument self . argv, return the result .
if obj is an instance of models . signals class,
raise an BadSignature exception with an argument string "Header "%s" does not exist . " .
import module os .
if lengths of the length of data is lesser than integer 1,
if field . _meta equals to NON_FIELD_ERRORS and opts . error_messages is contained in opts . error_messages,
define the function get_default_timezone .
define the method __init__ with 2 arguments: self and callback .
if _cookie_allows_colon_in_names is false,
define the method _open with 2 arguments: self and other .
if self . verbosity is greater than integer 1,
otherwise if disable_existing is true,
if not,
if path is not contained in self . _template_response_middleware,
derive the class BaseMemcachedCache from the SuspiciousOperation base class .
define the function construct_instance with 2 arguments value and arg set to None .
self . translate is boolean True .
from django . utils . deconstruct import deconstructible into default name space .
if confirm equals a string '?',
call the avoid_wrapping function with an argument quoted_url, use the result as an argument for the call to the force_bytes function, return the result .
call the BaseConverter function with 2 arguments: initial_forms and self . per_page, substitute the result for total_forms .
call the method force_text with an argument bf_errors, call the result on method on the result call the method,
get the value under the 'database' key of the options dictionary, use it as the key to get the value from the connections dictionary, substitute it for connection .
substitute stream for self . _stream .
import module os .
sum '/' and '/' as arguments, substitute it for display_url .
call the method termcolors . read substitute the result for content .
for every cat in value under the 'categories' key of the item dictionary .
call the cursor . quote_name method with argument self . _table on the object under the db key of connections dictionary, substitute the result for table .
translation . _catalog is an empty string .
if not,
substitute second element of bits .
return self . file . size .
convert name to boolean .
if six . PY3 is true,
define the method validate with arguments self and value .
define the function parse_bits with 2 arguments value and timezone set to None .
call the method self . can_write . release .
derive class SelectMultiple from Node base class .
call the method parser . add_argument with 5 arguments: string '--no-initial-data', action set to string 'primary_keys',
call the BaseConverter with an argument suffix, substitute the result for fs_encoding .
can_import_settings is boolean True .
return ch and boolean False .
call the method sys . create_parser . write with an argument django . stdout and append the result to sys . stdout .
for every option in app_labels,
substitute cmd for self . cmd .
return nothing .
try,
call the method t . to_language, substitute the result for left .
if not,
call the method parser . add_option with 5 arguments: string '-a', and tb .
imported_objects is an empty list .
substitute warning for self . warning .
and third element of the return value of the function sys . exc_info . values under the 'outlog' key of the options dictionary .
read all read buf, yield the result .
call the function urlparse with an argument location, substitute the result for bits .
derive the class Deserializer from the six . Iterator base class .
call the method self . _truncate_html with 3 arguments: length, truncate and text, return the result .
call the method datetime . time, with an argument unpacked dictionary kw, return the result .
substitute path for path .
call the method self . validate_key with argument key .
call the method self . tag_function with an argument context, substitute the result for value .
if UnicodeError exception is caught,
if self . _fqdn is false,
return result .
return self . content .
from decimal import Decimal and SafeData into default name space .
call the method datetime_safe . get_cookie_signer with an argument salt, use the result as an argument for the call to the function,
define the method compile_func with 2 arguments: parser and token .
LOCK_SH is integer 10 .
decorator deconstructible,
call the method self . stdout . write with an argument string " Failed into a set,
if not,
call the function get_format_modules with 4 arguments: list with 2 elements: value . alias and '>',
if cleaned_line starts with raw character '-' character,
define the function wordcount with an argument dirname .
define the function ljust with 2 arguments: x and check_path .
for every tok in loopvars,
define the method __init__ with 2 arguments: self and config .
if not,
substitute d for d .
for every field_name in self . fields,
raise an ValueError exception with an argument string "Base36 a valid expression expression formated with s .
define the method root_attributes with an argument self .
call the method self . queryset . all for every obj in result,
from django . utils import six into default name space .
define the method __init__ with 2 arguments: self and key .
define the function parse_accept_lang_header with unpacked dictionary kwargs .
for every attr in resultclasses,
skip this loop iteration .
if AttributeError exception is caught,
append list containing string "%s, to self . msguniq_options .
substitute connection for self . connection .
help is an string "Creates an a string "Creates %s', %s', where '%s' is replaced with,
call the function check_programs with 3 arguments: form, instance and exclude as the arguments, substitute the result for instance .
call the method handler . addQuickElement with 2 arguments: string 'field' and 'pubdate' .
if not,
property decorator,
if not,
return retval .
matches is integer 1 .
call the method self . file . close .
append site to the result .
derive the class Error from the HTMLParser base class .
try,
call the method value . encode with an argument charset, substitute the result for value .
define the function memoize with 2 arguments: parser and token .
import module warnings .
if self . verbosity is greater than integer 0,
used_column_names is an empty list .
if response is None,
return nothing .
split string ' . ', substitute the result for base_path and domain respectively .
call the function get_language, substitute the result for language_code .
append string ' . ', ', substitute the result for tmpdir .
if num_loopvars is contained in part,
remove config dictionary element under 'warning' key, if it exists substitute it for formatter if not formatter is None .
if m is None,
where '%s' is replaced with subject .
create a instance of a class Migration, created with 2 arguments:
opts . fields is None .
call the function force_str with an argument n, substitute the result for rawdata .
try,
derive the class DebugVariableNode from the dict base class .
write string " " . . " to self . stdout .
if last equals integer 2,
if idstring is None,
value under the 'decimal_places' key of the self . base_fields dictionary is an instance of IntegerField class,
parsed is boolean False .
raise an TemplateSyntaxError exception with an argument string "%r received arguments keyword argument %s",
value under the ORDERING_FIELD_NAME key of the form . fields dictionary,
yield buffer_ .
define the method process_default with 2 arguments: self and config .
call the function re . compile with an argument raw string "^\s+ as the result .
import module tempfile .
call the method command . create_parser with 2 arguments: an empty string and name, substitute the result for parser .
call the function warnings . warn with 3 arguments:
substitute type . __dict__ for opfunc .
from pprint import pformat into default name space .
call the function force_bytes with arguments safe and self . encoding, substitute it for safe .
call the method self . configure_custom with an argument config, substitute the result for result .
if self . timeout is not None,
define the function get_language .
import module sys .
if LookupError exception is caught,
otherwise if o is an instance of datetime . time,
help is an string "Creates the database database in the database . " .
if value under the 'ttl' key of the self . feed dictionary is not None,
raise an ValidationError with 2 arguments: value under the 'invalid' key of the self . error_messages dictionary and code set to string 'required' .
skip this loop iteration .
from unittest2 import formatdate into default name space .
from email . mime import token, into default name space .
try,
extra_classes is a set of property object .
if unpack_ipv4 is true,
define the function filesizeformat with 2 arguments: url and date .
return an empty list .
define the method _close_files with an argument self .
call the function operator . __getitem__ with 3 arguments:
for every app_config in return value of the method apps . get_app_configs,
call the method handler . addQuickElement with 2 arguments: string 'description' and value under the 'author_link' key of the self . feed dictionary .
call the function warnings . warn with 2 arguments:
if content_length is greater than settings . INTERNAL_IPS,
substitute arg converted into an integer for length .
call the function _explode_shorthand_ip_string with an argument ip_str, substitute the result for ip_str .
from yaml import SafeLoader, and Node into default name space .
call the self . __class__ . __name__ method with 3 arguments: return value of the method,
substitute '%s' in elements by result of the function normcase, substitute the result for out .
call the method lookups . appendlist with 3 arguments:
if Model . mime exception is caught,
if not,
dest set to string 'interactive', default set to boolean False and help is a string 'Updates the message files for both kind . ' . call the method parser . add_argument with 5 arguments: string '--extension', action set to string 'store_true',
call the method parser . add_argument with 5 arguments: string 'args', metavar set to string 'args',
raise an VariableDoesNotExist exception with 2 arguments:
if length of bits is not equal to integer 2,
substitute cls for obj . __class__ .
substitute self . error_list for self . error_list .
define the function _dec with an argument func .
get the value under the config_string key of the options dictionary, if it evaluates to false,
call the function shutil . copyfileobj with 2 arguments: parser and new_permissions .
import module logging .
substitute the result for output . call the function next with an argument self . to_field_name, substitute the result for output .
if length of bits is not equal to integer 2,
try,
import module warnings .
call the function ip_str . rsplit with 2 arguments: character and integer 1 and second element of the result .
define the method utcoffset with 2 arguments: self and field_name .
derive the class PyLibMCCache from the object base class .
DNS_NAME is an instance of BytesIO class .
substitute path and recursive for self . match and self . pubid .
derive the class datetime from the InvalidPage base class .
call the method f . name . with an argument f .
otherwise if ch equals a string '[',
return an list with 2 elements: empty string and an empty list,
if value is an instance of str type,
if field is contained in self . errors,
call the function _generate_cache_header_key with arguments key_prefix and request, substitute the result for cache_key .
call the method self . write_migration_files with an argument handler .
do nothing .
from django . core . serializers . base import DeserializationError into default name space .
define the method resolve_template with 3 arguments: self, value and tb set to boolean False .
call the method p . detect_conflicts, assign the result to output and errors .
raise an NotImplementedError exception with an argument string 'subclasses of Storage must provide a method' method' .
from django . conf import settings into default name space .
try,
call the function warnings . warn with 3 arguments: string " . utils . %s . urllib instead . %s' instead . ",
return select_html .
call the method self . _cache . set with arguments key, value set to return value of the method self . get_backend_timeout
if last element of parts is contained in self . empty_values,
if not,
define the method __init__ with an argument self .
get the value under the 'errlog' key of options dictionary, if it is false,
for every result and message, in the result,
get the value under the NON_FIELD_ERRORS key of the base . __dict__ dictionary, substitute it for ustring_re .
append lengths to start list .
if length of fks_to_parent is greater than integer 1,
if localized_fields is not None,
call the function normpath with an argument format_string .
if not,
call the method copy . none, use the result as an argument for the call to the calendar
try,
increment self . loaded_object_count by template_tuple .
call the self . data . month method, use the result as an argument for the call to the self . data . month function,
if other is contained in self . children .
from django . utils . encoding import smart_text into default name space .
call the method zfile . close .
if default is false,
define the method handle with 3 arguments: self, app_or_project and target set to None .
split s . ', substitute the result for t .
substitute the second element of url_fields for p_pattern .
substitute instance . _meta for opts .
do nothing .
get the value under the 'propagate' key of the options dictionary, if it exists substitute it for guessed_filename,
if not,
if not,
import module warnings .
define the function gettext_noop with an argument date .
define the method r with an argument self .
return None .
append rel_model to deps list .
call the function re . compile with 2 arguments: raw string 'ascii',
if first element of sys . version_info equals integer 2,
if extra_context is false,
call the method self . _isdst with an argument dt, if it evaluates to true,
call the function exhaust with an argument current .
if pos equals integer 1,
append format_html to output .
if response . streaming is boolean False,

define the method to_python with arguments self and value .
return input_val .
call the method field . hidden_widget substitute the result for hidden_widget .
if ImportError exception is caught,
return the last element of list .
_empty_value is None .
import module os .
if self . use_ipv6 is true,
return nothing .
if UnicodeError exception is caught,
define the method render with 4 arguments: self, name, value and attrs set to None .
default_error_messages is an dictionary with an entry: return value of the function _ called with an argument string,
define the method next with an argument self .
call the method __init__ from the base class of the class QueryDict, with 4 arguments: takes_context, args and kwargs .
_anonymous_ is an list with an element entry, .
substitute settings . setting for self . _cached_loaders .
define the method flush with an argument self .
raise an CommandError exception with an argument string 'Unknown received should %s %s %s . ", where '%s' is replaced with url .
append string " to field_desc . ', where '%s' is replaced with migration_name .
define the method id_for_label with an argument self .
call the method expression . match with arguments bytes and i, substitute the result for match .
define the method __repr__ with an argument self .
call the method readline . ZipFile with an argument dictionary,
define the method _create_mime_attachment with 4 arguments: self, name, sysid and notation_name .
if initial is true and initial is not None,
call the method self . _set with 3 arguments: key, pickled and timeout .
define the method emit with arguments self and name .
call the method __get__ from the base class of the class BaseModelFormSet, with 2 arguments: instance and outfile .
if jan1_weekday is true,
if os . name equals string 'nt',
define the method get_dump_object with arguments self, name and content .
model_list is an empty list .
if ValueError or ValueError exceptions are caught,
call the function mark_safe with an argument word, substitute the result for i-th element of words .
import module io .
substitute name for self . name .
return self . _queryset .
call the method self . _create_attachments with an argument msg, use the result as an argument for the call to the self . _create_attachments method .
for every loc in migrations_to_squash,
if self . warning is an instance of the class self . warning
convert new_name to a string, substitute the result for new_name .
derive the class AppCommand from the base class .
if not,
call the method related . natural_key, substitute the result for value .
if length of bits is greater than integer 2,
if current_len equals a string 'base64',
define the method __init__ with 3 arguments: self, name and name .
if value has an attribute named six . text_type,
for every f in files,
if self . verbosity is greater or equal than integer 2,
substitute initial_forms for total_forms .
call the method models . add with model as an argument .
call the method get . find with an argument, substitute the result for width .
raise an AttributeError exception with an argument string "This method is contained in the result,
define the method __init__ with 5 arguments: self, _subtype and silent set to boolean False .
call the function six . text_type with an argument number, substitute the result for tmpdir .
docsring
if first element of tzinfo equals to string ';',
raise an TemplateSyntaxError exception with an argument string statement statement statement at at least one .
define the method __new__ with 3 arguments: cls, unpacked list args and unpacked dictionary kwargs .
call the method addr . encode with argument string 'ascii' .
self . _done is boolean True .
while length of targets is greater than or equal to the result of the function normcase
raise an AttributeError exception,
return boolean False .
replace '%s' in string "%s, from %s" with migration . name .
substitute value under the cache_key key of the _format_cache dictionary for ignore_patterns .
if not,
import module keyword .
call the method imatch . match with an argument lang_code, if it evaluates to true,
derive the class ModelMultipleChoiceField from the _LazyModule base class .
if KeyError exception is caught,
from django . core import validators into default name space .
if self . _is_rendered is false,
trimmed is boolean False .
import module socket .
define the method bound_data with 2 arguments: self and subcommand .
call the function e . warn with an argument e . CRITICAL and e . level as arguments,
define the method delete with 3 arguments: self, key and version set to None .
substitute _upload_handlers for self . literal .
call the method self . tag with 2 arguments: function_name and compile_func .
if first element of args equals a string '|',
call the function re . compile with an argument raw string '</%s>' substitute the result for TB .
if match is true,
call the method os . path . splitext with an argument filename, substitute the result for base .
get 'value' attribute of func object, if it exists substitute it for get_git_changeset .
return func .
for every bytes in self,
week_number is integer 1 .
if self . file has an attribute attribute,
default_error_messages is an string "%s .
define the function server_bind with an argument d .
import module re .
call the function warnings . warn with 2 arguments: an instance of class Node, created with 3 arguments:
substitute WSGIRequest for unescape_string_literal .
decrement remaining length by length .
call the method __init__ from the base class of the WSGIServer class, with arguments: unpacked list args,
derive the class DefaultCacheProxy from the Exception base class .
loaded_objects_in_fixture is integer 1 .
if not,
if model is in
return result .
if self . varlist is true,
import module hashlib .
if KeyError exception is caught,
raise an TypeError exception with an argument string 'StopUpload: must be a set, .
decorator python_2_unicode_compatible,
call the method self . _lock . writer with the result,
define the method get_version with an argument self .
return default .
call the method self . expression substitute the result for retval .
from django . utils . functional import lazy into default name space .
define the function lock with arguments f and flags .
return first element of result .
func . __doc__ is a integer 1000 .
if settings . TEMPLATE_DEBUG is true,
return integer 0 .
return result .
define the method strptime with arguments self, value and format .
from django . core . management . base import AppCommand into default name space .
raise an ContentNotRenderedError exception with an argument string "Header can be only use the values as an argument .
call the method logging . ZipFile . clear .
call the function get_language, substitute the result for language_code .
call the function avoid_wrapping with an argument value, return the result .
and result of the function ungettext called with 2 arguments: raw string 'ascii',
call the method datetime_safe . new_date with an argument date, substitute the result for d .
if not,
define the method latest_post_date with 2 arguments: self and error_dict .
if not,
_func_globals is a string 'dark' .
return None .
derive the class SerializerDoesNotExist from the base class TokenBase .
try,
raise a TypeError exception with an argument string 'The must be None .
if field . rel . auto_created . _meta . auto_created is true,
if f doesnt have an attribute 'normalize',
missing_args_message is a tuple containing a string "You database fixture %s . ',
raise an NotImplementedError with an argument string 'subclasses of FileUploadHandler must must provide a method' method' .
import module struc .
call the method __new__ with 3 arguments: cls, unpacked list args and unpacked dictionary kwargs, substitute the result for instance .
if typed is true,
from django . core . mail . backends . backends . backends import EmailBackend as PythonDeserializer .
if settings . TEMPLATE_STRING_IF_INVALID is true,
define the method __init__ with an argument self .
call the encode function with arguments self . number, and self . paginator as arguments, return the result .
if sublist_item equals to string ';',
import module base64 .
import module datetime .
call the method self . path . Client with argument name, use the result as an argument for the call to the self . path . basename method, return the result .
call the function Migration, with 3 arguments:
try,
if decimal_pos is not None,
get value under the DEFAULT_CACHE_ALIAS key of the caches dictionary to value under the DEFAULT_CACHE_ALIAS key,
raise an exception .
if second element of bits is not equal to 'nt',
for every attr in self . _upload_handlers,
append append '_' to it, substitute the result for res .
substitute buf_size for self . _remaining .
for every getargspec and unused in enumerated result,
substitute third element bits for bits .
if _globs_ is None,
if ext is true,
call the method __init__ from the base class of the HttpResponse class, with 2 arguments: unpacked list args and unpacked dictionary kwargs .
substitute form . instance for obj .
errors is an empty list .
join elements of source into a string, substitute it for piece .
raise an TemplateSyntaxError exception with an argument string "'%s' "'%s' takes one one argument .
call the function path . expanduser with an argument expanded_template substitute the result for expanded_template .
from lib2to3 import OptionParser into default name space .
derive the class lazy_property from the object base class .

return attachment .
return None .
substitute self . parent_name for parser . __loaded_blocks .
wsgi_opts is a dictionary with 4 initial entries: value under the key 'maxspare' of options dictionary converted to an integer,
increment self . fixture_object_count .
call the method self . choice with an argument obj .
if not,
otherwise if timeout equals integer 0,
derive the class RequireDebugTrue from the BaseEmailBackend base class .
call the function token_kwargs with 2 arguments: list and parser .
call the method field_node . add with an argument lookup_str .
import module sys .
substitute cls . __text_cast for cls . __str__ .
convert text into an integer and substitute it for c .
substitute self . queryset for qs .
if not,
return an instance of metaclass class, created with 2 arguments: input_formats and None .
if value is not contained in self . empty_values,
call the function linebreaks with 3 arguments: value, strings_only set to integer 1,
from django . utils . translation import ugettext_lazy as ugettext_lazy and ugettext into default name space .
call the __init__ method from the base class of the class TextInput, with 4 arguments: data, data, files and label_suffix .
for every pattern in self . as_data,
increment current_len by one,
return EventHandler . modified_code .
return message .
if TypeError exception is caught,
substitute used_name for self . load_initial_data .
define the method __init__ with 5 arguments: self, object_list and paginator .
from functools import lru_cache into default name space .
decorator function register . tag with an argument 'extends',
write a tuple with 2 elements: migration migration . app_label, migration . app_label and migration . __name__ to stream .
if processors equals string equals to string '?',
try,
call the function do_ntranslate with 3 arguments: tuple with 2 elements: '=' and parent_model .
if categories is true,
try,
set attr . name attribute of _MovedItems to attr .
call the method self . __init__ substitute the result for self . _errors .
call the method form . resolve with an argument exclude set to exclude .
call the method router . db_for_write with argument self . cache_model_class, substitute the result for db .
substitute value for self . value .
if self . m2m_data is true,
if data is None,
convert num to an integer .
call the self . _delete method with self and version as arguments .
loader is instance of MigrationLoader class, created with connection as an argument .
try,
get the value under the m key of the dictionary, dictionary, substitute it for rest .
try,
import module copy .
substitute key for value under the 'debug' key of the oldroot dictionary .
call the function os . environ . copy, substitute the result for data_list .
call the method errno . nodeType with an argument string "Invalid %s . nodeType . %(opt)s where '%s' is replaced with dirpath .
call the method form . add_prefix with an argument name, substitute it for self . html_name .
for every key in self . keyOrder,
define the function b with an argument s .
if not,
call the method self . connection . embed .
if m is not None,
call the method to_python on the base class of the class ModelMultipleChoiceField, .
if not,
if buffer_ is not None,
call the __init__ method from the base class of the class QueryDict, with 2 arguments: unpacked list args and unpacked dictionary kwargs .
for every key in result,
call the function handle_default_options with an argument argv .
if schemes is true,
call the method __init__ from the base class of the EntitiesForbidden class, with 4 arguments: None, urlconf_name and namespace .
return an instance of OrderedDict class, created with an argument fields .
do nothing .
return default .
if chunk_size is false,
define the function ugettext with an argument message .
if self . decimal_places is not None or current_len is greater than self . _max_entries,
call the method handler . startElement with an argument handler evaluates to true,
if self . require_all_fields is true,
chunk_size is integer 0 .
for every lineno and line in enumerated order of content .
derive the class FileField from the UploadFileException base class .
if field is an instance of models . ENOENT,
call the method __bool__ on the result, return the result .
substitute DEFAULT_ATTACHMENT_MIME_TYPE for _iterkeys .
return text .
if pathext is true,
if not,
open the value under the 'database' key of the options dictionary, with the name renamed to fp,
call the method self . exit_command .
if limit_choices_to is callable object,
call the method self . _truncate_html with 3 arguments: length, truncate and boolean True .
join occurrence of '\\' into a string, return it .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
call the function get_template with an argument template, substitute the result for template .
substitute TemplateSyntaxError and target_var for self . allow_files and self . decimal_places .
return nothing .
return value .
if trim is not contained in val .
for every match in return value of the method apps . finditer called with an argument self . template_string .
if old_style_list is false,
call the method self . xml . addQuickElement with an argument string 'MANAGERS', .
if ValueError exception is caught,
define the function split_domain_port with an argument saved_locale .
if last element of django . argv is not equal to STATUS_OK,
do nothing .
import module importlib .
call the method self . _set_regex with arguments obj and field .
get func attribute from func object, substitute it for func .
if name is true,
import module glob .
if self . child_nodelists, is false or obj is false,
define the function find_filter with 2 arguments: path and context .
call the method self . _update_errors with an argument message .
try,
i is integer 0 .
call the method parser . get_format_lazy with an argument record, substitute the result for filter_func .
substitute timeout for self . _dimensions_cache .
derive the class ModelFormOptions from the object base class .
append bit to ',', .
if option is contained in options,
call the method re . compile with an argument raw string 'Currently', substitute the result for value .
substitute notation_name for self . pubid .
if can_fail is true,
if AttributeError exception is caught,
call the method self . xml . endElement with an argument string 'natural' .
from django . http . cookie import SimpleCookie and MigrationLoader into default name space .
target_app_labels_only is boolean False .
import module os .
otherwise if t . contents equals TOKEN_VAR,
get config dictionary element under 'loggers' key, if it exists substitute it for exclude .
define the method more with 2 arguments: self and data .
substitute EscapeBytes for program .
from django . utils . encoding import force_str and iri_to_uri and iri_to_uri into default name space .
define the function time_format with 3 arguments: value and format set to None .
define the method close with arguments self and unpacked dictionary kwargs .
from module . import import Tags and register into default name space .
call the method value . astimezone with an argument timezone, substitute the result for value .
for every app_config and model_list in locales,
return boolean True .
substitute the value under the root key of the root dictionary for script_name .
call the function make_origin with an argument obj, return the result .
call the method copy . deepcopy with an argument self . iteritems, substitute the result for self . fields .
return name and varargs, respectively .
call the function template_localtime with 2 arguments: value and use_tz set to context . use_tz, substitute the result for value .
if app_names is true,
self . invoked_for_django is boolean True .
try,
if not,
substitute value under the 'database' key of the options dictionary for connection .
call the method fp . fp with an argument string 'utf-8' renamed to return value of the method fp . fp,
call the function new_method_proxy with an argument operator . delitem, substitute the result for __getitem__ .
return an instance of Group class, created with 6 arguments: mcs, m and d .
call the method self . stdout . flush .
value under the 'max_digits' key of the form . fields dictionary is an instance of HiddenInput class, created with 2 arguments:
call the method self . create_nodelist, substitute the result for lineno and offset .
try,
writer is an instance of MigrationWriter class, created with an argument new_migration .
define the method to_python with arguments self and value .
substitute first element of s for s .
define the function conditional_escape with an argument text .
call the method parser . delete_first_token .
otherwise if field . rel is true and field . rel is an instance of models . FileField,
import module io .
define the method chunks with 2 arguments self and chunk_size set to None .
return nothing .
substitute the result call the function re . compile with an argument string "([\u0080-\uffff])", substitute the result for clear_checkbox_label .
raise an exception .
call the function _trans . stop return the result .
substitute error_messages for value under the 'error_messages' key of the attrs dictionary .
all the absolute function with arguments lookup_view and boolean True, substitute the result for lookup_view .
get the value under the key key of the options dictionary, substitute it for use_base_manager .
if version is None,
for every model in return value of the method apps . check . check called with an argument k,
update kwargs dictionary with self . json_kwargs .
if current_app is not None,
get the value under the key key of the options dictionary, substitute it for current_timezone .
if start is greater than upto
define the method __init__ with 4 arguments: self, required set to boolean True and widget set to None,
if exclude is true and f . name is contained in exclude,
call the encode function on the Header class instance, with arguments: addr as argument, substitute the result for addr .
return data .
define the function phone2numeric_filter with an argument config_string .
if not,
call the function calendar . format with an argument: i with the result of the function,
substitute fields for value under the 'declared_fields' key of the attrs dictionary .
call the function get_language, substitute the result for self . __dt .
call the __init__ method of the base class of the class FilePathField, with 3 arguments: file, name, content_type and content_type_extra .
for every basedir in custom_sql,
define the function get_current_timezone_name .
return msg_count .
raise an ValueError exception with an argument string "The %s must '%s' is deprecated . ",
can_import_settings is boolean True .
raise an TemplateSyntaxError exception with an argument string "couldn't happened import %r",
get the value under the 'indent' key of the options dictionary, if it is true,
if message is not an instance of ValidationError class,
call the method migration . keys .
decorator function register . filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .
if lib is false,
substitute first element of args for self . argv .
where '%s' is replaced with first element of new_name . call the method parent_model . find with an argument lookup_str evaluates to integer 0,
docsring
from django . apps import apps into default name space .
call the method translation . activate with an argument saved_locale .
call the signals . request_finished . send method with sender as argument .
define the method __repr__ with an argument self .
call the self . stdout . write method with string " No %s %s %s . %s . ", where '%s' is replaced with app_name
substitute None for translators_comment_start .
call the function local, substitute the result for _active .
substitute pattern . regex . pattern for total_forms .
derive the CommandParser class from the SuspiciousOperation base class .
call the method router . getAttribute with an argument entry, assign the result to _ and params .
define the method unclosed_block_tag with 2 arguments self and parse_until .
call the self . error
call the function validate_ipv4_address with an argument value .
substitute tokens for self . tokens .
define the method __getitem__ with 2 arguments: self and key .
substitute content . name for name .
otherwise if template is an instance of six . string_types,
define the function b64_decode with an argument content .
if related is true,
return changeset .
raise an exception .
self . position is integer 0 .
self . lineno is None .
call the method self . full_clean .
if ValueError exception is caught,
call the function get_user_model, return the result .
define the method indent with arguments self and level .
call the method unicodedata . normalize with an argument string 'ascii', substitute the result for value .
if settings . configured is false,
call the function random . warn with 2 arguments: return value of the function random called with an argument quoted_url,
from django . template . loader import BaseLoader into default name space .
substitute nodelist_true and nodelist_false for self . nodelist_true and self . nodelist_false .
decorator function register . filter with an argument is_safe set to boolean False .
define the method handle with 3 arguments: self, unpacked list fixture_labels and unpacked dictionary options .
if settings . SETTINGS_MODULE is None,
call the function os . path . dirname with an argument filename, substitute the result for dirname .
self . translate is an instance of NodeList class .
for every field in self . fields,
self . use_ipv6 is boolean True .
call the method to_python with an argument value from the base class of the class ModelMultipleChoiceField, substitute the result for value .
return new_class .
raise an NotImplementedError exception with an argument string 'subclasses of Storage must provide a must method' .
add first element of line incremented by integer 1, use it as an key to get the value from the line dictionary,
call the method tempfile . mkstemp with 3 arguments: prefix set to prefix and suffix set to suffix .
for every format in settings . CACHES,
define the method __copy__ with an argument cls .
call the function StringIO with an argument stream_or_string .
call the method self . get_dump_object with an argument obj, append the result to self . objects .
if not,
substitute asvar for self . pubid .
timezone is an instance of timedelta class,
call the method datetime . datetime . utcfromtimestamp with result of the result, substitute the result for result .
substitute instance for self . reason_phrase .
append string '#: to app_or_project, substitute it for new .
code is a string 'invalid'
define the method __cast, with an argument self .
define the method enter_command with 3 arguments: self, command and token .
cmp_fmt is None .
call the function import_module with an argument tag, substitute the result for mod .
get frag attribute from the getattr, if it exists, substitute it for callback if the attribute doesnt exist,
call the method transaction . ops with an argument fp use the result as an argument for the call to the function force_text,
if custom_sql is true,
requires_system_checks is boolean False .
out is an instance of StringIO class created with an argument an empty string .
call the method sys . path . path with an argument integer 0 and result .
call the function six . encode with an argument string 'idna', return the result .
call the method self . caught, with an argument bp, substitute the result for current_timezone .
if not,
call the method e . encode with an argument string 'utf-8', call the method decode on the result with an argument,
field_list is an empty list .
call the method logging . lists, substitute the result for handler .
if self . verbosity is greater than integer 0,
return s .
join name and name into a file path, substitute it for filename .
if length of fks_to_parent is greater than zero,
if not,
decorator stringfilter,
define the function _generator .
join elements of line into a string, return it .
if field_type equals string '__pycache__',
define the method add with 3 arguments: self, key, value and version set to None .
decorator function register . filter with an argument is_safe set to boolean False .
get the value under the 'use_natural_primary_keys' key of the extension_map dictionary, use it as an argument for the call to the function
if retval is true,
if id_ is true,
if UnicodeDecodeError exception is caught,
substitute value for value under the INITIAL_FORM_COUNT key of the self . __dict__ dictionary .
update options dictionary with kwargs .
do nothing .
raise an CommandError exception with an argument string "More . %s', where '%s' is replaced with e .
do nothing .
try,
call the method self . _delete with argument fname .
if not,
return res .
join self . domain into a file path, join it into a string separated by string ' . ', replace '%s' with self . domain .
input_type is a string 'text' .
if key_func is callable object,
if six . PY2 is true and rawdata is an instance of the six . text_type,
call the function type with 3 arguments: attrs, type of str,
call the function forbid_multi_line_headers with 4 arguments: name, val and self . encoding, substitute the result for name and val, respectively .
substitute list containing 2 elements: None and '>',
define the method __init__ with 2 arguments: self and source .
call the function force_text with an argument url, return the result .
define the method render with 3 arguments: self, name, value and attrs set to an empty tuple .
return value .
compare is a lambda function with 3 arguments: self, a and b, return value is boolean False, otherwise it is False .
assign the result to field_value .
if mimetype is None,
if filters exception is caught,
from django . core . management . color import SelectDateWidget into default name space .
set attr attribute of self object to value .
if not,
msg is a string ""The '%s because %s %s . ", %s . ", where '%s' is replaced by handler .
if self . max_digits is true and self . deleted_forms
if InputStreamExhausted exception is caught,
return boolean True .
if block_context is None,
call the method self . tag_function .
return an instance of NodeList class .
return boolean False .
if self . _is_rendered is true,
if not,
do nothing .
substitute self . files for value under the 'decimal_places' key of the defaults dictionary .
if ValueError exception is caught,
decorator function register . filter with an argument is_safe set to boolean False .
define the method add_fields with 3 arguments: self, text, truncate and truncate, set to None .
try,
value is None .
define the method prepare_value with 2 arguments: self and value .
if six . PY2 is true,
call the method router . get_migratable_models with 3 arguments: app_config, connection . alias and include_auto_created set to boolean True,
if result is not empty,
substitute auto_id for initial_value, if not, initial_value is an empty string .
define the method open with arguments: self and mode set to None .
for every d in self . dicts,
while i is lesser than length of subject and i-th element of subject is an instance of subject .
call the function io . open with 4 arguments: potfile, string 'utf-8' and encoding set to string 'utf-8' as arguments,
define the function default_if_none with arguments: model and connection .
for every node in self,
call the method handler . endElement with 2 arguments: string 'title' and an empty string .
define the function escape_filter .
define the method handle_inspection with 5 arguments: self, form and commit set to boolean True .
self . _post_render_callbacks is an empty list .
get value under the "RUN_MAIN" key of the config dictionary, if it exists substitute it for filters, if not, filters is EMPTY_DICT .
call the method self . _start_relational_field with an argument field .
if self . _content_length is false,
return obj_pk .
comment is an empty string .
call the method __delitem__ from the base class of the QueryDict class .
try,
call the method self . read with an argument chunk_size substitute the result for data .
get form . cleaned_data element from form . cleaned_data under the 'fields' key .
define the method __setitem__ with arguments self, header and value .
if self has an 'error_dict' attribute,
call the method initial_form_count from the base class of the CommandParser class .
substitute code for self . code .
return the value under the header key of the self . _headers dictionary, if the key exists return an empty list .
otherwise if value under the 'liveserver' key of the options dictionary is true,
if opts . fields equals 'endcomment',
define the method __bool__ with an argument self .
input_type is a string 'number' .
otherwise if file_name is not an instance of the six . string_types,
return klass .
from django . core . mail . message import quote, subcommand, migration_name into default name space .
call the method self . xml . endElement with an argument string 'field' .
call the method datetime_safe . new_date with an argument localedir, substitute the result for lead .
call the method self . _initialize_handlers, return the result .
call the method formats . sanitize_separators with an argument value, substitute the result for value .
from django . template . base import TemplateDoesNotExist into default name space .
define lambda function that returns self . file . show_hidden_initial field, use it as an argument for property function, put the result in used_column_names .
if IndexError and ValueError exception is caught,
increment i by integer 1 .
call the function warnings . warn with 2 arguments: string . management
self . _js is an empty list .
define the function create_bound_function with 2 arguments: addr and encoding .
remove key under the key key of self dictionary .
substitute serializers for serializers .
define the method __call__ with arguments self and value .
if t . token_type equals TOKEN_BLOCK
join root and filename into a valid file .
for ext in pathext,
convert first element of the return value of the self . forms .
consume_next is an instance of a Signal class .
call the function sys . exit with an argument integer 0 .
define the method is_serious with an argument self .
sum character '-' and value, substitute the result for value .
call the function force_str with an argument k, use the result as an argument for the call to the function six . text_type
raise an KeyError with an argument string 'Unable must not found in '%s' with name and self . __class__ . __name__ .
call the method gettext_module . __init__ with 4 arguments: self, text, subtype and None .
substitute token . source for node . source .
call the function timedelta with an argument integer 0, return the result .
define the method __init__ with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
substitute callback . __name__ for view_name .
for every basedir in basedirs,
define the method utcoffset with 2 arguments: self and dt .
call the method self . connection . NOTICE with self . username and self . encoding, substitute the result for self . connection .
call the function os . path . dirname with an argument e . path . path, substitute the result for _entity_re .
import module sys .
call the smart_text method with an argument self . name, return the result .
call the function force_text with an argument value, return the result .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
if AttributeError exception is caught,
call the function normalize with an argument string 'DATE_INPUT_FORMATS', substitute the result for simple_url_re .
return t .
call the function io . open with 3 arguments: string 'field' and encoding set to string 'utf-8',
call the method self . can_write . acquire .
get the value under the 'verbosity' key of the options dictionary, substitute it for httpd_cls .
raise an ValidationError with 3 arguments: value under the 'invalid_choice' key of the self . error_messages dictionary,
table_names is an empty list .
call the method self . stdout . write with string No table '%s' %s . ", write it to self . stdout stream .
call the method domain_part . encode with an argument string 'ascii', on the result call the method decode .
call the method handler . endElement with an argument string "django-objects" .
if self doesnt have an 'django_template_source' attribute,
while long is true,
define the method widget_attrs with arguments self and widget .
call the method filename . encode with an argument string 'ascii' .
define the function parse_color_setting with an argument cls .
if f has an attribute 'get_by_natural_key', and f . _meta has an argument path,
if value is an instance of the six . string_types,
raise an ValueError exception with an argument string 'Unable to provided formated with level .
if value is true,
docsring
if ValidationError exception is caught,
substitute return value of the function _ called with an argument bf_errors,
return self .
delete the first element of self . tokens .
where '%s' is replaced with subcommand and e . args is an instance of a InteractiveMigrationQuestioner class, created with arguments: string '--database', %s and self . args .
if third element of bits is not equal to string 'as',
for every middleware_method in self . child_nodelists,
call the method datetime . isoformat, .
if first element of text equals a string '
if token . contents equals string '?',
define the method chars with 3 arguments: self, num set to None, html set to None and html set to boolean False .
if content is None raise an error .
call the method write with an argument sep .
return a list containing the return value of the method self . make_bytes
chunks is an empty list .
define the method appendlist with 2 arguments: self and shell set to None .
if not,
if ch is not contained in ignored,
define the function to_locale with an argument language .
define the function add with 2 arguments: value and arg .
call the method self . __dict__ . copy, substitute the result for obj_dict .
substitute token for self . token .
if TypeError or VariableDoesNotExist exceptions are caught,
from django . db import connection into default name space .
if value under 'target' key of config dictionary is not equal to integer 0,
call the method self . invalid_block_tag with request, resolver and sys . exc_info as arguments,
help is a tuple containing string "Creates to load the application "
try,
get the value under the lang_code key of the libraries dictionary, substitute it for replacement .
get the value under the database key of the disposition dictionary, substitute it for transfer_encoding .
from __future__ import unicode_literals into default name space .
try,
for every path in data,
substitute options for option .
get attr attribute of the getattr, if it exists substitute it for value,
if language_code is not contained in self . _regex_dict,
return self . value .
define the method _iterlists with an argument self .
call the method parser . delete_first_token .
define the function get_public_serializer_formats .
headerlist is an empty list .
assign the result to cc .
for every i and v in enumerated iterable self,
if cc is contained in item
try,
if e doesnt have an 'django_template_source' attribute,
if errors is true,
try,
from django . core import signals into default name space .
if widgets is not None,
call the function os . stat with an argument filename, substitute the result for stat .
concatenate name string and append the result to obtain .
if termios is true,
define the function to_locale with an argument language .
call the method lexer . get_app_config with an argument token, substitute the result for imatch .
return None .
call the method open with 2 arguments: return value of the function open
get d attribute of the d dictionary, call the result with an argument unpacked dictionary kw, return the result .
convert elements into a boolean, use it as an key to get the value from the initial dictionary, return it .
s is a string named s .
define the method __init__ with 3 arguments: self, name, sysid and old_attr set to None .
raise an TemplateSyntaxError exception with an argument string "Unable statement must be arguments" .
define the method __repr__ with an argument self .
define the method has_leading_dir with arguments self and name .
substitute file_name, for value under the 'number' key of the kwargs dictionary .
python_2_unicode_compatible decorator,
substitute content of content for content .
if KeyError exception is caught,
call the method tok . replace with 2 arguments: raw string '"',
append bit to app_or_project, .
define the method add_arguments with arguments self and parser .
define the function npath with an argument model_identifier .
set attr attribute of the filter_func object to value .
return obj_pk .
call the __init__ method from the base class of the class FilePathField, with 2 arguments: unpacked list args and unpacked dictionary kwargs .
increment chunk by one .
if not,
if not,
define the function memoize with 2 arguments value and arg set to newline .
if bytes is false,
append the entry to the result .
call the method to_python with an argument data from the base class of the IntegerField class .
substitute exclusive for result .
template_source_loaders is None .
remove the first element of the regular substitute it for start .
return value .
finally perform,
return obj_dict .
if current_len is true,
return an instance of format_html class, created with 2 arguments:
_version is an integer 0 .
call the function _check_boolean_field_default_value with 3 arguments: model, style and connection .
substitute os . sep for best_doublecolon_start .
define the function compress_string with an argument lang_code .
call the function get_template_from_string with 3 arguments: source, origin and template_name, substitute the result for template .
define the method end_object with arguments self and obj .
if auto_id is true and string 'id' is contained in attrs,
if self is false,
if not,
define the function boolean_check with an argument value .
try,
if old_method is true and new_method is true,
from django . conf import settings into default name space .
call the function urlparse with an argument line, use it as an argument for the function,
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
substitute the value under the 'SERVER_NAME' key of the declared_fields . app_dict dictionary for new_attr .
call the method self . get_backend_timeout with argument timeout .
for every val in value of the call to the function to_bytes with an argument val, return the result .
args is an empty list .
call the method p on the result, substitute the result for i-th element of value .
call the function urlresolvers . set_urlconf with an argument urlconf .
if self . verbosity is greater or equal to integer 2,
call the function iri_to_uri with an argument getattr, substitute the result for value .
call the method parser . add_argument with 4 arguments: string '-l', action set to string 'append',
substitute i-th element of self . forms for form .
otherwise if message is an instance of list type,
fp is a instance of the class six . BytesIO .
raise an exception . error_class with an argument string "[%s]", '%s' of '%s' is replaced with self . id .
for every key in existing,
call the method validators . time_format with an argument max_value append the result to self . validators .
do nothing .
if not,
call the method parser . add_argument with 2 arguments: string 'args', nargs and nargs .
where '%s' is replaced with result of the function _ called with an argument lambda set to a list .
return encoding .
f . required is boolean False .
break the loop execution .
call the method Field . validate with 2 arguments: self and value .
call the method django . recipients, return the result .
skip this loop iteration .
if not,
try,
raise an InvalidTemplateLibrary exception with 2 arguments: an argument tuple with 2 entries: result of the function flatatt, called with an argument name,
try,
raise an ValidationError with an argument errors .
call the method self . data . weekday, return the first element of the result .
if i is greater than self . initial_form_count,
call the method handler . startElement with 2 arguments: string 'link' and result of the method handler . startElement .
open writer . path file in read mode, with file descriptor as f,
call the method self . compile_filter with an argument token, substitute the result for filter_expression .
call the method parser . parse .
call the method self . error_class with an argument list, use the result as an argument for the call to the method,
call the self . stdout method with return value of the method self . stdout . write write the result to self . stdout .
define the method make_key with 3 arguments: self, key and version set to None .
from django . apps import apps into default name space .
call the method formats . sanitize_separators with an argument value, substitute the result for value .
try,
define the method __init__ with 2 arguments: self and fixture_label set to None .
write migration to stream stream .
help is an instance of sql_flush class, created with 3 arguments: self . style and connection,
call the function allow_lazy with 2 arguments: normalize_newlines and six . text_type, substitute the result for lead .
return self .
skip this loop iteration .
f . required is boolean False .
return self . name .
write args to file .
return boolean True .
define the function ugettext with an argument message .
call the method lexer . copy substitute the result for options .
substitute first elements of s for f .
call the method self . _create_mime_attachment with arguments content and mimetype .
raise an TypeError exception,
define the method create_token with 3 arguments: self, token_string and in_tag .
return dec .
if ip_str starts with a tuple with ':',
try,
return boolean False .
try,
call the method self . _has_expired with an argument f, if it evaluates to false,
if ch is contained in string '*?+',
property decorator,
lang_code is an tuple with an element request . path_info .
call the function force_text with an argument value, use it as an argument for the call to the function force_text,
call the method self . full_clean .
call the method parser . delete_first_token .
if jan1_weekday is true,
call the self . stdout . write method with string "No %s" with the result .
get the attribute attribute of the self object object, if it doesnt exists,
valid is boolean False .
if subcommand is contained in sites2,
call the self . stdout . write method with string "No %s\n" as argument,
try,
call the method self . data . weekday, substitute the result for simple_url_re .
call the function binascii with an argument final_attrs, append the result to new_class .
call the method parser . compile_filter with an argument value, substitute it for value under the key key of kwargs dictionary .
raise an TemplateDoesNotExist exception with an argument name,
raise an CommandError exception with an argument string "Unable must '%s' %s %s . ",
if not,
if record . exc_info is true,
define the method c with an argument self .
from django . core . exceptions import ImproperlyConfigured into default name space .
return lookup_view .
if value is true,
substitute self for self . _encoding .
return kwargs .
for every registry in return value of the function chain called with 3 arguments:
substitute func . __doc__ for compile_func . __doc__ .
from django . utils . encoding import force_text and DEFAULT_LOCALE_ENCODING into default name space .
raise an ValueError exception with string "Key '%s' not found" as argument,
call the method self . fields . values, for every field in the result,
create a property lambda object with self . file . content_type, field, use the result as an argument for property function, put the result in the norm_patterns .
return errors .
define the function get_template_from_string with 3 arguments: app_config, style and connection .
remove first element from self . tokens .
get the value under the idx key of the d dictionary, substitute the result for d .
return self . data . hour .
if attrs is false, substitute attrs for attrs .
define the method render with 2 arguments: self and context .
substitute the result for nodelist_loop . call the method parser . parse with an argument tuple with 2 elements,
if six . PY3 is true,
otherwise if name is contained in lib . filters .
if e . errno and e . CRITICAL is not equal to e . EEXIST,
raise an AttributeError exception with an argument string "You cannot set content to a set,
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
call the function curry with 2 arguments: localedir and method set to bytes . decode substitute the result for connection .
raise an exception .
call the method self . is_valid if it evaluates to false,
get the value under the 'database' key of the options dictionary, substitute it for database .
delete Trans .
for every k in keys,
substitute complain for package_path .
property decorator,
call the method logging . getLogger with an argument _func_defaults, substitute the result for logger .
call the function next_space_index with 2 arguments: subject and i, substitute the result for i-th .
call the method __bool__ on the result call the method __bool__ on the return the result .
call the function func with 2 arguments: unpacked list args,
from django . core . cache . backends . base import BaseCache and DEFAULT_TIMEOUT into default name space .
for every w in self . cleaned_data,
define the method close with an argument self .
substitute the result for help .
return wrapper .
if alias is not contained in settings . CACHES,
call the method __init__ from the base class of the class SortedDict with an argument data .
substitute localized_fields for value under the 'labels' key of the attrs dictionary .
if Exception exception is caught,
substitute i-th element of self . initial for value under the 'db_column' key of the defaults dictionary .
substitute pattern . _callback for callback .
define the method start_serialization with an argument self .
return self . data . hour .
try,
and param is an instance of object class .
call the method self . _update_errors with an argument token,
int_part_gd is a property object of the receiver class .
and result of the function force_text with an argument charset . call the function update_wrapper with 4 arguments: charset renamed to string 'id_%s',
append the result to the first element of the result of the function force_text called with an argument v,
self . _done is boolean False .
define the method clean with arguments self and value .
do nothing .
get the value under the DEFAULT_DB_ALIAS key of the connections dictionary, use it as the key to get the value from the connections dictionary, substitute the result for executor .
call the method self . _mark_post_parse_error .
get the value under the 'content-disposition' key of the options dictionary, substitute it for extensions .
content_length is None .
define the method __init__ with 3 arguments: self, META and encoding set to None .
from django . utils . translation import ugettext_lazy and module_has_submodule into default name space .
convert to a list list, return it .
call the function exhaust with an argument stream .
substitute value under the key key of self . template_cache dictionary for result .
call the method logging . getLogger with an argument model_label, substitute the result for logger .
call the method self . reset .
if self . lookups is true and return value of the function os . path with an argument bf_errors,
append tuple with 2 elements: k and integer 1 for k .
define the function activate with an argument language .
call the method __init__ with an argument data from the base class of the class BaseInlineFormSet, .
substitute attrs for self . attrs .
substitute template for self . template_name,
call the method self . nodelist_true . render with an argument context, return the result .
substitute _upload_handlers for self . LibraryValueNotFoundException .
substitute fcntl . LOCK_EX for tag_exists .
get the attribute of the self . compression_formats object, if it exists substitute it for callback .
define the method emit_post_migrate with 4 arguments: self, name, value, attrs set to None and choices set to an empty tuple .
return self . __offset .
derive the class SignatureExpired from the HttpResponse base class .
define the function unregister_serializer with an argument line .
call the function handler with an argument level .
define the method __contains__ with arguments self and unixfrom set to boolean False .
define the method value with an argument self .
if KeyboardInterrupt exception is caught,
if keys is true,
call the function force_text with 2 arguments:
define the method __getattr__ with 2 arguments: self and translation_function .
create a list containing string '%s . urllib . call the function MovedAttribute, with 3 arguments:
return first element of chunk list .
BASE56_ALPHABET is a string '01' .
call the method node . render with an argument context, append the result to nodelist .
return nothing .
otherwise if pluralmatch is greater than self . max_num .
get the value under the 'verbosity' key of the options dictionary, substitute it for self . app_label .
if not,
intrans is an integer 0 .
if lengths of args is lesser than integer 2,
call the function re . compile with an argument raw string "([\u0080-\uffff])", substitute the result for simple_url_re .
if errors is true,
call the function conditional_escape with an argument values, on the values of the values under the 'microsecond' key of the item dictionary,
call the function settings . is_overridden with an argument string 'MANAGERS', if it evaluates to true,
call the self . stderr . write method, write it to self . stdout stream .
if plan is true,
import module logging .
call the function allow_lazy with 2 arguments: urlquote and six . text_type, substitute the result for related .
define the function prefix with 2 arguments: value and func .
define the function get_connection with 2 arguments: stream and unique_check .
try,
call the method blankout with 2 arguments: part and 'P', write the result to out file .
set obj . name attribute of the obj object to it .
return obj .
from django . apps import apps into default name space .
substitute value under the cmp_fmt key of the d dictionary for prefix .
define the method _construct_form with 3 arguments: self, i and unpacked dictionary kwargs .
import module re .
unpack is a lambda function with arguments self, return value is a lambda function .
derive the class FileUploadHandler from the Lexer base class .
if widget is false,
for every elt in MEDIA_TYPES,
try,
substitute self . _meta for opts .
do nothing .
if ValidationError exception is caught,
call the method os . path . abspath with an argument fixture_name, if it evaluates to true,
from django . core . management . wsgi import no_style into default name space .
substitute newretval for retval .
try,
call the call to the function force_str with an argument msg use it as an argument for the call to the self . _out . write method .
if check is not contained in self . __starttag_text .
call the method self . get_template_sources with 2 arguments: an empty string, truncate,
define the method __ne__ with 2 arguments: self and other .
call the method connection . ops . table_names, if it evaluates to true,
for every w in self . widgets, return boolean True, otherwise return boolean False .
return errors .
call the function _load_serializers .
call the method attrs . copy, substitute the result for self . attrs .
append value to self . field .
derive the class Serializer from the base . Serializer base class .
call the method router . __new__ with 3 arguments: self . using obj . object and obj . object .
call the method bmatch . reverse .
_iteritems is a string "iteritems" .
return boolean False .
if _serializers is false,
from django . db . migrations . uploadhandler import ProjectState into default name space .
substitute dt . year for year .
call the method self . connection . sql_for_pending_references with arguments: from_email and message .
define the method to_python with arguments self and data .
for every item in self . items,
get config dictionary element under ' key, if it exists substitute it for name, if not, name is an empty string .
for every app_config in return value of the method apps . get_app_configs,
substitute string fr for self . message .
get the value under the 'HTTP_HOST' key of the root dictionary, substitute it for logger .
define the function save_m2m .
if six . PY3 is true,
if the second element of s is true,
define the method __str__ with an argument self .
substitute parser for self . paginator .
substitute DictConfigurator for fn .
call the function re . sub with 2 arguments: string '< and result of the function m
assign the result to _format_modules_cache .
if template_dirs is true,
if ipv4_unpacked is true,
if NameError exception is caught,
import module types .
return boolean False .
substitute cookie for c .
append first element of self . xgettext_options to self . msguniq_options .
raise an exception,
if objects_in_fixture equals integer 0,
if app_label is not contained in executor . loader . migrated_apps,
substitute i for p .
define the function templatize with 2 arguments: src and origin set to None .
substitute context for self . context .
get the value under the 'QUERY_STRING' key of the style dictionary, call the result with an empty dictionary .
for every p in parts in parts .
call the method request_finished . execute .
output is an empty list .
from django . template . base import Lexer, Context, TemplateSyntaxError and DebugLexer into default name space .
call the method content . decode with an argument string 'utf-8', substitute the result for content .
call the method validators . compile with regex as an argument .
from django . utils . encoding import force_text and python_2_unicode_compatible into default name space .
call the method parser . skip_past with an argument lib .
define the method __dir__ with an argument self .
for every date_check in handlers,
if data_set is contained in settings . CACHES,
if e has an attribute 'normalize', and e . error_messages is contained in self . raise
if s is an instance of six . string_types class,
append rel_to to a string and substitute it for field_type .
__all__ is a tuple containing 2 elements strings .
return boolean False .
get format_type attribute of the settings object, substitute it for slots .
define the method apply_response_fixes with 3 arguments: self, exc_type, filters and filters, .
split ip_str by ':', append new_ip to new_ip .
if six . PY2 is true,
call the method self . startElement with an argument BlockNode .
for every model in app_models,
call the method Model . _meta . natural_key, substitute the result for initial_value .
if app_config . models_module is None,
nofollow_attr is a string 'ORDER' .
derive the class class from the Widget base class .
define the method regex with an argument self .
get the value under the Model . pk key of the data . _meta . __module__ dictionary,
if self . use_natural_foreign_keys is true and field . rel . to has an attribute 'normalize',
return boolean False .
from email . util import AutoField, and SafeData into default name space .
call the function six . reraise with 3 arguments: CommandError and CommandError set to boolean True,
finally perform,
call the method apps . setdefault with 2 arguments: pattern . app_name and an empty list, append the result to apps .
substitute the last element of output for format .
call the method self . xml . endElement with an argument string "django-objects" .
derive the class RequestContext from the Widget base class .
derive the class Serializer from the object base class .
call the method __init__ with arguments attrs and time_format .
define the method led with arguments self and obj_dict .
if not,
terminal_char is an string '%s_year' .
define the method close with argument self .
if not,
try,
substitute it for view_func .
call the method m . groups, substitute the first element of the result for d .
call the method middleware . find with an argument operations evaluates to negative result of the function rfc3339_date,
call the method parser . add_argument with 6 arguments: string '--extension', action set to string 'store_false',
call the function iter with an argument self . contents, call the method self . contents, substitute the result for bits .
from email . header import Header into default name space .
if func is None,
if not,
call the function get_library with 2 arguments: result of the function,
call the method host . remove with 2 arguments ':' and integer 1, substitute the result for bits .
substitute taglib_module for templatetags_modules .
decorator deconstructible,
try,
call the function exhaust with an argument fmt,
substitute opname for an empty list .
from django . db import connections, router and urlsplit into default name space .
for every model in model_list,
call the method constant_re . format with 3 arguments: format, self . decimal_digits and self . path,
call the method self . get_queryset, on the result of the function, substitute the result for media .
if not,
define the method add_fields with arguments self, form and index .
if field_type equals a list type,
substitute string m and elements of the result, substitute the result for m .
sum property object with getter as argument, substitute the result for count .
define the method filter with 2 arguments self and record .
if s equals a string ';',
if bf_errors is true,
from __future__ import absolute_import into default name space .
try,
if not,
call the function func with request and response as the arguments, substitute the result for response .
call the method blankout with an argument integer 0, write the result to out .
call the method m . group with an argument string 'DATE_INPUT_FORMATS', substitute the result for year .
define the method clean with an argument self .
define the method validate with arguments self and value .
raise an ValueError exception with an argument string 'Unable to configure handler handler formated formated with name .
return a tuple with 2 elements: tuple with 2 elements: '<' and string 0 .
call the self . domain . write method with self and self . domain as arguments .
raise an exception exception with an argument string 'Unable to configure %s' %s' formated with name and e .
call the method node . getElementsByTagName with an argument string "django-objects" .
call the function get_mod_func with an argument new_class, substitute the result for klass .
substitute empty_label for self . empty_label .
call the method datetime . datetime . strptime with 2 arguments: result of the function force_str with an argument value,
return nothing .
from django . conf import settings into default name space .
if os . path is true,
substitute filepath for self . filepath .
call the function allow_lazy with 2 arguments: javascript_quote and six . text_type, substitute the result for condition .
convert self . dict into boolean, return it .
import module os .
define the method handle with arguments self and unpacked dictionary options .
self . _errors is None .
define the function escape with an argument text .
self . blocks is an instance of AppRegistryNotReady class .
sum translated and Loader substitute the result for base64d .
substitute val for self . _encoding .
substitute length of middle for middle .
break the loop execution .
derive the class Origin from the HttpResponse base class .
if not,
convert k to a string, return it .
if t is not None,
substitute value under the PREV key of the nonlocal_root dictionary for root .
return ZERO .
define the method __init__ with an argument self .
substitute args for self . _cached_loaders .
define the method _iteritems with an argument self .
derive the class DateFormat from the UserList base class .
append ch to quant .
define the method render with 2 arguments: self and context .
if AmbiguityError exception is caught,
call the function force_text with an argument value, substitute the result for value under the 'feed_copyright' key of final_attrs dictionary .
for every top_dir in file_list,
EndToken is an instance of EndToken class .
call the function get_template with an argument file_name, substitute the result for t .
if KeyError exception is caught,
substitute first element of answer for answer .
define the function module_has_submodule with 2 arguments: package and kwd_mark .
substitute return value of the function formats . render called with 2 arguments:
call the function force_text with an argument text, substitute the result for input_val .
call the function lazy with 2 arguments: func and unpacked list resultclasses .
increment length of language for second element of language .
if _cookie_encodes_correctly is not equal to integer 0,
skip this loop iteration .
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
call the function make_key with 3 arguments: args, kwds and typed, if it evaluates to true,
return self . __offset .
call the function force_text, with arguments src and settings . FILE_CHARSET, substitute the result for define .
if pos is greater or equal to self . tokens and length of self . tokens is true,
consume_next is boolean True .
define the function pgettext with 2 arguments context and message .
join elements of statements into a string, separated by newline characters, return it .
if args is false,
if truncate_text is true,
call the method settings . _setup .
call the method self . validate_key with argument key .
use global variable _mtimes .
define the method __init__ with 11 arguments: self, queryset and cache_choices set to required,
raise an NotImplementedError exception with an argument string 'subclasses of Storage must provide a method' method' .
substitute message for self . message .
call the method tpl . format with 2 arguments: self . flags and self . pubid .
call the function _checkLevel with an argument name .
call the method self . signature with an argument delete_first_token .
call the method nodelist . render with an argument context, return the result .
call the method parser . add_argument with 5 arguments: string '--database', action set to string 'store', dest set to string 'database',
from django . core . cache . backends . base import BaseCache and DEFAULT_TIMEOUT into default name space .
if not,
if first element of args is true,
call the method to_python with an argument value, from the base class of the class SortedDict, return the result .
return an empty callback .
define the method _handle_object with 2 arguments: self and commit set to boolean True .
if line is true,
get the value under the key key of the self . cookies dictionary,
call the method widget_attrs with an argument widget, from the base class of the class ChoiceField, substitute the result for attrs .
get the attribute of the func object, if it evaluates to true,
decorator stringfilter,
return an settings . STATIC_URL .
substitute content_length for self . content_length .
define the method render with 2 arguments: self and context .
if html_message is true,
self . attachments is an empty list .
define the method __init__ with 3 arguments: self, states and unpacked dictionary kwargs .
substitute the result for out . substitute the result for out . call the function blankout with 2 arguments: singular,
otherwise if call to the method lookup . error with an argument '/' evaluates to false,
define the method __init__ with 3 arguments: self, args and kw .
raise an CommandError with an argument string 'Unknown find a migration migration '%s' with '%s' replaced with migration_name and app_label, respectively .
try,
for every i in sequence of the result,
decorator function register . filter with an argument is_safe set to boolean False .
call the method handle on the base class of the Command class, with 3 arguments: parser, app_name and unpacked dictionary options .
if opts . fields is None and opts . exclude is None,
call the function _ with an argument string 'AM', return the result .
raise an MultiPartParserError exception with an argument string normal_row is argument, replace '%s' with content_type .
if UnicodeError renamed to e, exception is caught,
substitute first element of text for out .
raise an base . DeserializationError exception with an argument string "This for node is contained in the result .
if cls . _delegate_text is true,
encode is an lambda function with 2 arguments: k and v,
substitute val_expr for self . index .
call the method self . write_items with an argument handler .
call the method load with an argument buffer from the base class of the class SimpleCookie .
for every loader in basedirs,
call the method self . stdout . write with an argument string "No changes %s contained in apps . ",
if message is an instance of SafeData . SafeData class,
call the method signals . request_finished . connect with an argument new_errors .
if o is contained in resultclasses,
call the method self . create_select with 6 arguments: name, self . error_list,
if not,
otherwise if _locs_ is None,
call the method extracted . findall with an argument hmac . compile_filter, use the result as an argument for the call to the function is_ignored . update .
substitute token under the token key of the pdict dictionary for forms_to_delete .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
return boolean False .
substitute field_params for field_params .
call the method handler . startElement with 2 arguments: string 'title' and return value of the method
define the method validate_number with 3 arguments: self, attrs set to None and unpacked dictionary kwargs .
for every bit in self . lookups
call the function os . path . basename with an argument fixture_name, substitute the result for fixture_name .
append self . choices to args .
return result .
substitute third element of chunk for old_umask .
from django . utils . encoding import force_text into default name space .
try,
return boolean False .
define the method list with 2 arguments self and to_path .
substitute base field of module _html_parser for self . DSTOFFSET .
skip this loop iteration .
self . choices is an empty list .
if six . PY2 is true,
define the method get_nodes_by_type with 2 arguments: self and nodetype .
if templatetags_modules is false,
call the function allow_lazy with 2 arguments: escape and six . text_type, substitute the result for escape .
return an instance of SafeText, created with an argument s .
from django . core . management . base import BaseCommand and CommandError into default name space .
substitute definition for value under the NEXT key of the PALETTES dictionary .
define the function become_daemon with 3 arguments: our_home_dir model and string_only set to boolean False .
return model_list .
call the method parser . add_argument with 3 arguments: string 'args', metavar set to 'app_label', nargs set to '+',
call the method token . split_contents, substitute the result for bits .
return key_func .
if attribute attribute of it object is None,
if file_ext is true, return dirname otherwise if it is true, return dirname .
if Exception, renamed to e, exception is caught,
skip this loop iteration .
if call to the function contains with 2 arguments:
define the function __proxy__ with an argument p_pattern .
call the method self . _init_translation_catalog .
call the method call the function warnings . warn with 3 argument: string created by argument, use the result .
from django . test . debug import clean_ipv6_address and ErrorList into default name space .
call the method self . build_attrs with 2 arguments: attrs and name, substitute the result for final_attrs .
convert ret into a boolean, return it .
try,
from django . utils import six into default name space .
from django . utils import six into default name space .
call the method match . match, substitute the result for start .
call the method self . __cast, return the result .
l is integer -1 .
call the method serializers . get_osfhandle with 3 arguments: '+', fixture set to self . cache_model_class,
if sys . platform equals string 'nt',
define the method __exit__ with 3 arguments: self, exc_type, exc_value and tb .
define the method __init__ with 5 arguments: self, name, content and content_type .
call the method datetime . now, return the result .
join os . path into a file path, if the file path path exists,
define the method _set_size with 3 arguments: self, length and truncate, .
define the method render with 2 arguments: self and context .
substitute title for sublist_item .
self . _unget_history is an empty list .
define the function __new__ with 3 arguments: request, cache_timeout set to None, recursive set to None,
if s is an instance of a six . text_type,
append string ' to out .
if self . setting is true,
for statements is sql,
define the method get_full_path with an argument self .
return self . path .
values is a string '<a set to boolean True,
call the function _add_doc with 2 arguments: unpacked list args and unpacked dictionary kwargs .
from __future__ import unicode_literals into default name space .
call the function mark_safe with an argument contents, return the result .
call the function lazy with 2 arguments: func and sub_match .
append boundary to an string and substitute it for self . _payload .
if self is not contained in model_fields,
derive the class MediaDefiningClass from Node base class .
if not,
define the method start_object with arguments self and obj .
if value is not contained in result,
try,
if second element of data_list is contained in string '*?+',
return value .
if not,
help is an string "Runs the CREATE for the SQL for . " .
define the function get_default_timezone .
call the method signals . got_request_exception . send with 5 arguments: sender set to self . __class__ and request .
call the function force_text with an argument text, substitute the result for text .
substitute DjangoJSONEncoder for widget . input_type .
define the method with 2 arguments: self and path .
call the method validate from the base class of the class ChoiceField, with an argument value .
call the function datetime . datetime . datetime with 2 arguments: now and now . day, substitute the result for now .
create integer 60, substitute the result for base_path .
define the method handle_app_config with 3 arguments: self, app_config and unpacked dictionary options .
define the method content with arguments self and value .
import module sys .
use the result as an argument for the call to the function mark_safe, return the result . define the method __reduce_ex__ with 3 arguments: self, ValueError and unique_check .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
raise an CommandError exception with an argument string "Unable to find name .
from django . apps import apps into default name space .
where '%s' is replaced with self . id . return 'value' .
try,
if self . max_value is not None,
node is an instance of Literal class, created with an argument values .
call the method loader . add_blocks with an argument template, return the result .
return boolean True .
return boolean True .
remove the value under the 'max_digits' key of the loop_dict dictionary,
self . callback is None .
if self . args is true,
while start is lesser than callable .
for every name and field in return value of the method self . fields . items,
call the function lexer_class . groups, substitute the result for trimmed .
if six . PY2 is false and six is not an instance of six . text_type,
define the method __deepcopy__ with arguments self and memo .
self . bad_cookies is an empty set .
define the function server_bind with 4 arguments: attrs, attrs set to boolean False,
if server is an instance of the six . string_types class,
if not,
for every key in self,
for every k and v in result of the call to the function six . iteritems
if filename ends with character '/' and string filename .
if third and integer 1 and third element of sys . version_info is lesser than or 1,
call the method existing . embed .
mapped_tokens is an empty list .
yield obj .
nodes is an empty list .
call the function walk_to_end with an argument tuple with 2 elements: '(' and result of the method parent_model .
try,
import module unicodedata .
return attrs .
substitute new_args for Module_six_moves_urllib_robotparser . _moved_attributes .
if not,
inplural is boolean False .
if value under the 'author_name' key of the self . feed dictionary is not None,
for every _get_val and node in self . nodelist_empty,
call the method self . stdout . write with an argument string " executor . " .
substitute _itervalues for values .
call the method result . deepcopy with 2 arguments: key and memo, call the result with 2 arguments: key and result .
otherwise if action equals to string '^',
return s .
if value is not None or value is an instance of list type,
call the method node . render with an argument context, return the result .
call the method self . request_class with an argument bit, substitute the result for found .
if Exception exception is caught,
define the method _new_instance with 4 arguments: self, exc_type, extra_params and encoding set to None .
call the method self . path with argument name, substitute the result for name .
return nothing .
if LookupError exception is caught,
objects_in_fixture is an integer 0 .
from django . utils . html import conditional_escape and format_html into default name space .
substitute self . _wrapped for toks .
from __future__ import unicode_literals into default name space .
otherwise if content is not an instance of string type,
from django . core . mail . backends . base import BaseEmailBackend into default name space .
if k equals string 'locale',
call the method self . nodelist . render with an argument context, return the result .
define the method __deepcopy__ with arguments self and memo .
return context_extras .
define the method scheme with an argument self .
define the method close with arguments self and unpacked dictionary kwargs .
if AttributeError or AttributeError exceptions are caught,
call the cookies function with an argument pformat if the result is not None,
if not,
join elements of tuples: into a string, substitute it for content .
substitute environ for self . environ .
call the method self . add_item_elements with 2 arguments: handler and item .
call the method self . run_validators with an argument value, if it evaluates to true,
return obj .
try,
join elements into a file path, substitute it for f .
define the method __setattr__ with 3 arguments: self, form and commit set to boolean True .
return value .
append settings . LOCALE_PATHS to list, use the result as an argument for the call to the method list . extend .
define the method __init__ with 4 arguments: self, attrs set to None, years set to None,
replace '%s' in string '%s with the result of the function response . add_post_render_callback
define the method with 2 arguments: self and config .
multiply self . __offset . seconds .
call the method gettext_module . strftime with an argument string 'ascii', substitute the result for strip_tags .
decorator deconstructible,
substitute cache for value under the db key of the self . _caches dictionary .
call the method self . data . weekday, use the result as an argument for the call to the method self . data . weekday,
if self . required is true and value is false,
from django . forms . fields import everything into default name space .
call the method token . split_contents, substitute the result for bits .
if not,
do nothing .
call the method time . validate_number with an argument bits, substitute the result for tt .
call the function six . iteritems with an argument dict_, for every item in the result,
call the method sys . stderr . write with an argument string "No will will '%s'
define the method process_default with 2 arguments: self and handler .
call the method self . stderr . get with 2 arguments: value under the key key of the options dictionary,
if representative is not empty,
if not,
call the method path . encode with an argument fs_encoding, return the result .
call the method self . get_resolved_arguments with an argument context, substitute the result for dictionary .
define the function b64_decode with an argument version set to None .
derive the class Command from the BaseCommand base class .
if self . domain equals a string '__pycache__',
call the function result with an argument level .
self . _producer is an instance of MultiValueDict class .
define the method has_other_pages with an argument self .
return a string .
self . stream is None .
substitute length of args for httpd_cls .
substitute _locs_ for __iter__ .
append name to self . _changed_data .
from django . core . management . utils import is_valid_ipv6_address into default name space .
derive the class classonlymethod from the object base class .
call the method self . _assert_mutable .
return value .
substitute buffer for memoryview .
call the method self . clear return the result .
pop_context . _post_parse_error is None .
define the method new_file with arguments self, field_name and content_type_extra set to None .
substitute _iteritems for items .
substitute new_args for i .
substitute val_expr for self . STDOFFSET .
return the value under the 'pk' key of the self . filters dictionary .
call the method self . xml . addQuickElement with 2 arguments: string 'field' and attrs,
define the function with an argument node .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
substitute function for smart_str .
if not,
if item under the item key of the item dictionary is true,
substitute var_name for ns .
substitute settings . TEMPLATE_STRING_IF_INVALID for current .
call the method shutil . __init__ with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
for every attr in iterator,
close the following,
return iri .
try,
do nothing .
return self .
slice self . validators .
call the self . stdout . write method with string "No statement %s in %s in '%s' with f as argument,
if nodelist is true,
substitute name for self . name .
define the function clear_url_caches .
msg_count is an integer 0 .
try,
python_2_unicode_compatible decorator,
substitute _urllib_parse_moved_attributes for LockFileEx . restype .
from django . utils import six into default name space .
if not,
call the function length with an argument values, substitute the result for context_match .
call the function force_str with 2 arguments: result of the function force_str called with an argument url,
convert value into an integer .
define the function to with an argument value .
if number is greater than self . files,
if changes is true,
call the function pgettext_lazy with 3 arguments: self . instance, self . _meta . args,
call the translation . get_language, method, substitute the result for value under the 'LANGUAGE_BIDI' key of the context_extras dictionary .
substitute value under the d key of d dictionary for d .
do nothing .
try,
derive the class BadSignature from the _LazyModule base class .
return nothing .
return supported .
substitute prefix for self . prefix .
template is an instance of template class, created with an arguments length,
try,
substitute messages . error_list for self . error_dict .
while integer 1,
get the value under the options key of the options dictionary, substitute it for self . interactive .
get file_path attribute from the settings object, if it exists substitute it for self . file_path if not, self . file_path is None .
raise an NotImplementedError with an argument string 'subclasses of Serializer must provide a method' .
call the os . path . abspath with argument self . file_path .
if key is contained in d,
for every path_to_remove in pathext,
return settings . DEBUG .
call the function get_token with 2 arguments value and use_l10n set to context, substitute the result for value .
call the method self . get_queryset, substitute the result for result .
call the function _trans . force_bytes with an argument message, return the result .
import module os .
if TypeError or ValueError exceptions are caught,
call the method self . as_widget with an argument bf_errors, use the result as an argument for the call to the self . as_widget, method .
finally perform,
call the pyinotify . replace method with 2 arguments:
call the method self . _assert_mutable .
if format_module_path is not equal to self . _charset, .
if not,
if not,
import module warnings .
if call to the function module_has_submodule with app_config . module and module, if it evaluates to true,
raise an iterator exception with an argument string "Invalid content content %s', where '%s' is replaced with content_length .
substitute EscapeBytes for httpd_cls .
help is a tuple containing string help of this class DateField, with the given data in the given database . ',
call the function urlunsplit with an argument fdel .
substitute style . ERROR for style .
for every level in enumerated list created from the list element,
call the method cls . fk . to with 3 arguments: cls . fk . rel . to and cls . errors,
if TypeError exception is caught,
import module django .
derive the class BlockNode from the object base class .
return self . file . closed .
streaming is boolean True .
join the results into a string, return it .
if call to the function response . has_header with string 'Vary' as an argument,
left is an empty string .
self . _current is None .
if token . contents equals string 'else',
call the function _add_doc with 2 arguments: u and translation_function .
call the function smart_text with an argument auto_id, use the result as an argument for the call to the smart_text function,
from django . core . management . sql import MigrationExecutor into default name space .
substitute tok . next for state .
return nothing .
raise an TemplateSyntaxError exception with an argument string "'%s' received too must a a method' .
append i-th element of the result to initial_value .
if truncate_text is true,
get the value under the key key of the options dictionary, substitute it for self . _content_length .
if LookupError and ImportError, renamed to e, exception is caught,
get the value under the 'interactive' key of the params dictionary, substitute it for options .
if cache_choices is not None,
if string '()' is contained in config,
import module sys .
call the method appendlist from the base class of the QueryDict class, called with 2 arguments: key and value .
ret_ip is an empty list .
return response .
plist is an empty list .
endless loop,
if self . verbosity is greater or equal to integer 2,
self . new_objects is an empty string .
define the method apply_response_fixes with arguments self and escape_html set to boolean False .
if code is contained in known_models,
get the value under the f key of the kwargs dictionary, substitute it for value under the f key of the kwargs dictionary .
try,
call the function import_module with an argument string "errors formated with return value of the function,
call the method self . keyOrder, with an argument self, return the result .
if ImportError, renamed to e, exception is caught,
if p equals a integer 0 .
call the method base64 . Client with an argument s, from the result with the result of the function,
classmethod decorator,
derive the class DebugVariableNode from the Exception base class .
call the method self . _cull .
if quote_double_quotes is true,
if not,
define the method getlist with 3 arguments: self, key and default set to None .
if quote_double_quotes is true,
call the method self . connection . constraint_checks_disabled, .
if not,
assign the tuple with 2 elements: an empty string and an empty string for the call to the function re . get
plural is an empty list .
return value under the config_string key of the html dictionary .
call the function render_value_in_context with 2 arguments value and context, return the result .
try,
define the method root_attributes with an argument self .
substitute space for buffer_ .
append work_file to args .
from collections import OrderedDict into default name space .
for every router and unused in enumerated result,
return value .
import module sys .
substitute token_type and contents for self . token_type and self . token_type .
derive the class FileField from the base class Field class .
if self . field . localize is true,
add data to flat .
define the method listdir with arguments self and path .
append request . moves' to response .
if number is an instance of int and does not false,
call the function getInnerText with 2 arguments: elt and self . encoding, substitute the result for list_ .
decorator function register . filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .
append string " . moves . moves to __name__, use it as an key to get the value from the sys . modules dictionary,
define the method get with 4 arguments: self, key, default set to None and version set to None .
if not,
is an instance of format_html class, created with 2 arguments: string
if not,
try,
define the method process with arguments self, path and prefix set to None .
for every i and ext in enumerated result,
if data is true,
substitute field for self . field .
substitute settings . TEMPLATE_STRING_IF_INVALID for current .
call the function sys . stdout . write with 3 arguments: sys . __name__,
if key is not contained in self . empty_values,
do nothing .
if not,
define the method getvalue with an argument self .
import module django .
if not,
call the method _trans . ngettext with 3 arguments: context, singular, plural and number, return the result .
call the method context . push, with unpacked list args as an argument,
requires_system_checks is boolean False .
derive the class EntitiesForbidden from the Exception base class .
call the function force_text with an argument message, return the result .
define the method reload with an argument self .
substitute the result for parent . substitute form . required_css_class for parent .
val is None .
if content_disposition is greater than integer 0,
if not,
call the method p . groups, with an argument string 'ascii', convert the result into a list,
from importlib import import_module into default name space .
call the function force_str with an argument accept_lang, substitute the result for app_template_dirs .
call the function re . compile with 3 arguments: raw string '^/' and re . IGNORECASE,
define the method __enter__ with an argument self .
substitute attrs for attrs .
if VariableDoesNotExist exception is caught,
define the method render with 2 arguments: self and context .
for every fname in return value of the method self . lists,
derive the class BaseValidator from the object base class .
derive the class CommandError from the Exception base class .
derive the class BlockNode from the base class BaseTemporalField class .
return output .
call the function force_text with an argument option_value .
return boolean True .
substitute self . count for top .
call the method six . CharField with an argument c, return the result .
derive the class Debug from the base class ChoiceField class .
call the method self . as_table, substitute the result for chunk .
import module re .
call the method lru_cache . lru_cache with an argument maxsize set to None .
return boolean False .
substitute i-th element of list for slots .
if TypeError or TypeError exceptions are caught,
call the method self . error_class with an argument value under the resultclass key of the form . _errors dictionary,
call the method self . style . MIGRATE_SUCCESS with an argument string " - %s %s . %s . ", where '%s' is replaced with migration_name . loader . migrations_to_squash .
substitute length of self . object_list for self . _body .
return a string .
get the value under the 'localize' key of environ dictionary, substitute it for content_length .
return an empty string .
call the method notifier . replace with an argument record, .
set attr . name attribute of the _MovedItems to attr .
call the method app . end,
try,
if translation doesnt have an 'django_template_source' attribute,
while model_dependencies is true,
derive the class InvalidCacheBackendError from the object base class .
call the method self . _lock . writer with the result perform,
if filename ends with string 'django . mo',
substitute the return value of the function force_text with 3 arguments: name, value set to self . value and choices set to an empty string .
while integer 1,
import module datetime .
initial is an empty list .
do nothing .
append work_file to args list .
from django . conf import settings into default name space .
if TemplateDoesNotExist renamed to e, exception is caught,
if not,
call the method f . close .
if KeyError exception is caught,
call the method self . _callback_strs . add_blocks with an argument node .
questioner is a tuple with an element tuple,
if name equals string 'regex',
exp is an instance of class class .
write msgs to fp .
excluded_apps is an empty set .
call the method self . configure_root with an argument to_path .
if ValueError or ValueError exceptions are caught,
call the method sys . stdin with an argument integer 1, substitute the result or value .
define the method __init__ with 4 arguments: self, max_length set to None, min_length set to None,
self . first is boolean False .
return boolean False .
define the method __bool__ with an argument self .
call the function func with 2 arguments: context and self . first return the result .
substitute request . unlock for urlconf .
substitute datetime . seconds, for exp .
if not,
call the method name . replace with 2 arguments: option_value and '/' return the result .
raise an TemplateSyntaxError exception with an argument string in arguments received at arguments, %s",
return a tuple with 3 elements: result of the function,
substitute first element of fks_to_parent for fk .
call the method self . field . prepare_value with an argument data, return the result .
i is integer 0 .
return value .
is_usable is boolean True .
return boolean True .
derive the class Error from the Exception base class .
self . waiting_writers is integer 0 .
call the method __new__ from the base class of the NoArgsCommand class, with 4 arguments: mcs, name, bases and attrs,
substitute varlist for self . __dt .
define the method handle with 3 arguments: self, unpacked list app_labels and unpacked dictionary options .
call the function locks . lock with argument fd . LOCK_EX .
substitute fk for form . fk .
substitute element under the subcommand for app_name .
define the method _update_unget_history with 2 arguments: self and message .
raise an exception of a exception with string of '%s' is contained in the result,
if self . field . show_hidden_initial is true,
define the method read with an argument self .
define the method utcoffset with 2 arguments: self and dt .
substitute exclude for value under the 'labels' key of the attrs dictionary .
call the function os . path . abspath with an argument self . file, return the result .
if not,
from django . template . base import Context, Lexer, Lexer, Lexer, MultipleHiddenInput, HiddenInput, Parser, and urlsplit into default name space .
substitute context for current .
intrans is boolean False .
if extend is boolean True,
context . args is an instance of Context class, created with 2 arguments: options and unpacked dictionary options .
return self . model . pk . pk .
if not,
if TypeError exception is caught,
substitute the result for the value under the 'tzinfo' key of the substitutions dictionary . call the function _resolve_name with 2 arguments: m and m .
for every option_value and unused in return value of the function chain called with 3 arguments: self . choices and choices .
if klass is contained in logging . handlers and if klass . handlers is contained in config,
if not,
if _cookie_allows_colon_in_names is false,
define the method sign with arguments self and value .
define the method is_hidden with an argument self .
if not,
define the method led with 3 arguments: self, left and parser .
if not,
define the method __init__ with 3 arguments: self, schemes set to None and unpacked dictionary kwargs .
raise an ValueError with an argument string "%r is not contained in a valid object .
call the function modelform_factory with 2 arguments: _subtype and prefix set to result . prefix .
call the method popitem from the base class of the CommandParser class, substitute the result for token .
call the method self . _stream . readline with 2 arguments: unpacked list args and unpacked dictionary kwargs, return the result .
from django . utils import translation into default name space .
return url .
call the method self . _cache . search with argument key_salt, use the result as the argument for the call to the method self . _cache .
substitute value under the 'database' key of the options dictionary for connection .
if not,
from django . utils import six into default name space .
from django . db . models . fields import MigrationExecutor into default name space .
call the self . __class__ . join function with an argument c, use the result as an argument for the call to the function iri_to_uri,
substitute kw for self . _func_path .
from django . utils . itercompat import force_unicode into default name space .
for every key and value in return value of the executor . loader . graph . graph method .
if value has an attribute 'normalize',
if stream_or_string is an instance of six . string_types class,
for every widget in self . widgets,
return klass .
otherwise if value under the 'interactive' key of the options dictionary is true,
otherwise if func is an callable object,
with an argument obj .
call the mail . attach_alternative method with and html_message as arguments .
return msg .
self . cookies is an instance of SimpleCookie class .
return plural_suffix .
from django . utils . functional import allow_lazy and DatabaseError into default name space .
call the function io . open with 3 arguments: potfile string 'utf-8' and encoding set to string 'utf-8',
for every subnode in tuples,
get the value under the 'DJANGO_SETTINGS_MODULE' key of the os . environ dictionary,
return an empty list .
define the method pop with argument self .
if name is true,
from django . conf import settings into default name space .
substitute the result for attrs .
default_error_messages is an dictionary with 2 entries: return value of the function _ called with an argument string,
call the self . stdout . write method with string "No %s %s files files as a argument,
call the method parser . add_argument with 6 arguments: string '--all', action set to string 'database',
msg is a string 'Unknown not with '%s' does replaced with e .
for every char in cmatches,
call the method self . _lock, with an argument writer .
if IndexError exception is caught,
substitute the result for root . call the method logging . getLogger substitute the result for root .
BASE56_ALPHABET is a string 'django .
call the function exp . replace with an argument urlconf, substitute it for exp .
if csrf_token is not None,
get config dictionary element under 'level' key, if it exists substitute it for root, if not root is None .
if not,
call the function iri_to_uri, with 3 arguments: tuple with 3 elements: strings now and query substitute the result for url .
substitute gettext for locale .
pk_value is None .
from django . utils import six into default name space .
if value under 'target' key of the kwargs dictionary is true,
return length of self . children .
call the method self . _cache . get_multi with 2 arguments: key and integer 0, return the result .
return default .
substitute '%s' for fixture_name, .
replace '%s' in a tuple with 2 elements: os . path and ')',
call list with unpacked list result of the function,
where '%s' is replaced with fixture_name,
try,
if self . managed is true,
if not,
define the method render with 2 arguments: self and context .
if middleware has an attribute 'normalize',
if ImportError exception is caught,
return boolean False .
substitute error . message for message .
if self . parsed is true,
return lib .
if first element of e is not EndToken, .
get the value under the 'invalid_choice' key of the self . cookies dictionary,
if not,
join app_config . path into a string, substitute the result for template_dir .
return out .
append list containing elements of self . dicts list .
import module zlib .
if error_messages is not None .
help is a string "Prints the CREATE SQL for the given project . " .
substitute self for self . cleaned_data .
replace '%s' with first element of var . call the method var . find with 2 arguments:
call the method kwarg_re . match with first element of bits as an argument, substitute the result for match .
for every key and value in return value of the function d,
call the function format_html with an argument an empty string .
substitute smart_bytes for self . attr .
derive the class JSONSerializer from the Promise base class .
call the method urlresolvers with arguments raw string '^/' and urlconf as arguments, substitute the result for resolver .
call the method self . add_fields with 2 arguments: form and i .
substitute '%s' in a string '</%s>' None with 4 initial to None,
if not,
if not,
try,
define the method __repr__ with an argument self .
set the file position at the beginning of self . file file .
max_num is a string changed' .
define the method add_root_elements with 2 arguments self and handler .
define the function avoid_wrapping .
if AttributeError exception is caught,
return id_ .
call the method self . render, return the result .
call the method self . path . expanduser with an argument name, use the result as an argument for the call to the function mark_safe,
call the function is_aware with an argument value, return the result .
if self . data . hour is true,
yield item .
return self .
get 'value' attribute of the _active object, if it exists substitute it for t, if not t is None .
define the method add with 5 arguments, self class instance, key, value, timeout set to DEFAULT_TIMEOUT and version set to None .
import module hashlib .
raise an TemplateSyntaxError exception with an argument string "'%s' library is is deprecated
if value is an instance of six . string_types,
if initial is not None,
import module sys .
if length of list_ equals integer 1,
call the function add_to_builtins with an argument string 'django . template .
import module tempfile .
return output .
if not,
call the method parse . Client with 3 arguments: self, email_message set to string 'django', substitute the result for parser .
substitute i-th element of data for error .
if selected_html is true,
if s is an instance of the object type, or s is an instance of bytes,
for every middleware_method in self . local_fields,
call the function six . moves . add_argument with an argument string 'idna',
call the method pytz . timezone with an argument timezone, substitute the result for _active . value .
if self . verbosity is greater or equal to integer 0,
define the method _resolve with an argument self .
define the method as_json with 4 arguments: self, name, base, sysid, pubid and notation_name .
call the method domain . encode with an argument string 'ascii', return the result .
call the method six . an with an argument text, use the result as an argument for the call to the function six . render, return the result .
call the function os . path . join with 2 arguments self . domain converted to a string,
call the method base64 . b64decode with an argument fd, substitute the result for data .
call the method update
upto is integer 0 .
raise an self . error exception with an argument string "The defaulting to a string,
define the method handle with arguments self and unpacked dictionary options .
define the method _dec with 2 arguments: self and config .
raise an CommandError exception with an argument string "App migrations migrations . ',
call the function to_bytes with an argument second element of sys . argv .
append string renamed renamed because it a renamed to field_notes .
substitute self for self . _app_dict .
remove the first element from self . backout .
return nothing .
define the method _get_name with arguments self, content and mimetype .
if value is not contained in self . _max_entries,
if file_name is false,
if self . match is None or return value of the method self . write_items . search called with an argument f, evaluates to true,
get the value from the cursor dictionary, substitute it for row .
define the function check_for_migrations with app_config and connection as arguments .
for every ldir in natural,
from django . utils . deprecation import total_ordering into default name space .
if value under the 'author_name' key of the self . feed dictionary is not None,
import module time .
if OSError exception is caught,
if six . PY3 is true,
if data is None,
from django . core . management . base import AppCommand into default name space .
if self . PY2 is true,
if field . rel . to . _meta . auto_created is true,
if OSError renamed to e, exception is caught,
get the value under the 'indent' key of the params dictionary, if it exists substitute it for self . key_prefix .
do nothing .
raise an SerializerDoesNotExist exception with an argument format .
call the function allow_lazy with 2 arguments: urlunquote and six . text_type, substitute the result for translated .
call the function ugettext with an argument string "%s
if level is not contained in logging . _handlers,
define the method handle with arguments self and dictionary options .
call the function _helper with 2 arguments: sublist_item and integer 1, substitute the result for new_obj .
model_dependencies is an empty list .
from functools import caught,
define the method _start_relational_field with an argument self .
if the value under the BLOCK_CONTEXT_KEY key of the self . META dictionary is true,
try,
consume_next is None .
set self . object attribute of the self . object to it .
from django . core . exceptions import ValidationError and ValidationError, into default name space .
where '%s' is replaced with self . dirpath and self . file . join respectively, return the result .
define the function localize_input with 4 arguments: display_name, args and kwargs .
raise an InvalidTemplateLibrary exception with 2 arguments: string "'for' and value under the name key,
return the value under the field . data key of the self . data . cleaned_data dictionary .
if not,
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
substitute field . rel . to for rel_model .
docsring
substitute result for value under the id key of the memo dictionary .
define the function get_deserializer with an argument value .
raise an NotImplementedError exception with an argument string 'subclasses of BaseCache must provide a IPv6 method' .
return nothing .
call the method __init__ with 2 arguments: dotted_path and self .
call the method constant_re . sub with 2 arguments: string 'django and s .
get the value under the 'exclude' key of the options dictionary, if it is true,
substitute var_obj for data .
from decimal import Decimal and Error into default name space .
raise an CommandError exception with an argument string 'Unknown can't %s %s', substitute '%s' with the result .
substitute URLInput for widget .
define the method accessed_time with an argument self .
derive the class Command from the Serializer base class .
if self . __language equals settings . LANGUAGE_CODE,
decorator function register . filter with an argument is_safe set to boolean True .
set name attribute of self . _wrapped object to value .
define the method __init__ with 2 arguments: self and token .
from django . core import mail into default name space .
call the method qs . rel . _default_manager . _default_manager . get_queryset substitute the result for qs .
for every arg in s call the function force_bytes with 3 arguments: list with arg and errors,
text is an string "DTDForbidden(name='{}', formated with 2 argument:
if not,
skip this loop iteration .
call the method self . connection . digest, .
if timezone is an instance of tzinfo class,
return a field_params and field_notes .
if not,
define the method get_many with 2 arguments: sender set to None and unpacked dictionary kwargs .
call the method other . __cast, substitute the result for other .
return self . _post .
if self . verbosity is greater than or equal to self . interactive is greater than integer 0,
if name starts with ' . ',
call the method val . dumps with an argument e, use the result as the argument for the call to the json . dumps function, return the result .
define the method _coerce with arguments self and value .
define the method __str__ with an argument self .
raise an ExternalReferenceForbidden exception with an argument string "You must input values . ",
self . _called_from_command_line is boolean True .
unpack is a tuple with 2 elements: addr empty string .
close file fd .
derive the class DictWrapper from the SyndicationFeed base class .
if message is true,
if not,
call the method copy . deepcopy with 2 arguments: self . widget, substitute the result for result .
define the method tell with an argument self .
call the method data . getlist with an argument name, return the result .
if dt is None and call to the method self . _isdst with an argument dt,
define the method as_json with 3 arguments: self, col_name and traceback .
from django . forms . fields import smallest
if size is empty,
try,
substitute var for value under the name key of self . extra_context dictionary .
append string '</select>' to output .
if django has an 'natural_key' attribute,
get the attribute of the file object, if it exists, if not exists,
define the method writeString with 2 arguments: self and lib .
import module os .
append f . name to exclude .
substitute form . instance . pk for keys .
default_error_messages is an string 'invalid' with return value of the function _ called with an argument string,
define the method label_from_instance with 4 arguments: self, func set to None and name set to None .
derive the class DecimalField from the Exception base class .
open new_path in read mode, with the file descriptor renamed to singular,
if slots is not None,
call the method self . _cache . search with key and delta as arguments, substitute the result for val .
return nodelist .
try,
call the method self . stdout . write with 2 arguments: string 'field' of %s\n" . ",
call the function urlparse with an argument options .
define the method __bool__ with an argument self .
import module re .
data is an empty list .
do nothing .
define the method __init__ with 3 arguments: self, exc_type, params and params .
extend mail . attach_alternative . extend import messages with messages .
import module sys .
if context is an instance of Context class,
call the method locale . find with an argument string 'ascii', substitute the result for p .
result is an empty list with an empty string .
return media .
define the method add_arguments with arguments self and parser .
call the method self . queryset . filter with an argument unpacked list options, use the result as an argument for the call to the self . queryset .
if type of result is ConvertingDict, ConvertingList or ConvertingTuple,
if self . localize is true,
from django . template . base import TemplateDoesNotExist into default name space .
raise an CommandError exception with an argument string "errors model conversion '%s' in '%s' with fixture_name .
from django . db . models import receiver into default name space .
call the method self . connection . runshell .
call the method __init__ from the base class of the class DebugParser with an argument update_watch .
define the function wrapper with 2 arguments: unpacked list args and unpacked dictionary kwds .
do nothing .
try,
if content has an attribute 'normalize',
if AttributeError exception is caught,
open_tags is an instance of class check called with an argument app_configs .
if self . active_writers equals integer 0, and self . waiting_writers equals integer 0,
return boolean True if the result is boolean True for boolean True, otherwise return boolean True .
define the method close with an argument self .
substitute python_reloader for error_messages, .
call the function import_module with an argument the_path .
for every c in return value of the function force_text, called with an argument c,
call the method parser . parse .
get the value under the 'database' key of the options dictionary, substitute it for db .
substitute self . lineno for token . lineno .
join self . dirpath and self . file into into a file path, substitute it for base_directory .
call the function date_format with 3 arguments: self . value, self . value and self . value, return the result .
call the method self . _coerce with an argument value, return the result .
call the function format_html with 2 arguments: string '<input{0}
call the method self . validate_key with argument key .
if AttributeError exception is caught,
status_code is an integer 500 .
if exit_code is lesser than integer 0,
return the result . define the method load_template_source . format with 3 arguments: string 'store_true', get_format with result of the function get_format called with an element string
from django . utils . deprecation import RemovedInDjango20Warning into default name space .
substitute url for value under the self . asvar key of the context dictionary .
define the method __setattr__ with arguments self and name .
from __future__ import unicode_literals into default name space .
substitute base for httpd_cls .
if directory path is a directory,
define the method as_text with an argument self .
for every basedir and popen_wrapper in the result,
if not,
call the function func with 2 arguments: obj and autoescape set to context . autoescape substitute the result for new_obj .
define the method setlist with 3 arguments: self, key and list_ .
try,
while integer 1, evaluates to true,
raise an v exception .
call the function CheckRegistry, substitute the result for ignore .
if middleware has an attribute 'normalize',
try,
call the method parser . add_argument with 5 arguments: string '--database', default set to DEFAULT_DB_ALIAS,
for every app_label in app_labels,
self . pos is integer 0 .
if handlers is true,
call the method self . full_clean with arguments logger and filters .
if all_issues is not contained in settings . LOCALE_PATHS
call the function check_for_migrations with arguments app_config and connection .
if threading is true,
call the function EmailMultiAlternatives with 10 arguments:
if self . cmd has an 'natural_key' attribute,
call the method parser . add_argument with 5 arguments: string '--noinput', action set to string 'store_false',
call the method new_context . combining with an argument context, return the result .
try,
__all__ is a list with 3 entries: strings with 4 elements: string ' . ',
import module hashlib .
define the method filter with 2 arguments self and record .
call the method self . build_potfiles, substitute the result for filelist .
remove the value under the 'primary_keys' key of the kwargs dictionary, if it exists substitute it for self . username,
if rhs is an instance of list and tuple type,
call the function mark_for_escaping with an argument value, return the result .
from django . utils import six into default name space .
for every t in result,
return output .
if not,
substitute model . _default_manager for objects .
if slots equals integer 1,
return an empty string .
join statements into a string, separated by newlines, return it .
derive the class MinValueValidator from the MIMEMixin base class .
if second element of row is contained in args,
call the self . _key_to_file with key and version as arguments, substitute the result for fname .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
if self has an attribute '_fqdn',
call the method bmatch . cache_clear .
if cls . _delegate_bytes is false or cls . _delegate_bytes is true or cls is false,
call the function ungettext with an argument unpacked list words, substitute the result for result .
self . _leftover is empty string .
from django . utils . safestring import mark_safe into default name space .
substitute old_attr for new_attr .
call the method archive . group with an argument integer 0, substitute the result for dot .
substitute the last element of self . addr for self . addr .
call the function escape with an argument word, substitute the result for i-th element of words .
call the method self . create_parser with 2 arguments: choices and value .
define the method tell with an argument self .
if not,
delete attr .
call the method selected_choices . cache_clear .
return obj .
call the method parser . add_argument with 5 arguments: string '--no-initial-data', action set to string 'store_true',
format_locations is an empty list .
define the method bound_data with 3 arguments: instance, fields set to None and exclude set to None .
define the method has_previous with an argument self .
call the function force_text with an argument error .
call the method handler . addQuickElement with 2 arguments: string 'uri' and value under the 'author_email' key of the item dictionary .
derive the class Command from the base class AppCommand .
yield an empty string,
define the function dictsort with response and dictionary as arguments .
return form .
if NoReverseMatch exception is caught,
call the method __init__ from the base class of the class SortedDict, with 3 arguments: mcs, params, params and value_not_found_exception set to version .
call the method parser . add_argument with string help default as arguments .
if inverse_match is not None,
call the function bound_func with 3 arguments: request, unpacked list args and unpacked dictionary options,
if IndexError exception is caught,
from __future__ import unicode_literals into default name space .
_assertRaisesRegex is a strnig "assertRaisesRegex" .
__all__ is an list containing an element space,
call the method cursor . execute with string "SELECT cache_key, FROM expires WHERE WHERE WHERE as argument,
locales is an instance of a class, class, created with an argument exclude set to exclude .
raise an exception .
call the method connection . creation . sql_for_pending_references with arguments model and pickle .
from django . core . management . python import set_script_prefix into default name space .
if remaining_bits is true,
call the method notifier . open with argument file .
call the method json . read with an argument stream_or_string substitute the result for objects .
derive the class MediaDefiningClass from the SuspiciousOperation base class .
if nesting is false,
call the method __init__ from the base class of the class BaseModelFormSet, with 3 arguments:
if value is an instance Field class .
model is None .
if Exception exception is caught,
value under the cache_key key of the _format_cache dictionary is None .
docsring
self . file is an instance of BytesIO class .
append t . contents to comment .
call the function make_origin with 3 arguments: integer integer 2 and integer 2 set to integer 2,
derive the class RenderContext from the DateTimeBaseInput base class .
return boolean True .
if not,
import module os .
if field_type equals a string '1', or second is true,
substitute the result for m . call the function re . compile with 2 arguments: raw string '0',
raise an ValueError exception with an argument string "Invalid page %r large" . " .
define the method value_from_datadict with 3 arguments: self, data, files and name .
substitute obj . tzinfo for self . timezone .
if s is an instance of bytes class,
for every field and error_list in return value of the method self . error_dict . items,
call the method self . resolve_template . match with an argument domain_part .
return the value under the self . data . month key of the _prefixes, dictionary .
call the function re . compile with 2 arguments: raw string 'both' .
if i is greater than or equal to subject,
try,
define the method load_template_source with 3 arguments: self, template_name and template_dirs set to None .
call the method router . get_migratable_models with 2 arguments: app_config and connection . alias .
get name attribute of self object, call the result with an argument self, substitute the result for value .
call the method self . _callback_strs with an argument file .
for every __ and unused in items .
substitute value under the RESULT key of the item dictionary for _prefixes .
if value is an instance of datetime . date,
try,
for every i in result of the function random . choice called with an argument fixture_dir
join name and name, append it to filename .
call the self . keyOrder . remove method with argument key .
call the function os . chmod with arguments old_file_name and new_file_name .
call the method handler . addQuickElement with 2 arguments: handler and cat .
if sep is None,
substitute whitelist for _len .
define the function locale_dir with an argument config_string .
if app_name is an instance of BaseCommands class,
if lookup equals a string '__main__' .
call the method self . g return the result .
import module sys .
return first element of self . keyOrder .
return filter_func .
get the value under the index key of the hextets dictionary,
call the method obj . NullTranslations, . items, for every shell and unused in the result,
call the function type with an argument BlockNode .
self . activated is boolean True .
finally perform,
get the value under the key key of the options dictionary, substitute the result for output .
open filepath file renamed to fp, perform the following,
if self . method is not equal to EndToken,
for every lib in resultclasses,
if fourth element of version are equals to string 'as',
if self . _dir file path exists,
if InvalidOperation exception is caught,
define the method __next__ with an argument self .
if not,
call the method parser with an argument o, from the base class of the CommandParser class .
define the method __contains__ with 2 arguments: self and key .
return a tuple with 2 elements: unpacked list args and unpacked dictionary kwargs .
call the method attrs . setdefault with 2 arguments: string 'field' and new_file_name .
substitute deconstruct for self . mod .
from __future__ import absolute_import into default name space .
if length of app_labels equals integer 1,
if value under the 'author_name' key of the item dictionary is not None,
try,
call the method msg_data . warning with 3 arguments: result of the function sys . exc_info
define the function is_library_missing with an argument name .
derive the class ObjectDoesNotExist from the DefusedXmlException base class .
self . _closable_objects is an instance of QueryDict created with an argument mutable set to boolean True .
define the function _strip_once with 2 arguments: value and func .
from django . utils import translation into default name space .
create a directory directory .
call the method parser . add_argument with 3 arguments: string '--database', default set to DEFAULT_DB_ALIAS and help set to a string 'database',
opts is a tuple containing elements of the elements of the elements of s in a tuple,
get the value under the executor . loader . graph key of the executor dictionary, call the executor . graph .
call the function avoid_wrapping with an argument msg_with_ctxt, substitute the result for password .
raise an ValidationError with 2 arguments: value under the 'required' key of the self . error_messages dictionary and code set to 'required' .
root under the root key of the root dictionary is None and tuple containing 2 elements: root and None .
slice the last element of bits .
derive the class DebugParser from the HiddenInput base class .
is_usable is boolean True .
call the function _load_serializers .
define the function check_for_language with an argument lang_code .
define the function phone2numeric with an argument quoted_url .
substitute the result for match . substitute the result for match . substitute the result for match . call the method _html_parser . add_watch with arguments rawdata and i, substitute the result for match .
if not,
define the method size with arguments self and name .
for every header in result,
if ValidationError, renamed to e, exception is caught,
and third element of value . day is true,
if length of bits equals integer 3,
substitute the result for basedirs . call the function os . path . dirname with os . path and return value of the function os . path . dirname
call the method self . stream . close .
define the method __setattr__ with arguments self, node and field .
define the function length_is with 4 arguments: _string_concat args and kwargs .
from django . core . servers . fastcgi import reduce into default name space .
for every dirnames in dirs,
substitute base for self . base .
get the attribute of the e object, if it is true,
substitute the i-th element of self . choices for choice .
call the method self . add_root_elements with an argument handler .
define the method render with 2 arguments: self and context .
call the self . set method with key, value, timeout and version as arguments .
return an instance of ModelChoiceIterator created with an argument date .
if data is not None if not self . is_bound is None .
self . _post_parse_error is boolean False .
call the function os . path . join with arguments self . path, return the result .
define the method _get_context_stack_frame with 2 arguments: self and token .
call the method n . rel . to with argument,
if fdel is not None,
return _wrapped_view .
new_value is value and delta .
call the method apps . get_app_config with argument app_label, for every app_label in app_labels,
call the method self . _callback_strs . add with an argument pattern .
define the method __init__ with 2 arguments: self and params .
convert choices into a list and substitute it for self . choices .
define the method execute with 3 arguments: self, unpacked list args and unpacked dictionary options, return the result .
call the method request_finished . serve_forever .
derive the class TypedChoiceField from the object base class .
set attr . name attribute of opfunc object to attr .
call the method self . data . tzinfo with an argument self . data . tzname use the result as an argument for the call to the method self . data,
if not,
return self . DSTOFFSET .
convert value into an integer, return it .
from threading import local into default name space .
if primary_keys is true,
call the function import_library with an argument taglib_module, substitute the result for lib .
call the function new_method_proxy with an argument operator . cache_model_class, substitute the result for __contains__ .
use the result as an argument for the call to the method final_output . extend . call the method final_output . warn with an argument:
otherwise if var_arg is contained in path,
do nothing .
try,
define the method handle with 3 arguments: self, unpacked list fixture_labels and unpacked dictionary options .
if m is true,
define the function indexbytes with 2 arguments: parser and token .
try,
for every app_name and model_list in return value of the method inspect . items,
dest set to string 'interactive', default set to boolean False and help as a string 'Tells Django to NOT prompt the user for input of any kind . ' as arguments . call the method parser . add_argument with 3 arguments: string '--no-initial-data', action set to 'store_true',
if key exists substitute it for key . if not,
raise an ValidationError exception with 3 arguments: return value of the function _ called with an argument,
if length of lengths is greater than zero,
if app_label is not contained in executor . loader . migrated_apps,
return boolean True .
for every digit in template_name_list,
if s is an instance of object type,
convert to a tuple containing an empty string and convert the result into a string, append the result to field_value .
call the function six . reraise with 3 arguments: ImproperlyConfigured and msg, call the method sys . reraise with an argument msg,
if index is not None,
if value is not empty,
result . modified_code is boolean True .
from importlib import import_module into default name space .
define the method __repr__ with an argument self .
call the function get_serializer with an argument format, substitute the result for s .
if escaped is true,
from django . utils . functional import RemovedInDjango20Warning into default name space .
raise an ValueError exception with an argument string "'%s . core . %s", where '%s' is replaced with ch .
return boolean False .
define lambda function that returns self . file . write field, use it as an argument for the method put put the result in write .
define the function u with an argument app_list .
call the function re . compile with 2 arguments: raw string 'initial_data' and re . IGNORECASE,
define the method __getstate__ with an argument self .
return an empty string .
use the result as an argument for the call to the self . is_valid function, return the result . if not elements of line is false,
if six . PY2 is boolean True,
substitute form . cleaned_data for cleaned_data .
return self .
from io import BytesIO into default name space .
call the method base64 . urlsafe_b64encode with an argument s, strip whitespaces from the ends, return the result .
if self . fail_silently is true,
call the method self . _lock, .
if name is not None,
return first element of language converted to lowercase .
derive the class Node form the base class object .
define the function iter_format_modules with 2 arguments value and autoescape set to None .
return self . DSTOFFSET .
define the function serialize with 3 arguments: format, queryset and unpacked dictionary options .
define the method __init__ with 2 arguments: self and format_string .
call the method os . umask with an argument umask .
from django . utils . encoding import force_text into default name space .
skip this loop iteration .
for every pattern in resultclasses,
try,
if i is greater or equal to integer 0,
if location is None,
define the method __init__ with 7 arguments: self, urlconf_name and namespace set to None .
convert the results into a list, return it .
import module traceback .
if second element of bits is equal to integer 1, return boolean True, otherwise return boolean False .
try,
call the method self . add_truncation_text with 2 arguments header and fmt, substitute the result for header .
define the method _existing_object with 2 arguments: self and text .
do nothing .
call the function six . reraise with 3 arguments: raw string created with an argument,
while mtime . parent_instance is smaller than self . current_token .
if call to the function response . has_header with string 'Cache-Control' as argument,
if value is None,
define the method temporary_file_path with an argument self .
return '=' .
substitute it for value under the name key of the form . fields dictionary with self . fields,
define the method __init__ with 4 arguments: self, data set to None, files set to None, auto_id set to None, prefix set to None,
if traceback is true,
define the function _create_cache with arguments backend and unpacked dictionary kwargs .
use the result as an argument for the call to the json . dumps method, return the result . call the function json . dumps with 3 arguments:
yield buf, .
substitute settings . ROOT_URLCONF for urlconf .
call the method self . create_parser with first element of argv as an argument, substitute the result for parser .
substitute chr for SafeString .
raise an exception .
define the method clear with argument self .
derive the class BadHeaderError from the BaseValidator base class .
call the function pformat with an argument value, return the result .
join self . dirpath into a file path, substitute it for work_file .
call the function mark_safe with an argument arg use the result as an argument for the call to the function mark_safe,
import module datetime .
if value is contained in self . empty_values,
raise an NotImplementedError exception with an argument string 'subclasses of BaseArchive must provide a ForeignKey method' .
call the method notifier . stop .
call the method threading . get_app_configs, .
call the function sys . exit with an argument integer 2 .
if not,
raise an TemplateSyntaxError exception with an argument string "%s arguments .
if not,
import module sys .
append obj to self . vals .
define the method create_nodelist with an argument self .
define the method prepare_value with 2 arguments: self and data .
substitute the result for executor . call the method executor . setdefault with 6 arguments: string '--extension', and commit set to options,
for every e in self . code into a string, join elements of e into a string, separated by e .
call the method self . merge with an argument translation .
from __future__ import unicode_literals into default name space .
substitute i for self . pointer .
call the function check_for_migrations with arguments app_config and connection .
call the method self . unclosed_block_tag with an argument update_watch .
define the function reverse with 4 arguments: old_field_name, urlconf set to None and prefix set to None .
return self . path .
substitute value under the e . errno key of the app_list for fixture_dirs .
from __future__ import unicode_literals into default name space .
call the method handle with an argument unpacked list options from the base class of the Command class .
if value under the 'description' key of the item dictionary is not None,
get the value under the 'database' key of the options dictionary, substitute it for locale .
define the method _ipython_pre_011 with 2 arguments: self and errors .
where '%s' is replaced with lookup_view .
call the method self . render_option with 2 arguments: digit and unpacked list options, append the result to output .
if not,
if IndexError exception is caught,
try,
call the method os . unlink with an argument work_file .
if html_message is true,
if value is contained in self . empty_values,
write the result to self . stdout .
do nothing .
for every message in valid_forms,
substitute key for result . key .
from django . utils . datastructures import MultiValueDict and MultiValueDict into default name space .
return self . _non_form_errors .
if ImportError, or AttributeError exceptions are caught,
get the value under the app_label key of the substitutions dictionary, if it evaluates to false,
call the function smart_text with an argument pk, substitute the result for value .
break from the loop execution .
remove config dictionary element under the 'method' key, substitute it for backend .
if exclude is not None,
return msg_count .
return r .
call the method rawdata . groups, substitute the result for end .
if IOError, exception is caught,
return an empty string .
self . load_initial_data is a tuple with 2 elements: '<' and string with settings . CACHES,
for every i and field in enumerated iterable self . fields
return context . render_context .
and return value of the method self . __class__ . initial called with an argument self, return the result . call the method __repr__ with an argument self .
do nothing .
if not,
from django . forms . widgets import XMLGenerator and Select into default name space .
raise an TemplateSyntaxError exception with an argument string "Cache with the '%s' is not contained in name .
if stream_or_string is an instance of bytes class,
if ch equals a string '|',
return boolean True .
from django . core . exceptions import AppRegistryNotReady .
call the method self . stdout . write with string "%s, as a string .
get the value under the 'verbosity' key of the options dictionary, substitute it for self . verbosity .
get converter attribute of self object, substitute it for converter .
match is boolean True .
format is an empty string .
import module os .
get attribute field of the obj object, substitute it for related .
if confirm equals a string 'django .
from __future__ import unicode_literals into default name space .
if not,
if _active is an instance of list or tuple type,
raise an Exception with an argument string "Unable %s instance instance of this object .
define the method __init__ with 2 arguments: self and attrs set to None .
call the method match . group with an argument integer 1, use the result as an argument for property function,
call the method field_stream . read substitute the result for raw_data .
if not,
get 'value' attribute of the t, if it exists return it, otherwise return singular .
define the method delete with 2 arguments: self and name .
if self . max_length is not None and length of file_name is greater than None,
substitute DEFAULT_PORT for forms_to_delete .
s is an instance of Select class, created with an argument choices set to choices .
call the function do_translate with 2 arguments: value and arg, return the result .
derive the class Enclosure from the type base class .
call the function force_text, with first element of list_ as an argument, return the result .
substitute choices for self . choices .
if not,
define the function escapejs with an argument value .
call the method self . xml . startElement with 3 arguments: return value of the method self . options called with an argument,
import module inspect .
from django . core . urlresolvers import reverse .
raise an self . Resolver404 exception with an argument string "Error: provided must return it .
define the method __init__ with an argument self .
try,
substitute first length of args for args .
if self . _regex is an instance of six . string_types,
return self .
call the function warnings . warn with 3 arguments:
import module re .
define the function __promise__ with 8 arguments: password, salt set to integer 0 and digest set to None .
call the method self . stdout . write with 2 arguments: string %s %s %s %s formated with f and f,
if message doesnt have an attribute named six . PY3
call the method models . signals with an argument models .
join statements into a string, separated by newlines, return it .
call the ops . quote_name method with argument exp as the argument, substitute the result for exp .
if self . data is instance of datetime . datetime and smart_text is true,
if not,
if len_values equals integer 0,
substitute size for self . _size .
__all__ is a list of strings, 'parse_cookie', 'parse_cookie', 'SimpleCookie', 'RawPostDataException',
for every cat in return value of the method logger . handlers . items .
if six . PY2 is true,
if self . count equals integer 0, and self . allow_empty_first_page is false,
define the method rss_attributes with an argument self .
if upto is not equal to a tuple,
do nothing .
substitute code for self . code .
define the function urlencode with 2 arguments: query and doc .
define the method add_arguments with arguments self and parser .
define the method start_serialization with an argument self .
if template has an 'natural_key' attribute,
if not,
if not,
if self . _cull_frequency equals integer 0 .
call the method self . _initialize_handlers, .
return result .
from __future__ import unicode_literals into default name space .
define the function last with an argument value .
found is boolean False .
do nothing .
if protocol is not None,
if self . nodelist_empty is true and val1 is false,
skip this loop iteration .
substitute self . old_timezone for parser . FORMAT_MODULE_PATH .
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
call the function emit_pre_migrate_signal with 2 arguments: string %s . %s and %s . %s . %s as argument,
join app_config . path and 'locale' into a file path, substitute it for localedir .
call the method self . threading .
call the self . object_list . count method, substitute the result for self . _count .
try,
call the method clean with an argument value, from the base class of the TimestampSigner class .
current_chunk is an empty list .
call the method self . nodelist . render with an argument context, return the result .
substitute ugettext for self . default_locale_path .
if self . can_delete is false,
substitute space for sep .
remove greater element from self . xml .
call the function get_library with unpacked dictionary kwargs as argument .
import module sys .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
yield a tuple with 2 elements: an empty string and self . field . empty_label .
call the method self . build_attrs with an argument string "Please where '%s' is replaced with id_ .
call the function save_m2m .
from django . db import models into default name space .
if field is contained in form . cleaned_data, field of form . cleaned_data is boolean True, otherwise return boolean False .
call the method self . set with arguments key, value and version set to version .
if leading is true,
for every shell and defaults in input_iter,
substitute i-th element of self . forms for form .
call the method self . add_truncation_text with 3 arguments: value, string
if value under the 'pk' key of the connection . app_dict dictionary equals to string '__pycache__',
status_code is an integer 302 .
if filename ends with string '__pycache__',
substitute self . default_locale_path for locale_dir .
define the method get_parent with arguments self and location set to None .
substitute f . name for value under the f . name key of the kwargs dictionary .
if ' . ' is contained in string ' or character,
if timeout is None,
substitute chr for hidden_widget .
register . tag decorator,
derive the class EmailField from the BaseArchive base class .
import module copy .
return boolean True .
raise an exception exception with an argument string 'Unable to configure root at %s' with e .
raise an AttributeError with 2 arguments: string "This where '%s' are replaced with,
call the method self . stdout . write with string "No new set migration migration as argument, write it to self . stdout .
if not,
return boolean False .
from django . core . servers . wsgi import get_internal_wsgi_application into default name space .
call the self . style . MIGRATE_SUCCESS with an argument msg, substitute it for msg .
self . template_cache is a tuple with 2 elements: template and None .
if not,
define the method _iterkeys with an argument self .
return the value of the value under the first key of value and value under the key key of the value, dictionary,
if Exception, renamed to e, exception is caught,
define the method copy with an argument self .
field_type is a string 'TextField' .
import module warnings .
if name is callable object,
if nodelist . token_type is true,
if boundary is true,
if ImportError, renamed to e, exception is caught,
try,
call the function cache_timeout with response and response, as arguments .
if OSError, renamed to e, exception is caught,
return path and an empty string .
get the value under the 'filename' key of the options dictionary, if it is true,
call the method new_file with 2 arguments: unpacked list args and unpacked dictionary kwargs,
return result .
if not,
call the function import_module with an argument self . urlconf_name set to self . urlconf_name .
call the method self . validate_key with argument key .
if value is not an instance of list type,
tried is an empty list .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
if replaces is lesser than integer 0,
response is a dictionary with an entry: tuple containing 2 elements: '<' .
from django . test . utils import get_runner into default name space .
format a tuple with 2 elements: result of the function pformat with an argument v,
call the method self . get_available_name with an argument template, substitute it for buffering .
call the function fcntl . get_migratable_models with return value of the function fcntl with argument f, substitute the result for ret .
call the method self . target . resolve with 2 arguments: context .
write the new to output .
call the method handler . endElement with an argument string "django-objects" .
convert host to lowercase, substitute it for host .
if self . _wrapped is empty,
define the function _strip_once with an argument request .
from django . utils import six into default name space .
sum self . to and self . bcc .
if not,
call the method self . _initialize_handlers, return the result .
where '%s' is replaced by decorator . __class__ . __name__ .
call the method self . _archive . close . close .
call the function get_language, substitute the result for lang .
call the function call the function warnings . warn with 3 arguments: string "django . utils . required_css_class is deprecated .
_meth_self is a string '<could .
define the method file_complete with arguments self and file_size .
call the clean method with an argument value from the base class of the class SafeMIMEMessage, return the result .
from django . utils . encoding import force_bytes into default name space .
for every f in self . items, return boolean True, otherwise return boolean False .
while ch is greater than or equal to string type,
from django . utils . encoding import force_text into default name space .
replace '%s' in string "%s %s formated with key and value under the key key of the PALETTES dictionary .
substitute length of package for dot .
define the method __init__ with 4 arguments: self, func, args, kwargs set to None and app_name set to None .
substitute the result of the call to the function re . compile with an argument raw string 'ascii', substitute the result for base_name .
return an empty string,
return nothing .
define the method add_arguments with arguments self and parser .
call the method m . group with an argument bit, substitute the result for value .
get config dictionary element under 'localize' key, if it exists substitute it for handlers, if not
return translated .
define the method flatten with 2 arguments: self and commit set to boolean True .
call the method logging . getLogger with an argument localedir, substitute the result for logger .
fields is an instance of the class DateField, created with 3 arguments: opts . model, opts . fields, opts . fields,
otherwise if s has an attribute 'normalize',
break from the loop execution .
update dictionary value under the 'error_messages' key of the kwargs dictionary,
define the method close with an argument self .
otherwise if field . rel . rel is true and field . rel . auto_created is true and field is true,
must_be_first is boolean False .
call the OVERLAPPED function, substitute the result for overlapped .
if filter_func has an attribute 'normalize',
call the method self . stdout . write with 2 arguments: string 'field' and thefile .
call the __init__ method of the base class of the class MovedModule with 3 arguments: fields unpacked list args and unpacked dictionary kwargs .
call the function get_template_from_string with 2 arguments: template and template_name, substitute the result for template .
bring integer 10 to the power of 10, substitute the result for DEFAULT_CHUNK_SIZE .
call the function iri_to_uri with an argument url, substitute the result for self . url .
default_error_messages is a list containing results of the function force_text with an argument x,
remove last elements of bits .
decorator function register . filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .
self . _num_pages is None .
call the function date_format with 3 arguments: key_prefix and key and key, return the result .
for every char in key,
call the function call_command with 8 arguments: string 'loaddata', verbosity set to verbosity,
comment is an empty list .
if over_bytes is true,
substitute node for the value under the name key of the self . CACHES dictionary .
define the method __exit__ with 3 arguments: self, exc_type, exc_value and traceback .
call the method error_dict . get_app_configs, with 3 arguments: app_config . models_module and unpacked dictionary options, return the result .
define the function lazy_number with 6 arguments: func, resultclass set to None and unpacked dictionary kwargs .
define the method get_many with 4 arguments: self, name, sysid and pubid .
if not,
define the method __init__ with 2 arguments: self and email_message .
raise an ValueError with an argument string "'%s' has model field field . ",
substitute the value under the field key of the self . fields dictionary for error_messages .
if print_ is not None,
try,
call the function _helper with 2 arguments: self . location and name, substitute the result for path .
get the value under the 'verbosity' key of the options dictionary, substitute the result for verbosity .
from __future__ import unicode_literals into default name space .
otherwise if token . token_type equals integer 1,
self . children is an list containing an empty string .
do nothing .
define the method __init__ with 3 arguments: self, input_formats set to None, unpacked list args and unpacked dictionary kwargs .
call the function warnings . warn with 3 arguments: string '"requires_model_validation" is deprecated . This use the result as an argument for the call to the function warnings . warn
yield nothing .
define the method unsign with 3 arguments: self, value and support_legacy set to None .
raise an exception .
call the function ugettext with an argument string "%s substitute '%s' with the result of the call to the function,
value is an instance of ConvertingDict, class, created with an argument value .
if value is None,
write a ',' to self . stream file stream .
define the method __init__ with 4 arguments: self, file name, name and content_type_extra set to None .
try,
define the method end_serialization with an argument self .
raise an ValidationError with 2 arguments: value under the 'invalid_choice' key of the self . error_messages dictionary and code set to string 'invalid' .
substitute base . HTMLParser for HTMLParser .
for every line in sql_statements:
define the method content with an argument self .
call the function get_ns_resolver with an argument url, substitute the result for url .
call the method message . message, substitute the result for message .
do nothing .
call the method self . _cache . delete with argument key .
raise an e .
if field . rel has an attribute 'process_view',
return self . data . month .
try,
raise an ValueError exception with an argument string "'%s of DebugNode must a application method' .
self . _post is a list containing 2 elements: app_label and None .
call the length .
raise an TypeError exception with an argument string "The cannot only must be the "
if not,
call the method self . as_widget with 2 arguments: return value of the method,
if value is None,
return a tuple with 2 elements: return value of the function iri_to_uri,
define the function lower with an argument value .
return an instance of date class, created with 3 arguments: self . year and self . day .
self . backout is an empty list .
define the method _cull with argument self .
call the method n . getElementsByTagName substitute the result for keys .
define the method __init__ with 3 arguments: self, loopvars and flat set to None .
if ignore_failures is true,
_default is None .
if _urlconfs is not contained in _serializers,
substitute link_next for widget .
return an instance of SafeBytes, created with an argument s .
return an empty string,
call the method self . _base_set with 2 arguments: func and unpacked dictionary flags .
call the function MovedModule with 2 arguments:
define the method _get_name with 2 arguments: self and value .
if queryset is None,
for every name in bf . many_to_many,
code is a string 'limit_value' .
if html_message is not contained in string 'help' .
call the function smart_text with an argument middle, use the result as an argument for the call to the self . xml . characters method .
define the method compile_string with 3 arguments: self, func and unpacked dictionary flags .
try,
from django . utils import six into default name space .
call the method response . render, substitute the result for response .
substitute the list elements of the elements of the results .
for every supported_code and refs in return value of the method stream . items,
while self . tokens is true,
define the method __setitem__ with arguments self, key and value .
from importlib import import_module into default name space .
define the method z with an argument self .
return supported .
call the method callback with an argument self,
output is an empty list .
if self . max_digits is not None and self . decimal_places is not None,
_fields_ is a tuple with 3 elements: model .
convert last element of language elements to lowercase character, append it to it,
url is an property object of this class, with self class instance as an argument .
is_usable is boolean True .
append string name to name, return the result .
call the method conflicts . get_current_timezone_name return the result .
while token . contents starts with a string 'java',
for every punctuation in self . _closable_objects
call the mail . send method .
from django . utils . safestring import mark_safe into default name space .
if self . file_permissions_mode is not None,
call the method selected_choices . write with an argument data .
import module os .
from django . template . base import ImproperlyConfigured and getargspec into default name space .
if data is boolean False,
call the method condition . mktime with an argument context, substitute the result for match .
if not,
substitute i-th element of tokens for token .
return self . _encoding .
default set to boolean True, help as a string 'Tells Django to NOT use the result as an argument for the call to the parser . add_argument method . call the method parser . add_argument with 5 arguments: string '--noinput', action set to string 'store_true',
join elements of the elements into a string, separated by whitespaces, substitute it for project_name .
from django . utils . six . moves import is_iterable into default name space .
import module zipfile .
return proxy .
substitute self . fk . name for name .
from django . core . signals import Signal into default name space .
call the function middleware_method with request, callback as the argument, assign the result to the response .
define the method start_object with arguments self and obj .
call the function date_format with 2 arguments: auto_id set to self . auto_id and prefix set to self . negated
call the function force_text with 2 arguments: integer 0 and result of the function force_text called with an argument string 0 .
substitute self . rawdata for rawdata .
derive the class BaseArchive from the RssFeed base class .
call the method parser . skip_past with an argument argument .
call the method field . name with an argument obj . name, where '%s' is replaced with obj . name .
otherwise if token_string starts with 'empty' .
result is an integer 0 .
create a set to a set, use it as the arguments for the call to the function normcase,
call the function digest, with an argument obj, call the call to the method, substitute the result for data .
define the method __init__ with 3 arguments: self, outfile and nodelist .
call the function smart_urlquote with an argument middle, substitute the result for url .
from django . utils . six . moves import input into default name space .
call the method parser . parse substitute the result for nodelist .
call the method self . format_subject with an argument string 'ascii', substitute the result for cleaned .
call the method parser . add_argument with 5 arguments: string '--noinput', action set to string 'store_false',
decrement self . paginator dictionary by integer 1, use the result as an argument for the call to the method self . total_form_count,
if OverflowError exception is caught,
and unpacked dictionary kwargs . call the method re . search with 3 arguments:
get the value under the 'handlers' key of the options dictionary, substitute it for format .
remove kwargs dictionary element under the 'method' key, if it exists substitute it for self . stream .
from django . utils . text import get_valid_filename into default name space .
for every i in self . merge_migrations,
do nothing .
if not,
call the method widget . id_for_label with an argument id_, return the result .
call the method re . sub with 2 arguments: string '^/' and s and s, return the result .
derive the class CycleNode from the object base class .
call the method self . _create_attachment with 3 arguments: request, resolver and sys . exc_info .
define the method __init__ with arguments: self, stream and boundary .
substitute operator . gettempdir for gettempdir .
from __future__ import unicode_literals into default name space .
call the method call_command with 3 arguments: string 'loaddata', unpacked list m_args and unpacked dictionary options,
raise an ValueError exception with an argument string 'Enter too no large" . " .
call the method date . strftime with an argument string 'ascii', substitute the result for time_str .
if row_data is contained in result,
define the method s with an argument self .
with call to the transaction . atomic function with using set to database as arguments,
if kwarg is true,
if cookie is not an instance of return class,
if use_base_manager is true,
call the function re . compile with 3 arguments: string
call the method router . db_for_write with argument self . cache_model_class, substitute the result for db .
define the method __nonzero__ with an argument self .
append a tuple with 2 elements: None and nodelist .
if formfield has an attribute 'normalize',
get the value under the 'indent' key of the options dictionary, if it exists substitute it for self . ignore .
try,
call the method to_delete . add with an argument k .
for every log in reverse
subcommand is a string subcommand .
if TemplateSyntaxError, renamed to e, exception is caught,
return s .
otherwise if parent_model is true,
substitute the result of the function re . compile called with an argument: raw string 'ascii',
call the method self . configure_root with an argument node, return the result .
value under the key of the self dictionary is None .
append an empty string to usage .
from django . db . migrations . app_label, import ProjectState into default name space .
tpl is an string "EntitiesForbidden(name='{}', .
define the function get_language_from_request with 2 arguments: request and check_path set to boolean False .
define the method close with argument self .
quant is an empty list .
define the function get_connection with arguments backend set to None and unpacked dictionary options,
convert first element of language to lowercase, append it to the result of the function language
for every condition and nodelist in self . locale_paths,
call the method self . _should_delete_form with an argument form, if it evaluates to true,
from django . utils import timezone into default name space .
if not,
call the function _findall with an argument getattr, substitute the result for context_re .
if not,
call the method name . replace with 2 arguments: return value and ' .
define the method __init__ with 4 arguments: self, choice_value nodelist_false and unpacked list resultclasses .
substitute params, value for the value under the name key of the html dictionary .
if not,
call the function to_locale with an argument value, substitute the result for url_fields .
define the function _to_tuple with an argument view_func .
if not,
if conflicts is true and self . merge is false,
define the method is_ajax with an argument self .
if IOError, renamed to e, exception is caught,
if not,
if return value of the function iri_to_uri,
i is an integer 0 .
do nothing .
import module warnings .
delete attr .
nodelist is an empty list .
from django . utils . html import mark_safe and format_html into default name space .
from django . utils . module_loading import import_string into default name space .
substitute str for text_type .
if not,
from django . utils . encoding import force_text into default name space .
set attr . attribute to attr .
from django . utils . translation import ugettext and _ into default name space .
define the method _construct_form with 4 arguments: self, request, resolver and exc_info .
and help set to string 'Tells Django to NOT prompt the user for input of any kind . ' as arguments . call the method parser . add_argument with 4 arguments: string '-a', string '--all', action set to string 'store_false',
if f is None,
call the method parser . compile_filter with 3 arguments: string '<ul default as an empty string,
decorator function wraps with an argument func .
from django . apps import apps into default name space .
get labels key from the options object, if it exists substitute it for self . ignore .
return result .
substitute base . __name__ for class_name .
use the result as an argument for the call to the time_str method, return the result .
call the function force_text with an argument options, append the result to bits .
substitute sign for self . sign .
if i is contained in used_column_names,
skip this loop iteration .
raise an NotImplementedError with an argument string 'subclasses of Serializer must provide a method' method' .
if self . use_ipv6 and table_name_filter are both true,
substitute old_setting for self . negated, .
update declared_fields dictionary with base .
call the method context . push, with the result perform,
if options ends with settings . ',
call the method self . field . Client with 3 arguments: self . name, self . form and self . form . initial .
call the method p . feed with an argument data .
call the method writer . as_string, use the result as an argument for the call to the write method
if first element of message_context equals a string '"',
call the method archive . __setitem__ with arguments self, name and val .
if not,
if not,
call the method self . create_token with 2 arguments: bit, and in_tag append the result to result .
call the method self . create_token with 2 arguments: self . template_string and first end elements of end at start index to the end index,
return the length of self . content .
if six . PY2 is boolean True,
call the method self . set with arguments key, value and version set to version as arguments .
call the method self . field . prepare_value with an argument obj, return the result .
call the __init__ method with 3 arguments: content set to None,
call the method self . write with 2 arguments: s and encoding .
define the function floatformat with path and urlconf set to None as arguments .
if BLOCK_CONTEXT_KEY is contained in value under the dict key of render_context dictionary,
import module errno .
join all of the elements into a string, separated by whitespaces,
call the method self . reader_enters .
help is a string "Prints the CREATE SQL for . " . " .
if newline is contained in val if not,
return value .
value is None .
split ' . ' to the value under the ' . moves' key,
for every db in return value of the graph . all method,
call the method self . next_token, substitute the result for token .
strip message_context of "'" from both ends, substitute the result for message_context .
call the function six . reraise with 3 arguments: raw tuple with an element msg .
define the method exit_command with an argument self .
from django . core . management . base import BaseCommand and CommandError into default name space .
from django . utils . deprecation import trans_real and RemovedInDjango19Warning into default name space .
if field is not contained in self . error_list, return boolean True, otherwise return boolean False .
python_2_unicode_compatible decorator,
call the function wrap with 2 arguments: value and arg, return the result .
return default .
format comment_lineno_cache is None .
call the function urlunsplit with an argument options .
get the value under the name key of the self . caches dictionary, if it exists substitute it for initial,
if third element of bits is not equal to string 'as',
property decorator,
sign is a string '-' .
substitute e . kernel32 for v . IGNORECASE, v and e .
if key is not contained in self,
if self . locale_paths is true,
otherwise if field . required is true,
substitute package . sha256 for LOCK_EX .
if sep is an instance of unicode,
if name attribute of the self object is None,
substitute self . field . label for self . label .
import module os .
call the method HTMLParser . __init__ with 2 arguments: self and strict set to boolean False .
define the method __init__ with 4 arguments: self, data, set to None, files set to None, auto_id set to None, auto_id set to string 'id_%s',
from django . utils . encoding import force_text and force_str into default name space .
fill_to is None .
define the function date_format with 3 arguments: value, value and use_l10n set to None .
define the method back with an argument self .
return an instance of ConvertingDict, created with 2 arguments: filepath and parsed .
from django . apps import apps into default name space .
if errors is true,
nodelist_false is an instance of NodeList .
if IndexError exception is caught,
define the method __getattr__ with arguments self and attr .
if value is false,
for every style in merge_migrations,
do nothing .
substitute last element of bits for asvar .
call the method data . replace with an argument unique_check, substitute the result for data .
if value is true and value is false,
call the function six . text_type with an argument self, return the result .
if key is not contained in self,
if value under the 'pubdate' key of the item dictionary is not None,
call the function find_template with 2 arguments: string six . text_type,
substitute queryset for self . queryset .
derive the class DebugLexer from the object base class .
update attrs dictionary with extra_attrs .
define the method handle with 3 arguments: self, unpacked list fixture_labels and unpacked dictionary options .
return first element of bits .
define the method add_arguments with arguments self and parser .
if initial_value is callable object,
__all__ is a tuple containing 2 strings: 'SelectDateWidget' .
assign message . message and message . params, substitute the result for message and message . params .
if not,
define the method usage with arguments self and subcommand .
call the method self . add_prefix with an argument field_name, return the result .
if dec_part is true,
if first element of s is not contained in the first element of s,
from __future__ import unicode_literals into default name space .
if callback is an instance of EscapeData,
yield d .
define the function urlunquote with an argument callback .
call the method lru_cache . lru_cache with an argument maxsize set to None .
fixture_files is an empty list .
try,
define the function _make_key with 3 arguments: subject, message and digest set to None .
call the method self . _lock . reader with the result perform,
return nothing .
import module pickle .
call the method request_finished . extend with an argument res .
convert header to lowercase converted to lowercase, return it .
self . self . pointer is integer 0 .
if not,
derive the class EmailBackend from the BaseContext base class .
call the function urlquote with an argument var, join the result call the function urlquote
decompress is boolean True .
get the value under the library_name key of the disposition dictionary, substitute it for content_type .
call the method datetime_safe . new_datetime with an argument date, substitute the result for date .
call the function re . compile with an argument string ';', substitute the result for use_base_manager .
define the method __init__ with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
call the method cursor . execute with an argument sql .
if encoding is false,
substitute v for value under the k key of _ dictionary converted to an integer,
call the function os . write with argument fd .
define the method add_post_render_callback with an argument self .
if the key doesnt exists substitute it for self . max_length if not, self . max_length is None .
call the function force_text with first element of args as an argument, substitute the result for args .
call the method self . add_prefix with an argument, substitute the result for prefix .
increment self . active_readers by t .
return initial .
call the method calendar . isleap use the result as an argument for the call to the function calendar . isleap
call the method self . configurator . convert with an argument value, substitute the result for result .
for every medium in settings . CACHES,
return fk .
_func_globals is a string '{%' .
if not,
substitute self . pointer for i .
raise an ValueError exception with an argument string 'Unable to add %r %r: formated with f .
return boolean False .
define the method _delete with arguments self and fname .
contextlib . contextmanager decorator,
if errors is true,
self . content_length is None .
create a directory directory .
if Exception exception is caught,
define the function default_if_none with 2 arguments value and arg .
builtins is a list containing boolean True, boolean True, otherwise it is boolean False .
call the method self . add_filters with 2 arguments name and unpacked dictionary flags .
define the method __multiple_chunks__ with arguments self and chunk_size set to None .
define the function _bin_to_long with an argument ip_str .
define the method handle_template with 3 arguments: self, context and pubid .
if key of the method plist . pop called with an argument string 'ascii' .
return propagate .
return value under key key of self dictionary .
from django . db . migrations . executor import MigrationExecutor into default name space .
for every part in singular,
call the method dig1 . split with an argument x, append the first element of the result to locales .
from django . utils . module_loading import import_string into default name space .
define the function compress_sequence with an argument epoch_seconds set to None .
if field_value is not None,
get 'value' attribute of the dictionary d, created with an argument k,
join elements of parts into a string, separated with ' . ', substitute the result for value .
define the method __init__ with 2 arguments: self and attrs set to None .
if file is an instance of six . string_types,
if length of bits is not equal to integer 2,
define the function wrapped with 2 arguments: parser and token .
call the method conflicts . split with an argument,
raise an ImportError exception with an argument string "No FROM input .
update self . _callback_strs dictionary with pattern . children .
define the method has_key with arguments self and key .
