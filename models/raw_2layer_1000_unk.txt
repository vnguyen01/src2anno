if e . connection_reset is false,
append filename to self . attachments .
decorator function register . filter with an argument is_safe set to boolean True .
substitute value under the idx key of d dictionary for d .
call the function func with 2 arguments: unpacked list resolved_args and unpacked dictionary kwds, substitute the result for translated .
if self . _leftover is true,
return the value under the 'database' key of the self . _caches . caches dictionary .
do nothing .
call the method context_match . group with an argument integer 1, substitute the result for message_context .
from django . conf import settings into default name space .
help is a string "Prints a list containing the SQL statements for the given statements in the module statements . " .
call the method list . rindex with an argument migration . name for every migration in merge_migrations,
define the method render with an argument self .
if length of words is greater than length,
if not,
if self . required is false,
call the method self . _clean_fields .
call the method inner . copy . copy, substitute the result for clear_checkbox_label and display_name .
define the function walk_to_end with 2 arguments: text and quote_double_quotes .
if app_config . models_module is None,
return _cached_filenames .
substitute namespaces for the value under language_code key of the self . _namespace_dict dictionary .
from django . utils . http import upath into default name space .
do nothing .
derive the class Loader from the BaseLoader base class .
if not,
call the function write_pot_file with 2 arguments: '(' and str, substitute the result for paras .
define the method display with an argument self .
define the function convert_old_style_list with an argument list_ .
try,
dirs is an empty list .
define the method __init__ with 4 arguments: self, max_value set to None, min_value set to None,
if result is not None,
join filename and dirname into a file path, substitute it for dirname .
get the value under the 'indent' key of the options dictionary, substitute it for self . domain .
if self . instance . pk is not None,
join usage into a string, separated by newlines, return it .
call the method self . _iteritems for every k and v in the result,
call the method self . enter_command with an argument contents .
substitute base . media for base .
from django . utils import formats into default name space .
otherwise if bytes is smaller than MB,
call the function bytes with 2 arguments: i and tuple with an element i, return the result .
substitute it for the value under the 'id' key of the sys . attrs dictionary . call the function get_format with 3 arguments: attrs, attrs set to attrs,
create_models is an empty set .
raise an exception .
for every node in node,
define the method __repr__ with an argument self .
call the method sys . stderr . write with an argument string 'natural' %s\n" where '%s' is replaced with e .
join dirpath and f . path into a file path, substitute it for base_directory .
call the function settings . is_overridden with argument string 'MANAGERS', if it evaluates to true,
if key is contained in dict_,
call the function getargspec with an argument func, substitute the result for args and defaults .
if UnicodeDecodeError exception is caught,
call the function force_text with an argument value, substitute the result for __unicode__ .
from django . utils . encoding import force_str into default name space .
sum sign and dec_part, return the result .
do nothing .
define the function filesizeformat with an argument s .
call the method initial_form_count from the base class of the class BaseInlineFormSet, return the result .
substitute v for value under k key of self dictionary .
append filename to the last element, substitute the result for filename .
call the function match . end, with an argument path, substitute the result for new_path .
otherwise if first element of g equals a string '"',
return boolean True .
if ext is true and content_type is true,
close zfile file stream .
call the function get_fixed_timezone with an argument argv substitute the result for UserModel .
substitute whitelist for self . localize .
define the method __init__ with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
if not,
define the method id_for_label with 2 arguments: self and id_ .
docsring
call the function re . compile with an argument raw string 'DATETIME_INPUT_FORMATS', substitute the result for __unicode__ .
define the method auto_id with an argument self .
call the method self . _send with an argument f, return the result .
from django . forms . models import everything into default name space .
return new_value .
if self . _errors is None,
substitute safe for value under the 'stream' key of kwargs dictionary .
call the method payload . get with 2 arguments: self . status_code and string 'replace', substitute the result for self . reason_phrase .
if call to the function response . has_header with string 'Cache-Control' as an argument returns boolean False,
convert cc into a list, substitute it for self . cc .
return nothing .
if value under the 'verbosity' key of the options dictionary is greater than integer 0,
substitute input_data for self . _callback_str .
call the method self . xml . startElement with 2 arguments: string 'field' and attrs .
from django . core import serializers into default name space .
call the function sanitize_address with 2 arguments: addr and return value of the function sub_ul_renderer . encoding,
replace '%s' in string "%s with self . app_or_project, substitute it for prefix .
if character '/' is contained in return value of the function path . find called with an argument path,
with lock,
substitute name for self . name .
substitute an empty string for value under the 'tzinfo' key of the hextets dictionary .
if not,
call the function logging_config_func with an argument library_name .
if not,
call the method __init__ from the base class of the class Command, with 2 arguments: unpacked list args and unpacked dictionary kwargs .
instance . keyOrder is an empty list .
call the function make_middleware_decorator with an argument name, use the result as an argument for the call to the mark_safe,
call the method dig1 . execute with statement as an argument .
if value is true,
call the function ungettext_lazy with an argument string 'Ensure this value has at least one %(limit_value)d characters . ",
if settings . TEMPLATE_DEBUG is true,
from django . utils . _os import safe_join into default name space .
get the value under the DEFAULT_CACHE_ALIAS key of the caches dictionary, if it exists return it, if not return None .
import module sys .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
call the method logger . removeHandler with an argument handler .
convert self to a string, return it .
join elements of output into a string, separated by newline characters, use it as an argument for the call to the function mark_safe, return the result .
if DatabaseError . creation_counter exception is caught,
call the method parser . add_argument with 5 arguments: string 'args', action set to string 'extensions',
if not,
substitute notation_name for self . urlconf_module .
call the method parser . add_argument with 5 arguments: string 'args', action set to string 'store', dest set to string 'extensions',
if not,
common_prefix is None .
if not,
derive the class SpacelessNode from the base class FileProxyMixin .
substitute boundary for end .
substitute integer 0 and end for last and end .
for every widget in return value of the method self . get_renderer called with 3 arguments: name, value, attrs and choices,
substitute value for self . value .
return output .
call the function timezone . now substitute the result for now .
substitute the result for digit . call the function x with an argument middle, substitute the result for digit .
if typed is true,
try,
if opname is not contained in _DJANGO_DEPRECATED_LOCALES,
app_labels is an empty set .
call the function make_origin with 3 arguments: display_name, nodelist_false and unpacked list unpacked list args, return the result .
define the method __mod__ with 2 arguments: self and unique_check .
if m is false,
return e .
define the method to_python with arguments self and data .
for every base in result of the method six . iteritems called with an argument base .
default_error_messages is an string "%s . %s' with an argument, return value of the function _ called with an argument,
if not,
if run_syncdb . renamed to exc, and executor . loader . get_migration are true,
call the get_path_info method from the base class of the class SimpleCookie with argument val, substitute the result for encoded .
call the method self . remove_potfiles .
call the method logging . Handler with an argument boolean True .
derive the class SafeBytes, from the bytes base class .
call the function re . compile with 2 arguments: regex and re . IGNORECASE, substitute the result for regex .
if not,
define the method _set_size with arguments self and filename .
if ch is true,
derive the class TypedChoiceField from the MIMEMixin base class .
define the method items with an argument self .
call the function mark_safe with an argument template, use the result as an argument for the call to the function mark_safe,
call the BaseCache . __init__ method with self class instance, unpacked list args and unpacked dictionary kwargs as arguments .
return boolean False .
call the function _ with an argument string "Could an instance of integer 0,
join elements of output into a string, return it .
substitute MultipleHiddenInput for ULONG_PTR .
raise an CommandError exception with an argument string 'Unknown values in use the result in a string,
derive the class Parser from the object base class .
if y is true and m is true,
if self . loaded_object_count is not None,
get the value under the 'filename' key of the params dictionary, if it exists substitute it for guessed_filename, if not,
return usage .
call the function os . path . dirname with an argument fixture_name, substitute the result for fixture_dirs .
call the method fp . getvalue, return the result .
if regex is not None,
define the method __str__ with an argument self .
substitute conditions_nodelists for self . conditions_nodelists .
if self . merge and conflicts are false,
call the method self . build_attrs with an argument attrs, substitute the result for final_attrs .
for every path_to_remove and 'locale' in sequence of the elements into a directory path,
child_nodelists is a list with 4 elements: strings '1' and 'ftp' .
content . setter decorator,
substitute whitelist for self . reason_phrase .
otherwise if o is an instance of decimal . datetime,
substitute META for self . _meta .
derive the class VariableNode from the object base class .
import module re .
from django . utils . encoding import smart_text and force_text into default name space .
return boolean False .
if param is not contained in params and compile_function is None,
define the method extend_nodelist with 3 arguments: self, nodelist, node and token .
define the function upath with an argument path .
from django . utils import six into default name space .
from __future__ import unicode_literals into default name space .
if it is true, substitute it for guessed_filename, if not substitute an empty string for known_models .
if f . name is contained in cleaned_data,
docsring
if self . _pk_field equals to self . fk .
call the method __init__ from the base class of the class FilePathField, with 4 arguments: data, data, prefix set to prefix and prefix set to prefix .
define the method compile_filter_error with arguments self and message .
substitute value for value under the field . attname key of the data dictionary .
define the method __init__ with 2 arguments: self and language .
define the method __init__ with arguments self and file .
try,
call the function six . text_type with an argument bf . text_type .
derive the class SerializerDoesNotExist from the KeyError base class .
call the function time_format with 2 arguments: value and arg, return the result .
get the value under the tables key of the connection . introspection dictionary, if it exists substitute it for guessed_filename,
if new_name starts with a string '_id',
call the method MONTHS . index with an argument, use the result as an argument for the call to the unicode function,
get the value under the 'database' key of the self . COOKIES dictionary, if it exists substitute it for created_models,
define the method getvalue with an argument self .
call the method parser . add_argument with 3 arguments: string '--database', default set to DEFAULT_DB_ALIAS,
if PY3 is true,
if not,
return value under the lang_code key of the iterable dictionary .
if ValueError or TypeError exceptions are caught,
return self . new_objects .
if not,
self . namespaces is a list containing x .
define the method __init__ with 2 arguments: self and id .
define the method check_migrations with an argument self .
substitute list_ for exc_value and val2 .
call the method parser . add_argument with 5 arguments: string '--locale', string '-e', action set to string 'store',
substitute value under the name key of the tokens dictionary for tok .
cache_timeout is integer 0 .
call the method connection . cursor, substitute the result for cursor .
call the method self . _reset_dicts with an argument dict_ .
if ValueError exception is caught,
if s is not an instance of six . string_types,
define the function get_quantifier with 2 arguments value and arg .
if value is true, return boolean True, otherwise return boolean False .
value under the root key of the root dictionary is an list with 2 elements: root and root for None .
if used_name is greater than integer 4,
do nothing .
define the method __nonzero__ with an argument self .
call the method self . style . NOTICE with an argument string " %s" . . . . . . . . ", write it to self . stdout .
append self . program to a list containing self . program and return value of the method self . total_form_count,
raise an SerializerDoesNotExist exception with an argument format .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
define the method __init__ with an argument self .
call the function d . groups, with 3 arguments: exp and Context as result of the function d,
return func .
s is an instance of StringIO class .
derive the class WSGIRequest from the object base class .
call the function warnings . warn with 2 arguments: string "django . utils . %s' is not contained in result of the function warnings . warn
try,
substitute match . match for name .
import module warnings .
if self . initial_forms is false,
raise an TemplateSyntaxError exception with an argument string "'%s' received takes arguments" . ",
define the method __init__ with 4 arguments: self, stream and content_type, set to integer -1 .
if err_log is true,
if self has an 'error_dict' attribute,
define the method __iter__ with an argument self .
call the function urlsplit with an argument value, assign the result to scheme and query respectively .
substitute length of self . loopvars for num_loopvars .
call the function ungettext with 3 arguments: string 'custom' . ",
call the method self . _base_set with 2 arguments: expects_localtime converted to string and return the result .
call the method t . lineno with an argument line, call the method t . lineno with an argument line, substitute the result for rfcdate .
join elements of '\\' into a string, return it .
define the method self with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
if csrf_token is true,
define the method push with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
try,
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
call the method self . form with 3 arguments: form, self . auto_id and prefix set to self . add_prefix
if test_runner_class attribute of the getattr, attribute is None,
call the function walk_to_end with 2 arguments: ch and pattern_iter .
help is a string "Prints the files files for the given files for . " .
try,
if not,
for every k in self . ignore_patterns if p is greater than or equal to integer 3,
join self . fed into a string, return it .
define the method define with an argument self .
define the method clear with an argument self .
finally perform,
set attr attribute of the base object to the result .
define the method __iter__ with an argument self .
call the function warnings . warn with 2 arguments: string "No fixture fixture %s . ",
call the method self . _create_message with an argument msg, substitute it for msg .
if cache is an instance of real_datetime class,
call the function re . sub with 3 arguments: raw string 'utf-8',
return string 'https' to current . ' .
get 'value' attribute from the attribute object, use it as an argument for the call to the function iri_to_uri,
raise an ValueError exception with an argument e .
substitute the result for self . default_validators . call the method validators . Semaphore with 2 arguments: raw string '--no-location' and unpack_ipv4 set to boolean True, substitute the result for self . default_validators .
return boolean False .
return result .
call the os . path . splitext with an argument base, substitute the result for base .
define the method __init__ with 2 arguments: self and conditions_nodelists .
try,
append check to self . registered_checks .
if not,
call the function Group with an argument tuple with 2 elements: string ' . ', where '%s' is replaced with name and None .
call the method self . _setup .
call the method handler . endElement with an argument string 'author' .
substitute the result for logger . call the method logger . warning with an argument string "'%s . %s' . %s' . %s' . %s' . %s' . ",
join c into a string, return it .
define the method is_ajax with an argument self .
define the method __init__ with 2 arguments: self and options set to None .
call the method self . fetch_command with 2 arguments: potfile and locale .
if self . is_localized is true,
define the method add_arguments with arguments self and parser .
call the function EmailMultiAlternatives with an argument integer 60, divide the result by integer 1, increment the result by integer 1,
if length of version equals integer 6,
define the method __getitem__ with 2 arguments: self and i .
yield string "# * models' models' model . " as the result as the return value of the generator .
define the method created_time with arguments self and name .
define the method __deepcopy__ with 2 arguments: self and memo .
if not,
with self . mutex perform,
call the function ugettext_lazy with an argument value, return the result .
try,
do nothing .
docsring
call the method value . replace with 2 arguments:
call the method self . _isdst with an argument dt, if it evaluates to true,
return self . token .
return output .
for every format in self . input_formats
remove config dictionary element under 'handlers' key, substitute it for value under the PREV key of config dictionary .
call the method copy . deepcopy with an argument self . widgets, substitute the result for obj . widgets .
define the function unregister_serializer .
substitute c_void_p for TYPE .
return a tuple with 3 elements: self . func, self . args, self . args, self . args,
call the function force_str with an argument minutes .
define the method clean with an argument self .
get 'value' attribute of the _active object, if it exists substitute it for self . extra_context, if not self . old_timezone is None .
derive the class BaseArchive from the HttpResponseRedirectBase base class .
if ValueError or TypeError exceptions are caught,
define the method tzname with 2 arguments: self and dt .
if value under the 'pubdate' key of the item dictionary is not None,
if ImportError exception is caught,
match is a tuple with 2 elements: elements of ' . ' and second element of host equals a string ';',
return WRAPPER_ASSIGNMENTS .
raise an exception raise an exception of class NotImplementedError, with argument string "Could not find find '%s' with backend .
return boolean False .
derive the class " from the types base class .
attachment is a instance of a class MIMEBase, created with the arguments content and encoding .
if locations is true,
open file file in append file mode, substitute it for file .
break from the loop execution .
get 'value' attribute of current object, if it exists,
join self . dirpath and self . file into a file path, substitute it for app_models .
call the method dig1 . add_arguments with an argument parser .
while field . rel is not None,
call the method self . path with argument name, substitute the result for full_path .
try,
call the method json . dumps with return value of the method f . dumps called with an argument e,
call the method parser . add_argument with 2 arguments: string 'args', help set to string 'extensions',
join root and f . path into a file path, substitute it for f .
call the function to_locale with an argument getattr, convert the result to a string, substitute the result for current_expires .
yield value under key key of self dictionary .
call the method self . parse_name . basename with an argument string 'DATE_INPUT_FORMATS', substitute the result for _ and cmp_fmt .
call the method field . getAttribute with an argument obj, substitute the result for value under the field . name key of the self . _current dictionary .
try,
call the method resolver . resolve with an argument request, substitute the result for netloc .
import module datetime .
return an empty string .
call the function get_language with an argument string 'DATE_INPUT_FORMATS', use the result as an argument for the call to the function mark_safe,
call the method m . group with 3 arguments: integer 1 and integer 1, assign the result to the reminder and rest, respectively .
doublecolon_len is an integer 0 .
call the function re . compile with 2 arguments: raw string regex,
define the method __getinitargs__ with an argument self .
from django . template import loader and WRAPPER_ASSIGNMENTS into default name space .
call the method connection . introspection . table_names substitute the result for tables .
if t . token_type is not equal to other,
if v is boolean False or v is an instance of AutoField class, or if v is None,
define the method clear with an argument self .
derive the class RemovedInDjango19Warning from the real_date base class .
derive the class QueryDict from the MultiValueDict base class .
return boolean False .
append character '-' to digits .
raise an TemplateSyntaxError exception with an argument string "Invalid arguments %r", where '%s' is replaced with filter_name .
return an empty string .
from django . utils import lru_cache into default name space .
define the method open with an argument self .
check_for_language is a lambda function which returns x .
for every form in valid_forms,
if http_cookies . CookieError exception is caught,
return boolean False .
call the method d . groupdict, substitute the result for re_formatchars .
define the method delete with arguments self and name .
do nothing .
from functools import total_ordering into default name space .
for every cc in value under the 'stream' key of the cc dictionary, convert it to an integer, substitute it for value under the ''error_messages' key of kwargs dictionary .
return self . _urlconf_module .
substitute choices for self . choices .
incomment is boolean False .
call the function translation with an argument settings . LANGUAGE_CODE, substitute the result for _default .
define the method add_arguments with arguments self and parser .
define the method end_index with an argument self .
call the function avoid_wrapping with an argument table_name, use the result as an argument for the call to the function _get_timezone_name, return the result .
finally perform,
if i is greater than or equal to length of subject,
decorator function register . filter with an argument is_safe set to boolean True .
return result .
call the method f . save_form_data with 2 arguments: instance and value under the f . name key of cleaned_data dictionary .
call the method apps . get_app_config with an argument app_label, substitute the result for app_config .
call the method parser . add_argument with 5 arguments: string 'args', action set to string 'store', dest set to string 'extensions',
call the function date . now, with 2 arguments: result of the function datetime . now,
if KeyError exception is caught,
define the method _set_size with 2 arguments: self and context .
call the function six . reraise with 3 arguments: DeserializationError class created with an argument string ValidationError,
define the method has_key with 3 arguments: self, key and version set to None .
call the method context . render_context . push .
increment weight by integer 2 .
return result .
if self . verbosity is greater or equal to integer 2,
raise an CommandError exception with an argument msg .
self . bcc is an empty list .
substitute self . choices for self . widget . choices .
if six . PY2 is true,
from django . apps import apps into default name space .
lbp is an integer 0 .
MONTHS is a tuple with 2 elements: return value of the function _ called with an argument string 'DATE_INPUT_FORMATS',
raise an exception .
return an instance of date . year, date . year, d . month and d . day .
_wrapped is None .
from __future__ import unicode_literals into default name space .
raise an CommandError exception with an argument string "%r conflicts with the name of the '%s' in a string,
finally perform,
call the method self . _cache . incr with key and delta as arguments, return the result .
if value is not an instance of ConvertingList and value is an instance of dict class,
call the method add_arguments from the base class of the Command class, with an argument parser .
decorator function register . filter with an argument is_safe set to boolean False .
substitute _urllib_parse_moved_attributes for Module_six_moves_urllib_parse . _moved_attributes .
call the method __init__ from the base class of the NullBooleanSelect class, with 2 arguments: attrs and choices .
call the function six . text_type with an argument encoding and errors as the arguments, return the result .
for every key and value in return value of the self . _headers . items method, use the result as an argument for the call to the dict function,
if not,
substitute func for self . __dict__ .
call the method parser . parse with an argument tuple with an element string 'endif', substitute the result for nodelist .
if m is true,
substitute complain for candidate_subs .
if not,
define the method validate_unique with an argument self .
define the method __new__ with 3 arguments: cls, unpacked list args and unpacked dictionary kwargs .
try,
call the method match . group with an argument localedir, substitute the result for filter_name .
import module django . core . checks . wsgi import django .
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
if lookup_view is contained in self . _callback_strs
call the method stream . unget with an argument chunk .
for every key and val in return value of the self . var_name method called with an argument key,
call the method self . stdout . write with an argument string 'natural' . No .
call the method self . compress with an argument list, return the result .
raise an AttributeError with an argument string "'%s' object has no no self . __class__ . __name__ .
substitute HiddenInput for widget .
if tags is true and call to the method checks . tag_exists with an argument tag evaluates to false,
call the function re . compile with an argument raw string 'ascii', substitute the result for translated .
define the function sql_create with 3 arguments: singular, plural and number set to None .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
call the function ungettext with 3 arguments: singular, plural and number, substitute the result for result .
if not,
convert value into an integer and convert it to an integer, return it .
divide num by self . _cull_frequency substitute the result for hfile .
call the method self . convert with 3 arguments: i, self . decimal_digits and self . digits, assign the result to the neg and value, respectively .
if self . asvar is true,
call the function calculate_app_template_dirs, substitute the result for app_output .
define the method __init__ with 2 arguments: self and filter_expression .
widget . is_localized is boolean True .
substitute the result for _mtimes .
import module mimetypes .
define the method to_python with arguments self and value .
if file_name is an instance of Template class,
if event is lesser than integer 100, or integer 36 is lesser than integer 4,
week_number is integer 1 .
raise an InvalidTemplateLibrary exception with an argument string "errors happened conversion %r %s", where '%s' is replaced with taglib_module and e .
substitute c_void_p for stream_class .
substitute timeout for self . timeout .
return a list containing 2 elements: result of the function format_html called with 2 arguments:
from django . utils . translation import ugettext_lazy and ugettext as _ into default name space .
replace every p in self . msg in return value of the function force_text with an argument i,
define the method set_cookie with 5 arguments: self, key, value set to an empty string, strings_only set to an empty string,
multiply the result of the function MovedAttribute, called with 3 arguments:
if lang is None,
if file has an attribute 'process_view',
dest as a string 'all' default as boolean False and help as a string 'Updates the message files for input of any kind . ' . call the method parser . add_argument with 5 arguments: string '--extension', string '-e', dest set to string 'store_true',
raise an exception .
do nothing .
call the method handler . addQuickElement with 2 arguments: string 'title' and value under the 'id' key of the self . feed dictionary .
derive the class Truncator, from the Structure base class .
call the function force_text with an argument self . value, substitute the result for self . value .
return html .
define the method read with an argument self .
call the function allow_lazy with 2 arguments: javascript_quote and six . text_type, substitute the result for logging_config_func .
remove the entry under the 'initial' key of the attrs dictionary, if it exists substitute it for formfield_callback if not formfield_callback is None .
get config dictionary element under 'handlers' key, if it exists substitute it for value under 'address' key of config dictionary .
get the value under the 'verbosity' key of the options dictionary, substitute it for self . verbosity .
define the method root_attributes with an argument self .
docs_version is a integer 2 .
return self . parent_instance .
define the method delete with 3 arguments: self, key and version set to None .
otherwise if name equals a string '^',
import module sys .
call the method self . xml . endElement with an argument string 'natural' .
if OSError or NotImplementedError exceptions are caught,
DEFAULT_MIN_NUM is an string '0' .
define the method __iter__ with an argument self .
substitute self . _encoding for encoding .
output_transaction is boolean True .
try,
if not,
get the value under the m key of the rest dictionary, substitute the result for rest .
if stream_created is true,
increment i by integer 1, substitute the result for i .
if not,
skip this loop iteration .
if port exists substitute it for self . port if not substitute settings . SECRET_KEY for self . port .
if _active has an attribute 'normalize',
if not,
if bf_errors is not equal to string 'as',
substitute resolver_match for request . LANGUAGE_CODE .
return value .
call the function re . compile with an argument raw string 'DATE_INPUT_FORMATS', substitute the result for translated .
call the method self . __dispatch with 3 arguments: value under the t key of the self . __dispatch dictionary and unpacked dictionary kwargs,
from django . core . management import call_command into default name space .
raise an ValueError exception with an argument string "'%s . %s' is deprecated . ",
if not,
raise an ValidationError with 2 arguments: value under the 'required' key of the self . error_messages dictionary and code set to 'required' .
_called_from_command_line is an empty string .
define the method _proxy_method with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
define the method __repr__ with an argument self .
property decorator,
param is an list with an element elt .
if ValueError exception is caught,
get the value under the key key of the self . queryset dictionary, if it exists substitute it for value,
substitute link for value under the NEXT key of the last dictionary and value under the NEXT key of the last dictionary .
define the method add with 5 arguments: self, key, value, timeout set to DEFAULT_TIMEOUT and version set to None .
call the __init__ method from the base class of the EmailBackend class, with 2 arguments: unpacked list args and unpacked dictionary kwargs .
split first element of hextet by ':', append the result to new_ip .
import module random .
call the method lookups . appendlist with 3 arguments: pattern . name and pattern . name,
define the function ungettext_lazy with 3 arguments: singular, plural and number set to None .
define the method is_valid with an argument self .
if name is not None raise an error exception with an argument string "Could name name . ' .
append path to self . _js .
if IOError exception is caught,
from __future__ import unicode_literals into default name space .
call the method parser . add_argument with 5 arguments: string '--extension', string '-e', default set to None, dest set to string 'extensions',
if the is true,
call the method gettext_module . find with 2 arguments: string gettext_module and return value of the function time . find called with an argument lang_code,
call the method zbuf . format with an argument format_string, return the result .
call the method self . as_ul, return the result .
call the method f . close .
define the method __init__ with 2 arguments: self and func .
from django . core . management . base import AppCommand into default name space .
call the method bf . getAttribute if the result is true, substitute the result for label .
from django . core . management . base import BaseCommand and CommandError into default name space .
if not,
substitute SelectMultiple for widget .
if self . _request_middleware is None,
if use_workaround is false,
lang is None .
return value .
return obj .
substitute pubid for self . pubid .
raise an MultiPartParserError exception with an argument string ValidationError, boundary is not contained in boundary .
call the method handler . endElement with 2 arguments: string 'author' and an empty string .
if value is None and attr is contained in declared_fields
otherwise if last element of args equals a string 'as',
self . _cached_loaders is an empty list .
call the method __init__ from the base class of the class CheckboxChoiceInput with 2 arguments: unpacked list args and unpacked dictionary kwargs .
for every k and v in return value of the function six . iteritems called with an argument fields,
make a directory top_dir .
import module signal .
define the method add_fields with 3 arguments: self, form and index .
child_nodelists is an tuple with 3 elements: None, an empty string and an empty list,
property decorator,
if not,
define the function stringformat with 2 arguments: string 'NFC' and trail, set to a tuple containing 2 elements: string 'NFC' and '>', return the result .
raise an ValidationError with 2 arguments: value under the 'required' key of the self . error_messages dictionary and code set to 'required' .
derive the class SlugField from Node base class .
define the method copy with an argument self .
substitute self . default_timeout for self . content .
return an empty string .
nodelist . microsecond is boolean True .
if not,
if i is true,
replace every occurrence of '\\' in return value of the method value . replace called with 2 arguments:
if fields is not None,
if ValueError or TypeError exceptions are caught,
iterator is an instance of input class, created with 2 arguments: dotted_path and url2 .
ext_list is an empty list .
call the function force_text with an argument value, use the result as an argument for the call to the force_text function,
define the method __setstate__ with arguments self and name .
derive the class RenderContext from the Exception base class .
plural is an empty list .
return instance .
if not,
if callback is an instance of types . FileField,
substitute force_bytes for force_str .
derive the class DecimalField from list base class .
if decimal_pos is not None,
derive the class DecimalField from the Structure base class .
if not,
define the method _parse_header with an argument self .
inplural is boolean False .
join p into a file path, substitute it for f .
define the method url_patterns with an argument self .
call the function loader with 2 arguments: name and dirs, assign the result to source and display_name .
import module sys .
get the value under the 'indent' key of the options dictionary, if it exists substitute it for self . merge if not self . merge is boolean False .
raise an CommandError exception with an argument string "You must provide least one app app %s",
if self . is_bound is true,
return boolean False, otherwise return boolean False .
if obj . signals is an instance of models . signals .
raise an BadSignature exception with an argument string 'Your doesn't does not not found" .
import module os .
if length of ValueError, is lesser than length of data and length of data is true,
if field equals to NON_FIELD_ERRORS and opts . error_messages is true and NON_FIELD_ERRORS is contained in opts . error_messages,
define the function _parse_date_fmt .
define the method __init__ with 2 arguments: self and callback .
if use_workaround is false,
define the method is_url with arguments self and other .
if self . verbosity is greater or equal to integer 1,
otherwise if closing_tag is true,
if not,
if path is not contained in self . locale_paths,
derive the class SimpleTemplateResponse from the collections base class .
define the function timesince_filter with 2 arguments value and arg set to None .
self . translate is boolean True .
from django . utils . deconstruct import deconstructible into default name space .
if confirm equals string 'base64',
call the function avoid_wrapping with an argument string "Please use the result as an argument for the call to the avoid_wrapping function,
substitute the length of the result for total_forms . call the method optimizer with 2 arguments: initial_forms and self . _boundary, substitute the result for total_forms .
call the function force_text with an argument initial_value use the result as an argument for the call to the force_text function,
get the value under the 'database' key of the options dictionary, use it as the key to get the value from the connections dictionary, substitute the result for connection .
substitute stream for self . _stream .
import module os .
sum idstring and character '/' .
call the method field_stream . read, substitute the result for content .
for every cat in value under the 'categories' key of the item dictionary .
call the ops . quote_name method with argument self . _table on the object under the db key of connections dictionary, substitute the result for table .
substitute translation for translation . _catalog .
if not,
substitute last element of bits for rfcdate .
return self . file . size .
convert self . name into a boolean, return it .
if six . PY3 is true,
define the method validate with arguments self and value .
define the function runfastcgi with 2 arguments value and timezone set to None .
call the method self . can_write . release .
derive the class CommentNode from Node base class .
call the method parser . add_argument with 5 arguments: string 'args', action set to string 'extensions',
call the BaseConverter function with BASE2_ALPHABET as argument, substitute the result for new_obj .
changed is boolean True .
yield ch and boolean False .
call the method sys . get_version with an argument django . get_version append the result to sys . stdout .
for every option in _urllib_request_moved_attributes,
substitute cmd for self . cmd .
return nothing .
try,
call the method t . mktime with an argument self, substitute the result for left .
if not,
call the method parser . add_option with 3 arguments: string '-v', string '-e',
locations is an empty list .
substitute warning for self . warning .
substitute the result for value under the 'errlog' key of options dictionary . call the function constant_time_compare with 2 arguments: dotted_path and chars substitute the result for options .
read data from buf, yield the result .
call the function urlparse with an argument location, substitute the result for bits .
derive the class Deserializer from the six . Iterator base class .
call the method self . _base_set with 3 arguments: length, truncate, text, truncate_len and truncate_len .
call the function time . time with an argument unpacked dictionary kw, return the result .
substitute path path for path .
call the method self . validate_key with argument key .
call the method self . create_parser with an argument context, substitute the result for value .
if UnicodeError exception is caught,
if self . can_import_settings is false,
return result .
return self . content .
from decimal import Decimal and getargspec into default name space .
call the method one_percent_re . get_cookie_signer with 2 arguments: salt set to salt,
define the function compile_func with 2 arguments: parser and token .
substitute RemovedInDjango19Warning for stream_class .
decorator deconstructible,
call the method self . stdout . write with an argument string " %s\n" for %s . %s . %s . ", write it to self . stdout .
if not,
docsring
if event starts with opening,
define the function _explode_shorthand_ip_string with an argument dirname .
define the function default_if_none with 2 arguments: x and tablename .
for every tok in loopvars,
define the method __init__ with 2 arguments: self and config .
if not,
substitute the result for d .
for every field_name in self . fields,
raise an ValueError exception with an argument string "%s a a valid application formated with s .
define the method url_patterns with an argument self .
for every obj in return value of the method self . queryset . all
from django . utils import six into default name space .
define the method __init__ with 2 arguments: self and fixture_label .
define the function get_unbound_function with an argument kwargs .
for every attr in second_item,
skip this loop iteration .
if AttributeError exception is caught,
append list containing string '--no-location' to self . msguniq_options .
substitute connection for self . connection .
help is a string "Prints the CREATE application app migrations . " .
call the function construct_instance with 3 arguments: form, instance of instance class, created with 2 arguments: form and exclude, substitute the result for instance .
call the method handler . addQuickElement with 2 arguments: string 'author' and string 'author' .
if not,
property decorator,
if not,
return retval .
objects_in_fixture is a integer 1 .
call the method self . file . close .
append string '</select>' to field_output .
derive the class ContextPopException from the LocaleRegexProvider base class .
try,
call the method value . encode with an argument charset, substitute the result for value .
define the function divisibleby with 2 arguments: parser and token .
import module warnings .
if self . verbosity is greater than integer 0,
sites is an empty list .
if response is None,
return nothing .
call the addr . split method with character '@' and integer 1, assign the result to time_str, domain and domain .
call the function get_language, substitute the result for language_code .
append string ' . ' . ', substitute the result for val2 .
if event is contained in color_names,
remove config dictionary element under 'level' key, if it exists substitute it for formatter if not formatter is None .
if m is None,
result is an list containing an empty string .
_urllib_response_moved_attributes is a instance of a Signal class, created with 2 arguments:
opts . fields is None .
call the function force_str with an argument y, substitute the result for rawdata .
try,
derive the class URLNode from the dict base class .
write string " No %s\n" to self . stdout stream .
if last equals integer 2,
if idstring is None,
value under the 'feed_url' key of the self . base_fields dictionary is an instance of IntegerField class, created with an argument widget .
parsed is boolean False .
raise an TemplateSyntaxError exception with an argument string "'%s' received takes provide an argument string,
value under the ORDERING_FIELD_NAME key of the form . fields dictionary is an instance of IntegerField class, created with 3 arguments:
yield line .
define the method add_handlers with 2 arguments: self and config .
substitute the result for formatters . call the function re . compile with an argument raw string 'DATETIME_INPUT_FORMATS', substitute the result for compressed .
import module tempfile .
call the method command . create_parser with 2 arguments: an empty string and name, substitute the result for parser .
call the function warnings . warn with 2 arguments: string "django . utils . Use will be removed in Django 1 . 9 . ",
substitute type . core for forms_to_delete .
from pprint import pformat into default name space .
call the function force_bytes with 2 arguments: safe and self . encoding, substitute the result for safe .
call the method self . configure_custom with an argument config, substitute the result for result .
if self . timeout is not None,
define the function get_language .
import module sys .
if LookupError exception is caught,
otherwise if o is an instance of datetime . time,
help is a string "Prints the database database for the given database in the given database . " .
if value under the 'feed_copyright' key of the self . feed dictionary is not None,
raise an ValidationError with 3 arguments: value under the 'invalid' key of the self . error_messages dictionary,
skip this loop iteration .
from lib2to3 import dropwhile into default name space .
from lib2to3 . util import token into default name space .
try,
convert extra_classes into a set, substitute it for extra_classes .
if unpack_ipv4 is true,
define the function truncatechars with 2 arguments: url and date .
return an empty list .
define the method _close_files with an argument self .
call the function localize with 2 arguments: output and use_l10n set to context . use_tz, substitute the result for output .
call the method apps . get_app_configs, for every app_config in return value of the method apps . get_app_configs,
call the method handler . addQuickElement with 2 arguments: string 'title' and value under the 'feed_copyright' key of the self . feed dictionary .
call the function warnings . warn with 3 arguments: string "django . utils . utils . object_name . ",
if content_length is greater than integer 0,
substitute arg converted into an integer for length .
call the function _explode_shorthand_ip_string with an argument ip_str, substitute the result for ip_str .
from lib2to3 . util import temp and MergeDict into default name space .
call the function force_str with 3 arguments: string '<ul %s . %s and self . regex . name,
substitute the result for x . get the value under the 'QUERY_STRING' key of the _time . _errors dictionary, if it is true,
call the method lookups . appendlist with 3 arguments: name, tuple with 2 elements: result of the function available_attrs,
if Model . PickleError exception is caught,
if not,
call the method parser . add_argument with 5 arguments: string '--extension', action set to string 'store_false',
call the method parser . add_argument with 5 arguments: string 'args', metavar set to string 'extensions',
raise an VariableDoesNotExist exception with an argument string 'Your as arguments, return value of the function constant_time_compare called with an argument bit,
if length of bits is not equal to integer 2,
substitute cls for obj . __class__ .
substitute self . error_list for self . error_list .
define the function get_unbound_function with an argument func .
get the value under the 'interactive' key of the options dictionary, if it is false,
call the method shutil . copyfileobj with 2 arguments: function_name and new_path .
import module logging .
call the function next with an argument self, substitute the result for output .
if length of bits is not equal to integer 2,
try,
import module warnings .
call the method ip_str . rsplit with 2 arguments: character ':' and integer 1, return the second element of the result .
define the method __mod__ with 2 arguments: self and field_name .
derive the class DeclarativeFieldsMetaclass from the object base class .
call the function restart_with_reloader, substitute the result for re_camel_case .
substitute path and match for self . path and self . recursive respectively .
derive the class datetime from the real_date base class .
append f . name to the standard list .
otherwise if ch equals a string ')',
return a list containing an empty string and an empty list .
if value is an instance of str
if field is contained in self . errors,
call the function _generate_cache_header_key with arguments key_prefix and request, substitute the result for cache_key .
call the method self . _update_errors with an argument handler .
do nothing .
from django . core . serializers . base import DeserializationError into default name space .
define the method invalid_block_tag with 4 arguments: self, value, charset set to boolean False and subtype .
call the method p . groups, substitute the result for output and errors .
raise an NotImplementedError exception with an argument string 'subclasses of Storage must provide a method' method' .
from django . conf import settings into default name space .
try,
call the function warnings . warn with 3 arguments: string "django . "The will be be removed in Django 1 . 9 . ",
return _dec .
call the method self . _cache . set with key, value and self . _encoding, as arguments .
if last element of parts is contained in self . empty_values,
if not,
define the method __init__ with an argument self .
otherwise if value under the 'verbosity' key of the options dictionary is false and values under the 'verbosity' key of the options dictionary is false,
for every result and params in input_iter,
get the value under the old_method_name key of the base . __dict__ dictionary, substitute it for decimal_separator .
append length of toktext to start .
if length of fks_to_parent is greater than integer 1,
if localized_fields is not None,
call the function make_middleware_decorator with an argument format_string, return the result .
if not,
call the method calendar . localize_input use the result as an argument for the call to the function calendar . localize_input return the result .
try,
increment self . loaded_object_count by one .
call the method self . data . month . title with an argument self . data, return the result .
if other is contained in self . children, return boolean True, otherwise return boolean False .
from django . utils . encoding import smart_text into default name space .
close zfile file stream .
if default is not contained in model_fields,
define the method handle with 3 arguments: self, app_or_project and target, set to None .
split s by '=' and substitute the result for t .
substitute second element of p_pattern for p_pattern .
substitute instance . _meta for opts .
do nothing .
get the value under the 'indent' key of the options dictionary, if it exists substitute it for guessed_filename,
if not,
if not,
import module warnings .
define the function trim_whitespace with an argument date .
define the method r with an argument self .
return None .
append rel_model to deps .
call the function re . compile with 2 arguments: raw string 'ascii' and re . IGNORECASE, substitute the result for orig .
if first and third element of sys . version_info equals integer 3 and third element of sys . version_info is true,
if extra_context is false,
call the method self . _isdst with an argument dt, if it evaluates to true,
call the function exhaust with an argument current .
if last equals integer 1,
append string '</select>' to output .
if response . streaming is boolean False,
substitute the result for value .
define the method to_python with arguments self and value .
return input_val .
call the method field . namelist, substitute the result for hidden_widget .
if ImportError exception is caught,
return last element of list_ .
_empty_value is None .
import module os .
if self . allow_files is true,
return nothing .
if UnicodeError exception is caught,
define the method render with 4 arguments: self, name, value and attrs set to None .
default_error_messages is an dictionary with an entry: return value of the function _ called with an argument,
define the method next with an argument self .
call the method __init__ from the base class of the class BaseInlineFormSet, with arguments: takes_context, args and kwargs .
substitute third element of bit for rfcdate .
substitute settings . DEFAULT_CHARSET for self . _callback_str .
define the method _iterkeys with an argument self .
raise an CommandError exception with an argument string 'Unknown happened doesn't %s . ", where '%s' is replaced with url and e .
append the result to title . _meta . nodes by length of graph . nodes append the result to title .
define the method id_for_label with an argument self .
call the method expression . match with 2 arguments: rawdata and i, substitute the result for match .
define the method __repr__ with an argument self .
call the method readline . process_response with an argument lang_code, use the result as an argument for the call to the method readline . stop .
define the method _construct_form with 4 arguments: self, name, value, base, sysid, pubid and notation_name .
if initial is true and initial is not None,
call the method self . _set with key, pickled and timeout as arguments .
define the method compile_filter_error with arguments self and name .
call the method __get__ from the base class of the class MultiValueDict, with 2 arguments: instance and fmt, return the result .
if stream_created is true,
if os . name equals string 'nt',
define the method __multiple_chunks__ with arguments self, name and content .
model_list is an empty list .
if ValueError or TypeError exceptions are caught,
call the function mark_safe with an argument sublist, substitute the result for i-th element of words .
import module io .
substitute name for self . name .
return self . _queryset .
call the method self . _create_attachments with an argument msg, use the result as an argument for the call to the self . _create_attachments method, return the result .
for every __ in migrations_to_squash,
if self . warning is an instance of the Exception Exception,
convert new_name to a string and substitute it for new_name .
derive the class AppCommand from the base class BaseCommand .
if not,
call the method related . natural_key, substitute the result for value .
if length of bits is greater than integer 2,
if current_len equals to DEFAULT_TIMEOUT,
define the method __init__ with arguments self, name and params .
if value is true and value is not an instance of AutoField and value is not an instance of AutoField class,
for every f in files,
if self . verbosity is greater or equal to integer 2,
substitute initial_forms for total_forms .
call the method models . add with an argument model .
call the method chunk . find with an argument localedir, substitute the result for colors .
raise an AttributeError exception with an argument string "This method is is deprecated . ',
define the method __init__ with 4 arguments: self, exc_type, variable_name and silent set to boolean False .
call the function six . text_type with an argument number, substitute the result for str_number .
docsring
if first element of tzinfo equals a string '"',
raise an TemplateSyntaxError exception with an argument string "'for' statement takes one one one . " .
define the method __new__ with 3 arguments: cls, unpacked list args and unpacked dictionary kwargs .
call the method addr . encode with an argument string '--pythonpath' .
self . _done is boolean True .
while length of sequence is lesser than or equal to integer 6,
raise an AttributeError exception .
return boolean False .
replace '%s' in string "%s, from %s" with migration . name .
substitute value under the cache_key key of the _format_cache dictionary for cached .
if not,
import module mimetypes .
call the method bmatch . match with an argument middle if it evaluates to true,
derive the class DisallowedRedirect from the base class MediaDefiningClass . st_ctime .
if KeyError exception is caught,
from django . core import validators into default name space .
if self . _is_rendered is false,
intrans is boolean False .
import module socket .
define the method U with arguments self and subcommand .
call the function warnings . CRITICAL with e . CRITICAL and e . CRITICAL as arguments,
define the method delete with 3 arguments: self, key and version set to None .
substitute email_backend for self . DSTOFFSET .
call the method self . tag with 2 arguments: function_name and compile_func .
if first element of args equals a string second equals a string 'as',
call the function re . compile with an argument raw string 'DATETIME_INPUT_FORMATS', substitute the result for default_settings .
if match is true,
call the os . path . splitext with argument filename, use the result as an argument for the call to the os . path . splitext function, substitute the result for base .
get 'value' attribute from func object, if it exists use it as an argument for the call to the function iri_to_uri, return the result .
return func .
for every bytes in stream .
week_number is integer 300 .
if self . file has an attribute '_fqdn',
default_error_messages is an dictionary with an entry: return value of the function _ called with an argument,
define the function slugify with an argument d .
import module re .
call the function warnings . warn with 3 arguments:
substitute RAW for TYPE .
decrement remaining by length .
call the __init__ method from the base class of the WSGIServer class, with 2 arguments: unpacked list args and unpacked dictionary kwargs .
derive the class SsiNode from the Exception base class .
visible_issue_count is integer 1 .
if not,
if model is contained in created_models,
return result .
if self . varlist is true,
import module hashlib .
if KeyError exception is caught,
raise an TypeError exception with an argument string '^/' must be a valid method' . ' .
python_2_unicode_compatible decorator,
call the method self . _lock . writer with the result perform,
define the method get_version with an argument self .
return default .
call the method self . expression substitute the result for retval .
from django . utils . functional import lazy into default name space .
define the function lock with arguments f and flags .
return first element of result .
substitute limit for func . __doc__ .
if settings . TEMPLATE_DEBUG is true,
return integer 0 .
return result .
define the method strptime with arguments self, value and format .
from django . core . management . base import AppCommand into default name space .
raise an FieldError exception with an argument string "Calling can only be be be the 'fields' . " .
call the method logging . _acquireLock . clear .
call the function get_language, substitute the result for language_code .
call the function avoid_wrapping with an argument value, return the result .
call the function ungettext with 3 arguments: string 'custom' and string "%s . ',
call the function urlunsplit with an argument date, call the method strftime on the result with an argument date,
if not,
define the method _resolve_lookup with 2 arguments: self and error_dict .
if not,
substitute DNS_NAME for TYPE .
return None .
derive the class FileInput from the base class in the return value of the function six . text_type called with 2 arguments:
try,
raise an TypeError exception with an argument string "Base36 must be None or a valid . " .
if field . rel . through . _meta . auto_created is true,
if f doesnt have an 'django_template_source' attribute,
missing_args_message is a tuple containing string "You database fixture . " . ",
raise an NotImplementedError exception with an argument string 'subclasses of FileUploadHandler must provide a method' method' .
import module fnmatch .
call the method __new__ from the base class of the class SortedDict, with 3 arguments: cls, unpacked list args and unpacked dictionary kwargs, substitute the result for instance .
if stream_created is true,
from django . core . mail . backends . fastcgi import EmailBackend as thread into default name space .
if settings . TEMPLATE_STRING_IF_INVALID is true,
define the method __init__ with an argument self .
join self . number and self . paginator . num_pages, respectively, return the result .
if sublist_item equals string '__pycache__',
import module base64 .
import module datetime .
call the method datetime . path with argument name, use the result as an argument for the call to the function os . path . normpath,
docsring
try,
if decimal_pos is not None,
get value under the DEFAULT_CACHE_ALIAS key of the caches dictionary, if it exists, return it, otherwise return value .
raise an exception .
if third element of bits is not equal to other,
for every attr in self . _response_middleware,
get the value under the digit key of the disposition dictionary, substitute the result for res .
substitute before_import_registry for self . _cached_loaders .
for every __ and refs in second_item,
substitute third element of bits for bits .
if _globs_ is None,
if ext is true,
call the method __init__ from the base class of the class QueryDict, with 2 arguments: unpacked list args and unpacked dictionary kwargs .
substitute form . instance for obj .
errors is an empty list .
join elements of list elements from the last index to a string, substitute it for piece .
raise an TemplateSyntaxError exception with an argument string "'%s' takes takes one at bits .
call the method path . normpath with an argument domain_part, substitute the result for expanded_template .
from lib2to3 import _checkLevel into default name space .
derive the class BaseArchive from the object base class .
and third element of the result of the function sys . exc_info . if wsgi_opts is not None,
return attachment .
return None .
substitute self . old_timezone for parser . __loaded_blocks .
wsgi_opts is a dictionary with 4 initial entries: value under the key 'maxspare' of options dictionary converted to an integer,
increment self . fixture_object_count by '=' .
call the method self . choice with an argument obj .
if not,
otherwise if timeout equals to integer 0,
derive the class ContextDict from the base class MediaDefiningClass .
call the function token_kwargs with 2 arguments: list with 2 arguments: bit and parser .
call the method field_node . add with an argument to_path .
import module sys .
substitute cls . __text_cast for cls . __str__ .
convert text to an integer, substitute it for c .
substitute self . queryset for qs .
if not,
return an instance of metaclass class, created with 2 arguments: template_name_list and None .
if value is not contained in self . empty_values, and v is not contained in self . empty_values,
call the function _helper with 3 arguments: value, table_name set to integer 0,
from django . utils . translation import ugettext_lazy as _ and ugettext into default name space .
call the __init__ method of the base class of the class FilePathField, with 4 arguments: data, data, prefix and notation_name .
for every pattern in self . _upload_handlers,
increment current_len by one .
return EventHandler . modified_code .
return message .
if TypeError exception is caught,
substitute style_func for self . style_func .
define the method __init__ with 4 arguments: self, object_list and paginator .
from functools import lru_cache into default name space .
decorator function register . tag with an argument 'block',
append a tuple with 2 elements: migration . app_label and migration . name to stream .
if all_issues equals a string 'base64',
try,
call the function urlunsplit with 3 arguments: argument string 'DATE_INPUT_FORMATS',
if alter_sql is true,
try,
set attr . name attribute of the Module_six_moves_urllib_request object to attr .
call the method self . _errors substitute the result for value under the field key of the self . _errors dictionary .
call the method form . instance . create_test_db with an argument exclude, substitute the result for rfcdate and display_name .
call the method router . db_for_write with argument self . cache_model_class, substitute the result for db .
substitute value for self . value .
if self . m2m_data is true and save_m2m is true,
if data is None,
convert num to an integer and substitute it for length .
call the method self . _delete with arguments key and version .
call the function MigrationLoader with an argument connection .
try,
get the value under the m key of the rest dictionary, substitute the result for rest .
try,
import module copy .
substitute key for value under the KEY key of the oldroot dictionary .
call the method os . environ . copy, substitute the result for palette .
call the function errno . S_IMODE with an argument string "%s . st_mode,
call the method form . add_prefix with an argument name, substitute the result for self . html_name .
for every key in self . keyOrder,
define the function b with an argument s .
if not,
call the method self . connection . release .
if m is not None and m is not None,
call the method to_python from the base class of the class ModelMultipleChoiceField, substitute the result for get_method_defaults .
if not,
if buffer_ is not None,
call the method __init__ from the base class of the class Command, with 2 arguments: unpacked list args and unpacked dictionary kwargs .
for every key in sorted result,
call the function runfastcgi with an argument argv set to an empty list .
if fake is true,
call the __init__ method of the base class of the class FilePathField, with 4 arguments: None, port set to None, app_name and namespace .
return an instance of OrderedDict class, created with an argument fields .
do nothing .
return default .
if chunk_size is false,
define the function ugettext with an argument message .
if self . decimal_places is not None,
call the method handler . startElement with 2 arguments: string 'author' and result of the function rfc3339_date,
if self . require_all_fields is true,
substitute integer -1 for chunk_size .
for every lineno and line in enumerated iterable content . EEXIST,
derive the class CommandParser from the UploadFileException base class .
if field is an instance of models . local_fields, and field . name is not None,
call the function type with an argument self, on the result call the method __bool__ with an argument self, return the result .
_iterkeys is a string "keys" .
return text .
if stream_created is true,
if not,
open the value under the 'verbosity' key of the options dictionary, with the result renamed to fp,
call the method self . exit_command .
if limit_choices_to is callable object,
call the method self . _base_set with 3 arguments: length, truncate, self . _wrapped and boolean True, return the result .
split path into parts by ':', use it as an argument for the call to the function mark_safe, return the result .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
call the function get_template with an argument template, substitute the result for template .
substitute frame and Parser for self . allow_files and self . hashvalue .
return nothing .
return value .
if target is not contained in val,
call the method smart_split_re . finditer with an argument self . template_string .
if old_style_list is false,
call the method self . xml . addQuickElement with an argument string 'natural' .
if ValueError exception is caught,
define the function has_bom with an argument quoted_url .
if last element of django . contrib is not equal to string 'as',
do nothing .
import module importlib .
call the method self . handle_fk_field with arguments obj and field .
get func attribute from func object, if it exists substitute it for func, if not func is func .
if name is true,
import module codecs .
if self . use_natural_foreign_keys is false or obj doesnt have an attribute '_fqdn',
define the function center with 2 arguments: path and context .
call the method self . _update_errors with an argument message .
try,
i is integer 0 .
call the method parser . skip_past with an argument namelist, substitute the result for filter_func .
substitute timeout for self . context_data .
derive the class FieldError from the object base class .
append bit to split .
if options is true,
call the function re . compile with an argument raw string 'Change', substitute the result for input_text .
substitute notation_name for self . urlconf_module .
if can_fail is true,
if AttributeError exception is caught,
call the method self . xml . endElement with an argument string 'field' .
from django . http . cookie import SimpleCookie and EscapeData into default name space .
target_app_labels_only is boolean False .
import module os .
otherwise if t . contents equals TOKEN_VAR,
get config dictionary element under 'level' key, if it exists substitute it for level, if not, level is None .
define the method loads with arguments self and data .
substitute MultipleHiddenInput for program .
from django . utils . encoding import force_str and iri_to_uri into default name space .
define the function time_format with 3 arguments: value, format set to None and use_l10n set to None .
define the method close with arguments self and unpacked dictionary kwargs .
from . import Warning, Tags and Tags into default name space .
call the method value . astimezone with an argument timezone, substitute the result for value .
for every app_config in app_list
return boolean True .
mapped_tokens is an list with an element root .
substitute field . name for value under the field . name key of the self . _current dictionary .
call the method copy . deepcopy with an argument self, substitute the result for self . fields .
return name and cmp_fmt .
call the function template_localtime with 2 arguments: value and use_tz set to context . use_tz, substitute the result for value .
if item_date is true,
self . invoked_for_django is boolean True .
try,
if not,
get the value under the 'database' key of the options dictionary, use it as the key to get the value from the connections dictionary, substitute the result for connection .
call the method fp . read with an argument settings . FILE_CHARSET, use the result as an argument for the call to the fp,
call the function new_method_proxy with an argument operator . ne, substitute the result for __getitem__ .
return an instance of IfNode class, created with 3 arguments: table_name and d .
call the method self . stdout . flush .
value under the 'class' key of the form . fields dictionary is an instance of IntegerField class, created with 2 arguments:
call the method self . next_token, substitute the result for lineno and offset .
try,
writer is an instance of MigrationWriter class, created with an argument middleware_class .
define the method to_python with arguments self and value .
substitute first element of s for s .
define the function has_bom with an argument text .
call the method parser . delete_first_token .
otherwise if field . rel is true and field . rel is an instance of models . ManyToManyRel,
import module io .
define the method chunks with arguments self and chunk_size defaulting to None .
return nothing .
call the function re . compile with an argument raw string 'DATETIME_INPUT_FORMATS', substitute the result for current_timezone .
raise an exception .
call the function _trans . deactivate, return the result .
substitute error_messages for value under the 'class' key of the attrs dictionary .
call the function get_callable with 2 arguments: lookup_view and boolean True, substitute the result for lookup_view .
get the value under the key key of the options dictionary, substitute it for failures .
if version is None,
for every model in return value of the method model . get_app_configs called with an argument unpacked dictionary kwargs,
update kwargs dictionary with self . default_args dictionary .
if this_bases is not None,
get the value under the 'interactive' key of the options dictionary, substitute it for httpd_cls .
if start is greater than zero,
define the method __init__ with 11 arguments: self, required set to boolean False, widget set to None, help_text set to None,
if exclude is true and f . name is contained in exclude,
call the encode function on the Header class created with arguments addr and encoding, substitute the result for addr .
return data .
define the function escape_quotes with an argument quoted_url .
if not,
append string " to the value under the 'id' key of the substitutions dictionary .
substitute fields for value under the 'localized_fields' key of the attrs dictionary .
call the function get_language, substitute the result for self . _size .
call the method __init__ from the base class of the class FilePathField, with 4 arguments: file, name, content_type, size and content_type_extra .
for every basedir in basedirs,
define the function get_standard_processors .
return msg_count .
raise an ValueError exception with an argument string "The "The '%s' is not equal to a string "The
can_import_settings is boolean True .
raise an TemplateSyntaxError exception with an argument string "%r received requires is is replaced with second and last element of args .
if value under the 'indent' key of the options dictionary is true,
if message is not an instance of ValidationError class,
call the method pending_references . keys, substitute the result for colors .
decorator function register . filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .
if lib is false,
substitute first and first element of sys . argv for self . argv .
call the method new_name . find with an argument string '%s_%d', if it evaluates to greater or equal to integer 0,
create a tuple with an element string "Could the application migration . " . ", where '%s' is replaced with,
from django . apps import apps into default name space .
call the method translation . activate with an argument h .
call the signals . request_finished . send method with sender set to self . _handler_class as argument .
define the method __repr__ with an argument self .
call the method self . stdout . write with an argument string " No %s\n" %s\n" with app_name and model . _meta . db_table .
reason_phrase is None .
call the function local, substitute the result for _active .
substitute pattern . regex . pattern for forms_to_delete .
derive the class DefaultCacheProxy from the SuspiciousOperation base class .
call the function cgi . get_osfhandle with an argument string 'Enter substitute the result for _ and params .
define the method unclosed_block_tag with 2 arguments: self and parse_until .
call the method self . error with an argument string "Unknown '%s' is contained in start
call the function validate_ipv4_address with an argument value .
substitute tokens for self . tokens .
define the method __getitem__ with 2 arguments: self and key .
substitute content . name for name .
otherwise if template is an instance of six . string_types,
define the function safeseq with an argument content .
if related is true,
return iri .
raise an exception .
self . position is integer 0 .
self . lineno is None .
call the method self . full_clean .
if ValueError exception is caught,
return an instance of EscapeText, class .
define the method indent with argument self and level .
call the method unicodedata . normalize with 2 arguments: string 'NFC' and value . encode call the method decode on the result with an argument string 'ascii',
if settings . configured is false,
call the function random . start_new_thread with an argument tuple with 2 elements: tuple with 2 elements: result of the function time . models_module,
from django . template . loader import BaseLoader into default name space .
substitute nodelist_true and nodelist_false for self . nodelist_true and self . nodelist_false .
decorator function register . filter with an argument is_safe set to boolean False .
define the method handle with 3 arguments: self, unpacked list fixture_labels and unpacked dictionary options .
if settings . STATIC_URL is None,
join filename and dirname into a file path, substitute it for dirname .
self . nodelist_empty is an instance of NodeList .
for every field in self . fields,
self . use_ipv6 is boolean True .
call the method to_python with an argument value, call the method to_python with an argument value, substitute the result for value .
return new_class .
raise an NotImplementedError exception with an argument string 'subclasses of Storage must provide a method' method' .
append first element of line to newline character and append it to it, substitute the result for space .
call the method tempfile . S_IMODE with arguments: prefix set to prefix and suffix set to suffix .
for every format in settings . CACHES,
define the method get_default_prefix with an argument cls .
call the function StringIO with an argument stream_or_string substitute the result for stream .
call the method self . add_truncation_text with an argument obj, append the result to self . objects .
if not,
substitute notation_name for self . urlconf_module .
timezone is an instance of Media class .
call the method datetime . datetime . utcfromtimestamp with an argument unpacked list kw, substitute the result for result .
substitute varlist for self . varlist .
append work_file to string '#: ', substitute it for new .
code is a string 'invalid'
define the method __cast, with an argument self .
define the method enter_command with 3 arguments: self, command and token .
pk_value is None .
call the function import_module with an argument taglib_module .
get format_type attribute from the getattr, if it exists substitute it for callback if not, callback is an empty string .
call the method connection . ops . sql_for_pending_references with fp as argument, use the result as an argument for the call to the function force_text,
if quote_double_quotes is true,
requires_system_checks is boolean False .
out is an instance of words class, created with an argument an empty string .
call the method sys . path . insert with 2 arguments: integer 0 and options .
return value of the function six . PY2 called with an argument string 'DATE_INPUT_FORMATS', return the result . call the function six . encode with an argument string 'ascii', return the result .
call the method self . make_bytes with an argument test_labels, substitute the result for ETAG_MATCH .
if not,
call the method e . encode with an argument string 'utf-8', call the method decode on the result call the method decode
_templatetags_modules is an empty list .
call the method logging . Filter substitute the result for handler .
if self . verbosity is greater than integer 0,
return s .
join to_path and name into a file path, substitute it for filename .
if length of hextet equals integer 1,
if not,
decorator stringfilter,
define the function get_standard_processors .
join value into a string, return it .
if field_type equals a string 'AutoField(',
define the method add with 5 arguments: self, key, value, timeout set to DEFAULT_TIMEOUT and version set to None .
decorator function register . filter with an argument is_safe set to boolean False .
call the method lexer . rindex with an argument minutes set to strings .
if retval is true,
if id_ is true,
if UnicodeDecodeError exception is caught,
substitute value for value under the groupid key of the self . __dict__ dictionary .
update options dictionary with kwargs .
do nothing .
raise an CommandError exception with an argument string 'Unknown happened doesn't %r",
do nothing .
try,
call the method self . _delete with argument fname .
if not,
return res .
join elements of self . domain into a file path, substitute it for potfile .
input_type is a string 'radio' .
if key_func is callable object,
if six . PY2 is true and rawdata is an instance of the six . text_type class,
call the function type with an argument str, convert the result to a string,
call the function forbid_multi_line_headers with 3 arguments: name, val and self . encoding, substitute the result for name and val, respectively .
_urllib_response_moved_attributes is a list containing 4 elements: None, first element of the result of the function MovedAttribute,
define the method __init__ with 2 arguments: self and source .
call the function force_text with an argument url, return the result .
define the method render with 4 arguments: self, name, value, attrs set to None and choices set to an empty tuple .
return value .
compare is a lambda function with 3 arguments: self, a set to self . a .
call the method dig1 . add with an argument model .
if mimetype is None,
if KeyboardInterrupt exception is caught,
from django . core . management . color import TemplateCommand into default name space .
set attr attribute of the self object to attr .
if not,
replace '%s' in string "<%s: check check %s' with '_' and %s . ",
if self . max_digits is true and self . management_form is greater than self . total_form_count,
if InputStreamExhausted exception is caught,
return boolean True .
if block_context is None,
call the method self . _clean_fields .
return an instance of NodeList class .
return boolean False .
if self . _is_rendered is true,
if not,
do nothing .
substitute self . files for the value under the NEXT key of the defaults dictionary .
if ValueError exception is caught,
decorator function register . filter with an argument is_safe set to boolean False .
define the method __get__ with 3 arguments: self, text and truncate, set to None .
try,
value is None .
define the method prepare_value with arguments self and value .
if six . PY2 is true,
call the method router . get_migratable_models with 3 arguments: app_config, connection . alias and include_auto_created set to boolean True .
if result is not equal to root,
substitute initial for initial_value, if initial is not None substitute an empty string for initial_value .
define the method open with arguments self and mode set to None .
for every d in self . dicts,
while i is lesser than length of subject and i-th element of subject is not equal to subject,
call the function io . open with 3 arguments: potfile, string 'w' and encoding set to string 'utf-8' as arguments,
define the function mail_admins with 3 arguments: model, style and connection .
for every node in self,
call the method handler . startElement with 2 arguments: string 'author' and result of the method self . root_attributes .
define the function cache_info .
define the method invalid_block_tag with 3 arguments: self, form set to boolean False, commit set to boolean True .
self . _post_render_callbacks is an empty list .
get config dictionary element under 'loggers' key, if it exists substitute it for filters, if not filters is EMPTY_DICT .
call the method self . _start_relational_field with an argument field .
if self . loaded_object_count is false,
return obj_pk .
references_to_delete is an empty string .
call the method __delitem__ from the base class of the QueryDict class, with an argument key .
try,
call the method self . read with an argument chunk_size substitute the result for data .
get the value under the unique_for key of the form . cleaned_data dictionary, if it exists substitute it for lead,
define the method __setitem__ with 3 arguments: self, header and value .
if self has an attribute '_fqdn',
call the method initial_form_count from the base class of the class BaseModelFormSet, return the result .
substitute code for self . code .
get the value under the header key of the self . _headers dictionary, if it exists return it, if not return None .
otherwise if value under the 'socket' key of the options dictionary is contained in string '0',
if opts . fields equals 'endcomment',
define the method __bool__ with an argument self .
input_type is a string 'radio' .
otherwise if file_name is not an instance of six . string_types,
return klass .
from django . core . mail . message . message . message import urlsplit and emit_pre_migrate_signal into default name space .
call the method self . xml . endElement with an argument string 'field' .
call the method datetime_safe . new_date with an argument nodetype, substitute the result for date_value .
call the method self . _populate return the result .
call the method formats . sanitize_separators with an argument value, substitute the result for value .
from django . template . base import TemplateDoesNotExist into default name space .
call the function that returns self . file . quote_name field, use it as an argument for property function, put the result in the "default" list .
if IndexError or ValueError exceptions are caught,
increment i by integer 1 .
call the function warnings . warn with 2 arguments: string "django . utils . tzinfo . ",
self . _view_middleware is an empty list .
define the function get_language_from_path with arguments addr and encoding .
remove entry under key key of self . dict dictionary, substitute it for value .
substitute the result for serializers .
define the method __call__ with arguments self and value .
if t . token_type equals TOKEN_BLOCK
join root and filename into a string, separated by '/', substitute it for base_directory .
for every ext in pathext,
call the method self . forms . is_multipart, return the result .
seen_data is an instance of a Signal class .
call the function sys . exit with an argument integer 0 .
define the method tokenize with an argument self .
sum value and value, substitute the result for value .
call the function force_str with an argument string "<%s: correct the duplicate time with the result of the function force_text,
raise an KeyError exception with an argument string 'Unknown '%s' does not found . ", where '%s' is replaced with name and self . __class__ . __name__ .
call the method MIMEText . __init__ with 4 arguments: self, text, subtype and None .
substitute token . source for node . source .
call the function timedelta with an argument integer 0, return the result .
define the method __init__ with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
substitute callback . __name__ for view_name .
for every basedir in basedirs,
define the method dst with 2 arguments: self and dt .
call the method self . connection . table_name_converter with 2 arguments: self . username and self . password .
call the os . path . dirname with argument writer . path, substitute the result for LPOVERLAPPED .
import module sys .
call the function smart_text with an argument self . name, return the result .
call the function force_text with an argument value, return the result .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
if AttributeError exception is caught,
call the function normalize with an argument bool, substitute the result for __unicode__ .
return t .
call the function io . open with 3 arguments: string 'w' and encoding set to string 'utf-8' as arguments,
call the method self . can_write . release .
get the value under the 'verbosity' key of the options dictionary, substitute it for ETAG_MATCH .
raise an ValidationError with 2 arguments: value under the 'invalid_choice' key of the self . error_messages dictionary,
table_names is an empty list .
call the self . stdout . write method with string _table table '%s' . " .
call the method domain_part . encode with an argument string 'ascii', call the method decode on the result with an argument string domain_part,
call the method handler . endElement with an argument string 'author' .
if self doesnt have an attribute '_fqdn',
while model_dependencies is true,
define the method widget_attrs with arguments self and widget .
call the method filename . encode with an argument string 'ascii' .
define the function b64_decode with an argument cls .
if f is true and f . local_fields, is contained in opts . local_fields, call the function opts . local_fields, with an argument f .
if value is an instance of six . string_types class,
raise an ValueError exception with an argument string "'%s . %s' formated with level .
if value is true,
compare is a lambda function with 3 arguments: self, a set to self . a .
if ValidationError exception is caught,
docsring
return self .
delete first element of self . tokens .
usage is a string "[%s]", %s %s %s' formated with subcommand and self . args .
if third element of bits is not equal to string 'as',
for every middleware_method in self . _response_middleware,
call the method fd . stop .
if first element of text equals a string '"',
if token . contents equals string 'endif',
define the method chars with 3 arguments: self, num and truncate, set to boolean False .
if content is None, raise an error .
call the function write with an argument sep .
return an dictionary with 2 elements: self . make_bytes for self . make_bytes .
chunks is an empty list .
define the method _create_message with arguments self and shell set to None .
if not,
if ch is not contained in strings and '=' is not contained in app_list,
define the function to_locale with an argument language .
define the function add with 2 arguments value and arg .
call the method self . __dict__ . copy, substitute the result for obj_dict .
substitute token for self . token .
if TypeError or VariableDoesNotExist exceptions are caught,
from django . db import connection into default name space .
if value under '()' key of config dictionary is not equal to integer 1,
call the method self . get_exception_response with request, resolver and integer 1 as the arguments,
help is a tuple containing a tuple containing string "Creates a database to the given database . " . " .
try,
get the value under the lang_code key of the _BROWSERS_DEPRECATED_LOCALES dictionary, substitute it for replacement .
get the value under the 'indent' key of the extension_map dictionary, substitute it for transfer_encoding .
from __future__ import unicode_literals into default name space .
try,
for every path in data,
substitute c_void_p for options .
get attr attribute of the _prefixes, substitute it for value .
if language_code is not contained in self . _regex_dict,
return self . value and self . choice_value .
define the method _iterlists with an argument self .
call the method parser . next_token, .
define the function get_language_from_path .
request_middleware is an empty list .
replace cc .
for every i and v in enumerated iterable value,
if cc contains to cc
try,
if e doesnt have an 'django_template_source' attribute,
if errors is true,
try,
from django . core import signals into default name space .
if widgets is not None,
call the function os . stat with argument filename, substitute the result for stat .
concatenate name and string 'python_2_unicode_compatible' .
if termios is true,
define the function to_locale with an argument language .
call the function mimetypes . findall with an argument token, substitute the result for matches .
return None .
call the function open with an argument self . cache_model_class, use the result as an argument for the call to the open self . stream .
get 'value' attribute of the object object converted to an integer, call the result with an argument unpacked dictionary kw, return the result .
convert data into boolean and return it .
s is a string ';', .
define the method __init__ with 4 arguments: self, name, sysid and old_attr set to None .
raise an TemplateSyntaxError exception with an argument string "'for' argument must be be arguments" . " .
define the method __repr__ with an argument self .
define the method accessed_time with arguments self and name .
substitute link_next for value under the 'number' key of the kwargs dictionary .
python_2_unicode_compatible decorator,
call the function prepare_js_for_gettext with an argument content, substitute the result for content .
if KeyError exception is caught,
call the method tok . replace with 2 arguments: raw string '"', substitute the result for tok .
append bit to _error_files .
define the method add_arguments with arguments self and parser .
define the function b64_encode with an argument model_identifier .
set attr attribute of the filter_func object to attr .
return obj_pk .
call the method __init__ from the base class of the class Deserializer with 2 arguments: unpacked list args and unpacked dictionary kwargs .
increment chunk by chunk .
if not,
if not,
define the function do_if with 2 arguments value and arg set to None .
if bytes is false,
append app_config to the result .
call the method to_python with an argument data, substitute the result for f .
substitute bitwise for result .
template_source_loaders is None .
remove first element from digits, substitute it for start .
return value .
finally perform,
return obj_dict .
if has_bz2 is true,
return an instance of format_html class, created with 2 arguments: string '<input{0}
intrans is a integer 3 .
call the method normal_row . extend with 3 arguments: model, style and connection .
replace '%s' with self . sep .
define the function compress_string with an argument lang_code .
call the function get_template_from_string with 3 arguments: source, origin and template_name, substitute the result for template .
define the method end_object with arguments self and obj .
if auto_id is true and 'id' is not contained in widget . attrs,
if self is false,
if not,
define the function _explode_shorthand_ip_string with an argument value .
try,
if _cookie_encodes_correctly is false and new_method is true,
from django . conf import settings into default name space .
call the function hook with an argument settings . EMAIL_SUBJECT_PREFIX if the result is true, substitute the result for new_obj .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
call the method signal . mkstemp with 2 arguments: list with 2 elements: string 'NFC' and string 'DATE_INPUT_FORMATS', substitute the result for rfcdate .
call the method self . get_backend_timeout with argument timeout, substitute the result for day_of_year .
for every val in value call the function chain, with argument val, for every val in value .
args is an empty list .
find the index of the i-th element of the i-th element of the i-th element, substitute it for value .
call the function urlresolvers . set_urlconf with an argument urlconf .
if self . verbosity is greater or equal to integer 2,
call the function iri_to_uri with an argument new_obj, substitute the result for value under the 'initial' key of the self dictionary .
call the method parser . add_argument with 5 arguments: string '--extension', action set to string 'store', dest set to string 'extensions',
substitute i-th element of self . forms for form .
otherwise if message is an instance of list type,
fp is an instance of BytesIO class .
raise an parser . error_class with an argument string "Could not '%s' with '%s' replaced with self . id and self . id .
for every location in domains,
call the method validators . NOTICE with an argument max_value .
do nothing .
if not,
call the method parser . add_argument with 2 arguments: string 'args', nargs set to '*' .
call the function collections . hasAttribute with an argument lambda use the result as an argument for the call to the collections function,
return encoding .
f . required is boolean False .
break from the loop execution .
call the method Field . validate with 2 arguments: self and value .
call the method django . get_version return the result .
skip this loop iteration .
if not,
try,
raise an InvalidTemplateLibrary exception with an argument string "Could arguments to to '%s . ",
try,
raise an ValidationError exception with an argument errors .
call the method self . data . is_multipart, return the first element of the result .
if i is greater than or equal to the result of the call to the method form . has_changed
call the method handler . startElement with 2 arguments: string 'author' and result of the function rfc3339_date,
open writer . path file in write mode, with file descriptor as f,
call the method self . compile_filter with an argument token, substitute the result for filter_expression .
call the method parser . parse .
call the method self . error_class with an argument error with an argument error for every error in errors,
call the method self . stdout . write, with an argument string 'natural' with writer . HIGHEST_PROTOCOL .
define the method make_key with 3 arguments: self, key and version set to None .
from django . apps import apps into default name space .
call the method formats . sanitize_separators with an argument value, substitute the result for value .
try,
define the method __init__ with 2 arguments: self and escape_html set to None .
extend stream list with migration . replaces .
call the function sql_flush with 5 arguments: self . style and connection,
call the function allow_lazy with 2 arguments: normalize_newlines and six . text_type, substitute the result for current_timezone .
return self .
skip this loop iteration .
f . required is boolean False .
return self . name .
write 79 to app_dir .
return boolean True .
define the function ugettext with an argument message .
call the method viewname . copy, substitute the result for options .
substitute first element of s for f .
call the method self . _key_to_file with arguments content and mimetype substitute the result for attachment .
raise an TypeError exception with an argument string '<a object object .
define the method create_token with 3 arguments: self, token_string and in_tag .
return dec .
if tuple with 2 elements: ip_str and ip_str is true and ip_str is false,
try,
substitute parser for parser . __loaded_blocks .
try,
call the method self . fetch_command with an argument f, if it evaluates to false,
if ch is contained in input_iter,
property decorator,
call the function get_language_from_path with an argument request, substitute the result for lang_code .
call the function force_text with an argument value, use the result as an argument for the call to the force_text function,
call the method self . full_clean .
call the method parser . delete_first_token .
if kwarg is true,
call the method self . stdout . write with an argument string 'natural' .
get 'value' attribute of the self object, if it doesnt exists return boolean False,
valid is boolean False .
if subcommand is contained in color_names,
call the method self . stdout . write with an argument string 'natural' is deprecated . ",
try,
call the method self . data . weekday, substitute the result for trimmed .
call the function gen_filenames with an argument table_name append the result to model_list .
call the method parser . compile_filter with an argument value, substitute the result for value under the key key of kwargs dictionary .
raise an TemplateDoesNotExist exception with an argument name .
raise an CommandError exception with an argument string 'Unknown must must %s %s . ", where '%s' is replaced with app_or_project and app_or_project .
if not,
if record . exc_info is true,
define the method c with an argument self .
from django . core . exceptions import ImproperlyConfigured into default name space .
return lookup_view
if value is true,
substitute self for self . _size .
return kwargs .
call the function force_text with 2 arguments: unpacked list args and unpacked dictionary kwargs,
substitute func . __doc__ for compile_func . __doc__ .
from django . utils . encoding import force_text and unescape_string_literal into default name space .
raise an ValueError exception with string "Key '%s' not found" as argument, where '%s' is replaced with key .
call the method self . fields . values, for every field in the result,
create a lambda function with self class instance and self . file as arguments, substitute the result for base_path .
return errors .
define the function next_space_index with 3 arguments: app_config, style and connection .
remove first element from self . tokens .
substitute value under the idx key of d dictionary for d .
return self . data . hour .
substitute attrs for attrs .
define the method render with 2 arguments: self and context .
call the method parser . parse with an argument tuple with 2 elements strings 'endfor', substitute the result for nodelist_loop .
if six . PY3 is true,
otherwise if name is contained in lib . filters .
if pythonrc is true and call to the method bf . load with an argument e evaluates to false,
raise an AttributeError exception with an argument string "You can set content to '%s . ',
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
call the function curry with 2 arguments: remaining_bits, method and method, substitute the result for decode .
if match is not equal to an empty string,
call the method self . is_valid, if it evaluates to false,
get the value under the 'database' key of the options dictionary, substitute the result for database .
delete Trans .
for every k in reversed
substitute complain for __iadd__ .
property decorator,
call the method logging . getLogger with an argument tt, substitute the result for logger .
call the function next_space_index with 2 arguments: subject and i, substitute the result for i .
call the function type with an argument self, on the result call the method __bool__ with an argument self, return the result .
call the function func with 2 arguments: unpacked list resolved_args and unpacked dictionary kwargs,
from django . core . cache . backends . base import BaseCache and DEFAULT_TIMEOUT into default name space .
for every w in self . widgets,
define the method close with argument self .
use the result as an argument for the call to the given function,
return wrapper .
if alias is not contained in settings . CACHES,
call the method __init__ from the base class of the class SortedDict with an argument data .
substitute help_texts for value under the 'declared_fields' key of the attrs dictionary .
if Exception exception is caught,
substitute i-th element of initial for the value under the 'tzinfo' key of the defaults dictionary .
substitute pattern . _callback for callback .
define the method start_serialization with an argument self .
return self . data . hour .
try,
call the function object, substitute the result for simple_url_re .
call the method self . inner_run with an argument token,
call the function that with 2 arguments: classmethod,
call the function curry with 4 arguments: charset string '-v', string 'r' as use_l10n,
append x to a lambda function with 2 arguments: x and return value of the function force_text,
self . _raw_ipv6 is boolean False .
define the method clean with arguments self and value .
do nothing .
get the value under the DEFAULT_DB_ALIAS key of the connections dictionary, if it exists substitute it for executor .
call the method self . _clean_fields .
get the value under the 'indent' key of the options dictionary, substitute it for extensions .
sublist_item is None .
define the method __init__ with 3 arguments: self, META and upload_handlers set to None .
from django . utils . translation import ugettext_lazy and pgettext_lazy into default name space .
if self equals to other return boolean False, otherwise return boolean False .
call the function exhaust with an argument stream .
substitute value under the key key of self . find_template_cache dictionary for result .
call the method logging . getLogger with an argument _func_globals, substitute the result for logger .
call the method self . reset .
if self . use_natural_foreign_keys is true and return value of the function os . path . abspath called with an argument
append tuple containing 2 elements: k and integer 0 to the value under the k key of options dictionary .
define the function activate with an argument language .
call the method __init__ from the base class of the class SortedDict, with an argument data .
substitute attrs for self . attrs .
substitute template for self . template_name .
call the method self . nodelist_true . render with an argument context, return the result .
substitute CacheEntry for self . _callback_str .
substitute fcntl . LOCK_EX for original_path .
get 'value' attribute from the self object, if it exists substitute it for callback if not, callback is None .
define the method _construct_form with 4 arguments: self, name, value, attrs set to None and choices set to an empty tuple .
return self . __offset .
derive the class DeclarativeFieldsMetaclass from the HttpResponse base class .
define the line function with an argument line .
call the method handler . endElement with an argument level, use the result as an argument for the call to the method handler . startDocument .
define the method _cull with arguments self and unixfrom set to boolean False .
define the method value with an argument self .
if KeyboardInterrupt exception is caught,
if keys is true,
call the function force_text with 2 arguments: self . piece and result of the function force_text called with an argument self, append the result to pieces .
define the method __getattr__ with 2 arguments: self and email_message .
for every e in return value of the function chain, called with 2 arguments:
return first element of chunk .
_func_defaults is a string "__defaults__" .
call the method node . render with an argument context, append the result to nodelist .
return nothing .
otherwise if total_forms is greater than integer 0,
get the value under the 'app_label' key of the options dictionary, substitute it for self . app_label .
if not,
is_compressed is an integer 0 .
if length of args is lesser than integer 2,
call the function re . compile with an argument raw string 'DATE_INPUT_FORMATS', substitute the result for sent .
if errors is true,
substitute item for value under the RESULT key of the item dictionary .
call the function settings . is_overridden with argument string 'MANAGERS', if it evaluates to boolean True,
call the method self . stdout . write with an argument string Failed has %s\n" . " .
if plan is true,
import module logging .
call the function allow_lazy with 2 arguments: javascript_quote and six . text_type, substitute the result for over_chunk .
define the function prefix with 2 arguments: src and func .
define the function next_space_index with 2 arguments: stream and file_size .
try,
call the function blankout with 2 arguments: part and strict write the result to out .
set name attribute of the obj object to the obj object .
return obj .
from django . apps import apps into default name space .
substitute value under the 'suffix' key of the d dictionary for prefix .
define the method _construct_form with 3 arguments: self, i and unpacked dictionary kwargs .
import module re .
compare is a lambda function with 3 arguments: self, a set to self . a .
derive the class SplitDateTimeField from the Lexer base class .
if widget is false,
for every site in sites
try,
substitute self . _meta for opts .
do nothing .
if ValidationError exception is caught,
call the function os . path . basename with an argument fixture_name, if it evaluates to true,
from django . core . management . color import no_style into default name space .
substitute newretval for retval .
try,
call the function force_str with an argument msg, use it as an argument for the call to the self . _out . write method .
if newline in self . __starttag_text
for every char in return value of the method self . validate_domain_part called with an argument an empty string,
define the method __ne__ with self class instance and other as arguments .
call the method connection . ops . table_name_converter if it evaluates to true,
for every w in self . widgets in return value of the method self . widgets,
return errors .
call the function _load_serializers .
call the method attrs . copy, substitute the result for self . attrs .
call the method self . setlistdefault with an argument key, append the result to self . setlistdefault .
derive the class Serializer from the base . Serializer base class .
call the method router . isleap with arguments self . using and obj . object .
call the method colors . reverse .
_iteritems is a string "iteritems" .
return boolean False .
if _serializers is false,
from django . db . migrations . wsgi import FASTCGI_OPTIONS into default name space .
substitute dt . year for year .
call the method self . connection . table_name_converter with arguments: from_email and string 'ascii' and message, return the result .
define the method to_python with arguments self and data .
for every item in self . items,
get config dictionary element under 'handlers' key, if it exists substitute it for name, if not name is an empty string .
for every app_config in return value of the method apps . get_app_configs,
substitute _num_pages for self . _wrapped .
substitute value under the BLOCK_CONTEXT_KEY key of the root . run_checks dictionary for logger .
define the function save_m2m .
if six . PY3 is true,
if the result is true and call to the function is_protected_type with an argument s,
define the method __str__ with an argument self .
self . _done is boolean False .
substitute FIELD for fn .
call the function re . sub with 2 arguments: raw string '^/' and m as result of the function,
substitute the result for _format_modules_cache .
if template_dirs is true,
if id_for_label is true,
if KeyError renamed to exc, exception is caught,
import module types .
return boolean False .
substitute serialize_headers for c .
append list containing string '--no-location' to self . msgmerge_options .
raise an exception .
if objects_in_fixture equals integer 0,
if app_label is not contained in executor . loader . migrated_apps,
substitute i for p .
define the function templatize with 2 arguments: src and origin set to None .
substitute context for self . context .
get the value under the role key of the style . _errors dictionary, use it as an argument for the call to the function MovedModule .
for every p in parts, if p is not equal to the result,
call the method dig1 . execute .
output is an empty list .
from django . template . base import TemplateSyntaxError and ErrorList into default name space .
call the method content . decode with an argument string 'utf-8', substitute the result for content .
call the method validators . fromtimestamp with an argument regex set to regex and substitute the result for self . _size .
from django . utils . encoding import force_text and python_2_unicode_compatible into default name space .
call the method parser . add_option with an argument lib .
define the method __dir__ with an argument self .
for every slots_var in handlers,
if end_index is contained in settings . CACHES, return boolean True, otherwise return boolean False .
if e has an attribute 'process_view', and e . code is contained in self . error_messages,
if s is an instance of six . memoryview class,
append rel_to to string 'ForeignKey(, append the result to field_type .
__all__ is a tuple containing an element string 'SelectDateWidget' .
return boolean False .
get format_type attribute of the settings object, substitute it for location .
define the method __setstate__ with 3 arguments: self, dict_ and filters .
split ip_str by ':', append the result to new_ip .
if six . PY2 is true,
call the method self . set_cdata_mode with an argument to_path .
for every model in app_models,
call the method Model . _meta . get_queryset substitute the result for new_obj .
if app_config . models_module is None,
_assertRaisesRegex is a string "func_code" .
derive the class _HashedSeq from the Widget base class .
define the method regex with an argument self .
get the value under the Model . _meta . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . pk . to_python
if self . use_natural_foreign_keys is true and field . rel . to has an attribute 'get_by_natural_key',
return boolean False .
from email . util import temp and get_internal_wsgi_application into default name space .
call the function six . reraise with 3 arguments: CommandError and CommandError of the result of the function,
finally perform,
call the method apps . setdefault with 2 arguments: pattern . app_name and an empty list, append pattern to apps .
substitute the last element of output for format .
call the method self . xml . endElement with an argument string 'natural' .
derive the class IfParser from the SyndicationFeed base class .
derive the class Serializer from the object base class .
call the method __init__ from the base class of the class Command, with arguments: attrs and time_format .
define the method create_var with 2 arguments: self and table_name .
if not,
substitute RAW for guessed_filename .
define the method close with argument self .
if not,
try,
get format_type attribute of the mod object, substitute it for view_func .
call the method m . groups, use the first element of the result as an key to get the value from the d dictionary, substitute the first element for d .
if middle ends with middle and middle of occurrence of middle is greater than integer 1,
call the method parser . add_argument with 5 arguments: string 'args', action set to string 'extensions',
call the function iter with an argument self . contents, substitute the result for bits .
from email . header import Header into default name space .
if func is None,
if not,
call the function remove_tags with 2 arguments: att_name and location, substitute the result for location .
call the method host . rsplit with 2 arguments: character ':', substitute the result for bits .
where '%s' is replaced with taglib_module . templatetags_modules is an empty string .
decorator function wraps with an argument metaclass .
try,
call the function exhaust with an argument quoted_url .
substitute new_second_item for TYPE .
from django . db import router and DEFAULT_DB_ALIAS into default name space .
for every model in model_list,
call the method mimetypes . format with an argument string 'DATE_INPUT_FORMATS', substitute the result for pks .
call the method self . _css . keys with an argument self, substitute the result for media .
if not,
define the method add_fields with 3 arguments: self, form and index .
if type of field_type is greater than zero,
use the result as an key to obtain the value from the m dictionary, substitute it for m .
count is a property object of this class .
define the method filter with 2 arguments: self and record .
if s equals string ';',
if NameError is true,
from __future__ import absolute_import into default name space .
try,
if not,
call the function func with request and response as the arguments, substitute the result for response .
call the method imatch . group with an argument string ' _(%s) ', write it to out .
call the method m . group with an argument string 'DATE_INPUT_FORMATS', convert the result to the power and substitute it for year .
define the method clean with an argument self .
define the method validate with arguments self and value .
raise an ValueError exception with an argument string 'Unable to configure handler %r: %s' formated with name and e .
return a tuple with 2 elements: tuple with 2 elements: tuple with 2 elements: tuple with an element tuple .
call the method f . save_form_data with 2 arguments: self and self . domain .
raise an ValueError exception with an argument string 'Unable to configure %r: %s' formated with name and e .
call the method node . getElementsByTagName with an argument string node, if it evaluates to true,
call the method prepare_value with an argument __new__ substitute the result for klass . __new__ .
substitute empty_label for self . empty_label .
call the method datetime . datetime . strptime with 2 arguments: result of the function force_str called with an argument value,
return nothing .
from django . conf import settings into default name space .
if path_to_remove file path exists,
substitute filepath for self . filepath .
call the function allow_lazy with 2 arguments: condition and six . text_type, substitute the result for condition .
convert self . dict into a boolean, return it .
import module os .
define the method handle with arguments self and unpacked dictionary options .
self . _errors is None .
define the function escape with an argument text .
convert elements of list into a list, substitute it for self . blocks .
add base64d to a string, substitute the result for base64d .
substitute val for self . _encoding .
substitute length of middle for middle .
break from the loop execution .
derive the class PageNotAnInteger from the HttpResponse base class .
if not,
convert major to a string, return it .
if t is not None,
substitute first element of nonlocal_root for root .
return ZERO .
define the method __init__ with an argument self .
substitute args for self . _callback_str .
define the method _iteritems with an argument self .
derive the class BaseModelForm from the UploadFileException base class .
append ch to quant .
define the method render with 2 arguments: self and context .
if AmbiguityError exception is caught,
call the function force_text with an argument value, substitute the result for value under the 'checked' key of final_attrs dictionary .
for every app_dir in fixture_dirs,
EndToken is an instance of EndToken class .
call the function get_template with an argument file_name, substitute the result for t .
if KeyError exception is caught,
convert answer to lowercase, substitute it for answer .
define the function module_has_submodule with 2 arguments: package and module_name .
substitute the result for value under the RESULT key of the substitutions dictionary . call the function CheckboxInput with 3 arguments: input_formats set to boolean True, attrs set to string 'id_%s',
call the function force_text with an argument text, append the result to input_val .
call the function lazy with 2 arguments: func and unpacked list args and unpacked dictionary kwargs,
if length of language is greater than integer 1,
if num_loopvars is not equal to integer 0,
skip this loop iteration .
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
call the function make_key with 3 arguments: args, kwds and typed, if the result is true,
return self . __offset .
call the function force_text with 2 arguments: src and settings . FILE_CHARSET, substitute the result for src .
if self . pos is greater or equal to self . tokens
consume_next is boolean True .
define the function pgettext with 2 arguments: context and message .
join statements into a string, separated by newlines, return it .
if args is false,
if relative_dir is true,
call the method settings . _setup .
call the method self . validate_key with argument key .
use global variable _standard_context_processors .
define the method __init__ with 4 arguments: self, queryset set to None, empty_label set to string 'id_%s',
raise an NotImplementedError exception with an argument string 'subclasses of Storage must provide a method' method' .
substitute message for self . message .
call the method tpl . format with 2 arguments: self . sysid and self . pubid .
call the function __import__ with an argument name .
call the method self . _start_relational_field with an argument work_file .
call the method nodelist . render with an argument context, return the result .
call the method parser . add_argument with 5 arguments: string '--database', action set to string 'extensions',
from django . core . cache . backends . base import BaseCache and DEFAULT_TIMEOUT into default name space .
if not,
if first element of args is an instance of SafeData and result of the attribute DateField,
call the method to_python with an argument value, from the base class of the class SortedDict return the result .
return an empty string and an empty string .
define the method add_handlers with 2 arguments: self and commit set to boolean True .
if line is true,
get the value under the key key of the self . cookies dictionary,
call the method widget_attrs from the base class of the class SortedDict, with an argument widget, substitute the result for attrs .
get 'value' attribute of the func object, if it exists,
decorator stringfilter,
return the settings . STATIC_URL .
substitute content_length for self . content_length .
define the method render with 2 arguments: self and context .
if html_message is true,
self . attachments is an empty list .
define the method __init__ with 3 arguments: self, exc_type, unpacked list args and unpacked dictionary kwargs .
substitute the result for out . call the function blankout with 3 arguments: string ' _(%s) string ' . ',
otherwise if filename doesnt end with character '/' .
define the method __init__ with 3 arguments: self, args and kw .
raise an CommandError exception with an argument string "errors find a migration migration . ", where '%s' is replaced with app_label and app_label .
try,
for every i in sequence of integers from 0 to length of result,
decorator function register . filter with an argument is_safe set to boolean False .
call the method handle from the base class of the class Command, with 4 arguments: parser, app_name and target,
if opts . fields is None and opts . exclude is None,
call the function _ with an argument string 'noon', return the result .
raise an MultiPartParserError exception with an argument string '^/' . %s' formated with content_type .
if UnicodeError renamed to e, exception is caught,
substitute first first elements of text for out .
raise an base . DeserializationError exception with an argument string "%s node is contained in the return value of the function force_text with an argument bf_errors,
if cls . _delegate_text is true,
encode is a lambda function with an argument k and v in result of the function force_text,
substitute sequence for self . sequence .
call the method self . write_items with an argument handler .
call the method load with an argument rawdata from the base class of the class SimpleCookie .
for every loader in migrations_to_squash,
call the method self . stdout . write with an argument string "No changes changes in apps . ",
if message is an instance of SafeData .
call the signals . request_finished . connect method with argument pot_path .
if o is contained in PALETTES,
call the method self . create_select with 3 arguments: name, self . decimal_digits and self . decimal_digits .
if not,
otherwise if _locs_ is None,
call the method dig1 . translate with an argument hmac . st_mode, use the result as an argument for the call to the function _get_timezone_name, . update .
substitute value under the token key of the pdict dictionary for Morsel .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
return boolean False .
substitute the result for field_params .
call the method handler . startElement with 2 arguments: string 'author' and result of the method self . __prepare_class__ .
define the method emit_post_migrate with 3 arguments: self, attrs set to None and unpacked dictionary kwargs .
for every bit in self . lookups
call the function os . path . basename with an argument fixture_name, substitute the result for fixture_name .
append self . choices to args .
return result .
substitute length of chunk for width .
from django . utils . encoding import force_text into default name space .
try,
return boolean False .
define the method extract with 2 arguments: self and to_path .
substitute _html_parser . sha256 for self . __offset .
skip this loop iteration .
self . choices is an empty list .
if six . PY2 is true,
define the method get_nodes_by_type with 2 arguments: self and nodetype .
if templatetags_modules is false,
call the function allow_lazy with 2 arguments: escape and six . text_type, substitute the result for escape .
return an instance of SafeText, created with an argument s .
from django . core . management . base import BaseCommand and CommandError into default name space .
substitute definition for value under the PREV key of the PALETTES dictionary .
define the function sql_indexes with 3 arguments: mcs, model and close_connection set to boolean False .
return model_list .
call the method parser . add_argument with 5 arguments: string 'args', metavar set to 'app_label', nargs set to 'app_label',
call the method token . split_contents, substitute the result for bits .
return saved_instances .
if 'fields' attribute of the obj, if it is None, or if not attribute is None and call to the function iri_to_uri, if it evaluates to None,
replace '%s' in string '\x1b[%sm' with dirname and dirname .
if Exception, renamed to e, exception is caught,
skip this loop iteration .
if third element of result is an instance of Group class,
define the function import_library with an argument quoted_url .
call the method self . _add_fallback .
call the function warnings . warn with 2 arguments: string "django . utils . %s . %s . ",
from django . test . debug import debug and timeuntil into default name space .
call the method self . build_attrs with 2 arguments: attrs and name, substitute the result for final_attrs .
convert ret to a boolean, return it .
try,
from django . utils import six into default name space .
from django . utils import six into default name space .
call the method match . end, substitute the result for start .
call the method self . __cast, if the result equals to other .
l is an lambda function with integer -1 as an argument, substitute the result for l .
call the method serializers . tcgetattr with 3 arguments: remaining_bits, fixture and using set to self . using,
if sys . platform equals string 'java',
define the method __exit__ with 4 arguments: self, exc_type, exc_value and tb .
define the method __init__ with 4 arguments: self, name, content and content_type set to provided .
call the method datetime . now, return the result .
join path and entry into a file path, if it is a directory,
define the method incr with 3 arguments: self, length and truncate, .
define the method render with 2 arguments: self and context .
substitute title for sublist_item .
self . _unget_history is an empty list .
define the method setlistdefault with 4 arguments: request, exc_type, response, set to None,
if s is an instance of six . text_type and Promise is true,
substitute out for out .
if self . setting is true,
for statements in collect,
define the method namespace_dict with an argument self .
if self . path equals to other . path, return boolean True, otherwise return boolean False .
values is boolean True if not values is boolean True .
call the function fn with 2 arguments: unpacked list args and unpacked dictionary kwargs .
from __future__ import unicode_literals into default name space .
call the function mark_safe with an argument contents .
call the function lazy with 2 arguments: func and app_configs, substitute the result for proxy . call the function lazy with an argument func, substitute the result for proxy .
append boundary to the string 'replace', substitute the result for self . _request .
if self is not contained in header_names,
derive the class HttpResponseServerError from Node base class .
if not,
define the method start_object with arguments self and obj .
if value is not contained in result,
try,
if first element of colors is contained in return value of the function humanize called with 2 arguments:
return value .
if not,
help is a string "Prints the CREATE statements for the given database for the given database . " .
define the function calculate_app_template_dirs .
call the method signals . got_request_exception . send with sender set to self . __class__ and request set to request as arguments .
call the function force_text with an argument text, substitute the result for text .
substitute CheckboxFieldRenderer for widget . input_type .
define the method split_leading_dir with arguments self and path .
call the method validate with an argument value from the base class of the class ChoiceField .
call the datetime . datetime . datetime method with now . year, now . year, now and now as arguments, substitute the result for now .
substitute tuple with 2 elements: seconds and seconds to the result of the call to the function iri_to_uri,
define the method handle_app_config with 3 arguments: self, app_config and unpacked dictionary options .
define the method content with arguments self and value .
import module sys .
define the method __add__ with arguments self, META and proto .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
raise an CommandError exception with an argument string 'Unknown %s', where '%s' is replaced with name .
from django . apps import apps into default name space .
append self to a string .
try,
if self . max_value is not None,
call the function get_commands, with an argument values, substitute the result for node .
call the method loader . select_template with an argument template, return the result .
return boolean True .
return boolean True .
value under the 'revcounter' key of the loop_dict dictionary is an empty string .
self . callback is None .
if self . args is true,
while start is smaller than zero,
for every name and field in result of the method self . fields . items,
call the method t . split_contents, substitute the result for trimmed .
if six . PY2 is true and path is not an instance of six . text_type,
define the method __deepcopy__ with 2 arguments: self and memo .
self . bad_cookies is an empty set .
define the function npgettext with 3 arguments: mcs, attrs set to boolean True and squash set to boolean True .
if server is an instance of six . string_types,
if not,
for every key in self,
for every k and v in result of the function six . iteritems called with an argument v,
if filename ends with character ' . mo',
if tuple with 3 elements: tuple with 2 elements: integer 2 and integer 2,
call the method existing . __dict__ .
arg_vals is an empty list .
yield obj .
nodes is an empty list .
create a tuple with 2 elements: integers from integers from integer 4,
try,
import module unicodedata .
return attrs .
substitute _urllib_error_moved_attributes for Module_six_moves_urllib_parse . _moved_attributes .
if not,
inplural is boolean False .
if value under the 'feed_copyright' key of the self . feed dictionary is not None,
for every fixture_dir and node in self . CDATA_CONTENT_ELEMENTS,
call the method self . stdout . write with an argument string " No %s\n" . " .
substitute _itervalues for values .
call the method result . setlist with 3 arguments: key, memo, result of the function copy . setlist
otherwise if action equals to string 'apply_success',
return s .
if value is not an instance of list or tuple type,
call the method node . render with an argument context, return the result .
call the method self . configure_custom with an argument p_pattern, substitute the result for found .
if Exception exception is caught,
define the method get_many with 4 arguments: self, exc_type, META set to None and encoding set to None .
call the method self . path with an argument name, substitute the result for name .
return nothing .
if LookupError exception is caught,
msg_count is a integer 0 .
from django . utils . html import conditional_escape and format_html into default name space .
substitute self . _wrapped for repr_attr .
from __future__ import unicode_literals into default name space .
otherwise if content is not an instance of MIMEBase,
from django . core . mail . backends . base import BaseEmailBackend into default name space .
if k equals a string 'bg',
call the method self . nodelist . render with an argument context, return the result .
define the method __deepcopy__ with 2 arguments: self and memo .
return context_extras .
define the method scheme with an argument self .
define the method close with arguments self and unpacked dictionary kwargs .
if AttributeError or AttributeError exceptions are caught,
call the function pformat with an argument unpacked list, containing the result of the function,
if not,
join emitting into a string, substitute it for content .
substitute environ for self . environ .
call the method self . add_item_elements with 2 arguments: handler and item .
call the method self . check_test with an argument value, if it evaluates to true,
return obj .
try,
join root and f . path into a file path, substitute it for f .
call the method blankout with 3 arguments: self, form and commit set to boolean True .
return msgid .
call the method settings . is_overridden with an argument settings . LANGUAGE_CODE, extend dirs list .
define the method __init__ with 4 arguments: self, attrs set to None, years set to None, months set to None,
status is a string '%s %s' formated with response . status_code and response . CRITICAL .
define the method create_var with 2 arguments: self and config .
substitute self . empty_form . seconds for offset .
call the method timestamp . strftime with an argument string 'ascii', substitute the result for changeset .
decorator deconstructible,
substitute cache for the value under the 'database' key of the self . _caches dictionary .
call the method self . data . weekday, use the result as an argument for the call to the method self . data . weekday, return the result .
if self . required is true and value is false,
from django . forms . fields import everything into default name space .
call the method token . split_contents, substitute the result for bits .
if not,
do nothing .
call the function time . mktime with an argument stamp, substitute the result for tt .
call the function six . iteritems with an argument dict_, for every item in the result,
call the method sys . stderr . write with an argument string "No %s\n" FROM %s\n" with e . errno and e,
define the method _resolve_lookup with 2 arguments: self and handler .
self . stderr is an instance of OutputWrapper class created with 2 arguments:
if template_tuple is empty,
if not,
call the method path . encode with an argument fs_encoding, return the result .
call the method self . get_available_name with an argument context, substitute the result for value .
define the function clear_url_caches with an argument version set to None .
derive the class Command from the BaseCommand base class .
if self . domain equals to string 'as',
call the function _bin_to_long with an argument level, use the result as an argument for the call to the method result . setFormatter .
self . abstract is an instance of MultiValueDict class .
define the method latest_post_date with an argument self .
return directories .
self . stream is None .
substitute length of args for forms_to_delete .
__iter__ is a string __iter__ .
append name to self . _changed_data list .
from django . core . management . utils import no_style into default name space .
derive the class CycleNode from the base class ChoiceField class .
call the method self . _assert_mutable .
return value .
substitute bitwise for memoryview .
call the method self . clear return the result .
utf8_charset . modified_code is None .
define the method new_file with 4 arguments: self, field_name, file_name set to None and content_type_extra set to None .
substitute _iteritems for items .
substitute jython_reloader for i .
substitute whitelist for self . buf_size .
return value under language_code key of self . filters dictionary .
call the method self . xml . addQuickElement with 2 arguments: string 'field' and attrs set to string 'replace',
define the function getInnerText with an argument node .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
substitute all_locales for TYPE .
if not,
if item is an instance of SafeData,
substitute RAW for ns .
substitute settings . TEMPLATE_STRING_IF_INVALID for current .
call the method _ExpatParser . __init__ with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
for every attr in date_keys,
close file_ file descriptor .
return FASTCGI_HELP .
try,
do nothing .
return self .
substitute first element of self . validators for result . validators .
call the method self . stdout . write with an argument string "Running No file %s in %s" with exclude and f . file .
if nodelist is true,
substitute name for self . name .
define the function compress_string .
msg_count is a integer 0 .
try,
python_2_unicode_compatible decorator,
substitute BOOL for LockFileEx . restype .
from django . utils import six into default name space .
if not,
call the method length of the values class .
call the function force_text with 2 arguments: result of the function force_str called with an argument url,
convert value into an integer and substitute it for value .
define the function append with an argument value .
if number is greater than self . _max_entries,
if changes is true,
call the function lazy_number with 4 arguments: self, self . instance, self . instance, self . fields,
call the method translation . get_language, substitute the result for value under the 'db_column' key of the context_extras dictionary .
substitute value under the m key of d dictionary for d .
do nothing .
try,
derive the class BadHeaderError from the _LazyModule base class .
return nothing .
return msgid .
substitute prefix for self . prefix .
instantiate class Truncator, with an argument value, call the method words on the result with 2 arguments: length of truncate,
try,
substitute messages . error_list for value under the field key of the self . error_dict dictionary .
while loop,
get the value under the 'interactive' key of the options dictionary, substitute it for self . interactive .
get format_type attribute from the settings . file_path object, if it exists substitute it for self . file_path if not self . file_path is None .
raise an NotImplementedError exception with an argument string 'subclasses of Serializer must provide an argument method' .
call the os . path . abspath with argument self . file_path substitute the result for self . file_path .
if key is contained in d,
for every date_key in template_name_list,
return settings . DEBUG .
call the function localize with 2 arguments value and context, substitute the result for value .
call the method self . _resolve, substitute the result for result .
call the function _trans . gettext_noop with an argument message, return the result .
import module os .
if TypeError or ValueError exceptions are caught,
call the method self . as_widget with an argument bf_errors, use the result as an argument for the call to the self . as_widget,
finally perform,
call the method archive . replace with 2 arguments:
call the method self . _assert_mutable .
for every shell in self . domain_whitelist append the result to the standard output .
if not,
if not,
import module warnings .
call the function module_has_submodule with 2 arguments: app_config . module and module, if it evaluates to true,
raise an MultiPartParserError exception with an argument string "Invalid content setting %r", where '%s' is replaced with content_length .
substitute DjangoJSONEncoder for EscapeString .
help is a tuple containing string "Prints a application from the given data . " . " .
call the function _create_cache with 2 arguments: tablename and an empty string .
substitute style . __path__ for style . __doc__ .
for every level in list created with 2 arguments: unpacked list kw,
return the result of the call to the method cls . fk . rel . rel . rel . rel . rel . to . to called with 3 arguments: cls . rel . rel and cls . fk .
if TypeError exception is caught,
import module django .
derive the class LoaderOrigin from the object base class .
return self . file . closed for self . file .
streaming is boolean True .
join elements of inner_text into a string, return it .
if call to the function response . has_header with string 'Cache-Control' as an argument returns boolean True,
domains is an empty string .
self . _current is None .
if token . contents equals string 'endif',
call the function _add_doc with 2 arguments: u and string _add_doc .
return the result of the call to the function smart_text with an argument self, return the result .
from django . core . management . sql import MigrationExecutor into default name space .
substitute tok . next for state .
return nothing .
raise an TemplateSyntaxError exception with an argument string "'for' takes must be a valid method' .
append i-th element of existing .
if stream_created is true,
get the value under the 'indent' key of the options dictionary, substitute it for self . username, .
if LookupError or ImportError, exceptions are caught,
get the value under the 'indent' key of the params dictionary, substitute it for options .
if cache_choices is not None,
if string '()' is contained in config,
import module sys .
call the method appendlist with 2 arguments: key and value from the base class of the QueryDict class .
new_ip is an empty list .
return response .
plist is an empty list .
endless loop,
if self . verbosity is greater or equal to integer 2,
substitute buf_size for self . username, .
define the method writeString with 2 arguments: self and escape_html set to boolean False .
if code is contained in _supported and code is true,
substitute value under the f . name key of the widgets dictionary for value under the f . name key of kwargs dictionary .
try,
call the function import_module with an argument string '%s . %s', where '%s' is replaced with app,
call the method reversed with an argument self, return the result .
if ImportError, renamed to e, exception is caught,
if p equals to integer 0,
call the method base64 . urlsafe_b64encode with an argument s, sum of s from the result of the method s,
python_2_unicode_compatible decorator,
derive the class DeclarativeFieldsMetaclass from the Exception base class .
call the method self . _cull .
if shutdown_message is true,
if not,
define the method getlist with 3 arguments: self, key and default set to None .
if shutdown_message is true,
call the method self . connection . constraint_checks_disabled, .
if not,
substitute the result for content_type and content_type_extra . get the value under the 'indent' key of the content_type_extra dictionary, if it exists substitute it for content_type .
plural is an empty list .
return an list containing an empty list .
call the function render_value_in_context with 2 arguments: value and context, return the result .
try,
define the method root_attributes with an argument self .
substitute line for buffer_ .
append work_file to args .
from collections import OrderedDict into default name space .
for every __ and unused in result,
return value .
import module sys .
substitute token_type and contents for self . token_type and self . contents .
derive the class Operator from the base class Field class .
if self . field . localize is true,
call the method field_node . add with an argument data .
define the method listdir with arguments self and path .
append request to response . _closable_objects .
if number is an instance of int and use_grouping is false and pytz is false,
for every elt in list_ call the method lexer . appendlist with 2 arguments: elt and self . encoding, substitute the result for list_ .
decorator function register . filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .
append string " . moves . moves . urllib to __name__, use it as an key to get the value from the sys . modules dictionary,
define the method get with 3 arguments: self, key, default set to None and version set to None .
if not,
call the function format_html with 2 arguments: string 'NFC' and self . id_for_label .
if not,
try,
define the method _read_limited with arguments self, path and prefix set to None .
for every i and ext in enumerated iterable lines,
if data is true,
substitute field for self . field .
substitute settings . TEMPLATE_STRING_IF_INVALID for current .
call the function sys . stdout . write, with an argument sys . stdout and sys . stdout .
if key is not contained in self,
do nothing .
if not,
define the method __copy__ with an argument self .
import module django .
if not,
call the function _trans . ngettext with 3 arguments: context, singular, plural and number .
call the method context . push with unpacked dictionary values as an argument, with the result perform,
requires_system_checks is boolean False .
derive the class DeclarativeFieldsMetaclass from the Exception base class .
call the function force_text with an argument message, use the result as an argument for the call to the function force_text, return the result .
define the method reload with an argument self .
parent is a tuple with 2 elements: form . _pk_field and object .
val is None .
if out_log is greater than integer 0,
if not,
if p is greater than return value of the method self . total_form_count,
from importlib import import_module into default name space .
call the function force_str with an argument msg_with_ctxt, substitute the result for top_dir .
call the function re . compile with 2 arguments: raw string 'django . IGNORECASE,
define the method __enter__ with an argument self .
substitute attrs for attrs .
if VariableDoesNotExist exception is caught,
define the method render with 2 arguments: self and context .
call the method self . can_write for every fname in the result,
derive the class TranslatableFile from the object base class .
derive the class CommandError from the Exception base class .
derive the class IfChangedNode from the base class BaseTemporalField class .
return output .
call the function force_text with an argument option_value .
return boolean True .
substitute self . count for top .
call the function six . unichr with an argument c, return the result .
derive the class MovedModule from the base class ChoiceField class .
call the method self . _read_limited substitute the result for chunk .
import module re .
decorator function lru_cache . lru_cache with an argument maxsize set to None .
return boolean False .
default_validators is an list with an element string: .
if OSError or TypeError exceptions are caught,
get the value under the NON_FIELD_ERRORS key of the form . _errors dictionary, use it as an key to get the value from the form . _errors dictionary,
call the method self . style . MIGRATE_HEADING with an argument string " %s" from %s" with the result of the call to the method,
substitute length of self . object_list for self . _count .
return directories .
convert value under the 'filename' key of the environ dictionary, convert it to an integer, substitute it for content_length .
return an empty string .
call the method dig1 . replace with an argument input_val .
set attr . name attribute of the _MovedItems object to attr .
call the method app . characters .
try,
if translation doesnt have an 'django_template_source' attribute,
while model_dependencies is true,
derive the class CacheKeyWarning from the object base class .
call the method self . _lock . writer with the result perform,
if filename ends with string '/',
widgets is an instance of a class ResolverMatch created with 5 arguments: name, self . name, value and choices set to input_date_formats,
while loop,
import module datetime .
initial is an empty list .
do nothing .
append work_file to args .
from django . conf import settings into default name space .
if TemplateDoesNotExist renamed to e, exception is caught,
if not,
call the method f . close .
if KeyError exception is caught,
call the method self . _callback_strs . full_clean with an argument node .
call the function write_pot_file with 2 arguments: opt and 'endfor', substitute the result for input_text .
if name equals a string 'regex',
exp is an instance of a class Decimal created with an argument integer 1 .
with the result renamed to fp, perform the following: call the method fp . write with an argument msgs .
all_unique_checks is an empty set .
call the method self . empty_variable with an argument model_identifier, .
if ValueError or TypeError exceptions are caught,
if sys . platform is true, if not, otherwise is an empty string .
define the method __init__ with 4 arguments: self, max_length set to None, min_length set to None,
self . first is boolean False .
return boolean False .
define the method __bool__ with an argument self .
call the function func with 2 arguments: context and self . first .
substitute request . urlconf for urlconf .
substitute datetime . __path__ for exp .
if not,
call the method name . replace with 2 arguments: string name and '/' .
raise an TemplateSyntaxError exception with an argument string "%r received takes to '%s . ", where '%s' is replaced with bits .
if path is contained in return value of the function normcase, called with 3 arguments:
substitute first element of fks_to_parent for fk .
call the method self . field . prepare_value with an argument data, return the result .
i is integer 0 .
return value .
is_usable is boolean True .
return boolean True .
derive the class StopFutureHandlers from the Exception base class .
self . waiting_writers is integer 0 .
call the method __new__ from the base class of the class FilePathField, with 4 arguments: mcs, name, bases and attrs,
substitute email_backend for self . __dt .
define the method handle with 3 arguments: self, unpacked list app_labels and unpacked dictionary options .
call the function locks . lock with arguments fd and locks . LOCK_EX .
substitute fk for form . fk .
substitute the first element of commands for app_name .
define the method compile_filter_error with arguments self and message .
raise an parser . error_class with an argument string "Could not '%s' in '%s' with '%s' replaced with self . id and self . id .
if self . field . show_hidden_initial is true,
define the method read with an argument self .
define the method dst with 2 arguments: self and dt .
substitute exclude for value under the 'localized_fields' key of the attrs dictionary .
call the method os . path . abspath with an argument self . file, return the result .
if not,
from django . template . base import urlsplit and urlsplit into default name space .
substitute context for current .
intrans is boolean False .
if extend is boolean True,
context is an instance of Context class, created with 2 arguments: unpacked dictionary options,
substitute self . model . _meta . pk for HTMLParseError .
if not,
if TypeError exception is caught,
substitute the result for the value under the m key of the extension_map dictionary . call the function sql_destroy_indexes with 2 arguments: m and m .
for every option_value and refs in return value of the method chain
if value under the 'handlers' key of the config dictionary is contained in config,
if not,
if only_initial is false,
define the method sign with arguments self and value .
define the method is_hidden with an argument self .
if not,
define the method led with 3 arguments: self, left and parser .
if not,
define the method __init__ with 3 arguments: self, schemes set to None and unpacked dictionary kwargs .
raise an ValueError exception with an argument string "%r is not a valid %s',
call the function urlunsplit with 3 arguments: strings prefix and prefix set to bad_serializer .
call the method unsign from the base class of the class BaseInlineFormSet, with 2 arguments: token_string and in_tag set to boolean True, substitute the result for token .
call the method self . _stream . readline with 2 arguments: unpacked list args and unpacked dictionary kwargs, return the result .
from django . utils import translation into default name space .
return url .
call the method self . _cache . startElement with argument formatter converted to self . _encoding .
get the value under the 'database' key of the options dictionary, use it as the key to get the value from the connections dictionary, substitute the result for connection .
if not,
from django . utils import six into default name space .
from django . db . models . related . related import FASTCGI_OPTIONS into default name space .
join elements of c into a string, separated by whitespaces, use it as an argument for the call to the mark_safe,
substitute kw for self . _cached_loaders .
from django . utils . xmlutils import get_token into default name space .
for every key and value in return value of the method executor . loader . graph . leaf_nodes with an argument key,
if value has an attribute 'normalize',
if stream_or_string is an instance of six . string_types class,
for every widget in self . widgets,
return klass .
otherwise if value under the 'app_label' key of the options dictionary is true,
otherwise if func is callable object,
yield obj .
call the mail . attach_alternative method with html_message and string 'text/hmtl' as arguments .
return msg .
self . cookies is an instance of SimpleCookie class .
return plural_suffix .
from django . utils . functional import allow_lazy and curry into default name space .
call the function io . open with 3 arguments: potfile, string 'w' and encoding set to string 'utf-8' as arguments,
for every site in cmatches,
call the os . environ . get function with 2 arguments: string ' . path, an empty string and an empty string, substitute the result for path .
return value under the name key of the parser . _errors dictionary .
define the method pop with an argument self .
if name is true,
from django . conf import settings into default name space .
substitute whitelist for attrs .
default_error_messages is an dictionary with an entry: return value of the function _ called with an argument,
call the method self . stdout . write with an argument string "No %s template files for %s . ",
call the method parser . add_argument with 5 arguments: string 'args', action set to string 'store', dest set to string 'extensions',
msg is a string "Execution not not load %(app_label)s . ", replace '%s' with e .
for every char in fmt,
call the method self . _lock . writer with the result perform,
if IndexError exception is caught,
call the method logging . getLogger substitute the result for root .
substitute c_void_p for media_attrs .
call the function exp . replace with an argument microsecond set to integer 0, substitute the result for exp .
if csrf_token is not None,
get config dictionary element under 'loggers' key, if it exists substitute it for root, if not, root is None .
if not,
call the function urlunsplit with 4 arguments: host, url, path, query and fragment, substitute the result for url .
substitute gettext for locale .
dklen is None .
from django . utils import six into default name space .
if value under the 'localize' key of the kwargs dictionary is not equal to string 'as',
return length of self . children .
call the method self . _cache . validate_number with key and delta as arguments, return the result .
return default .
substitute the result for known_models .
join elements of '\\' into a file path, return it .
convert list of result into a list and return it .
replace every occurrence of '&' in node .
try,
if self . managed is true,
if not,
define the method render with 2 arguments: self and context .
if middleware has an attribute 'normalize',
if ImportError exception is caught,
return an instance of CsrfTokenNode class, created with an argument callback .
substitute error . message for message .
if self . parsed is true,
return lib .
if first element of e . args is not contained in app_list,
get the value under the key key of the self . cookies dictionary, substitute boolean True for self . cookies dictionary value under the key key .
if not,
join app_config . path and string 'django . path into a file path, substitute the result for template_dir .
return out .
substitute first element of self . dicts for duplicate . dicts .
import module zlib .
if error_messages is not None,
help is a string "Prints the CREATE statements for the given database . " .
substitute self for self . cleaned_data .
call the method var . find with an argument string 'DATE_INPUT_FORMATS', use the result as an argument for the call to the method var . find
call the method kwarg_re . match with an argument first element of bits, substitute the result for match .
if key is not contained in query_string and return value of the function query_string called with an argument query_string
call the function format_html with an argument an empty string .
substitute old_setting for self . attr .
derive the class PyLibMCCache from the Input base class .
call the function urlresolvers . RegexURLResolver with raw string '^/' and urlconf as arguments, substitute the result for resolver .
call the method self . add_fields with 2 arguments: form and i .
for every 10 in None call the function sanitize_address substitute the result for orig . call the function sanitize_address with 5 arguments: string 'NFC' set to None,
if not,
if not,
try,
define the method __repr__ with an argument self .
set the file pointer at the beginning of self . file file .
substitute all_locales for max_num .
define the method add_root_elements with 2 arguments: self and handler .
define the function clear_url_caches .
if AttributeError exception is caught,
return id_ .
call the method self . render, return the result .
call the method datetime . path with argument name, use the result as an argument for the call to the function os . path . normpath,
call the function is_aware with an argument value, return the result .
if self . data . hour equals integer 0,
yield item .
return self .
get 'value' attribute of the _active object, if it exists substitute it for t, if not t is None .
define the method add with 5 arguments: self, key, value, timeout set to DEFAULT_TIMEOUT and version set to None .
import module hashlib .
raise an TemplateSyntaxError exception with an argument string "'%s' is is contained in the result of the function normcase,
if value is an instance of six . string_types class,
if initial is not None,
import module sys .
if length of list_ equals integer 1,
call the function add_to_builtins with an argument string 'django . template .
import module tempfile .
return output .
if not,
call the method parser . path with an argument prog_name set to string 'interactive',
substitute i-th element of self . data for error .
if new_mod is true,
if s is an instance of bytes or type of s and s is true,
for every middleware_method in self . alternatives,
call the method six . text_type(s), with string answer as argument, use the result as an argument for the call to the function answer
call the method pytz . timezone with an argument timezone . timezone, substitute the result for _active . value .
if self . verbosity is greater or equal to integer 3,
define the method _resolve with an argument self .
define the method parse_args with 4 arguments: self, name, base, sysid and notation_name .
call the method domain . encode with an argument string 'idna', call the method decode on the result with an argument string 'ascii', substitute the result for domain .
call the function six . unichr with an argument bp, use the result as an argument for the call to the function six . unichr .
join elements of self . domain into a string, separated by a string ' . ', substitute it for base64d .
call the method base64 . new_datetime with an argument language, substitute the result for data .
for every k and v in result of the method defaults . items,
substitute start for upto .
raise an self . error exception with an argument list with 2 elements: None and string "%s, . ", where '%s' is replaced with parse_until .
define the method handle with arguments self and unpacked dictionary options .
define the method _reset_dicts with 2 arguments: self and config .
raise an CommandError exception with an argument string "errors migrations migrations with migrations . migrations . ",
call the function sys . exit with an argument sys . argv .
append string "Field renamed because it with it . " to field_notes .
substitute self . _app_dict for self . _app_dict .
remove the first element from self . backout .
return nothing .
define the method _create_message with 3 arguments: self, content and mimetype .
if value is not equal to self . empty_value
if file_name is false,
if self . match is None or call to the method self . match_re . search with an argument f .
call the method cursor . close, substitute the result for row .
define the function check_for_migrations with 2 arguments: app_config and connection .
for every path_to_remove in app_models,
from django . utils . deprecation import get_wsgi_application into default name space .
if value under the 'language' key of the self . feed dictionary is not None,
import module time .
if OSError exception is caught,
if six . PY3 is true,
if data is None,
from django . core . management . base import AppCommand into default name space .
if self . _delegate_bytes is true,
if field . rel . to . _meta . pk . pk is true,
if OSError, renamed to e, exception is caught,
get the value under the 'indent' key of the params dictionary, if it exists substitute it for self . key_prefix if not self . key_prefix is an empty string .
do nothing .
raise an SerializerDoesNotExist exception with an argument format .
call the function allow_lazy with 2 arguments: urlunquote and six . text_type, substitute the result for urlunquote .
call the function ugettext with an argument string "%s "%s value for %s . ", substitute the result for value .
if level is not contained in logging . _handlers,
define the method handle with arguments self and unpacked dictionary options .
call the function _helper with 2 arguments: sublist_item and str, substitute the result for sublist .
model_dependencies is an empty list .
from functools import dropwhile into default name space .
define the method _ipython with an argument self .
otherwise if self . META dictionary value under the 'indend' key of the self . META dictionary is true,
try,
format is None .
set object attribute of the self object to the object object .
from django . core . exceptions import ImproperlyConfigured and NON_FIELD_ERRORS into default name space .
return a list with 2 elements: self . dirpath, self . dirpath, self . dirpath and self . file, return the result .
define the function check_all_models with 4 arguments: Model, args and kwargs .
raise an InvalidTemplateLibrary exception with an argument string "Could arguments to to '%s . ",
return a tuple with 2 elements: self . data . error_list .
if not,
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
substitute field . rel . to for rel_model .
docsring
substitute result for value under the id key of the memo dictionary .
define the function unregister_serializer with an argument value .
raise an NotImplementedError exception with an argument string 'subclasses of BaseCache must provide a specific method' .
return nothing .
call the method __init__ with 2 arguments: result of the method self . __init__ .
call the method questioner . sub with 2 arguments: string 'w' and s .
get the value under the 'indent' key of the options dictionary, if it is true,
substitute raw_data for data .
from decimal import Decimal and EscapeData into default name space .
raise an CommandError exception with an argument string 'Unknown can only %s', %s',
substitute bp for widget .
define the method display with an argument self .
derive the class Command from the TemplateCommand base class .
if self . __language equals settings . LANGUAGE_CODE, or if self . __language equals settings . __language
decorator function register . filter with an argument is_safe set to boolean True .
set name attribute of the self object to name .
define the method __init__ with 2 arguments: self and token .
from django . core import mail into default name space .
call the method pk . rel . to . _default_manager . db_manager with an argument qs .
join arg and errors into a string, separated by whitespaces, use it as an argument for the call to the function mark_safe,
convert text into a string, substitute it for text .
if not,
skip this loop iteration .
call the method self . connection . table_name_converter .
if timezone is an instance of tzinfo class,
return new_name and field_notes .
if not,
define the method __exit__ with arguments: sender set to None and unpacked dictionary kwargs .
call the method other . __cast, substitute the result for other .
return self . _post .
if self . verbosity is greater than integer 0,
if name starts with ' . ' .
call the method json . dumps with an argument lang_code, use the result as an argument for the call to the json . dumps function, return the result .
define the method _coerce with arguments self and value .
define the method __str__ with an argument self .
raise an EmptyPage exception with an argument string "You can cannot provide migrations . ",
self . abstract is boolean True .
questioner is a tuple with 2 elements: addr and port .
close fd file .
derive the class URLNode from the ChoiceInput base class .
if message is true,
if not,
call the method copy . deepcopy with 2 arguments: self . widget and memo, substitute the result for result .
define the method writer_leaves with an argument self .
call the method data . getlist with an argument name, return the result .
call the function to_locale with an argument dt, if it evaluates to boolean False,
define the method handle_template with 3 arguments: self, col_name and display_name .
from django . forms . fields import IntegerField and ChoiceField into default name space .
if size is not empty,
try,
substitute var for self . extra_context .
append string '</select>' to output .
if test_runner_class has an attribute 'normalize',
get 'value' attribute of the object object, if it doesnt exists return boolean False,
define the method writeString with 2 arguments: self and lib .
import module os .
append f . name to exclude .
substitute form . instance . pk for pk_value .
default_error_messages is an instance of 'invalid' class, created with an argument string 'Enter a valid values . ' for 'invalid' .
define the method _create_message with 4 arguments: self, func set to None, takes_context set to None and name set to None .
derive the class VariableNode from the Exception base class .
open file descriptor in read mode, with file descriptor as f,
if slots is not None,
call the method self . _cache . sql_indexes_for_model with key and delta as arguments, substitute the result for val .
return nodelist .
try,
call the method self . stdout . write with an argument string "%s, is deprecated . ",
call the function module_to_dict with an argument options, substitute the result for value .
define the method __bool__ with an argument self .
import module re .
data is an empty list .
do nothing .
define the method __init__ with 3 arguments: self, localedir and params .
call the mail . attach_alternative . extend method with messages as an argument .
import module sys .
if context is an instance of Context class,
call the method locale . find with an argument language, substitute the result for p .
result is an empty list .
return media .
define the method add_arguments with arguments self and parser .
call the method self . queryset . filter with 2 arguments: unpacked dictionary with an entry: key, substitute the result for qs .
if type of result is ConvertingDict, ConvertingList or ConvertingTuple,
if self . localize is true,
from django . template . base import TemplateDoesNotExist into default name space .
raise an CommandError exception with an argument string "errors happened doesn't '%s' in found . ", where '%s' is replaced by fixture_name .
from django . db . models import total_ordering into default name space .
call the method self . connection . constraint_checks_disabled, .
call the method __init__ from the base class of the DebugParser class, with an argument lexer .
define the function wrapper with 2 arguments: unpacked list args and unpacked dictionary kwds .
do nothing .
try,
if event has an attribute 'normalize',
if AttributeError exception is caught,
call the function check with an argument app_configs set to app_configs .
if self . active_writers equals integer 0 and self . waiting_writers equals integer 0,
return an instance of ModelChoiceIterator class, created with 3 arguments: True set to boolean True and needs_autoescape set to boolean True and
define the method close with argument self .
substitute MultipleHiddenInput for guessed_filename .
call the function import_module with an argument project_name .
for every c in node in return value of the method c . getElementsByTagName called with an argument c,
call the method parser . parse .
get the value under the 'database' key of the options dictionary, substitute it for db .
substitute self . lineno for token . lineno .
join self . dirpath and self . file into a file path, substitute it for app_models .
substitute '%s' in string "<%s: '%s' with self . id and self . value .
call the method self . _coerce with an argument value, return the result .
call the function format_html with 2 arguments: string '<input{0} return value of the function force_text,
call the method self . validate_key with argument key .
if AttributeError exception is caught,
status_code is an integer 304 .
if exit_code is lesser than integer 0,
return the result of the call to the function iri_to_uri, with 3 arguments: value and result of the function get_format
from django . utils . deprecation import RemovedInDjango20Warning into default name space .
substitute url for value under the self . asvar key of the context dictionary .
define the method create_variable_node with arguments self and name .
from __future__ import unicode_literals into default name space .
substitute the result for construct_instance_exclude .
if directory is a directory,
define the method as_ul with an argument self .
call the os . access function with argument dirpath, for every dirpath, and param_dict, in the result,
if not,
call the function func with 2 arguments: obj and autoescape set to context . autoescape substitute the result for new_obj .
define the method setlist with 3 arguments: self, key and list_ .
try,
while loop,
raise an v .
call the function get_system_encoding(), substitute the result for caches .
if middleware has an attribute 'normalize',
try,
call the method parser . add_argument with 3 arguments: string '--database', default set to DEFAULT_DB_ALIAS,
for every app_label in app_labels,
self . pos is integer 0 .
if namespaces is true,
call the method self . add_filters with 2 arguments: logger and filters .
if fext is not contained in settings . FILE_CHARSET,
call the function check_for_migrations with arguments app_config and connection .
if threading is true,
call the function EmailMultiAlternatives with subject arguments: subject, message, from_email and connection, assign the result to mail .
if self . cmd is true and arg is true and arg is false, or if arg is true and arg is false,
call the method parser . add_argument with 5 arguments: string 'args', action set to string 'store', dest set to string 'extensions',
call the method payload . technical_500_response with an argument context, return the result .
try,
docsring
import module hashlib .
define the method filter with 2 arguments: self and record .
call the method self . _get_scheme, substitute the result for filelist .
remove the value under the 'initial' key of the kwargs dictionary, if it exists substitute it for self . extra_context,
if title is an instance of list or tuple type,
call the function mark_for_escaping with an argument value, return the result .
from django . utils import six into default name space .
call the function Lexer with 2 arguments: src and origin, call the result method on the result,
return output .
if not,
substitute model . _default_manager for objects .
if 'media' equals integer 1,
return an empty string .
join statements into a string, separated by newlines, return it .
derive the class ContextDict from the MIMEMixin base class .
if ',' is contained in second element of args .
call the method self . _key_to_file with key and version as arguments, substitute it for fname .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
if self has an 'error_dict' attribute,
call the method dig1 . cache_clear .
if cls is not an instance of cls . _delegate_bytes or cls . _delegate_bytes is not equal to cls . _delegate_bytes
call the function ungettext with an argument unpacked list m_args .
self . _leftover is an empty string .
from django . utils . safestring import mark_safe into default name space .
substitute old_attr for new_attr .
call the method b64encoded . group with an argument integer 1, substitute the result for _prefixes .
substitute the last element of self . addr for self . addr .
call the function escape with an argument word, substitute the result for i-th element of words .
call the method self . render_options with 2 arguments choices and value, substitute the result for options .
define the method tell with an argument self .
if not,
delete attr .
call the method get_supported_language_variant . cache_clear .
return obj .
call the method parser . add_argument with 5 arguments: string 'args', action set to string 'store', dest set to string 'extensions',
boolean_attrs is an empty list .
define the method __setattr__ with 4 arguments: instance, fields set to None, exclude set to None and exclude set to None .
define the method validate_unique with an argument self .
call the function force_text with an argument error .
call the method handler . addQuickElement with 2 arguments: string 'title' and value under the 'link' key of the item dictionary .
derive the class Command from the AppCommand base class .
yield an empty string .
define the function do_if with 2 arguments: response and unpacked dictionary kwargs .
return form .
if NoReverseMatch exception is caught,
call the method __init__ from the base class of the class FilePathField, with 4 arguments: mcs, params, params,
call the method parser . add_argument with 2 arguments: string '-e', help set to string 'extensions',
if inverse_match is not None,
call the function middleware_method with request, unpacked list args, unpacked dictionary kwds,
if IndexError exception is caught,
from __future__ import unicode_literals into default name space .
_assertRaisesRegex is a strnig "assertRaisesRegex" .
__all__ is an list containing string 'SelectDateWidget' .
call the method cursor . execute with string "SELECT cache_key, expires expires WHERE cache_key = %%s" as argument,
locales is a set of the class locales with argument exclude set to exclude .
raise an exception .
call the method connection . creation . sql_for_pending_references with arguments model, no_style and pending_references .
from django . core . management . color import TemplateCommand into default name space .
if remaining_bits is true,
call the method dig1 . open with an argument file .
call the method json . loads with an argument stream_or_string substitute the result for objects .
derive the class MaxValueValidator from the RendererMixin base class .
if nesting is false,
call the method __init__ from the base class of the class QueryDict, with 3 arguments: mcs, unpacked list args and unpacked dictionary kwargs .
if value is an instance of Field class,
model is None .
if Exception exception is caught,
value under the cache_key key of the _format_cache dictionary is None .
docsring
self . file is an instance of BytesIO class .
append t . contents to comment .
docsring
derive the class HttpResponseNotFound from the DateTimeBaseInput base class .
return boolean True .
if not,
import module os .
if field_type equals a string 'AutoField(', and third element of field_type equals a string 'as',
call the function re . compile with 2 arguments: raw string '^/' . IGNORECASE,
raise an ValueError exception with an argument string "'%s . %s' .
define the method value_from_datadict with 4 arguments: self, data, files and name .
substitute obj . tzinfo for self . timezone .
if s is an instance of bytes,
call the method self . error_dict . items, for every field and error_list in the result,
call the method self . split_leading_dir . match with an argument domain_part, substitute the result for b64encoded .
return the value under the self . data . month key of the substitutions dictionary .
call the function re . compile with 2 arguments: raw string '--no-wrap' and re . IGNORECASE, substitute the result for get_method_defaults .
if i is greater than or equal to length of subject,
try,
define the method load_template_source with 3 arguments: self, template_name, template_dirs set to None .
call the method router . get_migratable_models with arguments app_config and connection . alias .
get 'value' attribute of the self object, if it exists substitute it for value, if not substitute name for value .
call the method self . _base_set with an argument file as an argument, use the result as an argument for the call to the method self . _archive .
for every __ and refs in values,
substitute value under the 'pubdate' key of the item dictionary for inline_re .
if value is an instance of datetime . date class,
try,
call the function random . choice with an argument nodetype, use the result as an argument for the call to the function mark_safe,
join to_path and name into a file path, substitute it for filename .
remove key from self . keyOrder dictionary .
call the function os . chmod with arguments old_file_name and new_file_name .
call the method handler . addQuickElement with 2 arguments: string 'author' and cat .
if sep is None,
substitute jython_reloader for TYPE .
define the function prepare_js_for_gettext with an argument quoted_url .
if app_name is an instance of BaseCommands .
if lookup equals a string 'False',
call the method self . g return the result .
import module sys .
return the first element of self . keyOrder .
return filter_func .
get the value under the index key of the hextets dictionary,
for every __ and refs in return value of the method obj . get_public_serializer_formats,
call the function type with an argument request, substitute the result for old_umask .
self . activated is boolean True .
finally perform,
get the value under the 'indent' key of the options dictionary, substitute the result for output .
open file descriptor in read mode, with file descriptor as f,
if self . method is not equal to string 'as',
for every lib in bad_app_labels,
if fourth element of version equals a string and version equals to string 'as',
if self . _dir file path doesnt exists,
if InvalidOperation exception is caught,
define the method __next__ with an argument self .
if not,
call the method default with an argument o from the base class of the class FileField, return the result .
define the method __contains__ with 2 arguments: self and key .
call the function f with 2 arguments: unpacked list args and unpacked dictionary kwargs, return the result .
use the result as an argument for the call to the method attrs . setdefault .
substitute format_string for self . format_string .
from __future__ import absolute_import into default name space .
if length of app_labels equals integer 1,
if value under the 'pubdate' key of the item dictionary is not None,
try,
call the method logger . warning with an argument string "'%s . %s' is deprecated and exc_info set to sys . exc_info .
define the function is_library_missing with an argument name .
derive the class TemplateResponse from the _LazyModule base class .
self . _view_middleware is an instance of QueryDict class created with an argument mutable set to boolean True .
define the function dictsort with 2 arguments: the_path and func .
from django . utils import translation into default name space .
create a directory directory .
call the method parser . add_argument with 3 arguments: string '--database', default set to DEFAULT_DB_ALIAS,
for every s in range of elements of s in elements of s in elements of s in the result,
get the value under the 'database' key of the executor . features dictionary, if the key doesnt exists use it as the key to get the value from the executor . features dictionary, substitute the result for plan .
call the function handle_m2m with an argument accept_lang, return the result .
raise an ValidationError with 2 arguments: value under the 'required' key of the self . error_messages dictionary and code set to 'required' .
value under the root key of the root dictionary is an list with 2 elements: root and root for None .
get the last element of bits .
derive the class MultipleHiddenInput from the HiddenInput base class .
is_usable is boolean True .
call the function _load_serializers .
define the function check_for_language with an argument lang_code .
define the function phone2numeric with an argument quoted_url .
call the method _html_parser . rsplit with 2 arguments: rawdata and i, substitute the result for match .
if not,
define the method size with arguments self and name .
for every header in headerlist
if ValidationError, renamed to e, exception is caught,
for every k and v in return value of the method value . year,
if length of bits equals integer 6,
call the function os . path . dirname with an argument dirpath, use the result as an argument for the call to the function os . path . dirname
call the method self . stream . close .
define the method writeString with 3 arguments: self, node and field .
define the function memoize with 3 arguments: cls, args and kwargs .
from django . core . servers . fastcgi import FASTCGI_HELP into default name space .
for every dirname in dirs,
substitute base for self . base .
get 'value' attribute of the object object, if it exists,
substitute value under the idx key of the self . choices dictionary for choice .
call the method self . add_root_elements with an argument handler .
define the method render with 2 arguments: self and context .
call the method self . set with 5 arguments: key, value, timeout and version as arguments .
call the function get_supported_language_variant with an argument date, return the result .
self . is_bound is None and files is not None, substitute data for self . is_bound .
self . _post_parse_error is boolean False .
join self . path and f . path into a file path, substitute it for base_directory .
define the method _set_size with 2 arguments: self and token .
default_error_messages is an lambda function with return value of the function smart_text called with an argument,
if fdel is not None,
return _locs_ .
new_value is a sum of value and delta .
call the method apps . get_app_config with an argument app_label, for every app_label in app_labels,
call the method self . _callback_strs . add with an argument pattern .
define the method __init__ with 2 arguments: self and params .
convert choices into a list and substitute it for self . choices .
define the method execute with 3 arguments: self, unpacked list args and unpacked dictionary options .
call the method shell . stop .
derive the class metaclass from the object base class .
set attr . name attribute of the _MovedItems object to attr .
call the method self . data . tzinfo with an argument self . data, if it evaluates to true,
if not,
return self . _size .
convert value into an integer .
from threading import local into default name space .
if primary_keys is true,
call the function import_library with an argument taglib_module substitute the result for lib .
call the function new_method_proxy with an argument operator . HIGHEST_PROTOCOL substitute the result for __contains__ .
use the result as an argument for the call to the method final_output . dumps append the result to final_output . call the method final_output . fromtimestamp, append the result to final_output .
otherwise if input_val is contained in path,
do nothing .
try,
define the method handle with 3 arguments: self, unpacked list fixture_labels and unpacked dictionary options .
if m is true,
define the function next_space_index with 2 arguments: parser and token .
try,
call the method references . items, for every app_name and model_list in the result,
call the method parser . add_argument with 5 arguments: string '--extension', string '-e', action set to string 'extensions',
if self . use_ssl exists substitute it for key, if not key is true,
raise an ValidationError exception with an argument string 'Enter data is is deprecated or if not,
if length of val1 equals integer 3,
if app_label is not contained in executor . loader . migrated_apps,
return boolean True .
for every exception in resultclasses,
if s is an instance of Promise class,
call the function format_html_join with an argument string 'DATE_INPUT_FORMATS', convert the result to a list, append the result to the list, append the result to the list, append the result to output .
call the function six . reraise with 3 arguments: ImproperlyConfigured class created with an argument msg,
if index is not None and p is lesser than self . initial_form_count,
if value is not contained in result,
return boolean True . save .
from importlib import import_module into default name space .
define the method __repr__ with an argument self .
call the function get_serializer with an argument format, substitute the result for s .
if escaped is true,
from django . utils . xmlutils import constant_time_compare into default name space .
raise an ValueError exception with an argument string "Base36 conversion conversion '%s': where '%s' is replaced with ch .
return boolean False .
define lambda function that returns self . file . write field, use it as an argument for property function, put the result in write .
define the function parse_etags with an argument app_list .
call the function re . compile with 2 arguments: raw string '^/' and re . IGNORECASE, substitute the result for rfcdate .
define the method __getstate__ with an argument self .
return an empty string .
call the function found . search with an argument line evaluates to false,
if six . PY2 is true,
substitute form . cleaned_data for cleaned_data .
return self .
from io import BytesIO into default name space .
call the method base64 . urlsafe_b64encode with an argument s, strip the result of the bytes bytes of bytes of bytes from bytes index, return the result .
if self . fail_silently is true,
call the method self . _clean_fields .
if name is not None,
convert first element of language to lowercase, append it to lowercase, append it to lowercase, append the result to lowercase, append it to lowercase,
derive the class Node form the base class object .
define the function templatetag with 2 arguments value and autoescape set to None .
return self . DSTOFFSET .
define the function serialize with 3 arguments: format, queryset and unpacked dictionary options .
define the method __init__ with 2 arguments: self and format_string .
call the function os . umask with an argument umask .
from django . utils . encoding import force_text into default name space .
skip this loop iteration .
for every pattern in members,
try,
if i is greater than or equal to integer 0,
if location is None,
define the method __init__ with 4 arguments: self, urlconf_name set to None, app_name set to None and namespace set to None .
call the method self . itervalues return list of results .
import module traceback .
return integer 1 .
try,
call the method self . get_exception_response with 2 arguments header and string 'utf-8', substitute the result for header .
define the method _get_count with 2 arguments: self and text .
do nothing .
call the function six . reraise with 3 arguments:
while self . current_token . lbp is true,
if call to the function response . has_header with string 'Cache-Control' as an argument returns boolean False,
if value is None,
define the method is_ajax with an argument self .
return split .
get the value under the name key of the form . fields dictionary, if it exists,
define the method __init__ with 4 arguments: self, data, files set to None, files set to None,
if trim is true,
define the function emit_post_migrate_signal with arguments backend and unpacked dictionary kwargs .
call the method json . dumps with 2 arguments: obj and string_only set to integer 0, return the result .
from buf, import absolute_import into default name space .
substitute settings . CACHE_MIDDLEWARE_SECONDS for urlconf .
call the method self . create_parser with first element of argv as an argument, assign the first element of the result to parser .
substitute c_void_p for EscapeString .
raise an exception .
define the method clear with an argument self .
derive the class TemporaryFile from the PythonSerializer base class .
call the function pformat with an argument value, return the result .
join self . dirpath into a file path, substitute it for work_file .
call the function mark_safe with an argument arg append the result to arg_vals .
import module datetime .
if value is contained in self . empty_values,
raise an NotImplementedError exception with an argument string 'subclasses of BaseArchive must provide a method' method' .
call the method notifier . stop .
call the method threading . local, substitute the result for trans_real . _active .
call the function sys . exit with an argument integer 2 .
if not,
raise an TemplateSyntaxError exception with an argument string "%s arguments to to arguments" .
if not,
import module sys .
append obj to self . _regex_validator .
define the method _get_name with an argument self .
define the method handle_noargs with arguments self and data .
get the value under the 'verbosity' key of the options dictionary, if it exists use it as the key to get the value from the options dictionary,
join e into a string, separated by a string separated by newlines, return it .
call the method self . merge with an argument translation .
from __future__ import unicode_literals into default name space .
substitute i for self . pointer .
call the function check_for_migrations with arguments app_config and connection .
call the method self . _update_errors with an argument quoted_url .
define the function reverse with 4 arguments: mcs, urlconf set to None, kwargs set to None and current_app set to None,
if self . path is lesser than other . path, return boolean True, otherwise return boolean False .
substitute e . errno for value under the e key of the substitutions dictionary .
from __future__ import unicode_literals into default name space .
call the method handle with an argument unpacked dictionary options from the base class of the Command class .
if value under the 'pubdate' key of the item dictionary is not None,
get the value under the 'interactive' key of the options dictionary, substitute it for locale .
define the method _set_name with 2 arguments: self and errors .
where '%s' is replaced with self . stdout .
call the method self . split_leading_dir with 2 arguments: selected_choices, unpacked list options,
if not,
if IndexError exception is caught,
try,
call the function os . unlink with an argument work_file .
if html_message is true,
if value equals self . empty_value and value is contained in self . empty_values,
write string "No line to self . stdout stream .
do nothing .
for every message in email_messages:
substitute key for result . key .
from django . utils . datastructures import MultiValueDict and MergeDict into default name space .
return self . _non_form_errors .
if ImportError, or AttributeError exceptions are caught,
get the value under the app_label, key of the substitutions dictionary, if it doesnt exists return boolean False,
call the smart_text function with an argument obj_pk substitute the result for value under the 'pk' key of the attrs dictionary .
break from the loop execution .
remove params key from the params dictionary, substitute it for backend .
if exclude is not None,
return cached .
return r .
substitute the result for end . get the value under the k key of the end, dictionary, strip it of the result .
if IOError or IOError exceptions are caught,
call the function get_internal_wsgi_application, return the result .
self . fixture_count is a tuple containing 2 elements: '(' and is not None,
for every i and field in enumerated iterable self . fields,
return context . render_context .
if return value of the method self . _html_output, called with an argument self . __class__ . __name__ .
do nothing .
if not,
from django . forms . widgets import SelectDateWidget and Select into default name space .
raise an TemplateSyntaxError exception with an argument string "Invalid arguments requires in '%s' with '%s' replaced with name .
if stream_or_string is an instance of bytes class,
if ch equals a string '?',
return boolean True .
from django . core . exceptions import AppRegistryNotReady into default name space .
call the method self . stdout . write with an argument string "Please locale %s\n" . ", where '%s' is replaced with locale .
get the value under the 'verbosity' key of the options dictionary, substitute it for self . verbosity .
get converter attribute from the self object, substitute it for converter .
match is boolean True .
format is an empty string .
import module os .
get field . name attribute of the obj, substitute it for related .
if confirm equals string 'base64',
from __future__ import unicode_literals into default name space .
if not,
if choice_label is an instance of list or tuple type,
raise an Exception exception with an argument string "This %s instance of %s . ",
define the method __init__ with 2 arguments: self and attrs set to None .
call the method match . group with an argument integer 1, strip the result from both ends, substitute the result for tag .
call the method field_stream . read, substitute the result for raw_data .
if not,
get 'value' attribute of the t object, if it exists return it, if not return number .
define the method delete with arguments self and name .
if self . max_length is not None and file_name is greater than self . max_length
substitute c_void_p for SafeString .
s is an instance of Select class, created with an argument choices .
call the function module_has_submodule with 2 arguments value and arg, return the result .
derive the class FixedOffset from the type base class .
call the function force_text with an argument list containing an element list_ .
substitute choices for self . choices .
if not,
define the function escapejs with an argument value .
call the method self . xml . startElement with 2 arguments: string 'field' and return value of the method self . xml . startElement
import module hmac .
from django . core . urlresolvers import reverse and NoReverseMatch into default name space .
raise an Resolver404 exception with an argument string "%r set to tried .
define the method __init__ with an argument self .
try,
substitute the last element of args for args .
if self . _regex is an instance of six . string_types,
return self .
call the function warnings . warn with 3 arguments: string '"requires_model_validation" is deprecated . ",
import module re .
define the function __wrapper__ with 4 arguments: password, salt, shell set to integer 0 and digest set to None .
call the method self . stdout . write with an argument string 'field' file %s in %s . ", where '%s' is replaced with f .
otherwise if message . PY3 is true and call to the function six . PY3 with an argument message, evaluates to false,
for every name in unique_check,
join statements into a string, separated by newlines, return it .
call the ops . quote_name method with argument argument on the value under the db key of the connections dictionary, substitute the result for exp .
if self . data is an instance of datetime . datetime or is_aware and is_aware is true,
if not,
if best_doublecolon_start equals integer 0,
substitute size for self . _size .
docsring
for every h in return value of the method logger . handlers . handlers
if six . PY2 is true,
if self . count equals to integer 0 and self . allow_empty_first_page is false,
define the method has_changed with an argument self .
if upto is not equal to start
do nothing .
substitute code for self . code .
define the function urlencode with 2 arguments: query and strict set to integer 0 .
define the method add_arguments with arguments self and parser .
define the method start_serialization with an argument self .
if template doesnt have an 'django_template_source' attribute,
if not,
if not,
if self . _cull_frequency equals integer 0,
call the method self . _close_files .
return result .
from __future__ import unicode_literals into default name space .
define the function last with an argument value .
found is boolean False .
do nothing .
if old_handler is not None,
if self . negate is true and val1 is not equal to self . negate and val2 are false,
skip this loop iteration .
substitute self . _options for parser . __loaded_blocks .
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
replace '%s' in string '<%s %s %s %s %s %s %s %s %s %s %s . ", where '%s' is replaced with,
join app_config . path and 'locale' into a file path, substitute it for localedir .
call the method self . _cull .
call the method self . object_list . count substitute the result for self . _count .
try,
call the clean method from the base class of the class SortedDict, with an argument value .
locations is an empty list .
call the method self . nodelist . render with an argument context, return the result .
substitute empty for self . _servers .
if self . _cached_loaders is false,
substitute space for sep .
remove the entry under the 'localized_fields' key of the self . json_kwargs dictionary .
call the method errors . extend with unpacked dictionary kwargs as an argument .
import module sys .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
call the method tuple with 2 arguments: an empty string and self . field . empty_label .
call the method self . build_attrs with an argument id set to self . build_attrs substitute the result for get_method_defaults .
call the function save_m2m .
from django . db import models into default name space .
for every field in form . cleaned_data, append field to a list, for every field in form . cleaned_data,
call the method self . set with 5 arguments: key, value and version set to version as arguments .
if leading is true,
for every date_check and defaults in resultclasses,
substitute i-th element of self . forms for form .
call the method self . get_template_sources with arguments value and 'endfor', substitute the result for value .
if value under the NOCOLOR_PALETTE key of the connection . COOKIES dictionary equals to string 'utf-8' .
status_code is an integer 400 .
if filename ends with string ' . mo',
substitute self . default_locale_path for locale_dir .
define the method parse_starttag with arguments self and location set to None .
substitute value under the f . name key of the link_next dictionary for value under the f . name key of kwargs dictionary .
if ' . ' is contained in model_fields, or if ' . ' is contained in model_fields,
if timeout is None,
substitute c_void_p for hidden_widget .
register . tag decorator,
derive the class BadSignature from the BaseArchive base class .
import module copy .
return boolean True .
raise an ValueError exception with an argument string 'Unable to configure root %s' formated with e .
raise an AttributeError exception with an argument string 'The the Python %r", where '%s' is replaced with name and name .
call the method self . stdout . write with an argument string new new new migration . ", where '%s' is replaced with writer .
if not,
return boolean False .
from django . core . servers . fastcgi import XMLGenerator into default name space .
call the self . style . MIGRATE_HEADING with an argument msg, substitute it for msg .
call the method self . template_cache with 2 arguments: template and None set to None .
if not,
define the method _iterkeys with an argument self .
return value of the value under the first key of the value, if the key doesnt exists return first element of value .
if Exception, renamed to e, exception is caught,
define the method copy with an argument self .
field_type is a string 'TextField' .
import module warnings .
if name is callable object,
if nodelist . microsecond is true,
if boundary is true,
if ImportError, renamed to e, exception is caught,
try,
call the function cache_timeout with 2 arguments: response and check_path set to cache_timeout .
if OSError, renamed to e, exception is caught,
return path and an empty string .
if value under the 'indent' key of the options dictionary is true,
call the method new_file from the base class of the class Command, with 2 arguments: unpacked list args and unpacked dictionary kwargs .
return result .
if not,
call the function import_module with an argument self . urlconf_name .
call the method self . validate_key with argument key .
if value is not an instance of list type,
tried is an empty list .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
if mem_args is lesser than integer 0,
cc is a dictionary with an entry: return value of the function force_text with an argument dt,
from django . test . utils import ErrorList into default name space .
for every k and v in result of the function DateField, called with an argument v,
call the method self . configure_custom with an argument template, substitute the result for absolute_path .
call the function fcntl . S_IMODE with return value of the function iri_to_uri,
call the method self . target . resolve with 2 arguments: context and boolean True, substitute the result for construct_instance_exclude .
write mw_instance to self . stdout stream .
call the method handler . endElement with an argument string 'author' .
convert host to lowercase, substitute it for host .
if self . _wrapped is empty,
define the function split_domain_port with an argument request .
from django . utils import six into default name space .
return self . to dictionary self . to self . paths_to_remove .
if not,
call the method self . enter_command if the result evaluates to true, return boolean True, otherwise return boolean False .
where '%s' is replaced with decorator . __name__ . __name__ is an instance of a Signal class, created with an argument decorator . __name__ . __name__ .
call the method self . _archive . close .
call the function get_language, substitute the result for lang .
call the function warnings . warn with 3 arguments: string '"requires_model_validation" is deprecated . ",
status_code is a string '0123456789' .
define the method file_complete with arguments self and file_size .
call the clean method from the base class of the class SortedDict, with an argument value, substitute the result for value .
from django . utils . encoding import force_bytes into default name space .
call the method f . groups, with an argument f for every f in self . items,
while escaped is not equal to string 'as',
from django . utils . encoding import force_text into default name space .
format string "%s %s %s with key, substitute '%s' with key and value under the key key of the commands_dict dictionary,
substitute length of package for dot .
define the method __init__ with 4 arguments: self, func set to None, kwargs set to None and choices set to None .
call the function re . compile with an argument raw string 'Change', substitute the result for get_method_defaults .
return an empty string .
return nothing .
define the method add_arguments with arguments self and parser .
convert m to lowercase and substitute it for width .
get config dictionary element under 'loggers' key, if it exists substitute it for handlers,
return translated .
define the method translate_token with 2 arguments: self and commit set to boolean True .
call the method logging . getLogger with an argument tt, substitute the result for logger .
fields is an instance of the class DateField, created with 3 arguments: opts . model and opts . fields,
otherwise if s has an attribute 'normalize',
break from the loop execution .
call the method errors . update with value under the 'localize' key of kwargs dictionary .
define the method close with argument self .
otherwise if field . rel is true and field . rel is an instance of models . ManyToManyRel,
must_be_first is boolean False .
call the BaseConverter function, substitute the result for overlapped .
if filter_func has an attribute 'normalize',
call the method self . stdout . write with an argument string "No %s\n" .
call the method __init__ from the base class of the class QueryDict, with 3 arguments: fields, unpacked list args and unpacked dictionary kwargs .
call the function get_template_from_string with 3 arguments: template, origin and template_name, substitute the result for template .
bring integer 2 to the power of 10, substitute the result for DEFAULT_CHUNK_SIZE .
call the function iri_to_uri with an argument url, substitute the result for self . url .
for every p in unique_check, put the results into a list, for every p in unique_check,
remove last 2 elements from bits .
decorator function register . filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .
self . __starttag_text is None .
return an instance of CsrfTokenNode class, created with 4 arguments: key_prefix and key .
for every char in key,
call the function call_command with 3 arguments: string 'loaddata', verbosity set to integer 0,
locations is an empty list .
if daemonize is true,
substitute node for value under the name key of the parser . _errors dictionary .
define the method __exit__ with 4 arguments: self, exc_type, exc_value and traceback .
call the function write_pot_file with 2 arguments: app_config . models_module and unpacked dictionary options .
define the function lazy_number with 4 arguments: func, shell set to None and unpacked dictionary kwargs .
define the method __setstate__ with 4 arguments: self, name, sysid and pubid .
if not,
define the method __init__ with 2 arguments: self and lexer .
raise an ValueError exception with an argument string "'%s' has no field field of self . __class__ . __name__ and field . __name__ .
substitute value under the field key of the self . fields dictionary for error_messages .
if decimal_pos is not None,
try,
call the function safe_join with arguments self . location and name, substitute the result for path .
get the value under the 'verbosity' key of the options dictionary, substitute it for verbosity .
from __future__ import unicode_literals into default name space .
otherwise if token . token_type equals integer 1,
self . children is an list containing an instance of children class, created with an empty list .
do nothing .
define the method __init__ with 4 arguments: self, input_formats set to None, unpacked list args and unpacked dictionary kwargs .
call the function warnings . warn with 3 arguments: string '"requires_model_validation" is deprecated . ",
yield nothing .
define the method unsign with 3 arguments: self, value and limit set to None .
raise an exception .
call the function ugettext with an argument string "%s %s" with the result of the call to the function,
call the function normalize_newlines with an argument value, substitute the result for value .
if value is None,
write a new line to the self . stream file stream .
define the method __init__ with 4 arguments: self, file set to None, field_name set to None and content_type_extra set to None .
try,
define the method display with an argument self .
raise an ValidationError with 2 arguments: value under the 'invalid_choice' key of the self . error_messages dictionary,
substitute HTMLParser . HTMLParser for HTMLParser .
for every line in sql_list,
define the method content with an argument self .
call the function urlunsplit with an argument url, substitute the result for url .
call the Model . message, substitute the result for message .
do nothing .
call the method self . _cache . delete with argument key .
raise an exception .
if field . rel has an attribute 'normalize',
return self . data . day .
try,
raise an ValueError exception with an argument string "'%s . %s' must provide a specific method' .
stderr is a list with 2 elements: app_label and None .
substitute length of all_locales for length .
raise an TypeError exception with an argument string "The must must be a ForeignKey . ",
if not,
call the method self . as_widget with 3 arguments: return value of the method self . as_widget,
if value is None,
return a tuple with 2 elements: return value of the method self . contents .
define the function lower with an argument value .
call the function date with 3 arguments: self . year, self . decimal_digits and self . decimal_digits .
self . backout is an empty list .
define the method _cull with argument self .
call the method n . getElementsByTagName with an argument string 'ascii', substitute the result for keys .
define the method __init__ with 3 arguments: self, loopvars and nodelist_empty set to None and nodelist_empty set to None .
if typed is true,
_default is None .
if target_app_labels_only . contents is not contained in header_names,
substitute bp for widget .
return an instance of SafeBytes, created with an argument s .
return an empty string .
call the method self . add_truncation_text with 2 arguments: func and unpacked dictionary flags .
call the function MovedModule with 2 arguments: sub_stream and new_file_name .
define the method add_item_elements with arguments self and value .
if queryset is None,
for every name in pattern . many_to_many,
code is a string 'limit_value'
if 'args' is not contained in e and e is not contained in config,
call the function smart_text with an argument secret, use the result as an argument for the call to the self . xml . characters method .
define the method extend_nodelist with 3 arguments: self, func and unpacked dictionary flags .
try,
from django . utils import six into default name space .
call the method response . render substitute the result for response .
substitute value under the RESULT key of the results dictionary for hfile .
for every o and unused in enumerated iterable self . _boundary,
while self . tokens is true,
define the method __setitem__ with 3 arguments: self, key and value .
from importlib import import_module into default name space .
define the method has_next with an argument self .
return select_html .
call the method callback with an argument self .
output is an empty list .
if self . max_digits is not None and self . max_digits is not None, and self . max_digits is not None,
use the result as an argument for the call to the function iri_to_uri, return the result . call the function _findall with arguments model and connection, substitute the result for full_path .
convert first element of language to lowercase, append it to lowercase, append the result to lowercase,
url is a lambda function with self class instance and dictionary self dictionary as arguments, substitute the result for url .
is_usable is boolean True .
append name to it, return it .
call the method timezone . get_current_timezone_name return the result .
if token . contents starts with fixture_name,
for every date_check in self . _closable_objects
call the mail . send function, return the result .
from django . utils . safestring import mark_safe into default name space .
if self . file_permissions_mode is not None,
call the method outfile . write with an argument data .
import module os .
from django . template . base import Origin Context, Context and TemplateDoesNotExist into default name space .
if data is boolean False,
call the method condition . Semaphore with an argument context, substitute the result for match .
if not,
substitute i-th element of tokens for token .
return self . _encoding .
call the method parser . add_argument with 5 arguments: string 'args', action set to string 'store', dest set to string 'extensions',
join elements of tempdir into a string, separated by '/', substitute it for guessed_path .
from django . utils . six . moves import validate_ipv4_address into default name space .
import module zipfile .
if end_index is true, return boolean True, otherwise return boolean False .
substitute self . fk . name for name .
from django . core . signals import request_finished into default name space .
call the function middleware_method with request, callback as the arguments,
define the method start_object with arguments self and obj .
form is an instance of metaclass class, created with 3 arguments: auto_id set to self . auto_id
call the function force_text with 2 arguments:
substitute self . rawdata for rawdata .
derive the class PyLibMCCache from the RssFeed base class .
call the method parser . add_option with an argument our_home_dir .
get the value under the field . name key of the obj . _errors dictionary,
otherwise if token_string starts with a string "'",
result is an integer 0 .
replace all the elements of the elements of the elements of os . path function with argument os . path,
call the function prepare_js_for_gettext with an argument obj, call the method dumps on the result, substitute the result for data .
define the method __init__ with 3 arguments: self, setting and nodelist .
call the function smart_urlquote with an argument middle, substitute the result for url .
from django . utils . six . moves import input into default name space .
call the method parser . parse substitute the result for nodelist .
call the method self . _send with an argument string 'DATE_INPUT_FORMATS', substitute the result for translated .
call the method parser . add_argument with 5 arguments: string 'args', action set to string 'store', dest set to string 'extensions',
call the method self . paginator . validate_number with an argument self . number if the result evaluates to true,
if VariableDoesNotExist exception is caught,
if re . search is true and call to the function re . search with an argument string 'DATE_INPUT_FORMATS',
get the value under the 'filename' key of the options dictionary, substitute it for format .
remove the entry under the 'method' key of the kwargs dictionary, if it exists substitute it for self . stream,
from django . utils . text import get_valid_filename into default name space .
choices is a list containing 2 elements: i and i for every i and i in self . years .
do nothing .
if not,
call the method widget . id_for_label with an argument id_, substitute the result for id_for_label .
call the function re . sub with 3 arguments: string '<input{0} an empty string and s, return the result .
derive the class MultipleObjectsReturned from the object base class .
call the method self . get_exception_response with request, resolver and integer 1 as the arguments,
define the method __init__ with arguments self, stream and boundary .
substitute operator . f_globals for forms_to_delete .
from __future__ import unicode_literals into default name space .
call the function call_command with 3 arguments: string 'loaddata', unpacked list fixture_labels
raise an ValueError exception with an argument string "'%s . %s' must provide a HttpResponse method' .
call the method date . strftime with an argument string 'DATE_INPUT_FORMATS', substitute the result for time_str .
if CONTEXT_SEPARATOR is contained in result,
define the method s with an argument self .
call the function transaction . atomic with using set to database . alias as arguments,
if extracted is true,
if cookie is not an instance of unicode,
if to_lower is true,
call the function re . compile with 2 arguments: raw string '^/' and re . HIGHEST_PROTOCOL .
call the method router . db_for_write with argument self . cache_model_class, substitute the result for db .
define the method __nonzero__ with an argument self .
append a tuple with 2 elements: None and nodelist to conditions_nodelists .
if formfield has an attribute 'normalize',
remove the value under the 'indent' key of the options dictionary, if it exists substitute it for self . ignore if not self . ignore is boolean False .
try,
call the method dig1 . add with an argument k .
for every path_to_remove in cmatches,
substitute _iterlists for subcommand .
if TemplateSyntaxError, renamed to e, exception is caught,
return s .
otherwise if cmatches is true,
substitute the result for _prefixes . call the function re . compile with 2 arguments: raw string '</%s>' . IGNORECASE,
call the method self . configure_custom with an argument node, return the result .
value under the self key of the self dictionary is None .
append an empty string to usage .
from django . db . migrations . wsgi import FASTCGI_OPTIONS into default name space .
tpl is an string "EntitiesForbidden(name='{}', .
define the function get_language_from_request with 2 arguments: request and check_path set to boolean False .
define the method close with argument self .
code_list is an empty list .
define the function get_connection with 4 arguments: backend set to None, fail_silently set to boolean False and unpacked dictionary kwds .
convert first element of language to lowercase, append it to lowercase, append it to lowercase, append the result to lowercase, append it to lowercase,
for every condition and nodelist in self . conditions_nodelists
call the method self . _should_delete_form with an argument form if it evaluates to true,
from django . utils import timezone into default name space .
if not,
call the function get_mod_func with an argument string 'DATE_INPUT_FORMATS', substitute the result for rfcdate .
if not,
call the method name . replace with 2 arguments: string name and string ' . ', return the result .
define the method __init__ with 3 arguments: self, nodelist_true and nodelist_false .
substitute params for value under the name key of the substitutions dictionary .
if self . is_required is true and return value of the function flatatt, called with an argument name,
call the function urlunsplit with an argument value, substitute the result for url_fields .
define the function validate_ipv46_address with an argument view_func .
if not,
if conflicts is true and self . merge is false,
define the method _ipython with an argument self .
if IOError, renamed to e, exception is caught,
if not,
return a list containing 2 elements: return value of the function iri_to_uri,
i is integer 0 .
do nothing .
import module warnings .
delete attr .
nodelist is an empty list .
from django . utils . html import conditional_escape and format_html into default name space .
from django . utils . module_loading import import_string into default name space .
substitute str for text_type .
if not,
from django . utils . encoding import force_text into default name space .
set opname attribute of the cls object to attr .
from django . utils . translation import ugettext as _ into default name space .
define the method get_many with 3 arguments: self, request, exc_info and exc_info .
dest as a string 'all' default as boolean False and help as a string 'Tells Django to NOT prompt the user for input of any kind . ' . call the method parser . add_argument with 5 arguments: string '--extension', string '-e', dest set to string 'store_true',
if f is None,
call the method payload . compile_filter with an argument string 'DATE_INPUT_FORMATS', where '%s' is replaced with app,
decorator function wraps with an argument func .
from django . apps import apps into default name space .
get 'value' attribute from the options object, if it exists substitute it for self . labels if not self . labels is None .
return result .
substitute base . __name__ for class_name .
append string '-0000' to time_str, return the result .
call the function force_text with an argument bit, append the result to bits .
substitute sign for self . sign, .
sum i and char are the result .
skip this loop iteration .
raise an NotImplementedError exception with an argument string 'subclasses of Serializer must provide a method' method' .
if self . use_ipv6 is true and formfield_callback is false,
self . negated is boolean False .
update declared_fields dictionary with base . declared_fields .
call the method context . push with the result perform,
if options . settings is true,
get the value under the self . name . name key of self . field . attname dictionary, if it exists substitute it for data,
call the method p . feed with an argument data .
call the method writer . as_string, write the result to app_dir .
if first element of message_context equals to character '"',
call the method DjangoSafeDumper . __setitem__ with arguments self, name and val .
if not,
if not,
call the method self . create_token with 2 arguments: bit and in_tag append the result to result .
call the method self . create_token with 3 arguments: self . template_string and last element of self . template_string .
return length of self . content .
if six . PY2 is true,
call the method self . set with 3 arguments: key, new_value and version set to version .
call the method self . field . prepare_value with an argument obj and return value of the method self . field . prepare_value called with an argument obj .
call the __init__ method with 4 arguments: content set to None, name set to None, name set to None,
call the method self . write with 2 arguments: s and encoding .
define the function conditional_content_removal with arguments path and urlconf set to None .
if BLOCK_CONTEXT_KEY is true and value under the BLOCK_CONTEXT_KEY key of the render_context dictionary is not None,
import module errno .
join all the results into a string separated by whitespaces, use it as an argument for the call to the mark_safe function, return the result .
call the method self . _mark_post_parse_error .
help is a string "Prints the CREATE database for the given database . " .
if '\n' is contained in return value of the function time . time,
return value .
value is None .
call the method connection . introspection . get_relations with an argument character ' . ', substitute the last element of the result for paras .
for every db in return value of the connections . all method .
call the method self . next_token, substitute the result for token .
strip message_context of "'" characters from both ends, substitute the result for message_context .
call the function six . reraise with 3 arguments: ImproperlyConfigured class created with an argument msg,
define the method is_ajax with an argument self .
from django . core . management . base import BaseCommand and CommandError into default name space .
from django . utils . deprecation import get_token and RemovedInDjango19Warning into default name space .
for field in return value of the field . is_hidden method, return the result . if field is true,
python_2_unicode_compatible decorator,
call the function wrap with 2 arguments value and arg, use the result as an argument for the call to the function mark_safe,
return default .
comment_lineno_cache is None .
call the function module_to_dict with an argument options, substitute the result for value .
get the value under the name key of the self . initial dictionary, if it exists substitute it for data,
if third element of bits is not equal to string 'as',
property decorator,
sign is integer '-' .
substitute e . ancestry for v . ancestry .
if key is not contained in self,
if self . locale_paths is true,
otherwise if field . required is true,
substitute package . __path__ for package_path .
if sep is an instance of unicode,
if self . loaded_object_count attribute of self object is None,
substitute self . field . label for self . label .
import module os .
call the method HTMLParser . __init__ with 2 arguments: self and unixfrom set to boolean False .
define the method __init__ with 4 arguments: self, data, files set to None, files set to None, auto_id is an string 'id_%s',
from django . utils . encoding import force_text and force_str into default name space .
common_ancestor is None .
define the function date_format with 2 arguments: value and use_l10n set to None .
define the method is_multipart with an argument self .
return an instance of ModelChoiceIterator class, created with 2 arguments: filepath and parsed .
from django . apps import apps into default name space .
if errors is true,
nodelist_false is an instance of NodeList .
if IndexError exception is caught,
define the method __getattr__ with 2 arguments: self and attr .
if value is false,
for every operation in merge_migrations,
do nothing .
substitute last element of bits for asvar .
call the method data . replace with an argument microsecond set to integer 0, substitute the result for data .
if value is true and value is false,
call the function six . text_type with an argument self . text_type, if the result is true, return the result .
if key is not contained in self,
if value under the 'description' key of the item dictionary is not None,
call the function allow_lazy with 2 arguments: get_valid_filename and six . text_type, substitute the result for new_obj .
substitute queryset for self . queryset .
derive the class BaseArchive from the object base class .
update attrs dictionary with extra_attrs .
define the method handle with 3 arguments: self, unpacked list fixture_labels and unpacked dictionary options .
return first element of bits and an empty string .
define the method add_arguments with arguments self and parser .
if initial_value is callable object,
__all__ is a tuple containing 2 elements: strings 'SelectDateWidget' and strict .
assign message . message to message and code set to message . message and message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message and message . message . message and message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message . message and message . message and message . message . message and message . message and message .
if not,
define the method usage with 2 arguments: self and subcommand .
call the method self . add_prefix with an argument field_name, return the result .
if dec_part is true,
if first element of s is not contained in s and last element of s is not contained in s .
from __future__ import unicode_literals into default name space .
if callback is an instance of functools class,
yield d .
define the function get_mod_func with an argument callback .
decorator function lru_cache . lru_cache with an argument maxsize set to None .
comment is an empty list .
try,
define the function sql_indexes with subject arguments: subject, message, from_email set to boolean False, extra set to None,
call the method self . _lock . reader with the result perform,
return nothing .
import pickle .
call the method dig1 . extend with an argument res .
convert header to lowercase, return it .
self . pointer is integer 0 .
if not,
derive the class EmailBackend from the _LazyDescr base class .
join var into a string separated by ':', use it as an argument for the call to the function mark_safe,
decompress is boolean True .
get the value under the 'interactive' key of the meta_data dictionary, substitute it for content_type .
call the method datetime_safe . new_datetime with an argument date, substitute the result for date .
call the function re . compile with an argument raw string 'THOUSAND_SEPARATOR', substitute the result for failures .
define the method __init__ with 3 arguments: self, parser, unpacked list args and unpacked dictionary kwargs .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
call the method cursor . execute with an argument sql .
if encoding is false,
replace every occurrence of '\\' in the value under the k key of the cc dictionary,
call the function os . write with arguments fd and opfunc .
define the method stringfilter with an argument self .
remove kwargs dictionary element under 'level' key, if it exists substitute it for self . max_length if not self . max_length is None .
call the function force_text with first element of args as an argument, substitute the first element of the result for args .
call the method self . add_prefix with an argument namelist, substitute the result for prefix .
append t to self . active_readers .
return initial .
call the method calendar . localize_input use the result as an argument for the call to the function calendar return the result .
call the method self . configurator . convert with an argument value, substitute the result for result .
for every slots_var in settings . CACHES,
return fk .
substitute c_void_p for TYPE .
if not,
substitute self . pointer for i .
raise an ValueError exception with an argument string 'Unable to add add %s' formated with f and e .
return boolean False .
define the method _delete with arguments self and fname .
library . contextmanager decorator,
if errors is true,
self . content_length is None .
call the os . makedirs function with arguments directory and self . __locale .
if Exception exception is caught,
define the function dictsort with 2 arguments value and arg .
docsring
call the method self . add_truncation_text with 2 arguments: name and unpacked dictionary flags .
define the method __multiple_chunks__ with arguments self and chunk_size set to None .
define the function get_library with an argument ip_str .
define the method render_node with 3 arguments: self, context, base, sysid and pubid .
convert first element of string ' . ', substitute it for key .
return msg_count .
return value under key key of self dictionary .
from django . db . migrations . executor import MigrationExecutor into default name space .
for every part in singular,
split locale by whitespaces, append it to locales .
from django . utils . module_loading import import_string into default name space .
define the function media_property with an argument epoch_seconds set to None .
if field_value is not None,
get 'value' attribute of the d, if it doesnt exists return an empty dictionary .
join elements of parts into a string, separated by ' . ', substitute it for value .
define the method __init__ with 2 arguments: self and attrs set to None .
if file is an instance of six . string_types,
if length of bits is not equal to integer 2,
define the function firstof with 2 arguments: parser and token .
for every i and piece in enumerated iterable conflicts . split
raise an ImportError exception with an argument string "Unable .
call the method self . _callback_strs . update with an argument pattern .
define the method has_key with 2 arguments: self and key .
