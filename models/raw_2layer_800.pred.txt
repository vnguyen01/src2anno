if e . connection_reset is false,
append filename to self . _catalog .
decorator function register . filter with an argument is_safe set to boolean True .
substitute value under the idx key of the d, dictionary for d .
call the function func with 2 arguments: unpacked list args,
if self . _leftover is true,
get the value under the db key of the self . _caches dictionary, return it .
do nothing .
call the method context_match . group with an argument integer 1, substitute the result for message_context .
from django . conf import settings into default name space .
help is a string "Prints a list of the given SQL for statements . " .
for every migration in sequence of the call to the method block_context . weekday,
define the method render with an argument self .
if length of words is greater than length of length,
if not,
if self . required is false,
call the method self . as_ul,
call the method n . copy with an argument subcommand, call the method copy . copy . copy,
define the function next_space_index with 2 arguments text and limit .
if app_config . models_module is None,
return _cached_filenames .
substitute it for value under the language_code key of the self . _namespace_dict dictionary .
from django . utils . http import datastructures into default name space .
do nothing .
derive the class Loader from the BaseLoader base class .
if not,
filter_raw_string is a tuple with 2 elements: a tuple with 2 elements: strings .
define the method display with an argument self .
define the function get_language_from_request with an argument list_ .
try,
dirs is an empty list .
define the method __init__ with arguments: self, max_value set to None, min_value set to None,
if result is not None,
call the function os . path . dirname with an argument filename, substitute the result for filename .
get the value under the 'indent' key of the options dictionary, substitute it for self . domain .
if self . instance . pk is not None,
join e into a string, separated by newlines, return it .
call the method self . _iteritems for every k and v in the result,
call the method self . _render with an argument contents .
substitute Tok . media for base .
from django . utils import formats into default name space .
otherwise if bytes is smaller than "'",
call the function bytes with 2 arguments: i and an empty string .
attrs is a string attrs is a instance of a class named created with 3 arguments: attrs, extra set to a string,
load_template_source is an empty set .
raise an exception .
for every node in concrete_model . nodelist .
define the method __repr__ with an argument self .
call the method sys . stderr . write with an argument string 'field' . %s', where '%s' is replaced with e .
join dirpath and f into a file path, substitute it for httpd .
call the method settings . is_overridden with an argument string 'MANAGERS', if it evaluates to true,
if key is contained in dict_,
call the function getargspec with an argument func, args, assign the result to args and defaults .
if UnicodeDecodeError exception is caught,
call the function force_text with an argument value, substitute the result for lbp .
from django . utils . encoding import force_st into default name space .
sum sign and sign, return the result .
do nothing .
define the function check_errors with an argument s .
call the method initial_form_count from the base class of the class Command, return the result .
substitute v for value under k key of self dictionary .
sum the last element of filename to filename .
call the method match . end with an argument path, append the result to the result .
otherwise if first element of g equals a string "'",
return boolean True .
if ext is false and content_type is false,
call the method zfile . close .
call the function get_mod_func with an argument argv set to the result .
substitute show_hidden_initial for self . is_required .
define the method __init__ with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
if not,
define the method id_for_label with 2 arguments: self and id_ .
substitute the '%s' with 3 elements: return value of the function MovedAttribute,
call the method re . compile with an argument raw string 'natural', substitute the result for use_base_manager .
define the method id_for_label with an argument self .
call the method self . run with an argument f, return the result .
from django . forms . models import everything into default name space .
return new_value .
if self . _errors is None,
substitute safe for value under the 'db_column' key of the kwargs dictionary .
get the value under the self . status_code key of the PALETTES dictionary,
if string response is boolean False,
convert cc into a list, substitute it for self . cc .
return nothing .
if value under the 'verbosity' key of the options dictionary is greater than integer 0,
substitute string for self . _servers .
call the method self . xml . endElement with 2 arguments: string 'field' and attrs .
from django . core import serializers into default name space .
as the result is a list, call the method getInnerText on the result with an argument list,
replace '%s' in string "%s with self . app_or_project, substitute it for prefix .
if character '/' is contained in path, and call to the function path,
with lock,
substitute name for self . name .
substitute first element of list elements of list for list .
if not,
call the function logging_config_func with an argument lang_string .
if not,
call the method __init__ from the base class of the class Command, with 2 arguments: unpacked list args and unpacked dictionary kwargs .
instance . keyOrder is an empty list .
return the result of the call to the function iri_to_uri,
call the method register . execute with an argument statement .
if value is true,
substitute the result for message . call the function ungettext_lazy with an argument string 'ascii',
if settings . TEMPLATE_DEBUG is true,
from django . utils . _os import safe_join into default name space .
get the value under the DEFAULT_CACHE_ALIAS key of the caches dictionary, return it .
import module sys .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
call the method logger . removeHandler with an argument handler .
convert self to lowercase and return it .
join elements of output into a string, separated with newline characters, return the result .
if email exception is caught,
call the method parser . add_argument with 6 arguments: string '--no-initial-data', action set to string 'store',
if not,
substitute render_value for self . notation_name .
call the method parser . add_argument with 5 arguments: string string '--noinput', action set to string 'store_true',
if not,
cmp_fmt is None .
if not,
derive the class EmailValidator from the InvalidPage base class .
substitute boundary for next .
substitute the result for last element of last element of end .
call the method self . get_template_sources with 3 arguments: name, value, attrs and choices,
substitute value for self . value .
return output .
call the function timezone . now substitute the result for now .
divide length of 200, by one, substitute the result for digit .
if pop_context is true,
try,
if best_doublecolon_len is not contained in default_settings,
app_labels is an empty set .
call the function _generate_cache_key with 3 arguments: parser, nodelist_false and unpacked list unpacked list kw, return the result .
define the method copy_plural_forms with 2 arguments: self and formatstr .
if m is false,
return e .
define the method to_python with arguments self and data .
for every base in return value of the six . iteritems called with an argument base .
default_error_messages is an tuple with 3 entries: return value of the function _ called with an argument,
if not,
if transaction . management and executor . loader is true,
call the method check_for_language from the base class of the class MultiValueDict, with an argument val .
call the method self . remove_potfiles .
call the method logging . chdir with an argument boolean True .
derive the class Deserializer from bytes and SafeData base class .
call the function re . compile with 2 arguments: regex and re . IGNORECASE, substitute the result for regex .
if not,
define the method _set_queryset with arguments self and filename .
if ch is true,
derive the class TemplateIfParser from the MIMEMixin base class .
define the method items with an argument self .
call the function mark_safe with an argument template, return the result .
call the method Field . __init__ with arguments: self, unpacked list args and unpacked dictionary kwargs .
return boolean False .
is an instance of a InteractiveMigrationQuestioner class, created with 3 arguments: strings
join elements of output into a string, return it .
substitute complain for EscapeString .
raise an CommandError exception with an argument string "%r values where be is replaced with self . leave_locale_alone
derive the class Parser from the object base class .
if y is true and d is true,
if self . load_initial_data is not None,
get the value under the KEY key of the params dictionary, if it exists substitute it for loggers,
return usage .
call the function os . path . dirname with an argument fixture_name use the result as an argument for the call to the function os . path . dirname .
call the method fp . getvalue, return the result .
if regex is not None,
define the method __str__ with an argument self .
substitute nonlocal_root for self . _boundary .
if self . merge and does exist,
call the method self . build_attrs with an argument attrs, substitute the result for final_attrs .
replace '%s' in a list with 2 elements: return value of the function os . path . normpath,
bitwise is a list with 3 elements: strings 'NFC' and 'ftp' .
content . setter decorator,
substitute notation_name for self . settings_exception, .
otherwise if o is an instance of decimal class,
substitute META for self . _meta .
derive the class _OFFSET from the object base class .
import module re .
from django . utils . encoding import smart_text and force_text into default name space .
return boolean False .
if param is not contained in params and kwargs,
define the method extend_nodelist with 3 arguments: self, nodelist, node and token .
define the function advance_iterator with an argument path .
from django . utils import six into default name space .
from __future__ import unicode_literals into default name space .
return an list with an element: self . _input_data .
if f . name is contained in lib .
child_nodelists is an tuple with 2 initial elements: strings and '<' .
if self . _pk_field equals a self . children,
call the method __init__ from the base class of the class FilePathField, called with 4 arguments: data, data, prefix set to initial,
define the method render_node with 2 arguments: self and message .
substitute value for value under the field . attname key of the data dictionary .
define the method __init__ with 2 arguments: self and language .
define the method __init__ with 2 arguments: self and file .
try,
call the function six . text_type with an argument rel_model .
derive the class MultiValueDictKeyError from the KeyError base class .
call the function time_format with 2 arguments: value and arg, return the result .
call the method connection . introspection . collect_sql with tables as argument, substitute the result for migration .
if new_name starts with a string,
call the method MONTHS . index with an argument lang, use the result as an argument for the call to the json . index method .
call the method self . _html_output, with connection set to executor and callback as arguments .
define the method getvalue with an argument self .
call the method parser . add_argument with 2 arguments: string '--database', default set to DEFAULT_DB_ALIAS and help as a string 'database',
if PY3 is true,
if not,
return flat dictionary element under lang_code key .
if ValueError or TypeError exceptions are caught,
return self . STDOFFSET .
if not,
for every x in for put value from the self . namespaces method evaluates to true,
define the method __init__ with 2 arguments: self and record .
define the method _add_fallback with an argument self .
_version and boolean False .
call the method parser . add_argument with 5 arguments: string 'args', string '-e', action set to string 'store',
substitute value under the name key of the tokens for tok .
cache_timeout assign integer 0 .
call the method connection . cursor, substitute the result for cursor .
call the method self . _reset_dicts with an argument dict_ .
if ValueError exception is caught,
if s is not an instance of six . string_types class,
define the function urlsafe_base64_encode with 2 arguments value and arg .
call the function _slugify with an argument value, if it evaluates to true,
substitute tuple with 4 elements: elements of row and None for key .
take integer 0 and substitute the result for lead .
do nothing .
define the method __nonzero__ with an argument self .
call the method self . stdout . MIGRATE_HEADING with an argument string " . - %s\n" as argument,
append a list containing a string containing 6 elements: return value of the function iri_to_uri,
raise an SerializerDoesNotExist exception with an argument format .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
define the method __init__ with an argument self .
call the method d . get_field_type with 5 arguments: value,
return func .
s is an instance of StringIO class .
derive the NoArgsCommand class from the object base class .
call the function warnings . warn with string "django . utils . %s' called with 2 arguments:
try,
substitute match . match for name .
import module warnings .
if self . initial_forms is false,
raise an TemplateSyntaxError exception with an argument string "'%s' received received both smaller deprecated . ",
define the method __init__ with 4 arguments: self, stream set to an empty string and concatenated,
if number_equal is true,
if self has an attribute 'process_view',
define the method __iter__ with an argument self .
call the function original_urlencode with an argument value, assign the result to parts and display_name respectively .
substitute '%s' in length of self . loopvars .
call the function force_text, with 2 arguments: string '<input{0} appended to input_date_formats,
call the method self . clear_checkbox_name with 2 arguments: string 'field' and converted converted into a string,
call the method t . lineno . lineno with an argument line, substitute the result for lookup_str .
join elements of unique_check, into a string, return it .
define the method list with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
if csrf_token is true,
define the method push with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
try,
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
call the function self . form with 3 arguments: length, prefix set to self . auto_id
if format_type is None and result of the function attribute . time,
call the function walk_to_end with 2 arguments: ch and pattern_iter .
help is a string "Prints the files of the files files for
try,
if not,
for every p in return value of the method self . clear_checkbox_name called with 2 arguments:
join self . _dir into a string, return it .
define the method define with an argument self .
define the method clear with an argument self .
finally perform,
set base attribute of the base object object .
define the method __iter__ with an argument self .
call the function warnings . warn with an argument string "No fixture fixture found for %s . ",
call the method self . _send with an argument msg, substitute it for msg .
if cache is an instance of EscapeData,
call the method re . sub with 3 arguments: string '1' and tok . IGNORECASE,
return string 'version' from current .
get name attribute from the attribute object, if it exists use it as an argument for the call to the attribute object,
raise an ValueError exception with an argument e .
call the validators . get_migration function with 2 arguments: nodetype, unpack_ipv4 converted into an integer .
return boolean False .
return result .
call the function os . path . splitext with an argument base, substitute the result for base and ext .
define the method __init__ with 2 arguments: self and filter_name .
try,
append check to self . _closable_objects .
if not,
append a tuple with 2 elements: a tuple with first 2 elements to format and None .
call the method self . _setup .
call the method handler . endElement with an argument lookup_str .
call the method logger . warning with an argument string "The conversion %s" with request . path,
join c into a string, return it .
define the method __delattr__ with an argument self .
define the method __init__ with 2 arguments: self and options set to None .
call the method as_text with 2 arguments: potfile and locale .
if self . is_localized is true,
define the method add_arguments with arguments self and parser .
bring integer 1 to the power of integer 4, append the result to j .
if length of version equals to integer 6,
define the method __getitem__ with 2 arguments: self and i .
yield string "# `managed you module model and "
define the method _set_queryset with arguments self and name .
define the method __deepcopy__ with 2 arguments: self and memo .
if not,
with self . mutex perform,
call the function ugettext_lazy with an argument value, return the result .
try,
do nothing .
bring the result of the call to the function chain, with an argument string 'DATE_INPUT_FORMATS', use the result as an argument for the call to the function iri_to_uri,
call the method value . replace with 2 arguments:
call the method self . _isdst with an argument dt, if it evaluates to true,
return self . token .
return output .
for every format in self . input_formats .
remove config dictionary element under 'warning' key, substitute it for value .
call the function copy . deepcopy with an argument self . widgets substitute the result for obj . widgets .
define the function get_wsgi_application .
substitute FILE for SafeString .
return a tuple with 2 elements: self . func and self . args, return the result .
call the function force_str with an argument bool, substitute the result for TemplateLoader .
define the method clean with an argument self .
get 'value' attribute of the _active object, if it exists substitute it for self .
derive the class BadSignature from the HttpResponseRedirectBase base class .
if ValueError or TypeError exceptions are caught,
define the method tzname with 2 arguments self and dt .
if value under the 'pubdate' key of the item dictionary is not None,
if ImportError exception is caught,
if pattern equals a tuple with 8 elements: character ' . ' . ',
return decorating_function .
raise an ViewDoesNotExist exception with an argument string "Could not find %s", %s",
return boolean False .
derive the class HttpResponseBase form the base class HTMLParser .
attachment is an instance of a class SafeMIMEMultipart, created with 2 arguments content and encoding, return the result .
if locations is true,
call the function open with arguments string 'Clear', and string 'rb' substitute the result for file .
break from the loop execution,
otherwise if bit attribute of current attribute of the current object,
join self . dirpath and self . file . file into a file path .
call the method bad_app_labels . add_arguments with an argument parser .
while field . rel is not None,
call the method self . path with argument name, substitute the result for full_path .
try,
for every f in return value of the method self . dumps called with an argument e .
call the method parser . add_argument with 2 arguments: string string '-e', dest set to string 'store',
join root and f into a file path, substitute it for f .
substitute the result of the function smart_text with an argument seconds for choice_input_class .
yield value under key key of self dictionary .
call the method os . locale_paths with an argument bp, if it evaluates to true,
call the method field . process_template_response with an argument obj, substitute the result for value .
try,
call the method resolver . resolve with an argument request, on the result call the method resolver . resolve .
import module datetime .
return an empty string .
call the function get_language with an argument idstring use the result as an argument for the call to the function _get_timezone_name,
call the method m . group with 3 arguments: integer 1 and integer 1,
has_bz2 is a integer 0 .
call the function re . compile with raw string ' . IGNORECASE, substitute the result for regex .
define the method message_dict with an argument self .
from django . template import loader and RequestContext into default name space .
call the method connection . introspection . table_names, substitute the result for tables .
if t . token_type is true,
if v is not None, return boolean True if not return None .
define the method clear with an argument self .
derive the class tzinfo from the Input base class .
derive the class QueryDict from the Input base class .
return boolean False .
append character character to digits .
raise an TemplateSyntaxError exception with an argument string "Invalid too too %r", where '%s' is replaced with lookup_view .
return an empty string .
from django . utils import lru_cache into default name space .
define the method open with argument self .
docs_version is a lambda function with an argument x .
for every form in valid_forms,
if http_cookies . CookieError exception is caught,
return boolean False .
call the method d . decompress substitute the result for data_list .
define the method delete with arguments self and name .
do nothing .
from functools import Image .
convert value under the 'initial' key of the self dictionary converted to an integer,
return self . urlconf_module .
substitute choices for self . choices .
incomment is boolean False .
call the function translation with an argument settings . LANGUAGE_CODE, substitute the result for _default .
define the method add_arguments with arguments self and parser .
define the method end_index with an argument self .
convert first element of the result to a integer, return it .
finally perform,
if i is greater than length of subject,
decorator function register . filter with an argument is_safe set to boolean True .
return result .
call the method f . save_form_data with 2 arguments: instance and value under the f . name key of cleaned_data dictionary .
call the method apps . get_app_config with an argument app_label, substitute the result for app_config .
call the method parser . add_argument with 3 arguments: string '--pks', action set to string 'store_false',
call the method datetime . now with an argument integer 60, use the result as an argument for the call to the mark_safe,
if KeyError exception is caught,
define the method get_parent with 2 arguments: self and context .
call the function six . reraise with 3 arguments:
define the method has_key with 3 arguments: self, key, key and version set to None .
call the method context . render_context .
increment weight by integer 1 .
return result .
if self . verbosity is greater or equal to integer 2,
raise CommandError exception with an argument msg .
self . bcc is an empty list .
substitute self . choices for self . widget . choices .
if six . PY2 is true,
from django import apps into default name space .
lbp is an integer 0 .
MONTHS is a tuple with 4 initial entries: value of the function MovedAttribute, called with an argument,
raise an exception .
call the method d . year, with 2 arguments: d and d . year, d . month and d . month .
_wrapped is None .
from __future__ import unicode_literals into default name space .
raise an CommandError exception with an argument string "Invalid conflicts following where '%s' is replaced with,
finally perform,
call the method self . _cache . _read_limited with 2 arguments: key and delta .
if value is not an instance of ConvertingList and value is an instance of dict class,
call the method add_arguments from the base class of the Command class with an argument parser .
decorator function register . filter with an argument is_safe set to boolean False .
substitute _urllib_error_moved_attributes for self . _moved_attributes .
call the method __init__ from the base class of the class QueryDict, with 2 arguments: attrs and choices .
call the function six . text_type with an argument encoding call the encode method on the result, return the result .
for every key and value in dictionary key under the key key of dictionary, return boolean True, otherwise return boolean False .
if not,
substitute func for value under the 'localized_fields' key of the self . __dict__ dictionary .
call the method parser . parse with an argument tuple with an element string '-d', substitute the result for nodelist .
if m is true,
substitute complain for iterlists .
if not,
define the method add_css with an argument self .
define the method __new__ with 3 arguments: cls, unpacked list args and unpacked dictionary kwargs .
try,
call the method match . group with an argument key_salt, substitute the result for categories .
from django . core . checks . django_1_7_0 .
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
if lookup_view is contained in self . is_required
call the method stream . unget with an argument chunk .
value is a list with 4 entries: return value of the function _ called with 3 arguments: key,
call the method self . stdout . write with string 'ascii' as argument, write the result to self . stdout .
call the method self . compress with an argument self . number, return the result .
raise an AttributeError exception with an argument string "'%s' object has no no ForeignKey . ",
widget is HiddenInput .
if tags is true and return value of the method checks . weekday,
call the function re . compile substitute the result for lead .
define the function emit_post_migrate with 3 arguments: singular, plural and number set to None .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
call the function ungettext with 3 arguments: singular, plural and number, substitute the result for result .
if not,
convert value into an integer and convert arg to an integer .
substitute num for self . handle_app .
call the method self . convert with 3 arguments: i, self . __args and self . decimal, substitute the result for the neg and value, respectively .
if self . asvar is true,
call the function restart_with_reloader, substitute the result for httpd_cls .
define the method __init__ with 2 arguments: self and filter_expression .
widget . is_localized is boolean True .
substitute oldroot for pickled .
import module mimetypes .
define the method to_python with arguments self and value .
if file_name is an instance of Template class,
if BLOCK_CONTEXT_KEY is lesser than the result of the function,
week_number is integer 1 .
raise an InvalidTemplateLibrary exception with an argument string "Could not can %s", where '%s' is replaced with taglib_module and e .
substitute CheckboxChoiceInput for oldroot .
substitute timeout for self . timeout .
return the result of the call to the function format_html with an argument string 'ascii',
from django . utils . translation import ugettext_lazy as _ as _ into default name space .
call the function self . msg with 2 arguments: unpacked list args and unpacked dictionary containing entries:
define the method get_response, with 5 arguments: self, key, value, negated set to an empty string,
call the function EmailMultiAlternatives with 3 arguments:
if lang is None,
if file has an 'error_dict' attribute,
call the method parser . add_argument with 3 arguments: string 'args', action set to string 'store_false',
raise an exception .
do nothing .
call the method handler . addQuickElement with 2 arguments: string 'link' and value under the 'id' key of the self . feed dictionary .
derive the class Truncator, from the UploadFileException base class .
call the function force_text with an argument self . value, substitute the result for self . value .
return html .
define the method read with an argument self .
call the function allow_lazy with 2 arguments localedir and six . text_type, substitute the result for lead .
if the key exists substitute the result for formfield_callback . if not, formfield_callback is None . call the method attrs . remove with 2 arguments: Model, None and None .
value under 'address' key of config dictionary under the 'author_name' key of config dictionary .
get the value under the 'verbosity' key of the options dictionary, substitute it for self . verbosity .
define the method has_other_pages with an argument self .
_meth_self is an integer -1 .
return self . parent_instance .
define the method delete with self class instance, key, version defaulting to None as arguments .
otherwise if name equals a string '>' .
import module sys .
call the method self . xml . endElement with an argument string 'natural' .
if OSError or AttributeError exceptions are caught,
_meth_self is a string '(?P<day>\d{2})' .
define the method __iter__ with an argument self .
substitute self . _encoding for encoding .
output_transaction is boolean True .
try,
if not,
substitute the result of the method m . end for rest .
if no is true,
increment j by integer 1, substitute the result for i .
if not,
skip this loop iteration .
if server is false substitute it for self . port, otherwise self . port is an empty string .
if _active has an attribute 'process_response',
if not,
if replacement is not equal to STATUS_OK,
substitute used_name for request . key_prefix .
return value .
call the function re . compile with an argument raw string 'ascii', substitute the result for __unicode__ .
get the value under the t key of the self . __dispatch dictionary,
from django . core . management import call_command into default name space .
raise an ValueError exception with an argument string 'Unable of in your mode,
if not,
raise an ValidationError with 2 arguments: value under the 'required' key of the self . error_messages dictionary and code set to 'required' .
is_compressed is an empty string .
define the method __mod__ with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
define the method __repr__ with an argument self .
property decorator,
substitute elt without the first element of elt for param .
if ValueError exception is caught,
get the value under the key key of the self . queryset dictionary, if it exists substitute it for value .
substitute link for value under the NEXT key of the key dictionary .
define the method add with 5 arguments: self, key, key, timeout set to DEFAULT_TIMEOUT and version set to None .
call the __init__ method from the base class of the EmailBackend class, with 2 arguments: unpacked list args and unpacked dictionary kwargs .
split second element of hextet by ':', append the result to new_ip .
import module random .
call the method gettext_module . appendlist with 2 arguments: list . name and third element of bits .
define the function ungettext_lazy with 3 arguments: singular, plural and number set to None .
define the method is_valid with an argument self .
if name is not equal to string "The or name is not empty,
append path to self . _view_middleware .
if IOError exception is caught,
from __future__ import unicode_literals into default name space .
call the method parser . add_argument with 3 arguments: string '--locale', string '-e', default set to None,
if the attrvalue is true,
call the method inspect . find with an argument string '"', if the result is not None,
call the method block_context . format with an argument format_string return the result .
call the method self . _assert_mutable return the result .
call the method f . close .
define the method __init__ with 2 arguments: self and func .
from django . core . management . base import AppCommand into default name space .
call the method bf . run_tests with an argument label evaluates to an empty string .
from django . core . management . base import BaseCommand and CommandError into default name space .
if not,
substitute SelectMultiple for widget .
if self . _request_middleware is None,
if email_messages is false,
lang is None .
return value .
return obj .
substitute pubid for self . pubid .
raise an MultiPartParserError exception with an argument string '-v', is contained in keys,
call the method handler . endElement with 2 arguments: string 'author' and an empty string .
if value is None and attr is true .
otherwise if length of args equals a string 'as',
self . _deleted_form_indexes is an empty list .
call the method __init__ with 2 arguments: unpacked list args and unpacked dictionary kwargs .
perform the function six . iteritems with an argument fields, for every k and v in return value of the function six . iteritems,
call the function os . makedirs with an argument lookup_str .
import signal .
define the method add_fields with 3 arguments: self, form and index .
_fields_ is an tuple containing 3 entries: an empty tuple and an empty tuple .
property decorator,
if not,
define the function socket with 3 arguments: key_salt, set set to a tuple with an element entry,
raise an ValidationError with 2 arguments: value under the NON_FIELD_ERRORS key of the self . error_messages dictionary and code set to 'required' .
derive the class FloatField from Node base class .
define the method copy with an argument self .
substitute self . _pk_field for self . content .
return an empty string .
nodelist is a boolean True .
if not,
if i is true,
replace every occurrence of '\\' in result of the method value . replace called with 3 arguments:
if fields is not None,
if TypeError or ValueError exceptions are caught,
iterator is a tuple out .
headerlist is an empty list .
call the function force_text with an argument value, on the result call the function force_text with an argument value, substitute the result for final_attrs .
define the method end_object with arguments self and name .
derive the class Http404 from the Exception base class .
plural is an empty list .
return instance .
if not,
if callback is an instance of types . FileField,
substitute force_bytes for force_str .
derive the class LazyStream from list base class .
if formfield_callback is not None,
derive the class QueryDict, from the ChoiceInput base class .
if not,
define the method handle_inspection with an argument self .
inplural is boolean False .
join dirpath and fixture_name into a file path, substitute it for f .
define the method create_nodelist with an argument self .
call the function loader with arguments name, dirs and dirs, assign the result to source and display_name, respectively .
import module sys .
get the value under the 'localize' key of the options dictionary, if it exists substitute it for self . merge .
raise an CommandError exception with an argument string "You must provide at one index . " .
if self . is_bound is true,
return value converted to boolean True .
if obj . signals is not an instance of models . signals class,
raise an NotImplementedError exception with an argument string "%s . %s", where '%s' is replaced with first .
import module os .
if length of app_labels is lesser than integer 2,
if field is not equal to opts . string_types and opts . error_messages is true,
define the function get_templatetags_modules .
define the method __init__ with 2 arguments: self and callback .
if _cookie_allows_colon_in_names is false,
define the iterator function with self and other as arguments .
if self . verbosity is greater or equal to integer 1,
otherwise if taglib_module is true,
if not,
if path is not contained in self . verbatim,
derive the class HttpResponseBase from the HTMLParser base class .
define the function are with 2 arguments value and arg set to None .
self . translate is boolean True .
from django . utils . deconstruct import deconstructible into default name space .
if confirm equals a string '?',
call the avoid_wrapping function with an argument string "Please use the result as an argument for the call to the function mark_safe, return the result .
subtract 'value' from timedelta and self . can_order as self . cache_model_class, substitute the result for base64d .
call the function force_text with an argument nodetype, use the result as an argument for the call to the function mark_safe,
get the value under the 'database' key of the options dictionary, use it as the key to get the value from the connections dictionary, substitute the result for connection .
substitute stream for self . _stream .
import module os .
sum trail and '/' .
call the method RE_DATE . read substitute the result for content .
for every cat in value under the 'pubdate' key of the item dictionary .
call the ops . quote_name method with self . _table on the object under the db key of connections dictionary, substitute the result for table .
substitute settings . _catalog for translation .
if not,
remove the last element from bits .
return self . file . size .
convert self . name into boolean, return it .
if six . PY3 is boolean True,
define the method validate with arguments self and value .
define the function trim_url with 2 arguments value and timezone set to None .
call the method self . can_write . release .
derive the class VerbatimNode from Node base class .
call the method parser . add_argument with string '--locale', set to string 'store_true', dest as a string 'database',
call the BaseConverter function with rel_to as argument, substitute the result for known_models .
USE_INOTIFY is boolean True .
yield ch and boolean False .
call the function django . add_argument with an argument django . stdout use the result as an argument for the call to the sys . stdout . write method .
for every option in loggers,
substitute years for self . cmd .
return nothing .
try,
call the method t . nud substitute the result for left .
if not,
call the method parser . add_option with 3 arguments: our_home_dir and translation_function .
new_second_item is an empty list .
substitute warning for self . warning .
call the function get_mod_func with 2 arguments: '(' and model_label, substitute the result for value under the 'app_label' key of the options dictionary .
read data from buf, yield the result .
call the function get_token with an argument location, substitute the result for bits .
derive the class Deserializer from the six . Iterator base class .
call the method self . create_table with 3 arguments: length, truncate and text, return the result .
call the function datetime . time with 2 arguments: unpacked dictionary kw, return the result .
substitute path path for path .
call the method self . validate_key with argument key .
call the method self . configure_custom with an argument context, substitute the result for value .
if UnicodeError exception is caught,
if self . _is_rendered is false,
return result .
return self . content .
from decimal import decimal and DebugParser as arguments .
call the method datetime_safe . setdefault with an argument salt, use the result as an argument for the call to the function to_current_timezone
define the function compile_func with 2 arguments: parser and token .
num_sent is a RemovedInDjango19Warning .
decorator deconstructible,
call the self . style . write method with string " No string " as argument,
if not,
_fields_ is a set with 4 entries:
if rel_to starts with TRANSLATOR_COMMENT_MARK,
define the function _strip_once with an argument dirname .
define the function _strip_once with 2 arguments x and translation_function .
for every tok in sequence_sql,
define the method __init__ with 2 arguments: self and config .
if not,
substitute d for d .
for every field_name in self . fields,
raise an ValueError exception with an argument string "Unable in a valid number with s .
define the method is_ajax with an argument self .
for every obj in return value of the method self . queryset . all
from django . utils import six into default name space .
define the method __init__ with an argument self .
define the function bound_func with an argument kwargs .
for every attr in package_path,
skip this loop iteration .
if AttributeError exception is caught,
append first element of self . msguniq_options to self . msguniq_options .
substitute connection for self . connection .
help is a string "Prints the existing of the application "
call the function urlunsplit with 3 arguments: form, instance of exclude, and fields, substitute the result for instance .
call the method handler . addQuickElement with 2 arguments: string string 'title' and string 'author' .
if not,
property decorator,
if not,
return retval .
use_func is integer 1 .
call the method self . file . close .
called with an argument normal_row .
derive the class InvalidPage from the base class BaseCache .
try,
call the method value . encode with an argument charset, substitute the result for value .
define the function get_key_func with 2 arguments: parser and token .
import module warnings .
if self . verbosity is greater than integer 0,
headerlist is an empty list .
if response is None,
return nothing .
call the method addr . split with arguments character '@' and domain .
call the function get_language, substitute the result for language_code .
append string ' . ' to the power of 200, .
if event is contained in known_models,
remove config dictionary element under formatter key, if it exists substitute it for formatter .
if m is None,
memo is a list with an element validators .
unpack a instance of a InteractiveMigrationQuestioner class, created with 2 arguments: config_string and return value of the function,
opts . fields is None .
call the function force_str with an argument string 'utf-8', substitute the result for rawdata .
try,
derive the class DateFormat from the dict base class .
write a string " No SQL to self . stdout stream .
if index equals integer 3,
if idstring is None,
value under the 'addrport' key of the self . base_fields dictionary is an instance of IntegerField class,
parsed is boolean False .
raise an TemplateSyntaxError exception with an argument string "'%s' received %r: raise an argument method' .
call the function pop with 3 arguments:
yield one .
define the method create_variable_node with 2 arguments: self and config .
call the function re . compile with an argument raw string 'ascii', substitute the result for templatetags_modules .
import module tempfile .
call the method command . create_parser with an arguments an empty string and name, substitute the result for parser .
call the function warnings . warn with 2 arguments: string "django . Use has been deprecated and will be removed in Django 1 . ",
substitute type . CACHE_MIDDLEWARE_SECONDS for Morsel .
from pprint import pformat into default name space .
call the function force_bytes with 2 arguments: safe and self . encoding, substitute the result for safe .
call the method self . configure_custom with an argument config, substitute the result for result .
if self . timeout is not None,
define the function get_language .
import module sys .
if LookupError exception is caught,
otherwise if o is an instance of datetime . time,
help is a string "Prints the database database in the database for the given database module . " . " .
if value under the 'language' key of the self . feed dictionary is not None,
raise an ValidationError exception with 3 arguments: value under the 'incomplete' key of the self . error_messages dictionary,
skip this loop iteration .
from lib2to3 import RLock into default name space .
from lib2to3 . util import token into default namespace .
try,
extra_classes set set to an empty set to set, substitute the result for extra_classes .
if unpack_ipv4 is true,
define the function removetags with 2 arguments: url and date .
return an empty list .
define the method run_from_argv with an argument self .
substitute the result for output . call the function localize with arguments output and use_l10n set to context, substitute the result for output .
for every app_config in return value of the method apps . get_app_configs,
call the method handler . addQuickElement with 2 arguments: string 'title' and value under the 'author_email' key of the self . feed dictionary .
call the function warnings . warn with 3 arguments: string '"requires_model_validation" with result of the function force_text,
if content_length is greater than settings . FILE_UPLOAD_TEMP_DIR .
substitute arg converted into an integer for length .
call the function _explode_shorthand_ip_string with an argument ip_str, substitute the result for ip_str .
from lib2to3 . backends import reduce and Node into default name space .
call the function force_str with 3 arguments: result of the function force_str with an argument self,
for every x in result of the call to the function iri_to_uri, convert the result into a integer, substitute the result for x .
call the method gettext_module . appendlist with 4 arguments: name,
if lib . modified_code exception is caught,
if not,
call the method parser . add_argument with 5 arguments: string 'args', action set to string 'store_true',
call the method parser . add_argument with 3 arguments: string 'args', metavar set to string 'store',
raise an VariableDoesNotExist exception with an argument string 'Your because it exists
if length of bits is not equal to integer 2,
substitute cls for obj . __class__ .
substitute self . error_list for self . error_list .
define the function python_2_unicode_compatible, with an argument func .
get the value under the 'charset' key of the options dictionary, if it evaluates to false,
call the function shutil . connect with 2 arguments: argument and new_permissions .
import module logging .
call the function next with an argument self . mod, substitute the result for output .
if length of bits is not equal to integer 2,
try,
import module warnings .
call the method ip_str . split, with 2 arguments: ':',
define the method emit with 2 arguments: self and field_name .
derive the class MultipleObjectsReturned from the object base class .
call the function get_current_timezone, substitute the result for DNS_NAME .
substitute the result of the method self . match with arguments self . path, self . match and base, respectively .
derive the class from from the HTMLParser base class .
call the method f . to with an argument f . name .
otherwise if ch equals a string ')',
return a list containing 2 elements: an empty string and an empty list .
if value is an instance of str type,
if field is not contained in self . errors, return boolean True, otherwise return boolean False .
call the function _generate_cache_header_key with 2 arguments: key_prefix and request, substitute the result for cache_key .
call the method self . _isdst with an argument handler .
do nothing .
from django . core . serializers . base import DeserializationError into default name space .
define the method id_for_label with 3 arguments: self, value and content_type, set to boolean False .
call the method p . RLock, substitute the result for output and errors .
raise an NotImplementedError exception with an argument string 'subclasses of Storage must provide a InMemoryUploadedFile method' .
from django . conf import settings into default name space .
try,
call the function warnings . warn with 3 arguments: string "The this module will be removed . ",
return BytesIO .
call the method self . _cache . set with arguments key, value and self . _expire_info .
if last element of parts is contained in self . CACHES,
if not,
define the method __init__ with an argument self .
otherwise if value under the 'outlog' key of the options dictionary is false,
for every result and asvar in the result,
get the value under the 'exclude' key of the base . __dict__ dictionary, substitute it for new_attr .
append length of issues by length .
if length of fks_to_parent is greater than integer 1,
if localized_fields is not None,
call the function normpath with an argument format_string, return the result .
if not,
call the method calendar . isleap return the result .
try,
increment self . loaded_object_count by one .
call the method self . data . weekday, with an argument self . data . day .
return other . children .
from django . utils . encoding import smart_text into default name space .
call the method zfile . close .
if default is not EndToken,
define the method handle with 3 arguments: self, app_or_project and target, set to None .
split string s with ':', substitute the result for t .
substitute second element of p_pattern for p_pattern .
substitute method . _meta for opts . _meta .
do nothing .
get the value under the 'primary_keys' key of the options dictionary, if it exists substitute it for reset_sequences,
if not,
if not,
import module warnings .
define the function _bin_to_long with an argument date .
define the method r with an argument self .
return None .
append rel_model to deps .
call the re . compile function with 2 arguments: raw string ' . IGNORECASE,
if last element of sys . version_info are equal to integer 2,
if extra_context is false,
call the method self . _isdst with an argument dt, if it evaluates to true,
call the function is_valid_ipv6_address with an argument current .
if index equals to integer 1,
append format to output .
if response . streaming is false,
substitute the result for value .
define the method to_python with arguments self and value .
return input_val .
call the method field . end, substitute the result for hidden_widget .
if ImportError exception is caught,
return last element of list_ .
_empty_value is None .
import module os .
if self . empty_value is true,
return nothing .
if UnicodeError exception is caught,
define the method render with 4 arguments: self, name, value and attrs set to None .
default_error_messages is an list with 3 entries: return value of the function _ called with an argument string 'Enter a valid level for . ' .
define the method next with an argument self .
call the method __init__ from the base class of the class SortedDict, with arguments takes_context, args and kwargs .
substitute value under the bit key of the bit dictionary for number_value .
substitute settings . DEFAULT_CHARSET for self . _request .
define the method _iterkeys with an argument self .
raise an CommandError exception with an argument string "errors can %s %s %s . ", where '%s' is replaced with url and e .
call the method title . process_template_response with an argument string " . ', where '%s' is replaced with migration_name .
define the method id_for_label with an argument self .
call the function stat . match with 2 arguments: rawdata and i, substitute the result for match .
define the method __repr__ with an argument self .
call the method readline . appendlist with an argument 'link', on the result .
define the method set_many with 5 arguments: self, name, base, base, sysid, notation_name and notation_name .
if required is true and initial is not None,
call the method self . _set with arguments key and timeout .
define the method process with 2 arguments: self and name .
call the method __get__ from the base class of the class URLValidator, with 2 arguments: instance and _input_data .
if is_relation,
if os . name equals a string 'nt',
define the method is_url with 3 arguments: self, name and content .
model_list is an empty list .
if ValueError or TypeError exceptions are caught,
substitute i-th element of words for i-th element of words .
import module io .
substitute name for self . name .
return self . _queryset .
call the method self . _create_attachments with an argument msg, return the result .
for every hook in migrations_to_squash,
if self . warning is an instance of dict
append new_name to app_or_project, substitute the result for new_name .
derive the class AppCommand from the base class space .
if not,
call the method related . natural_key, substitute the result for value .
if length of bits is greater than integer 2,
if current_len equals to DEFAULT_TIMEOUT,
define the method __init__ with arguments self, name and params .
if value has an 'natural_key' attribute, and value is not an instance of six . text_type,
for every f in files,
if self . verbosity is greater or equal to integer 2,
substitute initial_forms for total_forms .
add model to interactive set .
call the method chunk . find with an argument middle, substitute the result for i-th .
raise an AttributeError with an argument string "Invalid method method with the result of the function,
define the method __init__ with 5 arguments: self, exc_type, variable_name set to None and silent set to boolean False .
call the function six . text_type with an argument number, substitute the result for str_number .
docsring
if first element of tzinfo equals to character empty_values,
raise an TemplateSyntaxError exception with an argument
define the method __new__ with 3 arguments: cls, unpacked list args and unpacked dictionary kwargs .
call the method conflicts . encode with an argument string 'ascii' .
self . _done is boolean True .
while length of digits is smaller than or equal to it .
raise an AttributeError exception .
return boolean False .
call the self . style . replace with an argument string " - %s" with '%s' replaced with '%s' replaced by name,
substitute value under the cache_key key of the _format_cache dictionary .
if not,
import module gettext .
call the method language_code_re . match with an argument middle if it evaluates to true,
derive the class SimpleLazyObject from the HTMLParser base class .
if KeyError exception is caught,
from django . core import validators into default name space .
if self . _is_rendered is false,
has_bz2 is boolean False .
import module socket .
define the method receive_data_chunk with 2 arguments: self and subcommand .
call the method checks . start_new_thread with an argument e . migrations_to_squash for every e in the result,
define the method delete with 4 arguments: self, key and version set to None .
substitute whitelist for self . __delitem__ .
call the method self . tag with arguments function_name and compile_func .
if first element of second row of args equals a string type,
substitute the result for value . call the function re . compile with an argument string '</%s>' .
if match is true,
call the method os . path . splitext if it evaluates to true,
call the function func with 3 arguments: func, func and func, substitute the result for subject .
return func .
for every bytes in seconds .
substitute as_string for week_number .
if self . file has an attribute 'normalize',
default_error_messages is an dictionary with an entry: return value of the function _ called with an argument
define the function _strip_once with an argument d .
import module re .
call the warnings . warn function with 3 arguments:
substitute string for SafeString .
decrement current_len by length of fixture_files_in_dir .
call the method __init__ with 2 arguments: unpacked list args and unpacked dictionary kwargs .
derive the class InputStreamExhausted from the Exception base class .
supports_microseconds is integer 1 .
if not,
if model is not contained in created_models,
return result .
if self . _done is true,
import module hashlib .
if KeyError exception is caught,
raise an TypeError exception with an argument string "Unknown must be a traceback .
decorator classmethod,
call the method self . _lock . writer .
define the method bpython with an argument self .
return default .
call the method self . open, substitute the result for retval .
from django . utils . functional import lazy into default name space .
define the function lock with 2 arguments: f and flags .
return first element of result .
substitute library for func . __doc__ .
if settings . TEMPLATE_DEBUG is true,
return integer 0 .
return result .
define the method strptime with 3 arguments: self, value and format .
from django . core . management . base import AppCommand into default name space .
raise an RuntimeError exception with an argument string "Problem received must be module . ",
call the method logging . Handler . clear .
call the function get_language, substitute the result for language_code .
call the function avoid_wrapping with an argument value, return the result .
call the function ungettext with 3 arguments: result of the function ungettext with 3 arguments:
call the method datetime_safe . rsplit with an argument date, strip the result from the result,
if not,
define the method receive_data_chunk with 2 arguments: self and error_dict .
if not,
substitute str for smart_unicode .
return None .
derive the class X from the base class in the return value of the call to the method six . time, called with 2 arguments:
try,
raise an TypeError exception with 2 arguments:
if field . rel . through . auto_created is true,
if f doesnt have an 'django_template_source' attribute,
missing_args_message is a tuple with 3 entries: string "You database fixture this project directory . " .
raise an NotImplementedError exception with an argument string 'subclasses of FileUploadHandler must provide a 'fields' method' .
import module contextlib .
call the method __new__ from the base class of the class cls with 3 arguments: cls, unpacked list args,
if pop_context is true,
from django . core . mail . backends . backends import EmailBackend as EmailBackend into default name space .
if settings . TEMPLATE_STRING_IF_INVALID is true,
define the method __init__ with an argument self .
where '%s' is replaced with self . number and self . number and return value of the function force_text with 3 arguments: self . number and self . number
if encoding equals string '__main__' .
import module base64 .
import module datetime .
call the method os . urlsafe_b64encode with argument name, use the result as an argument for the call to the function os . path . normpath,
docsring
try,
if decimal_pos is not None,
get value under the DEFAULT_CACHE_ALIAS key of the caches dictionary, return it .
raise an exception .
if third element of bits is not equal to e,
for every attr in self . alternatives,
get the value under the new_method_name key of the dictionary, substitute it for res .
substitute file_size for self . _max_entries .
for every punctuation and unused in the result,
substitute first first element of bits for bits .
if _globs_ is None,
if ext is true,
and unpacked dictionary kwargs . call the method __init__ from the base class of the class HttpResponse with 2 arguments: unpacked list args and unpacked dictionary kwargs .
substitute form . instance for obj .
errors is an empty list .
join source elements of source into a string, substitute the result for piece .
raise an TemplateSyntaxError exception with an argument "'%s' takes of the first element of bits .
call the method path . expanduser with an argument char, substitute the result for expanded_template .
from IPython import dropwhile into default name space .
derive the class Loader from the object base class .
if value under the config_string key of the wsgi_opts dictionary is not None,
return attachment .
return None .
substitute self . start_doctype_decl for parser . __loaded_blocks .
wsgi_opts is an list containing initial entries:
increment self . active_readers by one .
call the method self . choice with an argument obj .
if not,
otherwise if timeout equals to integer 0,
derive the class DateTimeBaseInput from the base class MediaDefiningClass .
call the function token_kwargs with 2 arguments: list with 3 elements: strings
call the method context_match . add with an argument input_iter .
import module sys .
substitute cls . __text_cast for cls . __str__ .
convert text to an integer, substitute it for c .
substitute self . queryset for qs .
if not,
call the function render_value_in_context with 2 arguments: an empty string and None .
if value is not an empty dictionary and v is not contained in self . empty_values,
call the function urlunsplit with 3 arguments: value set to input_date_formats,
from django . utils . translation import ugettext_lazy and ugettext as _ into default name space .
call the method __init__ from the base class of the class FilePathField, called with 4 arguments: data, data, prefix set to None,
for every pattern in self . dicts,
increment current_len by integer 1,
return new_class . modified_code .
return message .
if TypeError exception is caught,
substitute tags for self . style_func .
define the method __init__ with 3 arguments: self, object_list number and number .
from functools import lru_cache into default name space .
decorator function register . tag with an argument 'extends',
append migration . app_label to self . app_label stream to migration . name .
if string num_loopvars equals a string 'help' .
try,
reverse is a instance of MigrationWriter class, created with 3 arguments: indent and tablename .
if git_changeset is true,
try,
set _urlconfs . name attribute to attr .
call the method self . to_python with an argument value, substitute the result for value .
call the method form . nodelist . connect with an argument exclude, assign the result to LockFileEx .
call the method router . db_for_write with argument self . cache_model_class, substitute the result for db .
substitute value for self . value .
if self . m2m_data and localized_fields is true,
if data is None,
convert num to an integer and substitute it for length .
call the method self . _delete with key and version as arguments .
loader is an instance of MigrationLoader class .
try,
if m is false substitute it for error_messages, if not substitute m . end for n .
try,
import module copy .
substitute key for value under the NEXT key of the oldroot dictionary .
call the os . environ . copy method, substitute the result for block_context .
call the function errno . build_instance with 4 argument: string 'pk' as argument, use the result as an argument for the following:
call the method form . add_prefix with an argument name, substitute the result for self . an .
for every key in self . keyOrder,
timeout and stacklevel set to integer 2 . define the function b with an argument s .
if not,
call the method self . connection . table_names,
if m is not None and number is not None,
call the method to_python from the base class of the class ChoiceField, substitute the result for templatetags_modules .
if not,
if buffer_ is not None,
call the method __init__ with 2 arguments: unpacked list args,
for every key in reversed list,
call the function get_mod_func with an argument argv set to an empty list .
if out_log is true,
call the method __init__ from the base class of the class SortedDict with 4 arguments: None,
call the function OrderedDict with an argument fields, return the result .
do nothing .
return default .
if chunk_size is false,
define the function ugettext with an argument message .
if self . selected_fields is not None and decimals is greater than self . selected_fields,
call the method handler . endElement with 2 arguments: an and value of the method handler . endElement .
if self . require_all_fields is true,
chunk_size is integer 0 .
for every count and line in return value of the method content . _exit
derive the class TextNode from the UploadFileException base class .
if field . default_args is true and field . name is not None,
call the encode function with argument self, on the return value call the method __bool__ with an argument self, return the result .
_iterkeys is a string 'django',
return text .
if incomment is true,
if not,
open value under the 'errlog' key of the options dictionary in f,
call the method self . _mark_post_parse_error .
if limit_choices_to is an callable object,
call the method self . _base_set with 3 arguments: length, truncate,
split '/' into parts by ':', return it .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
call the function get_template with an argument template, substitute the result for template .
substitute val_expr and notation_name for self . _input_data and self . _js .
return nothing .
return value .
if used_name is not contained in val
for every match in sorted tuple with argument self . template_string .
if old_style_list is false,
call the method self . xml . addQuickElement with an argument string 'natural' .
if ValueError exception is caught,
define the function has_bom with an argument middleware_class .
if last element of django . VERSION is not equal to STATUS_OK,
do nothing .
import module importlib .
call the method self . run_validators with arguments obj and field .
get 'value' attribute of func object, substitute it for func .
if name is true,
import module threading .
if self does not is false or obj is false,
define the function _bin_to_long with arguments path and context .
call the method self . write_migration_files with an argument message .
try,
i is integer 0 .
call the method parser . parse_args with an argument date, substitute the result for filter_func .
substitute timeout for self . default_timeout .
derive the class DateTimeInput from the object base class .
append bit, to ',', .
if options is contained in options,
call the function re . compile with an argument raw string 'ascii', substitute the result for __unicode__ .
substitute pubid for self . pubid .
if can_fail is true,
if AttributeError exception is caught,
call the method self . xml . endElement with an argument string 'natural' .
from django . http . cookie import SimpleCookie and EscapeData into default name space .
target_app_labels_only is boolean False .
import module os .
otherwise if t . contents equals a string '^',
get config dictionary element under if key, if it exists substitute it for level, if not, level is None .
define the method loads with arguments self and data .
is an integer 0 .
from django . utils . encoding import force_str and iri_to_uri into default name space .
define the function time_format with 2 arguments: value and format set to None .
define the method close with self class instance and dictionary kwargs as arguments .
from . import register and Tags into default name space .
call the method value . new_datetime with an argument timezone, substitute the result for value .
for every app_config and pending_references,
return boolean True .
substitute value under the root key of the root dictionary for number_value .
get the value under the field . name key of the field . name dictionary,
call the method copy . deepcopy with an argument self . fields, substitute the result for self . fields .
return name and use_null_fallback .
call the function template_localtime with 2 arguments value, use_tz and context, substitute the result for value .
if app_names is true,
self . invoked_for_django is boolean True .
try,
if not,
substitute value under the 'database' key of the options dictionary for connection .
call the method fp . read with an argument settings . CACHE_MIDDLEWARE_ALIAS on the result call the method decode
call the function new_method_proxy with an argument operator . setitem, substitute the result for name .
return an instance of FilterExpression class, created with 3 arguments: y, m and d .
call the method self . stdout .
fields is an list containing 2 entries: label converted into a string,
call the method self . Z, substitute the result for lineno .
try,
writer is an instance of MigrationWriter class, created with an argument decorator,
define the method to_python with arguments self and value .
substitute first element of s for s .
define the function slugify with an argument text .
call the method parser . delete_first_token .
otherwise if field . rel is true and field . negated is an instance of models .
import module io .
define the method chunks with arguments self and chunk_size set to None .
return nothing .
get the value under the raw key of the raw dictionary, substitute it for timestamp .
raise an exception .
call the method _trans . fileno return the result .
substitute error_messages for value under the 'declared_fields' key of the attrs dictionary .
pk is an instance of a InteractiveMigrationQuestioner class, created with 2 arguments: lookup_view and boolean True .
get the value under the key key of the options dictionary, substitute it for orig .
if version is None,
for every model in return value of the function that called with an argument unpacked dictionary kwargs,
update kwargs dictionary with self . cmd .
if subcommand is not None,
get the value under the 'name' key of the options dictionary, substitute it for stamp .
if start is greater than integer 2,
define the method __init__ with 10 arguments: self, required, widget set to boolean True and widget set to None,
if exclude is true and f . name is contained in exclude,
call the encode function with arguments addr, and encoding, call the encode method on the result, substitute the result for addr .
return data .
define the function parse_etags with an argument .
if not,
call the method 'id' . format with an argument i, append the result to the value under the 'id' key of the loop_dict dictionary .
substitute fields for value under the 'declared_fields' key of the attrs dictionary .
call the method get_language, substitute the result for self . DSTDIFF .
call the method __init__ from the base class of the class FilePathField, with 4 arguments: file, name, name and content_type_extra .
for every basedir in basedirs
define the function get_standard_processors .
return msg_count .
raise an ValueError with an argument string "The '%s' '%s' in '%s' replaced by string ',
can_import_settings is boolean True .
raise an TemplateSyntaxError exception with an argument,
get the value under the 'charset' key of the options dictionary, if it is true,
if message is not an instance of ValidationError,
substitute the result for the value under the 'initial' key of the options dictionary . if database is true,
decorator function register . filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .
if lib is false,
self . argv is a list containing 2 initial entries: result of the function sys . iteritems for self . argv .
call the method new_name on the result find the end of new_name as argument .
unpack is an tuple with 8 entries: string "Could does value of the application
from django . apps import apps into default name space .
call the method translation . activate with an argument update_watch .
call the method signals . request_finished . send with argument sender set to self . _handler_class .
define the method __repr__ with an argument self .
call the self . stdout . write method with 3 arguments: string " and model . _meta . db_table and model .
end_index is None .
call the function local, substitute the result for _active .
substitute pattern . regex . checks for Morsel .
derive the class JSONSerializer from the SuspiciousOperation base class .
call the function re . run_tests with an argument string '0',
define the method unclosed_block_tag with arguments self and parse_until .
call the method self . error with an argument string '1' is contained in start of the result of the method w
call the function validate_ipv4_address with an argument value .
substitute tokens for self . tokens .
define the method __getitem__ with 2 arguments: self and key .
substitute content . name for name .
otherwise if template is an instance of six . string_types,
define the function truncatewords_html with an argument content .
if related is true,
return Rss201rev2Feed .
raise an exception .
self . position is an integer 0 .
self . lineno is None .
call the method self . full_clean .
if ValueError exception is caught,
return an instance of SpacelessNode class .
define the method indent with 2 arguments: self and level .
call the function unicodedata . normalize with 2 arguments: string 'NFC' and return value of the method,
if settings . configured is false,
call the method zipfile . addHandler with 2 arguments: result of the function calendar called with 2 arguments:
from django . template . loader import BaseLoader into default name space .
substitute nodelist_empty and nodelist_false for self . nodelist_true and self . port .
decorator function register . filter with an argument is_safe set to boolean False .
define the method handle with 3 arguments: self, unpacked list fixture_labels and unpacked dictionary options .
if settings . FORCE_SCRIPT_NAME is None,
call the os . path . dirname with an argument filename, substitute the result for dirname .
self . nodelist_empty is an instance of NodeList .
for every field in self . fields,
self . use_ipv6 is boolean True .
call the method to_python with an argument value from the base class of the class SortedDict substitute the result for value .
return new_class .
raise an NotImplementedError exception with an argument string 'subclasses of Storage must provide a method' .
increment first and second element of line, append character to it, append the result to space .
call the method tempfile . load with 2 arguments: prefix and suffix set to suffix .
for every format in settings . TEMPLATE_LOADERS,
define the method get_default_prefix with an argument cls .
call the function StringIO with an argument password, substitute the result for stream .
call the method self . _update_errors with an argument obj, append the result to self . objects .
if not,
substitute pubid for self . template_string .
timezone is an instance of LocalTimezone class .
call the method datetime . datetime . compile with an argument tt, substitute the result for result .
substitute _urllib_robotparser_moved_attributes for self . STDOFFSET .
append work_file to string '#: ', substitute it for new .
code is a string 'invalid' .
define the method getlist with an argument self .
define the method enter_command with 3 arguments: self, command and token .
buffer_ is None .
call the function import_module with an argument taglib_module .
get format_type attribute of the getattr, if it doesnt exists use it as an argument for the attribute object,
call the method connection . ops . write, with an argument fp set to result of the function force_text,
if kwarg is true,
requires_system_checks is boolean False .
call the function StringIO with an argument an empty string, substitute the result for out .
call the method sys . path . insert with 2 arguments: integer 0 and options .
call the six . PY2 with an argument, call the method decode on the result with an argument, call the method decode on the result call the method decode
call the method self . _lib with an argument clean_data, substitute the result for resource .
if not,
call the method e . encode with an argument string 'ascii' of the result, call the method e on the result with an argument string 'ascii',
resolved_path is an empty list .
call the method logging . getLogger substitute the result for handler .
if self . verbosity is greater than integer 1,
return s .
join other_dict and name, substitute it for filename .
if length of p-th equals to integer 1,
if not,
decorator stringfilter,
define the function calculate_app_template_dirs .
join elements of choice into a string, return it .
if field_type equals to FILE_MODIFIED,
define the method add with 5 arguments: self, key, value set to DEFAULT_TIMEOUT and version set to None .
decorator function register . filter with an argument is_safe set to boolean False .
call the method subcommand_cls . rsplit with an argument set set to strings
if retval is true,
if id_ is true,
if UnicodeDecodeError exception is caught,
substitute value for value under the 'block' key of self . __dict__ dictionary .
call the method options . update with an argument kwargs .
do nothing .
raise an CommandError exception with an argument string 'Unknown not import you migrations . ",
do nothing .
try,
call the method self . _delete with argument fname .
if not,
return res .
join elements of self file into a file path, substitute it for potfile .
input_type is a string 'number' .
if key_func is callable object,
if six . PY2 is true and rawdata is an instance of the class six . text_type,
call the function type with an argument string 'ascii', use the result as an argument for the call to the function,
call the function forbid_multi_line_headers with arguments name and self . encoding, substitute the result for name and val, respectively .
docsring
define the method __init__ with 2 arguments: self and source .
call the function force_text with an argument url, return the result .
define the method render with 3 arguments: self, name, value and attrs set to an empty tuple .
return value .
compare is a lambda function with 3 arguments: self, a and integer 0 .
add model to boolean True .
if mimetype is None,
if InvalidOperation exception is caught,
from django . core . management . color import decrement into default name space .
set attr to attr .
if not,
replace '%s' in string "%s, %s %s %s %s . ", where '%s' is replaced with:
if self . default_locale_path is true and call to the method self . _headers . cleaned_data,
if InputStreamExhausted exception is caught,
return boolean True .
if block_context is None,
call the method self . check_migrations .
return an instance of NodeList class .
return boolean False .
if self . _is_rendered is true,
if not,
do nothing .
substitute self . files for value under the 'db_column' key of the defaults dictionary .
if ValueError exception is caught,
decorator function register . filter with an argument is_safe set to boolean False .
define the method get_backend_timeout with 3 arguments: self, text and truncate set to None .
try,
value is None .
define the method prepare_value with arguments self and value .
if six . PY2 is true,
for model in return value of the method router . get_migratable_models called with 3 arguments:
if result is not None,
if initial is not None substitute it for initial_value, if not, initial_value is None .
define the method open with self class instance and mode defaulting to None as arguments .
for every d in self . dicts,
while i is lesser than length of subject and i-th element of subject is not equal to tab .
call the function io . open with 3 arguments: potfile, string 'w' and encoding set to string 'utf-8',
define the function npgettext with 3 arguments: model, style and connection .
for every node in self,
call the method handler . startElement with 2 arguments:
define the function gettext_noop .
define the method get_many with 4 arguments: self, form and commit set to boolean True .
self . vals is an empty list .
get config dictionary element under 'localize' key, if it exists substitute it for filters,
call the method self . _start_relational_field with an argument field .
if self . leave_locale_alone is false,
return obj_pk .
consume_next is an empty string .
call the method __delitem__ . __init__ with an argument key, from the base class of the QueryDict class .
try,
call the method self . read with chunk_size as an argument, substitute the result for data .
get the value under the is_dst key of form . cleaned_data dictionary, if it exists substitute it for propagate,
define the method __setitem__ with 3 arguments: self, header and value .
if self has an 'error_dict' attribute,
call the method _construct_form from the base class of the class QueryDict, return the result .
substitute code for self . code .
convert header to a tuple with 2 elements: value under the header key of the self . _headers dictionary,
otherwise if value under the 'errlog' key of the options dictionary is true,
if opts . fields is true .
define the method __bool__ with an argument self .
input_type is a string 'radio' .
otherwise if file_name is not an instance of the six . string_types,
return klass .
from django . core . mail . message import quote, EmailMultiAlternatives
call the method self . xml . endElement with an argument string 'field' .
call the method datetime_safe . mktime with an argument strip_tags, substitute the result for fs_encoding .
call the self . _add_fallback method, return the result .
call the method formats . sanitize_separators with an argument value, substitute the result for value .
from django . template . base import TemplateDoesNotExist into default name space .
filter_raw_string is a lambda function returns returns self . file . _default_manager field, use it as an argument for property function,
if IndexError or ValueError exceptions are caught,
increment i by one .
call the function warnings . warn with string "django as argument, substitute the result for key .
self . _caches is an empty list .
define the method download with arguments addr and encoding .
remove elements of self . key, substitute it for value .
serializers is None .
define the method __call__ with arguments self and value .
if t . token_type equals TOKEN_BLOCK .
join root and filename into a string, substitute it for lookup_str .
for every ext in pathext,
get the first element of self . forms .
seen_data is an instance of Signal class .
exit the program with an argument 0 .
define the method root_attributes with an argument self .
substitute value for value .
return the result . call the function force_str with 3 arguments: return value of the function force_str called with an argument request,
raise an KeyError with an argument string "<%s: %s %s does not found . ", where '%s' is replaced with name .
call the method MIMEText . __init__ with 3 arguments: self, text and None .
substitute token . source for node . source .
call the function timedelta with an argument integer 0, return the result .
define the method __init__ with 3 arguments: self, unpacked list args and unpacked dictionary kwargs .
substitute callback . __name__ for view_name .
for every basedir in filelist,
define the method dst with 2 arguments self and dt .
call the method self . appendlist with arguments self . children and self . password .
call the function os . path . dirname with an argument filename, substitute the result for top_dir .
import module sys .
call the function smart_text with an argument self . name and an empty string, return the result .
call the function force_text with an argument value, return the result .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
if AttributeError exception is caught,
call the function normalize with an argument loader_name, substitute the result for orig .
return t .
call the function io . open with 3 arguments: work_file set to string 'utf-8' and encoding set to string 'utf-8' as arguments,
call the method self . can_write . release .
get the value under the 'indent' key of the options dictionary, substitute it for base_path .
raise an ValidationError exception with 2 arguments: value under the 'invalid_choice' key of the self . error_messages dictionary,
table_names is an empty list .
call the method self . stdout . write with argument string "No table '%s' with argument, write it to self . stdout .
call the method domain_part . encode with an argument string 'idna', on the result call the method decode on the result .
call the method handler . endElement with an argument string 'feed' .
if self doesnt have attribute,
while loop,
define the method widget_attrs with arguments self and widget .
call the method filename . encode with an argument string 'ascii' .
define the function contains with an argument cls .
call the function f . iteritems with 2 arguments: f and ungettext_lazy for every f in the result,
if value is an instance of six . string_types class,
raise an ValueError with an argument string 'Unknown doesn't %s', where '%s' is replaced with level .
if value is true,
if self is not None if not is None . 0 is boolean True otherwise is boolean False .
if ValidationError exception is caught,
substitute the result for the call to the BaseConverter function,
return self .
delete the first element of self . tokens .
usage is an string '%s where '%s' is replaced with subcommand and self . args .
if first element of bits is not equal to string 'as',
for every middleware_method in self . child_nodelists,
if call to the method fd . GNUTranslations
if first element of text equals a string 'as',
if token . contents equals a string 'nt',
define the method chars with 3 arguments: self, filename, truncate set to None and html set to boolean False .
if content is None .
call the method write with an argument sep .
return an list containing self . value and self . _body .
chunks is an empty list .
define the method delete_many with 2 arguments: self and shell set to None .
if not,
if ch is not contained in unicode,
define the function to_locale with an argument language .
define the function lower with 2 arguments value and arg .
call the method self . __dict__ . copy, substitute the result for obj_dict .
substitute token for self . token .
if TypeError or VariableDoesNotExist exceptions are caught,
from django . db import connection into default name space .
if value under '()' key of config dictionary is not equal to integer 1,
call the method self . msgmerge_options with request, resolver and return value of the method,
help is an tuple containing 3 entries: return value of the call to the function,
try,
call the method kwarg_re . get with an argument lang_code, substitute the result for exc_value .
get the value under the 'exclude' key of the substitute it for transfer_encoding .
from __future__ import unicode_literals into default name space .
try,
for every path in data,
substitute new_args for options .
get attr attribute from the object, substitute it for value .
if language_code is not contained in self . __dispatch,
if self . value equals self . choice_value return boolean True, otherwise return boolean False .
define the method file_size with an argument self .
call the method parser . temporary_file_path .
define the function get_language_bidi .
remove is an empty list .
cc is a string 'cache .
for every i and v in enumerated iterable value,
if cc is contained in cc
try,
if e doesnt have an 'django_template_source' attribute,
if errors is true,
try,
from django . core import signals into default name space .
if widgets is not None,
call the function os . stat with an argument filename, substitute the result for stat .
append name and string ' . ' .
if termios is true,
define the function to_locale with an argument language .
call the method datetime_safe . attrgetter with an argument token, substitute the result for traceback .
return None .
call the method self . get_exception_response with an argument self . mod, substitute the result for self . stream .
get tmpdir attribute of the d object, call the result with an argument unpacked dictionary kw .
convert data to a integer, convert it into a list, return it .
substitute p-th for s .
define the method __init__ with 4 arguments: self, name, sysid set to None and username set to None .
raise an
define the method __repr__ with an argument self .
define the method add_handlers with arguments self and name .
substitute exc for value under the 'number' key of the kwargs dictionary .
decorator python_2_unicode_compatible,
content is an instance of OutputWrapper class, created with an argument content .
if KeyError exception is caught,
replace all the result in tok . replace the result for tok .
call the method bit . append with an argument bit .
define the method add_arguments with 2 arguments: self and parser .
define the function escapejs_filter with an argument model_identifier .
set filter_func attribute of filter_func object to value .
return obj_pk .
call the method __init__ from the base class of the class SortedDict, with 2 arguments: unpacked list args and unpacked dictionary kwargs .
increment chunk by one .
if not,
if not,
define the function get_language_from_request with 2 arguments value and arg set to urlconf .
if bytes is false,
append templatetag_module to the result .
call the method to_python from the base class of the class Command, with an argument data, substitute the result for f .
result is a string exclusive
template_source_loaders is None .
remove first element from p-th .
return value .
finally perform,
return obj_dict .
if out_log is true,
call the function format_html with 2 arguments: string 'idna', and unpacked dictionary kwargs, return the result .
trimmed is a integer 3 .
call the function getInnerText with 3 arguments: model, style, connection and connection .
substitute the return value of the function os . USE_TZ called with an argument path, substitute the result for nodelist_loop .
define the function unregister_serializer with an argument lang_code .
call the function get_template_from_string with 3 arguments: source, origin and template_name, substitute the result for template .
define the method end_object with arguments self and obj .
if auto_id is true and 'id' is not contained in widget and attrs,
if not,
if not,
define the function _strip_once with an argument value .
try,
if _cookie_encodes_correctly is true and file_ext is true,
from django . conf import settings into default name space .
get the value under the library_name key of the options dictionary, if it exists substitute it for an argument value,
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
get the value under the 'database' key of the fail_silently dictionary, substitute the result for simple_url_re .
call the method self . get_backend_timeout with argument timeout, substitute the result for app_models .
call the function getInnerText with an argument val, use the result as an argument for the call to the function,
args is an empty list .
strip list of the first first element of the result of the elements of the result, substitute it for value .
call the method urlresolvers . set_urlconf with an argument urlconf .
if self . verbosity is greater or equal to integer 2,
call the function iri_to_uri with an argument key_salt, substitute the result for value .
call the method parser . add_argument with 5 arguments: string '--extension', action set to string 'store', dest set to string 'append',
substitute i-th element of self . forms index for form .
otherwise if message is an instance of list type,
call the function six . BytesIO .
where '%s' is replaced with self . error_class and '%s' is replaced with self . id . raise an error_class exception with an argument string "django-objects" .
for every location in format_module_path,
call the validators . deconstruct method with an argument max_value .
do nothing .
if not,
call the method parser . add_argument with 2 arguments: string 'args' and nargs set to '+',
call the method collections . new_datetime with an argument lambda strip the first element of the result, substitute the result for forms .
return encoding .
return boolean False .
break from the loop execution .
call the method base . validate with arguments self and value .
call the method django . delete_first_token return the result .
skip this loop iteration .
if not,
try,
raise a InvalidTemplateLibrary exception with an argument string 'Unknown to to use the result and name .
try,
raise an ValidationError exception with an argument errors .
call the method self . data . day .
if i is greater than or equal to the result of the method form . has_changed
call the method handler . endElement with 2 arguments: result of the method self . signature
open writer . path file in mode,
call the method self . compile_filter with an argument token, substitute the result for filter_expression .
call the method parser . parse .
call the method self . error_class with an argument v, for every error in the result .
call the method self . stdout . as_string, write the result to self . stdout .
define the method make_key with 3 arguments: self, key and version set to None .
from django . apps import apps into default name space .
call the method formats . sanitize_separators with an argument value, substitute the result for value .
try,
define the method __init__ with arguments self and email_message set to None .
extend migration . error_dict list with migration .
call the function open_method with 3 arguments: self . style and connection, set to boolean True .
call the function allow_lazy with 2 arguments: normalize_newlines and six . text_type, substitute the result for text .
return self .
skip this loop iteration .
f . required is boolean False .
return self . name .
call the method readline . write with an argument update_watch .
return boolean True .
define the function ugettext with an argument message .
call the method field_stream . copy, substitute the result for options .
substitute first element of s for f .
call the method self . _update_errors with arguments content and content, substitute the result for attachment .
raise an TypeError exception with an argument string "Base36 object object .
define the method create_token with 5 arguments: self, token_string and in_tag .
return dec .
if pattern . starts is true and if pattern . starts is false or ip_str is false and call to the function normcase,
try,
substitute the result for parser .
try,
call the method self . _has_expired with an argument f, if it evaluates to false,
if ch is contained in color_names,
property decorator,
replace every occurrence of request . path_info for lang_code .
call the function force_text with an argument value for every value in the result,
call the method self . _close_files .
call the method parser . delete_first_token .
if sequence_sql is true,
call the method self . stdout . write with string '--no-location' as an argument, write the result to self . stdout .
get the attribute doesnt from the self object, if it exists return boolean false, otherwise it is boolean False .
valid boolean False .
if subcommand is contained in app_list,
call the method self . style . write with an argument string "Invalid %s\n" for %s . %s . ",
try,
call the method self . data . groups, substitute the result for extracted .
call the function is_protected_type with an argument unique_check, append it to the result .
call the method parser . compile_filter with an argument value, substitute the result for value .
raise an TemplateDoesNotExist exception with an argument name .
raise an CommandError with an argument string "errors must %s %s %s . ",
if not,
if record . exc_info is true,
define the method c with an argument self .
from django . core . exceptions import ImproperlyConfigured into default name space .
return lookup_view .
if value is true,
self . _non_form_errors is None .
return kwargs .
join elements of result of the function force_text called with an argument unpacked list args,
substitute func . __doc__ for compile_func . __doc__ .
from django . utils . encoding import force_text and BaseForm into default name space .
raise an ValueError exception with an argument string "Key '%s' '%s' for key .
for every field in self . fields,
get lambda attribute of lambda function that returns self . file . required_css_class field, use it as an argument for property function, put the result in plan .
return errors .
define the function runfastcgi with 3 arguments: app_config, style and connection .
remove first element from self . tokens .
substitute first element of d for d .
return self . data . hour .
substitute attrs for attrs .
define the method render with 2 arguments: self and context .
call the method parser . parse with 2 arguments: tuple with 2 elements: tuple with 2 elements: tuple with an element strings
if six . PY3 is true,
otherwise if name is contained in lib . filters .
for every e in return value of the method e . mode called with an argument e .
raise an AttributeError exception with an argument string 'Unknown cannot set content set to no . " .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
call the function curry with 2 arguments: _string_concat and method, substitute the result for decode .
raise an error with an argument host .
call the method self . is_valid .
get the value under the 'database' key of the options dictionary, substitute it for database .
delete 'args' .
for every k in sorted_items,
substitute complain for number_value .
property decorator,
call the method logging . getLogger with an argument _meth_func, substitute the result for logger .
call the function next_space_index with 2 arguments: subject and i, substitute the result for i .
call the __bool__ method on the result with an argument self, return the result .
call the function func with 2 arguments: unpacked list args and unpacked dictionary kwargs, substitute the result for value .
from django . core . cache . backends . base import BaseCache and DEFAULT_TIMEOUT into default name space .
for every w in self . widgets,
define the method close with an argument self .
substitute the result for help .
return wrapper .
if serializers is not contained in settings . CACHES,
call the method __init__ from the base class of the class SortedDict, with an argument data .
substitute help_texts for value under the 'declared_fields' key of the attrs dictionary .
if Exception exception is caught,
substitute i-th element of self . initial for value under the 'initial' key of the defaults dictionary .
substitute pattern . toks for callback .
define the method start_serialization with an argument self .
return self . data . hour .
try,
call the function object, substitute the result for string_concat .
call the method self . empty_variable with an argument token,
_urllib_response_moved_attributes is a property object with a getter function .
return the result of the function _ called with an argument level,
convert x into a string and return value of the function force_text with an argument x,
self . abstract is boolean False .
define the method clean with arguments self and value .
do nothing .
get the value under the DEFAULT_DB_ALIAS key of connections dictionary, if it exists substitute it for executor .
call the method self . _add_fallback .
get the value under the key 'interactive' of the options dictionary, substitute it for fixture .
ser_fmt is None .
define the method __init__ with 4 arguments: self, META and upload_handlers set to None .
from django . utils . translation import ugettext_lazy and thread into default name space .
convert self into a list and return it .
call the function runfastcgi with an argument stream .
substitute value under the key key of self . find_template_cache dictionary for result .
call the method logging . getLogger with an argument logging_config, substitute the result for logger .
call the method self . reset .
if self . selected_fields is true and call to the function os . path . dirname evaluates to true,
append tuple containing 2 entries: k to a list for every k in k,
define the function activate with an argument language .
call the method __init__ from the base class of the class Command, with an argument data .
substitute attrs for self . attrs .
substitute template for self . template_name .
call the method self . nodelist_true . render with an argument context, return the result .
substitute max_expr for self . mod .
substitute fcntl . LOCK_SH for object_data .
get 'value' attribute from the self object, if it exists substitute the result for callback .
define the method get_many with 4 arguments: self, name, value, value, attrs set to None and choices set to an empty tuple .
return self . __offset .
derive the class BaseFormSet from the HttpResponse base class .
define the function include_is_allowed with an argument line .
call the method handler with an argument level, with an argument level .
define the method get_dump_object with arguments self and unixfrom set to boolean False .
define the method __copy__ with an argument self .
if KeyboardInterrupt exception is caught,
if keys is true,
call the function force_text with 2 arguments:
define the method __getattr__ with arguments self and value .
for every field in return value of the function normcase called with 3 arguments:
return chunk list of chunk .
substitute mtime for iterlists .
call the method node . render with an argument context, append the result to nodelist .
return nothing .
otherwise if total_forms is greater than integer 0,
get the value from the options dictionary under the key, substitute it for self . app_label .
if not,
allow_multiple_selected is an integer 0 .
if length of args is lesser than integer 2,
call the function re . compile with an argument middle, substitute the result for work_file .
if errors is true,
call the method value under the 'liveserver' key of the item dictionary .
call the function settings . is_overridden with an argument string 'MANAGERS', if it evaluates to true,
call the method self . stdout . write with an argument string 'field' . .
if plan is true,
import module logging .
call the function allow_lazy with 2 arguments: localedir and six . text_type, substitute the result for TemplateLoader .
define the function prefix with 2 arguments: opname and func .
define the function _wrapped_view with 2 arguments: stream and fixture_labels .
try,
call the function blankout with 2 arguments: part and 'P', write the result to out .
set name attribute of the obj object .
return obj .
from django . apps import apps into default name space .
substitute value under the INITIAL_FORM_COUNT key of the d dictionary for prefix .
define the method _construct_form with 3 arguments: self, i and unpacked dictionary kwargs .
import module re .
_urllib_response_moved_attributes is a lambda function with 2 arguments: self . _dir and integer 0 .
derive the class CsrfTokenNode from the Lexer base class .
if widget is false,
for every piece in filelist,
try,
substitute self . _meta for opts .
do nothing .
if ValidationError exception is caught,
call the method os . path . expanduser with an argument fixture_name .
from django . core . management . color import no_style into default name space .
substitute FILE for retval .
try,
call the function force_str with an argument msg, use the result as an argument for the call to the self . creation . write method .
if newline is contained in self . __starttag_text
call the method self . add_truncation_text with 2 arguments an empty string and truncate, return the result .
define the method __ne__ with arguments self and other .
call the method connection . ops . is_multipart, if it evaluates to true,
for every w in self . widgets, return the resulting list .
return errors .
call the function _load_serializers .
call the method attrs . copy, substitute the result for self . attrs .
call the method self . setlistdefault with an argument key, append the result to the result .
derive the class Serializer from the base . Serializer base class .
if call to the method router . find_module with arguments self . using obj and obj . __class__ .
call the method m . reverse .
_iteritems is a string _iteritems .
return boolean False .
if _serializers is false,
from django . db . migrations . cookie import everything into default name space .
year dt . year is integer dt .
call the method self . connection . sql_flush with arguments: file_name,
define the method to_python with arguments self and data .
for every item in self . items,
get config dictionary element under the 'name' key, if it exists substitute it for name, if not name is an empty string .
for every app_config in return value of the method apps . get_app_configs,
substitute str for self . __language .
substitute value under the 'debug' key of the root dictionary for logger .
define the function save_m2m .
if six . PY3 is true,
if call to the function MovedModule with an argument s, evaluates to true,
define the method __str__ with an argument self .
substitute '%s' for self . _servers .
substitute item_date for fn .
call the method re . sub with 2 arguments: string '1' and errors set to result of the function m . group
substitute used_name for _format_modules_cache .
if template_dirs is true,
if data_list is true,
if KeyError renamed to exc, exception is caught,
import module types .
return boolean False .
c is a c .
append list containing first element of self . msgmerge_options to the result .
raise an exception .
if loaded_objects_in_fixture equals integer 0,
if app_label is not contained in executor . loader . migrated_apps,
substitute i for p .
define the function templatize with 2 arguments: src and origin set to None .
substitute context for self . context .
use the result as an argument for the call to the params . from_apps method . if style is true,
for every p in parts,
call the method LocaleRegexProvider . execute .
output is an empty list .
from django . template . base import TemplateSyntaxError HiddenInput, Node, Node and DebugParser into default name space .
call the method content . decode with an argument string 'utf-8', substitute it for content .
call the method validators . create_parser with an argument regex, substitute the result for self . bcc .
from django . utils . encoding import force_text and python_2_unicode_compatible into default name space .
call the method parser . add_argument with an argument lib .
define the method __dir__ with an argument self .
for every option in handlers,
if etags is contained in settings . LANGUAGES return boolean True, otherwise return boolean False .
if e has an 'natural_key' attribute and e . code is contained in self . error_messages,
if s is an instance of six . NullDevice
append string '%s_%s' to field_type .
__all__ is a tuple with 2 elements: strings 'django' and 'js' .
return boolean False .
get frag attribute of the settings object, substitute it for backend_cls .
define the method load_template with 3 arguments: self, DEFAULT_CACHE_ALIAS and filters .
split ip_str by ':', substitute the result for new_ip .
if six . PY2 is true,
call the method self . merge with an argument lookup_str .
for every model in app_models,
call the method Model . _meta . table_names, substitute the result for resource .
if app_config . models_module is None,
LOCK_NB is a string "0 .
derive the class TextNode from the Widget base class .
define the method regex with an argument self .
call the method Model . _meta . _meta . get_field with 3 arguments:
if self . use_natural_foreign_keys is true and field . rel . to has an attribute '_fqdn',
return boolean False .
from IPython . dom import BaseFormSet and check_for_language into default name space .
call the function six . reraise with 3 arguments: display_name,
finally perform,
call the method apps . setdefault with 3 arguments: pattern . app_name empty list .
substitute last element of output for format .
call the method self . xml . endElement with an argument string 'natural' .
derive the class ContextDict from the BaseLoader base class .
derive the class Serializer from the object base class .
call the method __init__ from the base class of the class ModelMultipleChoiceField, with 3 arguments: attrs and time_format .
define the method is_url with 2 arguments: self and unique_check .
if not,
intrans is an string "0123456789abcdefghijklmnopqrstuvwxyz" .
define the method close with an argument self .
if not,
try,
get format_type attribute from the mod object, substitute it for view_func .
call the function m . groups, substitute the first element of the result for d .
if middle ends with string ';',
call the method parser . add_argument with 3 arguments: string 'args', action set to string 'store_true',
bits is an instance of StringOrigin class, created with an argument self . contents .
from email . header import Header into default name space .
if func is None,
if not,
substitute the result for location key of the environ dictionary exists . call the function quote with 2 arguments: dotted_path and location .
call the method host . rsplit with 2 arguments character character ':', substitute the result for bits .
where '%s' is replaced with taglib_module .
decorator deconstructible, with an argument error_msg .
try,
call the function unescape_string_literal with an argument subcommand, return the result .
substitute link_prev for number_value .
from django . db import connections, router as _ and ungettext_lazy into default name space .
for every model in model_list,
call the method constant_re . format with 3 arguments: string '^/' and host set to self . file,
get the value under the 'required' key of the self . management_form dictionary, substitute the result for media .
if not,
define the method add_fields with 3 arguments: self, form and index .
call the function type with an argument truncate, if it is true,
append the result to m and substitute the result for m .
is a property object of the Signal object for count .
define the method filter with 2 arguments: self and record .
if s equals integer 6,
if Resolver404 is true,
from __future__ import absolute_import into default name space .
try,
if not,
call the function func with 2 arguments: request and response, substitute the result for response .
call the method blankout on the result with an argument integer 1, substitute the result for out .
call the function m . group with an argument localedir, substitute the result for year .
define the method clean with an argument self .
define the method validate with arguments self and value .
raise an ValueError exception with an argument string 'Unable to configure handler formated with name and e .
return a tuple with 2 elements: tuple containing 3 of integers from integer 0,
call the method f . chmod with arguments self and self . domain .
raise an ValueError exception with an argument string 'Unable to configure %r: formated with name and e .
call the method node . getElementsByTagName with an argument string 'ascii', if it evaluates to true,
call the method flatatt with an argument __new__ substitute the result for klass .
substitute empty_label for self . empty_label .
call the method datetime . datetime . strptime with 2 arguments: result of the function force_str called with 2 arguments:
return nothing .
from django . conf import settings into default name space .
if it file path exists,
substitute filepath for self . filepath .
call the function allow_lazy with 2 arguments: created_models, six . text_type, substitute the result for int_part .
convert self into an boolean, return it .
import module os .
define the method handle with 3 arguments: self and unpacked dictionary options .
self . _errors is None .
define the function escape with an argument text .
call the function convert_old_style_list with an argument list, substitute the result for self . block .
append work_file to base64d .
substitute val for self . _encoding .
substitute the length of result for middle .
break from the loop execution .
derive the class MemoryFileUploadHandler from the HttpResponse base class .
if not,
convert major into a string, return it .
if t is not None,
substitute first element of nonlocal_root for root .
return ZERO .
define the method __init__ with an argument self .
substitute args for self . __language .
define the method _iteritems with an argument self .
derive the class BaseMemcachedCache from the DjangoRuntimeWarning base class .
append ch to the list .
define the method render with 2 arguments: self and context .
if AmbiguityError exception is caught,
call the function force_text with an argument value, substitute the result for value under the 'language' key of final_attrs dictionary .
for every registry in open_tags,
EndToken is an instance of EndToken class .
call the function get_template with an argument file_name, substitute the result for t .
if KeyError exception is caught,
put first element of answer to the end of bitwise substitute it for answer .
define the function module_has_submodule with 2 arguments: package and module_name .
substitute the result for value under the NEXT key of the substitutions dictionary . call the method render with an argument domain_part
call the function force_text, with an argument text, substitute the result for text .
call the function lazy with 2 arguments: func . func, unpacked list args2 and unpacked dictionary kwargs, return the result .
if length of language is greater than integer 2,
if template_name_list is not equal to integer 0,
skip this loop iteration .
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
if key is true, substitute it for key . call the function make_key with 2 arguments: args and False,
return self . __offset .
call the function force_text with 2 arguments: src and settings . FILE_CHARSET, substitute the result for __nonzero__ .
if self . pos is greater than or equal to length of self . tokens
consume_next is boolean True .
define the function pgettext with 2 arguments: context and message .
join statements into a string separated by newlines, return it .
if args is false,
if fake is true,
call the method settings . _setup .
call the method self . validate_key with argument key .
use global variable templatetags_modules .
define the method __init__ with 11 arguments: self, queryset set to empty_label and use_tz set to None,
raise an NotImplementedError exception with an argument string 'subclasses of Storage must provide a BOM method' .
substitute message for self . message .
call the method tpl . format with 2 arguments: self . sysid and self . pubid .
call the function __import__ with an argument name .
call the method self . is_url with an argument used .
call the method nodelist . render with an argument context, return the result .
call the method parser . add_argument with 5 arguments: string '--database', action set to string 'store_false',
from django . core . cache . backends . base import BaseCache and DEFAULT_TIMEOUT into default name space .
if not,
if args is an instance of datetime . ConvertingList and first element of args is true,
call the method to_python from the base class of the class Command, with an argument value, return the result .
return callback and empty respectively .
define the method pprint with 2 arguments: self and commit set to boolean True .
if line is true,
get the value under the key key of the self . cookies .
call the method widget_attrs from the base class of the class SimpleTemplateResponse, substitute the result for attrs .
if name attribute of func object,
decorator stringfilter,
return etags . INSTALLED_APPS .
substitute content_length for self . content_length .
define the method render with 2 arguments: self and context .
if html_message is true,
self . max_digits is a list containing an empty string .
define the method __init__ with 3 arguments: self, exc_type, unpacked list args and unpacked dictionary kwargs .
call the function blankout with 3 arguments:
otherwise if call ends with an empty string,
define the method __init__ with 2 arguments: self and args .
raise an CommandError exception with string "Unable find a migration . ', where '%s' is replaced with:
try,
for every i in range of integers from 0 to length of result,
decorator function register . filter with an argument is_safe set to boolean False .
call the method handle from the base class of the class Command called with 5 arguments: takes_context, bases and unpacked dictionary options .
if opts . fields is None and opts . exclude is None,
call the function _ with an argument context_instance, return the result .
raise an MultiPartParserError exception with an argument,
if UnicodeError renamed to e, is caught,
substitute elements of text for out .
raise an base exception of the class base . DeserializationError exception with an argument node, node set to an empty set,
if cls . _delegate_text is true,
encode is an lambda function with 2 arguments: result and v .
substitute sequence for self . block .
call the method self . write_items with an argument handler .
call the method load from the base class of the class QueryDict, with argument tempdir .
for every loader in objects,
call the self . stdout . write with string "No changes in return value of the method,
if message is an instance of SafeData
call the function signals . request_finished . connect with an argument lookup_str .
if o is contained in model_fields,
call the method self . create_select with 3 arguments: name, self . year_field, value,
if not,
otherwise if _locs_ is None,
call the method block_context . translate with an argument hmac . day, use the result as an argument for the call to the function . update .
substitute first element of renamed_method for forms_to_delete .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
return boolean False .
substitute field_params for field_params .
call the method handler . startElement with 2 arguments:
define the method _reset_dicts with 3 arguments: self, attrs set to None and unpacked dictionary kwargs .
for every bit in self . nodelist_empty,
call the function os . path . basename with an argument fixture_name, substitute the result for fixture_name .
append self . choices to args .
return result .
call the function timedelta with an argument chunk, substitute the result for stamp .
from django . utils . encoding import force_text into default name space .
try,
return boolean False .
define the method extract with 2 arguments: self and to_path .
substitute Iterator for self . cdata_tag .
skip this loop iteration .
self . choices is an empty list .
if six . PY2 is true,
define the method get_nodes_by_type with 2 arguments: self and target_var .
if templatetags_modules is false,
call the function allow_lazy with arguments escape and six . text_type, substitute the result for d .
return an instance of SafeText, created with an argument s .
from django . core . management . base import BaseCommand and CommandError into default name space .
substitute definition for value under the role key of the META dictionary .
define the function b64_hmac with 3 arguments: singular, model and fixture_files set to boolean False .
return model_list .
call the method parser . add_argument with 5 arguments: string 'args', metavar set to '+', nargs set to 'append',
call the method token . split_contents, substitute the result for bits .
return num_sent .
if it starts with return value of the function object, called with 4 arguments:
convert dirname to the string, return the result .
if Exception, renamed to e, exception is caught,
skip this loop iteration .
if last element of result is equal to integer 2,
define the function unescape_string_literal with an argument library_name .
call the method self . _close_files .
call the function warnings . warn with string "django as argument,
from django . sax . debug . debug import sql_flush into default name space .
call the method self . build_attrs with 2 arguments: attrs and name, substitute the result for final_attrs .
convert ret to boolean and return it .
try,
from django . utils import six into default name space .
from django . utils import six into default name space .
call the method match . end, substitute the result for start .
call the method self . __cast, return the result .
substitute the result for l . call the function blankout with 2 arguments: negative offset . Filter substitute the result for l .
call the method serializers . get_migratable_models with 4 arguments: ';' and using set to self . using,
if sys . platform equals string 'nt',
define the method __exit__ with 4 arguments: self, exc_type, exc_value and tb .
define the method __init__ with 4 arguments: self, name, content and content_type set to an empty string .
call the method datetime . now .
if file path of path path is not a directory,
define the method emit with 3 arguments: self, length, truncate and truncate,
define the method render with 2 arguments: self and context .
substitute title for sublist_item .
self . _unget_history is an empty list .
define the function find_template with request, OSError, defaulting to None, recursive set to None,
if s is an instance of six . text_type class, or six . text_type,
append int_part_gd to out .
if self . setting is true,
for every statements in field_stream,
define the method _get_scheme with an argument self .
if self . path equals to other . path, return boolean True, otherwise return boolean False .
values is boolean True if the values doesnt exists,
call the function fn with 2 arguments: unpacked list args and unpacked dictionary kwargs .
from __future__ import unicode_literals into default name space .
call the function mark_safe with an argument contents .
call the function lazy with 2 arguments: func and unpacked dictionary kwargs .
append boundary set to string 'replace',
if not self is contained in _DJANGO_DEPRECATED_LOCALES,
derive the class WSGIRequest from Node base class .
if not,
define the method start_object with arguments self and obj .
if value is not contained in result,
try,
if col_name is contained in list containing 2 elements,
return value .
if not,
help is a string "Creates the CREATE name(s) . " .
define the function clear_url_caches .
call the method signals . got_request_exception . send with sender set to self . __class__ and request set to request .
call the function force_text with an argument text, substitute the result for text .
substitute _urllib_robotparser_moved_attributes for widget . input_type .
define the method get_unique_error_message with arguments self and path .
call the method validate with an argument value from the base class of the class ChoiceField .
call the function datetime . datetime with 2 arguments: now . year, now and now . minute, substitute the result for now .
take integer 1 and integer 60, use the result as an argument for the call to the function _get_timezone_name,
define the method handle_app_config with 3 arguments: self, app_config and unpacked dictionary options .
define the method content with 2 arguments self and value .
import module sys .
define the method _base_set with 4 arguments: self, META and app_labels .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
raise an CommandError exception with an argument string 'The received %r", where '%s' is replaced with name .
from django . apps import apps into default name space .
return cached .
try,
if self . max_value is not None,
call the function force_text with an argument options, substitute the result for node .
call the method loader . get_template with an argument template, return the result .
return boolean True .
return boolean True .
substitute i for value under the RESULT key of the loop_dict dictionary .
self . callback is None .
if self . args is true,
while start is lesser than length,
call the method self . fields . items, for every name and field in the result,
call the function msvcrt . get_format_lazy substitute the result for trimmed .
if six . PY2 is true and path is not an instance of six . text_type,
define the method __deepcopy__ with 2 arguments: self and memo .
self . bad_cookies is an empty set .
define the method load_template with 3 arguments: mcs, attrs and ignore_failures set to boolean True .
if server is an instance of six . string_types,
if not,
for every key in self,
kw is a dictionary with an entry for result of the function six . iteritems,
if filename ends with character '/' or '/' is true,
if integer 3 of integers 3 to integer 3 elements: integers 1 and 3 is lesser than integer 3 .
call the method existing . print_exc .
used_column_names is an empty list .
yield obj .
nodes is an empty list .
substitute the result for the call to the function flatatt with 2 arguments: unpacked list app_labels and unpacked dictionary kwargs, append the result to the result . if tuple with 2 elements: integer 6,
try,
import module yaml .
return attrs .
substitute lock, for checks . _moved_attributes .
if not,
inplural is boolean False .
if value under the 'feed_copyright' key of the self . feed dictionary is not None,
for every member and node in self . keyOrder,
write string " No %s\n" . " to self . stdout stream .
substitute _itervalues for values .
call the method result . setlist with 2 arguments: key, result of the function copy with an argument value,
otherwise if action equals a string '^',
return s .
if value is false and values is an instance of list type,
call the method node . render with an argument context, return the result .
call the method self . _update_errors with an argument filename, substitute the result for found .
if Exception exception is caught,
define the method handle_raw_input with 3 arguments: self, takes_context, META and encoding set to None .
call the method self . path with an argument name, substitute the result for name .
return nothing .
if LookupError exception is caught,
msg_count is a integer 0 .
from django . utils . html import conditional_escape and format_html into default name space .
substitute self . _wrapped for forms_to_delete .
from __future__ import unicode_literals into default name space .
otherwise if content is not an instance of Token class,
from django . core . mail . backends . base import BaseEmailBackend into default name space .
if k equals a string 'bg',
call the method self . nodelist . render with an argument context, return the result .
define the method __deepcopy__ with arguments self and memo .
return context_extras .
define the method scheme with an argument self .
define the method close with 2 arguments: self and unpacked dictionary kwargs .
if OverflowError is caught,
call the function no_style with an argument taglib, if the result is not None,
if not,
join elements of cwords into a string, substitute it for content .
substitute environ for self . environ .
call the method self . add_item_elements with 2 arguments: handler and item .
call the method self . empty_variable with an argument value .
return obj .
try,
join f and f into a file path, substitute it for f .
define the method __delattr__ with 3 arguments: self, form and commit set to boolean True .
return bf_errors .
call the function settings . is_overridden with an argument settings . LANGUAGES .
define the method __init__ with 6 arguments: self, attrs set to None, years set to None, max_num set to None .
status is an string '%s formated with response . status_code .
define the method setlistdefault with 2 arguments: self and config .
multiply self . __offset . substitute the result for offset .
call the function msvcrt . strftime with an argument logging_config, substitute the result for changeset .
decorator deconstructible,
set the value under the db key of the self . _caches dictionary .
call the method self . data . weekday, use the result as an argument for the call to the function self . data . weekday,
if self . required is true and value is false,
from django . forms . fields import everything into default name space .
call the method token . split_contents, substitute the result for bits .
if not,
do nothing .
call the function time . fromtimestamp with an argument integer 0, substitute the result for tt .
call the function six . iteritems with an argument dict_, for every item in result,
call the method sys . stderr . write with 3 arguments:
define the method is_url with arguments self and handler .
substitute the result for self . stderr . get the value under the 'verbosity' key of the options dictionary, if it exists substitute it for self . stderr .
if key is not equal to STATUS_OK,
if not,
call the method path . encode with an argument fs_encoding, return the result .
call the method self . add_initial_prefix with an argument context, substitute the result for filters .
define the function loads with an argument version set to None .
derive the class Command from the BaseCommand class .
if self . domain equals to string 'replace' .
call the function _checkLevel with an argument level, result with an argument level .
self . _container is an instance of MultiValueDict class .
define the method _ipython_pre_100 with an argument self .
return total_forms .
self . stream is None .
call the function local, with an argument args .
substitute as_string for __iter__ .
append name to self . _changed_data .
from django . core . management . utils import XMLGenerator into default name space .
derive the class ModelChoiceField from the SyndicationFeed base class .
call the method self . _assert_mutable .
return value .
substitute buffer for memoryview .
call the method self . clear .
ser_fmt is None .
define the method new_file with 5 arguments: self, field_name content_type and content_length set to None .
substitute _iteritems for items .
substitute force_text for i .
substitute parent_widget for self . use_natural_primary_keys .
return the value under the 'HTTP_HOST' key of the self . filters dictionary .
call the method self . xml . addQuickElement with 2 arguments: return value of the method value . addQuickElement
define the function media_property with an argument node .
get the next element of the iterable pattern_iter, assign the result for ch and escaped, respectively .
substitute lookup_view for binary_type .
if not,
if item is an instance of the result of the generator .
substitute CheckboxFieldRenderer for ns .
substitute settings . TEMPLATE_STRING_IF_INVALID for current .
call the method gettext_module . __init__ with 3 arguments: self and unpacked list args and unpacked dictionary kwargs .
for every attr in _urllib_parse_moved_attributes,
call the traceback . close method .
return WRAPPER_ASSIGNMENTS .
try,
do nothing .
return self .
substitute first element of self . validators for result .
call the method self . stdout . write with an argument string "[%s]", where '%s' is replaced with self . stdout .
if nodelist is true,
substitute name for self . name .
define the function deactivate_all .
sql_files is a integer 0 .
try,
decorator python_2_unicode_compatible,
substitute BOOL for UnlockFileEx . restype .
from django . utils import six into default name space .
if not,
substitute length of values for EscapeString .
call the function force_text with 2 arguments: result of the function force_str called with an argument url,
convert value into an integer and substitute it for value .
define the function get_major_version with an argument value .
if number is greater than self . addr,
if changes is true,
return the result of the call to the method self . as_widget . value_from_datadict called with 3 arguments: self . __class__ . fields,
call the method translation . get_language, substitute the result for value .
substitute list d of d for d .
do nothing .
try,
derive the class Tok from the _LazyModule base class .
return nothing .
return doy .
substitute prefix for self . prefix .
return an instance of the class Truncator, called with 2 arguments: value and result of the function quote
try,
substitute messages . error_list for value under the field key of the self . error_dict dictionary .
while first is true,
substitute value under the 'interactive' key of the options dictionary for self . interactive .
get attribute attribute from the settings object, if it exists substitute it for self . file_path .
raise an NotImplementedError exception with an argument string 'subclasses of Serializer must provide a method' method' .
call the method os . path . abspath with an argument self . file_path substitute the result for self . file_path .
if key is contained in d,
for every post_callback in messages,
return settings . DEBUG .
call the function normalize with value and use_l10n as the arguments, substitute the result for value .
call the method self . _resolve, substitute the result for result .
call the function _trans . gettext_noop with an argument message .
import module os .
if TypeError or ValueError exceptions are caught,
call the method self . as_widget with 2 arguments: return value of the function self . __cast,
finally perform,
call the method _illegal_formatting . replace with 2 arguments:
call the method self . _assert_mutable .
and third element of self . msgattrib_options to an empty list, substitute the result for trimmed .
if not,
if not,
import module warnings .
call the function module_has_submodule with an argument app_config . module if it evaluates to true,
raise an MultiPartParserError with an argument string "Invalid content content exists where '%s' is replaced with content_length .
substitute MultipleHiddenInput for SafeString .
help is a tuple containing string "Creates the application data for the given data . ' .
call the function file_move_safe with 2 arguments: config_string and cache .
substitute style . f_globals for style .
for every level in reversed list for every level in result, for every level in result,
call the method payload . fk . _default_manager with an argument cls . _default_manager . to and cls . rel . db_table
if TypeError exception is caught,
import module django .
derive the class LoadNode from the object base class .
return self . file . closed and self . file .
streaming is boolean True .
join the choice into a string, return it .
call the method response . has_header with dictionary as an argument, if it evaluates to True,
move is an empty string .
self . _current is None .
if token . contents equals string 'else',
call the function _add_doc with 2 arguments: u and '%s' .
call the function smart_text with an argument instance, return the result .
from django . core . management . sql import ProjectState into default name space .
substitute tok . next for state .
return nothing .
raise an TemplateSyntaxError exception with an argument string "Unable to takes must a Django . ' .
substitute the result for value under the i key of the html dictionary . append space .
if can_fail is true,
get the value under the 'indent' key of the options dictionary, substitute it for self . DSTDIFF .
if ValueError, or TypeError renamed to e, exceptions are caught,
get the value under the 'charset' key of the params dictionary, substitute it for options .
if cache_choices is not None,
if string '()' is contained in config,
import module sys .
call the method appendlist from the base class of the class QueryDict, with 2 arguments: key and value .
used_column_names is an empty list .
return response .
_empty_value is an empty list .
endless loop,
if self . verbosity is greater or equal to integer 2,
substitute max_expr for self . _callback_str .
define the method get_many with 2 arguments self and escape_html set to boolean False .
if code is contained in _supported,
substitute value under f . name key of form dictionary for value under 'localize' key of kwargs dictionary .
try,
and result of the function, call the function import_module with an argument string "%s converted into a string, return the result .
call the method self . increment with an argument self . keyOrder, return the result .
if ImportError, renamed to e, exception is caught,
if p equals integer 0,
call the method base64 . _reverse_with_prefix with an argument s, if the result is smaller than integer 0,
decorator python_2_unicode_compatible,
derive the class NullBooleanSelect from the Exception base class .
call the method self . _cull .
if neg is true,
if not,
define the method getlist with 3 arguments: self, key and default set to None .
if quote_double_quotes is true,
call the method self . connection . runshell
if not,
get the value under the 'fields' key of the html dictionary, if it exists substitute it for content_type and content_type_extra .
plural is an empty list .
return a list with an element .
call the function render_value_in_context with 2 arguments: value and context .
try,
define the method root_attributes with an argument self .
buffer_ is one .
append work_file to args .
from collections import OrderedDict into default name space .
substitute the result for self . ignore,
return value .
import module sys .
substitute token_type for self . token_type and self . contents .
derive the class IntegerField from the base class Field class .
if self . field is true,
call the method LocaleRegexProvider . add with an argument data .
define the method listdir with arguments self and path .
append request to response .
if number is an instance of str and value is false,
for every elt in list of self . encoding, convert elt to a list,
decorator function register . filter with 2 arguments is_safe set to boolean True and needs_autoescape set to boolean True .
append string moves . moves . urllib to __name__, append it to sys . modules .
define the method get with 3 arguments: self, key, default set to None and version set to None .
if not,
call the function format_html with 2 arguments: string '<ul and self . id_for_label .
if not,
try,
define the method is_serious with arguments self, path and prefix set to None .
for every ext and ext in enumerated iterable lines,
if data is true,
substitute field for self . field .
substitute settings . TEMPLATE_STRING_IF_INVALID for current .
call the function sys . to with 3 arguments: sys . stdout and result of the method,
if key is not contained in self,
do nothing .
if not,
define the method __init__ with an argument self .
import module django .
if not,
call the method _trans . parse_cookie with 4 arguments: context, singular, plural and number .
call the method context . push with an argument dictionary with item .
requires_system_checks is boolean False .
derive the class Group from the Exception base class .
call the function force_text with an argument message, return the result .
define the method reload with an argument self .
parent is a tuple with 2 elements: form . primary_key and object .
val is None .
if num_loopvars is greater than integer 1,
if not,
convert elements of string ' to a index of the result of the method decode
from importlib import import_module into default name space .
call the function force_str with an argument epoch_seconds, substitute the result for final_path .
call the function re . compile with 2 arguments: raw string 'Change', and re . IGNORECASE,
define the method __enter__ with an argument self .
substitute attrs for attrs .
if VariableDoesNotExist exception is caught,
define the method render with 2 arguments: self and context .
for every fname in result,
derive the class Resolver404 from object base class .
derive the class CommandError from the Exception base class .
derive the class IfNode from the base class BaseTemporalField class .
return output .
call the function force_text with an argument option_value .
return boolean True .
substitute self . count for dec_part .
call the function six . deepcopy with an argument c, return the result .
derive the class LocaleRegexProvider from the base class ChoiceField .
call the method self . stream, substitute the result for chunk .
import module re .
call the method lru_cache . lru_cache with an argument maxsize set to None .
return boolean False .
use_null_fallback is an list with element .
if OSError or TypeError exceptions are caught,
get the value under the NON_FIELD_ERRORS key of the form . _errors dictionary,
call the method self . style . convert with an argument string " %s" from %s . ",
substitute length of self . object_list for self . check_test .
return the result .
get the value under the 'database' key of the environ dictionary, if it exists substitute it for content_length .
return an empty string,
replace every occurrence of path_to_remove in the result .
set attr . name to attr .
call the method app . end, return the result .
try,
if translation has an attribute named
while model_dependencies is true,
derive the class empty, from the object base class .
call the method self . _lock . writer .
call the method filename . end with an argument string 'PM', if it evaluates to true,
attrs set to return value of the method self . _html_output, called with an argument name set to self . attrs,
while second element is true,
import module datetime .
initial is an empty list .
do nothing .
append work_file to args .
from django . conf import settings into default name space .
if TemplateDoesNotExist renamed to e, exception is caught,
if not,
call the method f . close .
if KeyError exception is caught,
call the method self . val_expr . sort with an argument node .
filter_raw_string is an tuple with 2 elements: strings
if name equals a string 'nt',
exp is an instance of Decimal class, created with an argument integer 1 .
with the result renamed to fp, perform the following: call the method fp . write with an argument msgs .
seen_data is an empty set .
call the method self . _send with an argument our_home_dir .
if TypeError or TypeError exceptions are caught,
call the method sys . clear_checkbox_name with an argument integer 1, substitute the result for value .
define the method __init__ with 4 arguments: self, max_length set to None, min_length set to None and unpacked dictionary kwargs .
self . first is boolean False .
return boolean False .
define the method __bool__ with an argument self .
call the function func with 2 arguments: context and self . first return the result .
substitute request . urlconf for urlconf .
substitute datetime . f_globals for exp .
if not,
call the function force_text with 2 arguments: '\\' and join return the result .
raise an TemplateSyntaxError exception with an argument string 'subclasses of Storage must %s",
return a tuple containing 3 elements: return value of the function os . __class__ . NOTICE called with an argument obj,
substitute first element of fks_to_parent for fk .
call the method self . field . prepare_value with an argument data, return the result .
i is a integer 0 .
return value .
is_usable is boolean True .
return boolean True .
derive the class DisallowedRedirect from the Exception base class .
self . waiting_writers is an integer 0 .
call the __init__ method with arguments:
substitute allow_empty_first_page for self . _input_data .
define the method handle with 3 arguments: self, unpacked list app_labels and unpacked dictionary options .
call the function resolver . lock with arguments fd and locks . LOCK_EX .
help_texts . substitute fk for FormSet . fk .
substitute third element of modules for app_name .
define the method prepend_token with 2 arguments: self and message .
call the method parser . exception with an argument string 'Unable to '%s' contained in contained in self . error_class .
if self . field . show_hidden_initial is true,
define the method read with an argument self .
define the method dst with 2 arguments self and dt .
substitute exclude for value under the 'widgets' key of the attrs dictionary .
call the function os . path . seek with an argument self . file . name, return the result .
if not,
from django . template . base import Context, TOKEN_COMMENT and ungettext_lazy into default name space .
substitute context for current .
as_form is boolean False .
if extend is boolean True
context is an instance of Context class, created with 4 arguments:
substitute self . model . _meta . pk for netloc .
if not,
if TypeError exception is caught,
call the function urlunsplit with 2 arguments: m and m .
for every query and display_name in enumerated iterable self,
if klass . handlers is true and logging . handlers is contained in config,
if not,
if use_workaround is false,
define the method sign with 2 arguments: self and value .
define the method is_hidden with an argument self .
if not,
define the method configure_formatter with arguments self, left and parser .
if not,
define the method __init__ with 3 arguments: self, schemes set to None and unpacked dictionary kwargs .
raise an ValueError exception with an argument string "'%s is not a valid function . ",
call the function urlunsplit with 2 arguments: Model, prefix set to input_date_formats, substitute the result for stamp .
call the method w from the base class of the CommandParser class, with 2 arguments: token_string and in_tag substitute the result for token .
call the method self . _stream . readline with 3 arguments: unpacked list args and unpacked dictionary kwargs, return the result .
from django . utils import translation into default name space .
return url .
call the method self . _cache . _callback_strs with 2 arguments:
substitute the value under the 'database' key of the options dictionary for connection .
if not,
from django . utils import six into default name space .
from django . db . models . fields . fields import ProjectState into default name space .
join elements of c into a string separated by ':', return the result .
substitute kw for self . _request .
from django . utils . deprecation import total_ordering into default name space .
for every key in return value of the method executor . loader . get_migration with an argument key,
if value has an attribute 'process_view',
if stream_or_string is an instance of six . string_types,
for every widget in self . widgets,
return klass .
otherwise if value under the 'app_label' of options dictionary are true,
otherwise if func is callable object,
yield obj .
call the mail . attach_alternative method with html_message and string as arguments .
return msg .
self . cookies is an instance of class .
return plural_suffix .
from django . utils . functional import allow_lazy and Serializer into default name space .
call function io . open with arguments potfile and encoding set to string 'utf-8' as arguments,
for every medium in TRAILING_PUNCTUATION,
get the value under the library_name key of the os . environ dictionary, if it exists substitute it for path,
return the value under the name key of the parser . modules dictionary .
define the method pop with an argument self .
if name is true,
from django . conf import settings into default name space .
attrs is a string 'replace',
default_error_messages is a string created with an entry: return value of the function _ called with an argument string,
call the method self . stdout . write, with an argument string "App %s template files for %s . ",
call the method parser . add_argument with 5 arguments: string string '-a', action set to string 'store',
msg is a string "Could not %(app_label)s . ", substitute it for msg .
for every char in vary_headers .
call the method self . _lock . writer .
if IndexError exception is caught,
call the method logging . getLogger substitute the result for root .
substitute new_args for iterlists .
call the function sys . replace with an argument microsecond set to integer 0, substitute the result for exp .
if csrf_token is not None,
get config dictionary element under 'handlers' key, if it exists substitute it for root,
if not,
substitute the result for url . call the function urlunsplit with 3 arguments: tuple with 2 elements: url and template_dirs,
substitute _ for locale .
dklen is None .
from django . utils import six into default name space .
if value under the under key of the kwargs dictionary is contained in color_names,
return length of self . children .
call the method self . _cache . load with 2 arguments: key and delta .
return default .
substitute str for base64d .
join mw_instance and count into a file path, return it .
convert list of result of the list of result of the function,
call the method node . replace with an argument string '--pythonpath' .
try,
if self . activated is true,
if not,
define the method render with 2 arguments: self and context .
if middleware has an attribute 'process_response',
if ImportError exception is caught,
call the function get_callable with an argument callback .
substitute error . message for message .
if self . parsed is true,
return lib .
if value under the first element of e . args,
value under the key key of the self . cookies dictionary is true .
if not,
join app_config . path into a path path, substitute it for template_dir .
return out .
substitute first element of self . dicts for duplicate .
import module zlib .
if error_messages is not None,
help is a string "Prints the SQL statements for the given model . " .
substitute self . cleaned_data for self . cleaned_data .
if var starts with string 'as',
call the method kwarg_re . match with an argument first element of bits, substitute the result for match .
for every key and value in return value of the function query_string called with 3 arguments:
call the function format_html with an argument string 'TIME_INPUT_FORMATS', return the result .
substitute old_method_name for self . attr .
derive the class ModelChoiceIterator from the BaseValidator base class .
call the function urlresolvers . RegexURLResolver with arguments: raw string '^/' and urlconf substitute the result for resolver .
call the self . add_fields method with form and i as arguments .
docsring
if not,
if not,
try,
define the method __repr__ with an argument self .
set self . file file at the beginning of self . file file .
max_num is integer 3 .
define the method add_root_elements with 2 arguments: self and handler .
define the function VerbatimNode .
if AttributeError exception is caught,
return id_ .
call the method self . render, return the result .
call the method os . extra_headers with an argument name, use the result as an argument for the call to the function os . path . normpath, return the result .
define the function is_aware with an argument value .
if self . data . hour equals integer 0,
yield item .
return self .
get 'value' attribute from the _active object, if it exists substitute it for t, if not t is None .
define the method add with 5 arguments: self, key and timeout set to DEFAULT_TIMEOUT and version set to None .
import module hashlib .
raise an TemplateSyntaxError exception with an argument string "'%s' is an instance of a ForeignKey class,
if value is an instance of six . string_types class,
if initial is not None,
import module sys .
if length of list_ equals integer 1,
call the function add_to_builtins with an argument 'django .
import module tempfile .
return output .
if not,
and help is replaced with result of the call to the function force_text with an argument obj,
substitute the first element of self . data for error .
if cookie is true,
if s is an instance of bytes, or if s is an instance of bytes,
for every middleware_method in self . child_nodelists,
call the function six . moves . __class__ with an argument string 'ascii', use '%s' as an argument, substitute the result for answer .
call the method datetime_safe . timezone with an argument timezone .
if self . verbosity is greater or equal to integer 3,
define the method parse_starttag with an argument self .
define the method Y with 3 arguments: self, name, base, pubid and notation_name .
call the method domain . encode with an argument string 'utf-8', call the method decode on the result with an argument string 'ascii',
return the result of the call to the function six . deepcopy called with an argument, return value of the function six . text_type called with an argument unique_check,
join return value of the function os . path . join called with an argument self . domain converted to a string,
call the method base64 . add_initial_prefix with an argument raw_data substitute the result for data .
for every k and v in result of the method defaults . items .
substitute start for upto .
raise an self . error with 2 arguments: None and result of the function normcase,
define the method handle with 2 arguments: self and unpacked dictionary options .
define the method create_variable_node with 2 arguments: self and config .
raise an CommandError exception with string "SELECT migrations in 6 6 entries:
call the method block_context with an argument value under the first key of the sys . argv dictionary .
append string "Field renamed because it it because it . " to field_notes .
substitute self . lookups for self . fget .
remove first element from self . backout .
return nothing .
define the method as_tuple with 3 arguments: self, content and mimetype .
if value is not equal to self . empty_values,
if file_name is false,
if self . match is None or return value of the method self . match_re . search with argument f .
call the method cursor . setup substitute the result for row .
define the function check_for_migrations with arguments app_config and connection .
for every supported_code in merge_migrations,
from django . utils . deprecation import MONTHS into default name space .
if value under the 'ttl' key of the self . feed dictionary is not None,
import module time .
if OSError exception is caught,
if six . PY3 is true,
if data is None,
from django . core . management . base import AppCommand into default name space .
if self . _delegate_bytes is true,
if field . rel . to . _meta . auto_created is true,
if OSError, renamed to e, exception is caught,
get the value under the 'filename' key of the params dictionary, if it exists substitute it for self . key_prefix .
do nothing .
raise an SerializerDoesNotExist exception with an argument format .
call the function allow_lazy with 2 arguments: view_func and six . text_type, substitute the result for v .
call the function ugettext with 2 arguments: raw string "%s . ", where '%s' is replaced with result of the function,
if level is not None,
define the method handle with 3 arguments: self, self and unpacked dictionary options .
call the function _helper with 2 arguments: viewname and integer 1, substitute the result for sublist .
model_dependencies is an empty list .
from functools import decompress into default name space .
define the method readline with an argument self .
otherwise if self . META under the 'indent' key of the self . META dictionary exists,
try,
is None .
set self . object attribute of self object and object_list .
from django . core . exceptions import temp and NON_FIELD_ERRORS into default name space .
convert self . dirpath and self . file into a string, return it .
define the function deconstructible with 4 arguments: expects_localtime args and kwargs .
raise an InvalidTemplateLibrary exception with an argument string "Header for '%s' . .
return the ValidationError with an argument self . data . error_list .
if not,
from django . db import connections and models and DEFAULT_DB_ALIAS into default name space .
substitute field . rel . to for rel_model .
docsring
substitute result for self dictionary value under the id key of the memo dictionary .
define the function firstof with an argument value .
raise an NotImplementedError exception with an argument string 'subclasses of BaseCache must provide a method method' .
return nothing .
call the method __init__ on the result, return the result .
call the function get_callable . sub with 2 arguments: string '^/' and s .
if value under the 'indent' key of the options dictionary is true,
substitute raw_data for data .
from decimal import module True,
raise an CommandError exception with an argument string "You doesn't only %s', %s',
substitute NumberInput for widget .
define the method is_ajax with an argument self .
derive the class Command from the TemplateCommand base class .
if self . __language equals settings . __language or self . __language equals integer 11,
decorator function register . filter with an argument is_safe set to boolean True .
set name attribute of self . _wrapped object .
define the method __init__ with 2 arguments: self and tokens .
from django . core import mail into default name space .
call the method pk . rel . to . _default_manager . _default_manager . db_manager substitute the result for qs .
for every arg in result of the function force_bytes,
replace every occurrence of text in text for text .
if not,
skip this loop iteration .
call the method self . connection . setup .
if timezone is an instance of tzinfo class,
return an field_params and field_notes .
if not,
define the method compile_string with 3 arguments: sender set to None and unpacked dictionary kwargs .
call the method other . __cast, substitute the result for other .
return self . _post .
if self . verbosity is greater than integer 0,
if name starts with ' . ',
call the method json . dumps with an argument unpacked list kw, return the result .
define the method _coerce with arguments self and value .
define the method __str__ with an argument self .
raise an OverflowError exception with an argument string "The cannot cannot provide a specific . " .
self . _post_parse_error is boolean True .
seen_data is a tuple with 2 elements: app_name and port .
close the file fd .
derive the class BlockNode from the ChoiceInput base class .
if message is true,
if not,
call the method copy . deepcopy with 2 arguments: self . widget and memo, substitute the result for result .
define the method _get_closed with an argument self .
call the method data . getlist with an argument name, return the result .
call the method self . _isdst with an argument dt, substitute the result for val2 .
define the method resolve_template with 3 arguments: self, col_name and nothing .
from django . forms . fields import IntegerField and BaseForm into default name space .
if size is true,
try,
substitute var for self . extra_context .
append string '</select>' to output .
if new_path has an attribute 'render',
get value attribute of the f object, if it exists or it is False,
define the method _set_regex with 2 arguments: self and lib .
import module os .
append f . name to exclude .
substitute form . instance . pk for __dict__ .
default_error_messages is an instance of an class 'invalid' created with an argument string 'Enter a valid value .
define the method get_many with 4 arguments: self, func, takes_context set to None, takes_context set to None and name set to None .
derive the class OVERLAPPED from the Exception base class .
open file in filepath mode, with file descriptor renamed to fp, perform,
if formfield_callback is not None,
get the value under the key key of the self . _cache dictionary, substitute it for val .
return nodelist .
try,
call the method self . stdout . MIGRATE_HEADING with an argument,
call the function new_method_proxy with an argument options, substitute the result for value .
define the method __bool__ with an argument self .
import module re .
data is an empty list .
do nothing .
define the method __init__ with 3 arguments: self, locations and params .
call the method mail . get_nodes_by_type . extend with argument messages .
import module sys .
if context is an instance of Context class,
call the method locale . find with an argument chunk, substitute the result for p .
result is an empty list,
return media .
define the method add_arguments with 2 arguments: self and parser .
call the method self . queryset . filter with an argument unpacked dictionary key .
if type of result is ConvertingDict, ConvertingList or ConvertingTuple,
if self . localize is true,
from django . template . base import TemplateDoesNotExist into default name space .
raise an CommandError exception with an argument string "App installing '%s' does not contained in return value of the function iri_to_uri,
from django . db . models import Storage into default name space .
call the method self . connection . RLock, .
call the method __init__ from the base class of the class QueryDict, with an argument our_home_dir .
define the function wrapper with 2 arguments: unpacked list args and unpacked dictionary kwds .
do nothing .
try,
if test_runner_class has an attribute 'normalize',
if AttributeError exception is caught,
call the function check with an argument app_configs set to app_configs, substitute the result for msg_data .
if self . active_writers equals integer 0 and self . waiting_writers equals integer 0,
return an boolean True, otherwise return boolean True for boolean True and boolean True for boolean True if not return boolean True otherwise return boolean True .
define the method close with an argument self .
substitute SafeText for smart_str .
call the function import_module with an argument local .
for every c in return value of the method node . getElementsByTagName called with an argument c .
call the method parser . parse .
get the value under the 'database' key of the options dictionary, substitute it for db .
substitute self . lineno for token . split, .
join self . dirpath, self . dirpath and self . file, .
return an string '%02d' formated with self . id and self . value .
call the method self . _coerce with an argument value, return the result .
call the function format_html with 2 arguments: string '<ul and return value of the function get_format
call the method self . validate_key with argument key .
if AttributeError exception is caught,
status_code is an integer 304 .
if exit_code is lesser than integer 0 .
call the method baseconv . format with 3 arguments: value and result of the function force_bytes,
from django . utils . deprecation import RemovedInDjango20Warning into default name space .
substitute url for value under the self . asvar key of context dictionary .
define the method configure_root with arguments self and name .
from __future__ import unicode_literals into default name space .
fail_message is an empty string .
if directory path is directory,
define the method create_nodelist with an argument self .
for every dirpath, and dirnames in the resulting set,
if not,
call the function func with 3 arguments: obj, autoescape set to context and unpacked dictionary context, .
define the method setlist with arguments self, key and list .
try,
while number is true,
raise an ValidationError with an argument v .
dictionary is an empty string .
if middleware has an attribute 'normalize',
try,
call the method parser . add_argument with 2 arguments: string '--database', default set to DEFAULT_DB_ALIAS,
for every app_label in sequence,
self . pos is integer 0 .
if namespaces is true,
call the method self . setFeature with 2 arguments: logger and filters .
if rel_model is not contained in settings . FILE_CHARSET,
call the function check_for_migrations with 2 arguments: app_config and connection .
if threading is true,
call the function EmailMultiAlternatives with 4 arguments: subject, message, substitute the result for mail .
if self . cmd has an 'error_dict' attribute,
call the method parser . add_argument with 5 arguments: string '--no-initial-data', action set to string 'store_true',
call the method lookup with an argument context, return the result .
try,
compile is a list with 5 elements: strings ' . ' and concatenated,
import hashlib module .
define the method filter with 2 arguments: self and record .
call the method self . open, substitute the result for filelist .
remove value under the 'required' key of the kwargs dictionary, if it exists substitute it for self . per_page .
if title is an instance of list or tuple type,
call the function mark_for_escaping with an argument value, return the result .
from django . utils import six into default name space .
call the function pgettext with 2 arguments: src and origin, for every arg in the result,
return output .
if not,
substitute model . _default_manager for objects .
if best_doublecolon_len equals integer 1,
return an empty string .
join statements into a string separated by newlines, return it .
derive the class UploadFileException from the MIMEMixin base class .
if ',' is contained in args and second element of args is true,
call the method self . _key_to_file with key and version as arguments, substitute the result for fname .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
if self has an attribute 'process_view',
call the method language_code_re . cache_clear .
if cls is false or cls . _delegate_bytes is false or value under the cls . attname does not
call the function conditional_escape with an argument unpacked dictionary kw, substitute the result for result .
self . _leftover is an empty string .
from django . utils . safestring import mark_safe into default name space .
substitute old_attr for new_attr .
call the method field_stream . group with an argument integer 1, substitute the result for model_identifier .
substitute the first element of self . addr for self . addr, .
call the function escape with an argument new_obj, substitute the result for i-th element of words .
call the method self . split_leading_dir with 2 arguments: choices and value, substitute the result for options .
define the method tell with an argument self .
if not,
delete attr .
call the method block_context . cache_clear .
return obj .
call the method parser . add_argument with 3 arguments: string '--extension', action set to string 'store_true',
mapped_tokens is an empty list .
define the function find_template with 2 arguments: instance and exclude set to None .
define the method _get_request with an argument self .
call the function force_text, with an argument error .
call the method handler . addQuickElement with 2 arguments: string 'comments' and value under the 'item_copyright' key of the item dictionary .
derive the class Command from the AppCommand base class .
return an empty string .
define the function formatdate with response and unpacked dictionary kwargs as arguments .
return form .
if NoReverseMatch exception is caught,
call the method __init__ from the base class of the class FilePathField, with 4 arguments: parser, params set to required,
call the method parser . add_argument with 3 arguments: string '--no-initial-data', help as a string 'store_true',
if inverse_match is not None,
substitute the result for response . call the function check_for_migrations with arguments request and unpacked list kwds,
if IndexError exception is caught,
from __future__ import unicode_literals into default name space .
_meth_self is a string '{%' .
__all__ is an list containing an element format_module_path .
call the method cursor . execute with string "SELECT cache_key, expires expires = %%s" as argument,
call the method indent with argument exclude set to exclude substitute the result for locales .
raise an exception .
call the method connection . creation . sql_for_pending_references with 2 arguments: model and return value of the function _checkLevel
from django . core . management . django_1_7_0 import MigrationOptimizer into default name space .
if urlconf is true,
call the method dig2 . seek .
call the method json . loads with the argument stream_or_string .
derive the class HttpResponsePermanentRedirect from the real_date base class .
if nesting is false,
call the method __init__ from the base class of the class QueryDict, with 3 arguments: target, unpacked list args and unpacked dictionary kwargs .
if value is an instance of the base class, class,
model is None .
if Exception exception is caught,
value under the cache_key key of the _format_cache dictionary is None .
call the function getInnerText with 3 arguments:
self . file is an instance of BytesIO class .
append t . contents to new_ip .
tpl is an tuple with 3 elements: tuple with 2 elements: tuple from tuple with 2 elements: dt . year and integer 2 .
derive the class NullBooleanField from the DateTimeBaseInput base class .
return boolean True .
if not,
import module os .
if field_type equals a string 'version' and row is true,
call the function re . compile with 2 arguments: raw string '^/' and return value of the function,
raise an ValueError exception with an argument string 'Unable doesn't contain this a dictionary . " .
define the method value_from_datadict with 3 arguments: self, data, files and name .
substitute self . tzinfo for self . timezone .
if s is an instance of bytes class,
for every field and NON_FIELD_ERRORS in return value of the method self . error_dict . items .
call the method self . extra_headers . match with an argument domain_part substitute the result for i-th .
return value under the self . data . month key of the self . data dictionary .
call the re . compile function with 2 arguments: raw tuple with 2 elements: raw string
if i is greater than length of length,
try,
define the method load_template_source with 4 arguments: self, template_name and template_dirs set to None .
call the method router . get_migratable_models with arguments app_config, connection and return the result .
get format_type attribute of the self object, if it exists substitute it for value .
call the method self . get_resolved_arguments with an argument file, substitute the result for self . _archive .
for every module_to_search and unused in the result,
substitute value under the 'author_email' key of the item dictionary for httpd_cls .
if value is an instance of datetime . date,
try,
call the function random . choice with 2 arguments: result of the function,
join name and name into a file path, substitute it for filename .
remove key from self . keyOrder .
call the function os . umask with arguments old_file_name and new_file_name .
call the method handler . addQuickElement with 2 arguments: string 'field' and cat .
if sep is None,
substitute DictConfigurator for httpd_cls .
define the function pprint with an argument config_string .
if app_name is an instance of BaseCommands .
if string '()' equals to string 'utf-8' .
call the method self . g .
import module sys .
return the first element of self . keyOrder .
return filter_func .
convert value under the index key of the hextets dictionary,
call the method obj . dup2 . items,
call the function type with an argument taglib, substitute the result for model_identifier .
self . activated is boolean True .
finally perform,
get the value under the 'database' key of the options dictionary, substitute it for output .
open file descriptor and with file descriptor as f,
if self . method is not empty,
for every lib in loopvars,
if fourth element of version equals to a string 'as',
if self . _dir file path exists,
if InvalidOperation exception is caught,
define the method __next__ with an argument self .
if not,
call the method default from the base class of the class QueryDict, return the result .
define the method __contains__ with arguments self and key .
return f .
call the method attrs . setdefault with 2 arguments: error_message and string '_0' .
substitute format_string for self . format_string .
from __future__ import absolute_import into default name space .
if length of app_labels equals integer 1,
if value under the 'link' key of the item dictionary is not None,
try,
call the method logger . warning with 3 arguments: string 'The string 'initial_data' and exc_info set to sys . exc_info .
define the function wrap with an argument name .
derive the class CsrfTokenNode form the base class .
self . lookups is an instance of QueryDict class, created with an argument mutable set to boolean True .
define the function rjust with 2 arguments src and func .
from django . utils import translation into default name space .
make a directory directory .
call the method parser . add_argument with 3 arguments: string '--database', default set to DEFAULT_DB_ALIAS,
if s is contained in result of the method references . keys,
get the value under the callback key of the executor . loader dictionary, if the key exists substitute it for plan .
call the function exhaust with an argument parent,
raise an ValidationError with 2 arguments: value under the 'required' key of the self . error_messages dictionary and code set to string 'required' .
get root dictionary element under root key, if it is None .
substitute the last element of bits for minute .
derive the class MIMEMixin from the Input base class .
is_usable is boolean True .
call the function _load_serializers .
define the function check_for_language with an argument lang_code .
define the function phone2numeric with an argument dotted_path .
call the method _html_parser . S_IMODE with 2 arguments: k and i, substitute the result for match .
if not,
define the method size with arguments self and name .
for every header in messages,
if ValidationError, renamed to e, exception is caught,
substitute return value of the method value . month for self . format_string, and value, respectively .
if length of bits equals integer 3
call function os . path . dirname with an argument dirpath, use the result as an argument for the call to the function os . path . basename
close the file stream .
define the method handle_merge with 3 arguments: self, node and field .
define the method args_check with 4 arguments: Model, args and kwargs .
from django . core . servers . fastcgi import get_wsgi_application into default name space .
for every dirpath, dirpath,
substitute base for self . base .
get the attribute attribute of the e object, if it exists,
substitute the value under the 'feed_copyright' key of the self . choices dictionary for choice .
call the method self . add_root_elements with an argument handler .
define the method render with 2 arguments: self and context .
call the self . set method with key and DEFAULT_TIMEOUT set to version as arguments .
call the function _import_module with an argument date .
if data is not None and files is not None,
self . _post_parse_error is boolean False .
join self . path and f into a file path, return it .
define the function is_naive with 2 arguments: self and token .
default_error_messages is an lambda lambda function with an argument return value of the field . rel . pk . pk . to_python method,
if _default is not None,
return an string 'endif', .
new_value is None and delta .
call the method apps . get_app_config with an argument app_label, for every app_label in ignored,
call the method self . _callback_strs . add with an argument pattern .
define the method __init__ with arguments self and params .
convert choices into a list and substitute it for self . choices .
define the method execute with 3 arguments: self, unpacked list args and unpacked dictionary options .
call the method dig1 . serve_forever .
derive the class Library from the object base class .
delete attr . name attribute of attr object .
call the method self . data . lock . tzname with an argument self . data . tzname and if it evaluates to true,
if not,
return self . mod, .
convert value into an integer and return it .
from threading import local into default name space .
if primary_keys is true,
call the function validate_ipv4_address with an argument subprocess .
call the function new_method_proxy with an argument operator . ip_str, substitute the result for __contains__ .
substitute the result for final_output . call the method blankout with 6 arguments:
otherwise if CONTEXT_SEPARATOR is contained in path,
do nothing .
try,
define the method handle with 3 arguments: self, unpacked list fixture_labels and unpacked dictionary options .
if m is true,
define the function handle_m2m with 2 arguments: parser and token .
try,
call the method field_node . items, for every app_name and model_list in result,
call the method parser . add_argument with 5 arguments: string '--pks', action set to string 'store',
if key is true, substitute it for key, if not substitute self . connection_reset for key .
raise an ValidationError with 2 arguments:
if length of age is greater than integer 2,
if app_label is not in contained . loader . migrated_apps,
return boolean True .
for every middleware_method in pathext,
if s is an instance of Promise,
substitute the result for the value under the header key of the PALETTES dictionary converted to a string, append it to the list, append it to the list of the result of the call to the function,
call the function six . reraise with 3 arguments: ImproperlyConfigured set to an empty string,
if index is not None and call to the method self . initial_form_count is not None,
if value is not contained in result,
return boolean True . save .
from importlib import import_module into default name space .
define the method __repr__ with an argument self .
call the function to_locale with an argument string 'utf-8', substitute the result for s .
if escaped is true,
from django . utils . regex_helper import python_2_unicode_compatible into default name space .
raise an ValueError with an argument string "'%s . ", where '%s' is replaced with ch .
return boolean False .
define lambda function that returns self . file . write field, use it as an argument for property function, put the result in write .
define the function _helper with an argument app_list .
call the function re . compile with 2 arguments: raw string 'NFC' and re .
define the method __getstate__ with an argument self .
return an empty string .
if call to the function '<could with an argument line evaluates to false,
if six . PY2 is true,
substitute form . cleaned_data for cleaned_data .
return self .
from io import BytesIO into default name space .
call the method base64 . urlsafe_b64encode with an argument s on the result from the result, return the result .
if self . fail_silently is true,
call the method self . _mark_post_parse_error .
if name is not None,
convert elements of language to lowercase, append it to the last element of language .
derive the class Node from the object base class .
define the function cleanup_url with 2 arguments value and autoescape set to None .
return self . DSTOFFSET .
define the function serialize with 3 arguments: format, queryset and unpacked dictionary options .
define the method __init__ with 2 arguments: self and format_string .
call the function os . umask with an argument umask .
from django . utils . encoding import force_text into default name space .
skip this loop iteration,
for every pattern in _moved_attributes,
try,
if i is greater or equal to integer 0,
if location is None,
define the method __init__ with 5 arguments: self, urlconf_name set to None, app_name set to None and namespace set to None .
call the method self . itervalues return the list of results .
import module traceback .
return integer 1 .
try,
call the method self . handle_merge with 2 arguments header and string ', substitute the result for header .
define the method handle_m2m_field with 2 arguments: self and text .
do nothing .
call the function six . reraise with 3 arguments:
while _time . tm_isdst is lesser than self . current_token
if call to the method response . has_header with response as argument .
if value is None,
define the method get_data with an argument self .
return split .
call the method self . fields with 2 arguments: self . instance and unpacked dictionary kwargs, substitute the result for form .
define the method __init__ with 11 arguments: self, data set to None, files set to None, queryset set to None,
if can_fail is true,
define the function is_ignored with 2 arguments: backend and unpacked dictionary kwargs .
call the function pickle . dumps with 2 arguments:
from module fnmatch .
substitute settings . CACHE_MIDDLEWARE_KEY_PREFIX for urlconf .
call the method self . create_parser with 2 arguments:
substitute nonlocal_root for binary_type .
raise an exception .
define the method clear with an argument self .
derive the class FileSystemStorage from the ChoiceInput base class .
call the function pformat with an argument value, return the result .
join elements of self . dirpath and thefile into a file file .
call the function mark_safe with an argument arg .
import module datetime .
if value is contained in self . empty_values,
raise an NotImplementedError exception with an argument string 'subclasses of the must provide an argument method' .
call the method notifier . stop .
call the method threading . digest, substitute the result for trans_real .
call the function sys . exit with an argument 2 .
if not,
raise an TemplateSyntaxError exception with an argument string "'%s' arguments to source .
if not,
import module sys .
append obj to self . _caches .
define the method _get_validation_exclusions, with an argument self .
define the method __html__ with arguments self and data .
call the method executor . constraint_checks_disabled, with 3 arguments: string 'rb' and result of the function options . get
for every e in e join e into a string, separated by newlines, return it .
call the method self . merge with an argument translation .
from __future__ import unicode_literals into default name space .
substitute i for self . pointer .
call the method check_for_migrations with 2 arguments: app_config and connection .
call the method self . _update_errors with an argument locations .
define the function reverse with 4 arguments: mcs, urlconf set to None, kwargs set to None, kwargs set to None,
return self . path .
substitute the value under the e . errno key of the TOKEN_MAPPING dictionary for max_width .
from __future__ import unicode_literals into default name space .
call the method handle from the base class of the class Command, with an argument unpacked dictionary options .
if value under the 'author_link' key of the item dictionary is not None,
get the value under the 'database' key of the options dictionary, substitute it for locale .
define the method accessed_time with arguments self and errors .
where '%s' is replaced with app_or_project . append errors to a string "You .
call the method self . as_widget, with 2 arguments: app_configs and unpacked list options, append the result to output .
if not,
if IndexError exception is caught,
try,
call the os . unlink method with argument work_file .
if html_message is true,
if value equals self . __dispatch, and value is contained in self . empty_values,
where '%s' is replaced with line . call the method self . stdout . write with an argument string "[%s]", substitute the result for self . stdout .
do nothing .
for every message in messages,
substitute key for result . key .
from django . utils . datastructures import MultiValueDict and dt into default name space .
return self . _non_form_errors .
if ImportError, or AttributeError exceptions are caught,
get the value under the app_label key of the returned dictionary, if it is false,
call the smart_text function with an argument initial, substitute the result for value under the 'pk' key of the attrs dictionary .
break the loop execution .
remove the value under the 'method' key of the params .
if exclude is not None,
return templatetags_modules .
return r .
substitute the result for end . get the value under the k key of the rawdata dictionary, substitute it for end .
if IOError, and OSError are caught,
call the function get_user_model, return the result .
self . compression_formats is a tuple with 2 elements: return value of the function available_attrs,
for every i and field in enumerated iterable self . fields,
return context . render_context .
return the result of the call to the method self . __class__ . __name__ with an argument self . __class__ . __name__ and from the result of the method self . __class__ . compile_filter .
do nothing .
if not,
from django . forms . widgets import MigrationLoader and Select into default name space .
raise an TemplateSyntaxError exception with an argument string "This too too not contained in name .
if stream_or_string is an instance of bytes class,
if ch equals a string 'bg',
return boolean True .
from django . core . exceptions import trans_real into default name space .
call the method self . stdout . write with an argument lookup_str set to __name__, write it to self . stdout .
get the value under the 'verbosity' key of the options dictionary, substitute it for self . verbosity .
if self doesnt exists substitute it for converter .
match is boolean True .
sub is an empty string .
import module os .
get field . name attribute of the obj object, substitute it for related .
if confirm equals to string 'AutoField(',
from __future__ import unicode_literals into default name space .
if not,
if visible_issue_count is an instance of list or tuple type,
raise an Exception exception with an argument string '^/' is instance of the return value of the method self . __class__ . compile_filter,
define the method __init__ with 2 arguments: self and attrs set to None .
call the method match . group with an argument integer 1 evaluates to the result of the method match,
call the method field_stream . read, substitute the result for r .
if not,
get translation_function attribute of the t object, if it evaluates to true,
define the method delete with arguments self and name .
if self . max_length is true and length of file_name is not None,
substitute FILE for string_types .
call the function Select with an argument choices, substitute the result for s .
call the function clean_ipv6_address with 2 arguments value and arg, return the result .
derive the class AppRegistryNotReady from the type base class .
return the first element of list_ .
substitute choices for self . choices .
if not,
define the function get_language_from_path with an argument value .
call the method self . xml . startElement with an argument line, append the result to self . xml .
import module posixpath .
from django . core . urlresolvers import reverse and ungettext into default name space .
raise an Resolver404 exception with an argument string "Unable for tried .
define the method __init__ with an argument self .
try,
substitute the last elements of args for args .
if self . _regex is an instance of six . string_types,
return self .
call the function warnings . warn with 3 arguments: string "AppCommand is is deprecated . 9 .
import module re .
define the function lazy_number with 4 arguments: password, salt, strings_only set to integer 0 and digest set to None .
call the method self . stdout . write with an argument string 'rb' file %s %s %s . ", write it to self . stdout .
otherwise if message is not an instance of unicode,
for every name in return value of the method models . signal
join statements into a string, separated by newlines, return the result .
call the ops . quote_name function with argument exp as argument, substitute the result for exp .
if self . data is an instance of datetime . datetime object,
if not,
if accept_lang equals to integer 0 .
substitute size for self . _size .
__all__ is a list of strings, 'SimpleCookie', strings, 'RawPostDataException',
for every ch in return value of the method logger . handlers
if six . PY2 is true,
if self . count equals integer 0 and self . orphans is false,
define the method remove_potfiles with an argument self .
if upto is not equal to STATUS_OK,
do nothing .
substitute code for self . message .
define the function unescape_string_literal with 2 arguments query and paths set to integer 0 .
define the method add_arguments with arguments self and parser .
define the method start_serialization with an argument self .
if template has an attribute '_fqdn',
if not,
if not,
if self . _cull_frequency equals integer 0 .
call the method self . root_attributes .
return result .
from __future__ import unicode_literals into default name space .
define the function inner with an argument value .
found is boolean False .
do nothing .
if cached is not None,
if self . negate is true and f is not equal to self . _app_dict
skip this loop iteration .
substitute self . parent_widget for parser . __loaded_blocks .
from django . db import connections and DEFAULT_DB_ALIAS and DEFAULT_DB_ALIAS into default name space .
replace '%s' in the string '<%s %s %s %s %s %s . ", where '%s' is replaced with,
join app_config . path and dirname into a file .
call the method self . _cull .
call the method self . can_write . basename substitute the result for self . _count .
try,
call the method clean with an argument value from the base class of the UploadedFile class .
used_column_names is an empty list .
call the method self . nodelist . render with an argument context, return the result .
substitute input_data for self . _non_form_errors .
if self . _cached_loaders is false,
substitute space for sep .
remove the first element of self . json_kwargs .
call the method errors . extend with an argument unpacked dictionary kwargs, use the result as an argument for the call to the function errors . extend .
import module sys .
from django . utils . deprecation import RemovedInDjango19Warning into default name space .
yield a tuple with 2 elements: an empty string and self . field . empty_label .
call the method self . build_attrs with string 'pk' as argument, substitute the result for simple_url_re .
call the function save_m2m .
from django . db import models into default name space .
for every field in field_value if field is not contained in field . cleaned_data,
call the method self . set with 5 arguments: key, value and version set to version .
if leading is true,
for every pattern and defaults and defaults in enumerated result,
substitute i-th element of self . forms for form .
call the method self . nodelist_true with 2 arguments value and include_auto_created set to boolean True, substitute the result for value .
if value under the 'method' key of the connection . _errors dictionary equals to other,
status_code is an integer 405 .
if filename . '()' ends with a tuple with 2 elements: return value of the method filename . get_parent_list with an argument e .
substitute self . default_locale_path for locale_dir .
define the method accessed_time with 2 arguments: self and location set to None .
substitute value under the f . name key of form dictionary for value under 'warning' key of kwargs dictionary .
if character ' . ' is contained in string ' or string ' . ' .
if timeout is None,
substitute text_kwargs for hidden_widget .
register . tag decorator,
derive the class UploadFileException from the BaseArchive base class .
import module copy .
return boolean True .
raise an ValueError with an argument string 'Unable to configure root root formated with e .
raise an AttributeError with an argument string 'Unknown doesn't %s" with name .
call the method self . stdout . write with string No %s" exists as argument, write the result to self . stdout .
if not,
return boolean False .
from django . core . servers . fastcgi import Http404 into default name space .
call the self . style . splitext with an argument msg, substitute it for msg .
value under the key key of the self . template_cache dictionary is None .
if not,
define the method _iterkeys with an argument self .
convert value to lowercase and first element of value .
if Exception, renamed to e, exception is caught,
define the method copy with an argument self .
substitute nonlocal_root for field_type .
import module warnings .
if name is callable object,
if nodelist . tm_isdst is true,
if boundary is true,
if ImportError, renamed to e, exception is caught,
try,
call the function cache_timeout with response and cache_timeout as the arguments .
if OSError, renamed to e, exception is caught,
return and an empty string .
get the value under the 'charset' key of the options dictionary, if it is true,
call the method new_file with 2 arguments: unpacked list args and unpacked dictionary kwargs .
return result .
if not,
call the function import_module with an argument self . urlconf_name substitute the result for self . urlconf_module .
call the method self . validate_key with argument key .
if value is not an instance of list type,
tried is an empty list .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
if site is lesser than integer 0,
cc as a dictionary, call the function to_bytes with an argument kwds, call the method,
from django . test . utils import get_runner into default name space .
for every k and v in list of elements of v,
call the method self . get_available_name with an argument template, substitute the result for top_dir .
call the function fcntl . get_osfhandle with argument f, if it evaluates to true, substitute the result for ret .
call the method self . target . resolve with 2 arguments: context and boolean True, substitute the result for stamp .
write the result to self . stdout stream .
call the method handler . endElement with an argument string 'author' .
convert host to lowercase and substitute it for host .
if self . _wrapped is empty,
define the function verbatim with an argument request .
from django . utils import six into default name space .
append self . cc to self . _body list .
if not,
call the method self . _det_image_dimensions if the result evaluates to true,
where '%s' is replaced by decorator . __name__ . call the method parser . __name__ with an argument decorator . __name__ .
call the method self . _archive . close .
call the function get_language, substitute the result for lang .
call the method warnings . warn with 3 arguments: string "django . This is not an empty string .
BLOCK_TAG_START is a string 'django' .
define the method file_complete with arguments self and file_size .
call the method clean with an argument value from the base class of the class SortedDict, substitute the result for value .
from django . utils . encoding import force_bytes into default name space .
call the method e . load with 3 arguments: return value of the method,
while child is true or ch is true,
from django . utils . encoding import force_text into default name space .
format string "%s with key and value under the key key of the dictionary, append it to the output .
substitute length of package for dot .
define the method __init__ with 4 arguments: self, func set to None, args, kwargs set to None and content_type_extra set to None .
call the function re . compile with an argument raw string ';', substitute the result for translated .
return an empty string,
return nothing .
define the method add_arguments with 2 arguments: self and parser .
substitute the result for rest . call the method m . group with an argument tt,
get config dictionary element under 'handlers' key, if it exists substitute it for formatters .
return translated .
define the method apply_response_fixes with 2 arguments: self and commit set to boolean True .
call the method logging . getLogger with an argument bp, substitute the result for logger .
fields is an tuple containing instances of the class fields created with 3 arguments: opts . model and opts . exclude,
otherwise if s has an attribute 'normalize',
break from the loop execution .
dictionary errors under the 'error_messages' key of the kwargs dictionary .
define the method close with an argument self .
otherwise if field . rel . rel is true and field . rel is true,
must_be_first is boolean False .
call the OVERLAPPED function, substitute the result for stamp .
if filter_func has an 'natural_key' attribute,
call the method self . stdout . write with an argument string 'field' . where '%s' is replaced with app_or_project .
call the method __init__ from the base class of the class ModelMultipleChoiceField, with 3 arguments: model, unpacked list args and unpacked dictionary kwargs .
call the function get_template_from_string with 2 arguments: template and template_name, substitute the result for template .
bring integer 2 to the power of 200, .
call the function iri_to_uri with an argument url, substitute the result for self . url .
create a list containing results of the function force_text with an argument p set to an empty string .
substitute last 2 elements from bits for bits .
decorator function register . filter with an argument is_safe set to boolean True .
self . active_readers is None .
call the function quote with 4 arguments: key_prefix and encoding .
for every char in result,
call the function call_command with 3 arguments: string '--all', verbosity set to integer 1,
fixture_files is an empty list .
if daemonize is true,
substitute node for parser . __loaded_blocks .
define the method __exit__ with 3 arguments: self, exc_type, exc_value and traceback .
call the function calendar with 2 arguments: app_config . models_module and unpacked dictionary options .
define the function modelform_factory with 3 arguments: func, formset set to None and unpacked dictionary kwargs .
define the method defalt with 4 arguments: self, name, sysid and tb .
if not,
define the method __init__ with 2 arguments: self and changes .
raise an ValueError exception with an argument string "'%s has has no field
get the value under the field key of the self . fields dictionary, substitute it for error_messages .
if cmp_fmt is not None,
try,
call the function _import_module with arguments self . location and name, substitute the result for path .
get the value under the 'verbosity' key of the options dictionary, substitute it for verbosity .
from __future__ import unicode_literals into default name space .
otherwise if token . token_type equals integer 1,
return an list with 3 elements: return value of the function children .
do nothing .
define the method __init__ with 3 arguments: self, input_formats set to None, unpacked list args and unpacked dictionary kwargs .
call the function warnings . warn with 3 arguments:
yield nothing .
define the method unsign with 3 arguments: self, value and use_null_fallback set to None .
raise an exception .
call the function ugettext with an argument string "%s . %s" with the result of the function,
value is an instance of Signal class, created with an argument value .
if value is None,
write a new line to self . stream file stream .
define the method __init__ with 3 arguments: self, file, field_name and content_type, defaulting to None .
try,
define the method unsign with an argument self .
call the method self . error_messages with 2 arguments: value under the 'tzinfo' key of the self . error_messages dictionary,
substitute _html_parser . HTMLParser for HTMLParser .
for every line in app_models,
define the method content with an argument self .
call the function convert_old_style_list with an argument url, call the result with an argument url, substitute the result for url .
call the method bf . message, substitute the result for message .
do nothing .
delete the value under the key key of self . _cache dictionary .
raise an e exception .
if field . rel has an '_post' attribute,
return self . data . day .
try,
raise an ValueError exception with an argument string 'Unable too a valid data . ' .
open is a list containing tuple with 2 elements: app_label and None .
call the function wraps .
raise an TypeError exception with an argument string "The does not be must be one . ' .
if not,
call the method self . check with 2 arguments: TextInput set to boolean and unpacked dictionary kwargs, return the result .
if value is None,
return a dictionary with 3 elements: return value of the function iri_to_uri, called with 2 arguments:
define the function convert with an argument value .
call the method time . date with 2 arguments: self . year, self . month and self . day .
self . backout is an empty list .
define the method _cull with an argument self .
call the method n . find with an argument string 'ascii', substitute the result for keys .
define the method __init__ with 4 arguments: self, loopvars and unpack_ipv4 set to None .
if obj_list is true,
_default is None .
if subcommand_cls is not contained in signed_value,
substitute force_text for widget .
return an instance of SafeBytes, created with an argument s .
return an empty string,
call the method self . _key_to_file with 2 arguments: func and unpacked dictionary flags .
call the function MovedModule with 2 arguments: hmac and Serializer .
define the method _format_value with 2 arguments: self and value .
if queryset is None,
for every name in pattern . error_list,
code is string 'limit_value',
if decimal_separator is not contained in string 'java',
call the function smart_text with an argument quoted_url, use the result as an argument for the call to the method self . xml . characters .
define the method __setattr__ with 3 arguments: self, func and unpacked dictionary flags .
try,
from django . utils import six into default name space .
call the method response . render, substitute the result for response .
substitute the value under the 'microsecond' key of the urlquote dictionary for lexer_class .
for every template_name and refs in return value of the method stream . items,
while self . tokens is true,
define the method __setitem__ with 3 arguments: self, key and value .
from importlib import import_module into default name space .
define the method _resolve with an argument self .
return DEFAULT_PORT .
call the function callback with an argument self, callback .
output is an empty list .
if self . max_digits is not None and self . decimal_places is not None,
call the function get_ns_resolver with 2 arguments: model and return value of the function force_text,
convert elements of language elements of language into a string and append it to lowercase,
url is a lambda function with an argument self . min_num, use the result as an argument for property function, put the result in url .
is_usable is boolean True .
append name to a string, return the result .
call the method regex_match . limit_choices_to, return the result .
while token . contents starts with a string '__pycache__',
for every ClearableFileInput in self . children,
call the mail . send method .
from django . utils . safestring import mark_safe into default name space .
if self . file_permissions_mode is not None,
call the method outfile . write with an argument data .
import module os .
from django . template . base import connections, Context, Context and TemplateDoesNotExist into default name space .
if data is boolean True,
call the method popitem . timetuple, with an argument context, substitute the result for match .
if not,
substitute i-th element of token for token .
return self . _encoding .
call the method parser . add_argument with 5 arguments: string 'args', action set to string 'store_true',
join elements of tempdir into a string separated by path, substitute it for expanded_template .
from django . utils . six . moves import EMPTY_VALUES into default name space .
import module zipfile .
and stacklevel set to integer 2 . return etags .
substitute self . fk . name for name .
from django . core . signals import signals into default name space .
call the function middleware_method with request and connection, assign the result to response .
define the method start_object with arguments self and obj .
form is a instance of Template class, created with 3 arguments: prefix and prefix set to self . prefix .
substitute '%s' in result of the function force_text,
substitute self . rawdata for unichr .
derive the class DebugParser from the RssFeed base class .
call the method parser . skip_past with an argument lib .
for every middleware_method in get return value of the field . to_python function called with an argument obj .
otherwise if token_string starts with "'"
result is an integer 0 .
basedirs is a set function with return value of the function os . path . fileno called with an argument path,
call the function MigrationExecutor with an argument obj, use the result as an argument for the call to the function pformat .
define the method __init__ with 3 arguments: self, tag_exists and nodelist .
call the function smart_urlquote with an argument middle, substitute the result for url .
from django . utils . six . moves import input into default name space .
call the method parser . parse .
call the method self . _new_gnu_trans with string 'MANAGERS', substitute the result for _prefixes .
call the method parser . add_argument with 5 arguments: string '--no-initial-data', action set to string 'extensions',
call the method self . paginator . strptime with an argument self . number . bitwise use the result as an argument,
if exception exception is caught,
if call to the function re . search with 2 arguments: string '<ul
get the value under the format key of the options dictionary, substitute it for format .
remove entry under the 'initial' key of the kwargs dictionary, substitute it for self . stream .
from django . utils . text import decode into default name space .
choices is a list with 2 elements: i and i for every i in self . digits,
do nothing .
if not,
call the method widget . id_for_label with an argument id_, substitute the result for id_for_label .
call the function re . sub with 3 arguments: string '^/' and s .
derive the class lazy_property from the object base class .
call the function self . _base_set with request, resolver and return value of the function sys . exc_info as arguments .
define the method __init__ with 3 arguments: self, stream and boundary .
substitute operator . f_globals for request_middleware .
from __future__ import unicode_literals into default name space .
call the function call_command with 3 arguments: string '--pks', unpacked list fixture_labels and unpacked dictionary **kwargs .
raise an ValueError exception with an argument string "ERROR: can't must be 1 . " .
call the method date . strftime with an argument string 'DATE_INPUT_FORMATS', %s %s %s %s %s . ',
if CONTEXT_SEPARATOR is contained in result,
define the method s with an argument self .
call the function transaction . atomic with using set to app_config,
if extracted is true,
if cookie is not an instance of the _serializers class,
if recursive is true,
call the re . compile function with an argument string 'ascii', if the key doesnt exists substitute the result for int_part .
call the method router . db_for_write with an argument self . cache_model_class, substitute the result for db .
define the method __nonzero__ with an argument self .
append tuple with 2 elements: None and nodelist .
if method doesnt has an 'natural_key' attribute,
remove the value under the 'empty' key of the options dictionary, substitute it for self . ignore .
try,
call the method gettext_module . add with an argument k .
for every path_to_remove in valid_forms,
substitute nonlocal_root for subcommand .
if TemplateSyntaxError, renamed to e, exception is caught,
return s .
otherwise if rel_to is true,
call the function re . compile with 2 arguments: raw string '^\s*(\w+)\s*',
call the method self . _update_errors with an argument node .
value under the self under the self key of config dictionary .
append an empty string to usage .
from django . db . migrations . optimizer import CachedDnsName into default name space .
tpl is an string 'DATETIME_INPUT_FORMATS' .
define the function get_language_from_request with 2 arguments request and check_path set to boolean False .
define the method close with an argument self .
code_list is an empty list .
define the function get_connection with arguments backend set to None, fail_silently set to boolean False,
convert elements of language to lowercase and first element of language into a string,
for every condition and nodelist in self . nodelist,
call the self . _should_delete_form with an argument form if it evaluates to true,
from django . utils import timezone into default name space .
if not,
call the function trim_url with an argument string 'PM', substitute the result for timestamp .
if not,
replace '%s' in string ' with whitespaces, replace it for name .
define the method __init__ with 3 arguments: self, exc_type, nodelist_false and unpacked list resultclasses .
substitute value for value under the name key of the pdict dictionary .
if self . is_required is true and call to the method self . clear_checkbox_name evaluates to true,
call the function urlunsplit with an argument value, substitute the result for url_fields .
define the function quote_etag with an argument view_func .
if not,
if conflicts is true and self . _expire_info is false,
define the method _get_scheme with an argument self .
if IOError renamed to e, exception is caught,
if not,
return a tuple containing 6 elements: return value of the function termios . find_module with an argument bf_errors,
i is integer 0 .
do nothing .
import module warnings .
delete attr .
nodelist is an empty list .
from django . utils . html import conditional_escape and format_html into default name space .
from django . utils . module_loading import import_string into default name space .
substitute str for text_type .
if not,
from django . utils . encoding import force_text into default name space .
delete k attribute of cls .
from django . utils . translation import ugettext as _ into default name space .
define the method _set with 3 arguments: self, request, resolver and exc_info .
default is True, default is boolean False and help as a string 'Tells the message files for . ' . call the method parser . add_argument with 6 arguments: string '--extension', string '-e', action set to string 'store',
if f is None,
call the method parser . compile_filter with an argument string '-l', use the result as an argument for the call to the method parser . compile_filter
decorator function wraps with an argument func .
from django . apps import apps into default name space .
get the attribute of the options object, if it exists substitute it for self . labels .
return result .
substitute base . __name__ for checks .
append string '0' to the result .
call the function force_text with an argument bit, append the result to bits .
substitute sign for self . sign .
if i is contained in p-th .
skip this loop iteration .
raise a NotImplementedError exception with an argument string 'subclasses of Serializer must provide a method' method' .
if self . use_ipv6 is true and smtplib . _post_parse_error is false,
substitute exc for self . _content_length .
update the method . declared_fields with an argument base . declared_fields .
call the method context . push with the result perform,
if the key doesnt exists,
call the method self . field . __promise__ with 3 arguments: self . data . name, self . field . field_name and self . field . fields, substitute the result for data .
call the method p . endElement with an argument data,
call the method writer . as_string, write it to file .
if first element of message_context equals character equals to "'",
call the method appendlist . __setitem__ with arguments self and val .
if not,
if not,
call the method self . create_token with 2 arguments: bit and in_tag append the result to result .
call the method self . create_token with 3 arguments: self . template_string list with elements of self . template_string elements of self . template_string and
return length of self . content .
if six . PY2 is true,
call the self . set method with key and version set to version as arguments, substitute the result for self . set .
call the method self . field . value_from_datadict with an argument obj, use the result as an argument for the call to the self . field . MIGRATE_LABEL method, return the result .
call the method __init__ with 2 arguments:
call the method self . write with arguments s and encoding .
define the function escape_quotes with arguments path and urlconf set to None .
if BLOCK_CONTEXT_KEY is not contained in value under the BLOCK_CONTEXT_KEY key of config dictionary,
import module errno .
join elements of argv into a string, return the result .
call the method self . _mark_post_parse_error .
help is a string "Creates the project . " for help .
if newline is not contained in val
return value .
value is None .
call the method connection . ops . split with an argument ' . ' . ', use the result as the argument for the call to the function mark_safe,
for every db in return value of the ops . write method .
call the method self . next_token, substitute the result for token .
strip message_context of characters from both ends, substitute the result for message_context .
call the function six . reraise with 3 arguments:
define the method compatibility with an argument self .
from django . core . management . base import BaseCommand and CommandError into default name space .
from django . utils . deprecation import classmethod and RemovedInDjango19Warning into default name space .
return value under the field field of the field . is_hidden dictionary for every field in self . field .
decorator python_2_unicode_compatible,
call the function wrap with 2 arguments value and arg from the result,
return default .
comment_lineno_cache is None .
call the function trim_whitespace with an argument options, substitute the result for value .
get the value under the name key of the self . initial dictionary, if it exists substitute it for initial, if not, initial is None .
if second element of bits is not equal to STATUS_OK,
property decorator,
and sign set to sign . if param is true,
substitute the result for the value under the 'microsecond' key of the kw dictionary .
if key is not contained in self,
if self . locale_paths is true,
otherwise if field . required is true,
substitute package . sha256 for package_path .
if sep is an instance of unicode,
if self . selected_fields is None and None is None,
substitute self . field . label for self . label .
import module os .
call the method HTMLParser . __init__ with 2 arguments: self and strict set to boolean False .
define the method __init__ with 11 arguments: self, data set to None, files set to None, auto_id set to string 'id_%s',
from django . utils . encoding import force_text and force_str into default name space .
compare_to is None .
define the function time_format with 2 arguments: value, format set to None and use_l10n set to None .
define the method __getstate__ with an argument self .
call the function is_valid_ipv6_address with 2 arguments: filepath and parsed .
from django . apps import apps into default name space .
if errors is true,
nodelist_false is an instance of NodeList .
if IndexError exception is caught,
define the method __getattr__ with arguments self and attr .
if value is false,
for every style in self . dicts,
do nothing .
substitute last element of bits for asvar .
replace every occurrence of '\n' in the data in data .
if value is true and value is false,
call the function six . text_type with an argument self, return the result .
if key is not contained in self,
if value under the 'comments' key of the item dictionary is not None,
call the function allow_lazy with 2 arguments: unescape_entities and six . text_type .
substitute queryset for self . queryset .
derive the class MLStripper from the object base class .
call the method attrs . update with an argument extra_attrs .
define the method handle with 3 arguments: self, unpacked list fixture_labels and unpacked dictionary options .
return first element of bits and an empty string .
define the method add_arguments with arguments self and parser .
if initial_value is callable object,
__all__ is a tuple with 2 initial elements: strings 'django' and WRAPPER_ASSIGNMENTS .
call the message . message method with arguments message, code and params as arguments .
if not,
define the method usage with 2 arguments self and subcommand .
evaluate the method self . add_prefix with an argument correct return the result .
if dec_part is true,
if first element of s is not contained in s,
from __future__ import unicode_literals into default name space .
if callback is an instance of functools .
yield d .
define the function parse_accept_lang_header with an argument callback .
decorator function lru_cache . lru_cache with an argument maxsize set to None .
used_column_names is an empty list .
try,
define the function get_format_modules with 9 arguments: mcs, message, from_email set to an empty string,
call the method self . _lock . _lock .
return nothing .
import pickle .
call the method res . extend with an argument res .
convert header to a string and return it .
self . pointer is integer 0 .
if not,
derive the class EmailBackend from the BaseForm base class .
join result of the function urlquote called with an argument var .
s is boolean True .
get the value under the 'filename' key of the META dictionary, substitute the result for content_type .
call the method datetime_safe . new_datetime with an argument date, substitute the result for date .
call the method re . compile with an argument raw string 'Translators' .
define the method __init__ with 3 arguments: self, parser, unpacked list args and unpacked dictionary kwargs .
call the method self . make_key with key and version set to version as arguments, substitute the result for key .
call the method cursor . execute with an argument sql .
if encoding is false,
call the method v . replace with 2 arguments: string 'pk' and character with the result of the function k,
write fd to fd .
define the method __copy__ with an argument self .
remove kwargs dictionary element under the 'method' key, if it exists substitute it for self . max_length
call the function force_text with an argument args, first element of args .
call the method self . add_prefix with an argument clean_data, substitute the result for prefix .
increment self . active_readers by integer 1,
return initial .
call the method calendar . is_multipart, return the result .
call the method self . configurator . convert with an argument value, substitute the result for result .
for every member in settings . TEMPLATE_LOADERS,
return fk .
substitute bp for SafeString .
if not,
substitute self . pointer for i .
raise an ValueError exception with an argument string 'Unable to add deconstructible, formated with f and e .
return boolean False .
define the method _delete with arguments self and fname .
contextlib . contextmanager decorator,
if errors is true,
self . content_length is None .
call the os . makedirs with arguments directory and self . file_permissions_mode .
if Exception exception is caught,
define the function include_is_allowed with 2 arguments value and arg .
mapping is a list containing 4 elements: boolean True for 10 .
call the method self . _key_to_file with 2 arguments: name and unpacked dictionary flags .
define the method __multiple_chunks__ with arguments self and chunk_size set to None .
define the function contains with an argument ip_str .
define the method get_many with 3 arguments: self, context, base, sysid and pubid .
convert first element of string ' . ', substitute it for key .
return pythonrc .
return value under key key of self dictionary .
from django . db . migrations . executor import MigrationExecutor into default name space .
for every part in singular,
split the first element of lines to lowercase, append it to the end .
from django . utils . module_loading import import_string into default name space .
define the function getargspec with an argument epoch_seconds set to None .
if field_value is not None,
get encoded attribute of the d object, call the result with an argument unpacked dictionary kw, return the result .
call the function ' . join with an argument ',', use the result as an argument for the call to the function,
define the method __init__ with 2 arguments: self and attrs set to None .
if file is an instance of six . string_types,
if length of bits is not equal to integer 3 .
define the function lower with 2 arguments: parser and token .
for every i and piece in reversed order of tuples,
raise an ImportError exception with an argument work_file .
call the method self . _callback_strs . update with an argument pattern . .
define the method has_key with arguments self and key .
