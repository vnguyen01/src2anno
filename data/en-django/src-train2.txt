Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('django.utils.dictconfig will be removed in Django 1.9.'), Name('RemovedInDjango19Warning'), Keyword('stacklevel', Const(2))], None, None))]))
Module(None, Stmt([If([(Compare(Name('value'), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Name('errors')], None, None), None, None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'isdir'), [Name('template_dir')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('commands'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('kwargs'), 'setdefault'), [Const('widget'), Getattr(CallFunc(Name('super'), [Name('IntegerField'), Name('self')], None, None), 'widget')], None, None))]))
Module(None, Stmt([From('django.utils.safestring', [('mark_safe', None), ('SafeData', None)], 0)]))
@ property
Module(None, Stmt([While(Name('bits'), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Class('ImageFile', [Name('File')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__next__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('f'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'encoding', 'OP_ASSIGN')], Name('charset'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('tried'), 'extend'), [GenExpr(GenExprInner(Add((List([Name('pattern')]), Name('t'))), [GenExprFor(AssName('t', 'OP_ASSIGN'), Name('sub_tried'), [])]))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'write_migration_files'), [Name('changes')], None, None))]))
try :
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('statement'), 'append'), [Name('cleaned_line')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('substitutions'), 'OP_ASSIGN', [Const('input')])], CallFunc(Getattr(CallFunc(Name('super'), [Name('ClearableFileInput'), Name('self')], None, None), 'render'), [Name('name'), Name('value'), Name('attrs')], None, None))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('msg'), 'attach'), [Name('attachment')], None, None))]))
Module(None, Stmt([Assign([AssName('tables', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('connection'), 'introspection'), 'table_names'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('params'), 'update'), [Name('kwargs')], None, None))]))
Module(None, Stmt([Assign([AssName('so', 'OP_ASSIGN')], CallFunc(Name('open'), [Name('out_log'), Const('a+'), Name('buffering')], None, None))]))
Module(None, Stmt([Return(Const(12))]))
Module(None, Stmt([Function(None, 'truncatechars_html', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([While(Getattr(Name('self'), 'tokens'), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssName('fixture_dir', 'OP_ASSIGN'), Name('fixture_dirs'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('dot', 'OP_ASSIGN')], CallFunc(Getattr(Name('callback'), 'rindex'), [Const('.')], None, None))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('transaction'), 'atomic'), [Keyword('using', Getattr(Name('connection'), 'alias')), Keyword('savepoint', Getattr(Getattr(Name('connection'), 'features'), 'can_rollback_ddl'))], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Or([Compare(Name('jan1_weekday'), [('==', Const(5))]), And([Compare(Name('jan1_weekday'), [('==', Const(6))]), CallFunc(Getattr(Name('calendar'), 'isleap'), [Sub((Getattr(Getattr(Name('self'), 'data'), 'year'), Const(1)))], None, None)])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Getattr(Name('s'), 'decode'), [Name('encoding'), Name('errors')], None, None))]))
Module(None, Stmt([Return(Name('value'))]))
except ImportError :
Module(None, Stmt([Assign([AssName('new_modules', 'OP_ASSIGN')], Sub((Name('module_values'), Name('_cached_modules'))))]))
Module(None, Stmt([Class('NullDevice', [], None, Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'size', 'OP_ASSIGN')], Name('size'))]))
Module(None, Stmt([Assign([AssName('get_function_closure', 'OP_ASSIGN')], CallFunc(Getattr(Name('operator'), 'attrgetter'), [Name('_func_closure')], None, None))]))
Module(None, Stmt([Function(None, 'close', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('FieldError'), [Name('message')], None, None), None, None)]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'template_cache'), 'OP_ASSIGN', [Name('key')])], Name('TemplateDoesNotExist'))]))
Module(None, Stmt([Assign([AssName('whole_digits', 'OP_ASSIGN')], Sub((Name('digits'), Name('decimals'))))]))
Module(None, Stmt([AugAssign(Name('field_desc'), '+=', Const(', '))]))
Module(None, Stmt([If([(Name('commit'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('end_text_pos', 'OP_ASSIGN')], Name('pos'))]))
else :
else :
Module(None, Stmt([Function(None, 'b64_decode', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'filepath', 'parsed'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'salt', 'OP_ASSIGN')], CallFunc(Name('force_str'), [Or([Name('salt'), Mod((Const('%s.%s'), Tuple([Getattr(Getattr(Name('self'), '__class__'), '__module__'), Getattr(Getattr(Name('self'), '__class__'), '__name__')])))])], None, None))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Function(None, 'appendlist', ['self', 'key', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core', [('signals', None)], 0)]))
Module(None, Stmt([Function(None, '__len__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('func'), [], Name('args'), Name('kwargs')))]))
except ImportError as e :
Module(None, Stmt([For(AssName('statement', 'OP_ASSIGN'), Name('sql_statements'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('end'), [('<', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Or([Compare(CallFunc(Name('ord'), [Name('char')], None, None), [('<', Const(33))]), Compare(CallFunc(Name('ord'), [Name('char')], None, None), [('==', Const(127))])]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('form'), 'has_changed'), [], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'location', 'OP_ASSIGN')], CallFunc(Name('abspathu'), [Getattr(Name('self'), 'base_location')], None, None))]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], Name('e'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('IntegerField'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('error_messages', 'OP_ASSIGN')], Subscript(Getattr(Name('opts'), 'error_messages'), 'OP_APPLY', [Name('NON_FIELD_ERRORS')]))]))
else :
Module(None, Stmt([Function(None, 'render_options', ['self', 'choices', 'selected_choices'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('is_aware'), [Name('date')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('ctypes', 'OP_ASSIGN'), AssName('opts', 'OP_ASSIGN')])], CallFunc(Name('parse_header'), [CallFunc(Getattr(Name('content_type'), 'encode'), [Const('ascii')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'keyOrder'), 'remove'), [Name('k')], None, None))]))
Module(None, Stmt([Class('DeserializedObject', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([Subscript(Name('daemon_kwargs'), 'OP_ASSIGN', [Const('out_log')])], Subscript(Name('options'), 'OP_APPLY', [Const('outlog')]))]))
else :
Module(None, Stmt([Function(None, 'get_data', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('d'), Getattr(Name('datetime'), 'datetime')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('model', 'OP_ASSIGN'), Name('app_models'), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssTuple([AssName('key', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')]), CallFunc(Getattr(Name('data'), 'items'), [], None, None), Stmt([Pass()]), None)]))
except ImportError :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('fixture'), 'close'), [], None, None))]))
Module(None, Stmt([Class('ManagementUtility', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.core.serializers.python', [('Serializer', 'PythonSerializer')], 0)]))
Module(None, Stmt([Assign([AssName('compiled_result', 'OP_ASSIGN')], CallFunc(Name('compile_func'), [Name('self'), Name('token')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'view_name', 'args', 'kwargs', 'asvar'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('lbp', 'OP_ASSIGN')], Name('bp'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Const('  you can delete them.')], None, None))]))
Module(None, Stmt([From('threading', [('local', None)], 0)]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '_errors'), 'OP_ASSIGN', [Name('field')])], CallFunc(Getattr(Name('self'), 'error_class'), [Keyword('error_class', Const('nonfield'))], None, None))]))
except UnicodeEncodeError :
Module(None, Stmt([Continue()]))
Module(None, Stmt([Assign([AssName('child_nodelists', 'OP_ASSIGN')], Tuple([Const('nodelist_loop'), Const('nodelist_empty')]))]))
Module(None, Stmt([Assign([AssTuple([AssName('root', 'OP_ASSIGN')])], Name('nonlocal_root'))]))
Module(None, Stmt([Assign([AssName('db', 'OP_ASSIGN')], CallFunc(Getattr(Name('router'), 'db_for_read'), [Getattr(Name('self'), 'cache_model_class')], None, None))]))
Module(None, Stmt([Class('CheckboxSelectMultiple', [Name('RendererMixin'), Name('SelectMultiple')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('num_existing', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('existing')], None, None))]))
Module(None, Stmt([Function(None, 'ljust', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('subcommand_cls', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'fetch_command'), [Subscript(Name('cwords'), 'OP_APPLY', [Const(0)])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'children'), 'append'), [Name('data')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_count'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('stream_or_string', 'OP_ASSIGN')], CallFunc(Getattr(Name('stream_or_string'), 'decode'), [Const('utf-8')], None, None))]))
Module(None, Stmt([Function(None, 'create_table', ['self', 'database', 'tablename'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('input_type', 'OP_ASSIGN')], Const('url'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'flo', 'chunk_size'], [Mul((Const(64), Const(1024)))], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('syear', 'OP_ASSIGN')], Mod((Const('%04d'), Tuple([Getattr(Name('dt'), 'year')]))))]))
Module(None, Stmt([Assign([AssName('endblock_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^\\s*endblocktrans$')], None, None))]))
Module(None, Stmt([Function(None, 'source_error', ['self', 'source', 'msg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Runs this project as a FastCGI application. Requires flup.'))]))
Module(None, Stmt([If([(Compare(Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('ttl')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([AugAssign(Name('key'), '+=', CallFunc(Name('tuple'), [GenExpr(GenExprInner(CallFunc(Name('type'), [Name('v')], None, None), [GenExprFor(AssName('v', 'OP_ASSIGN'), Name('args'), [])]))], None, None))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [Name('output')], None, None))]))
Module(None, Stmt([Function(None, '_has_changed', ['self', 'initial', 'data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('content', 'OP_ASSIGN')], Or([Name('content'), Const('')]))]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Function(None, 'deactivate_all', (), (), 0, None, Stmt([Pass()]))]))
from django . core . exceptions import ImproperlyConfigured
Module(None, Stmt([For(AssName('base', 'OP_ASSIGN'), Subscript(Name('bases'), 'OP_APPLY', [Sliceobj([Const(None), Const(None), UnarySub(Const(1))])]), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('level', 'OP_ASSIGN')], CallFunc(Getattr(Name('handler_config'), 'get'), [Const('level'), Name('None')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("Problem installing fixture '%s': %s is not a known serialization format."), Tuple([CallFunc(Getattr(Const(''), 'join'), [Slice(Name('parts'), 'OP_APPLY', None, UnarySub(Const(1)))], None, None), Subscript(Name('parts'), 'OP_APPLY', [UnarySub(Const(1))])])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'configurator'), 'convert'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('error', 'OP_ASSIGN')], Getattr(Name('error'), 'error_dict'))]))
Module(None, Stmt([Function(None, 'find_template', ['name', 'dirs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('self'), [('not in', Getattr(Name('context'), 'render_context'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('formfield', 'OP_ASSIGN')], CallFunc(Getattr(Name('f'), 'formfield'), [], None, Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('d', 'OP_ASSIGN')], CallFunc(Name('Decimal'), [CallFunc(Name('force_text'), [CallFunc(Name('float'), [Name('text')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('lang', 'OP_ASSIGN')], CallFunc(Name('get_language'), [], None, None))]))
Module(None, Stmt([Assign([AssName('r', 'OP_ASSIGN')], CallFunc(Getattr(Name('o'), 'isoformat'), [], None, None))]))
Module(None, Stmt([Class('DateTimeBaseInput', [Name('TextInput')], None, Stmt([Pass()]), None)]))
try :
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('ModelChoiceField'), Name('self')], None, None), 'prepare_value'), [Name('value')], None, None))]))
else :
Module(None, Stmt([Return(CallFunc(Name('func'), [], Name('resolved_args'), Name('resolved_kwargs')))]))
Module(None, Stmt([Assign([AssName('base', 'OP_ASSIGN')], Slice(Name('base'), 'OP_APPLY', None, UnarySub(Const(4))))]))
Module(None, Stmt([Assert(Compare(Name('mimetype'), [('is', Name('None'))]), None)]))
super ( MemcachedCache , self ) . __init__ ( server , params ,  library = memcache ,  value_not_found_exception = ValueError )
Module(None, Stmt([Return(CallFunc(Name('_curried_func'), [], Add((Name('args'), Name('moreargs'))), CallFunc(Name('dict'), [Name('kwargs')], None, Name('morekwargs'))))]))
Module(None, Stmt([From('collections', [('namedtuple', None)], 0)]))
@ register . filter ( is_safe = True )
Module(None, Stmt([Function(None, 'ngettext', ['singular', 'plural', 'number'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('msgs', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'copy_plural_forms'), [Name('msgs'), Name('locale')], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('\n'), 'join'), [Name('output')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('    - %s\n'), CallFunc(Getattr(Name('operation'), 'describe'), [], None, None)))], None, None))]))
Module(None, Stmt([Class('VariableDoesNotExist', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'sep'), [('not in', Name('signed_value'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([If([(Name('msg'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('timezone'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('wrapper'), 'cache_clear', 'OP_ASSIGN')], Name('cache_clear'))]))
Module(None, Stmt([Assign([AssName('consume_next', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('endbmatch', 'OP_ASSIGN')], CallFunc(Getattr(Name('endblock_re'), 'match'), [Getattr(Name('t'), 'contents')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('urlunsplit'), [Name('url_fields')], None, None))]))
Module(None, Stmt([Import([('subprocess', None)])]))
Module(None, Stmt([Assign([AssName('ttl', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('ttl')], None, None))]))
Module(None, Stmt([From('django.utils.translation', [('ungettext', None), ('ugettext', '_')], 0)]))
Module(None, Stmt([Function(None, 'created_time', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_is_rendered', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([From('django.utils.timesince', [('timesince', None), ('timeuntil', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'append'), [Name('ch')], None, None))]))
Module(None, Stmt([If([(Compare(Name('key'), [('in', Name('cache'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'unsign', ['self', 'signed_value'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([If([(Getattr(Name('request'), '_post_parse_error'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'literal', 'OP_ASSIGN')], CallFunc(Name('int'), [Getattr(Name('self'), 'literal')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('set'), [GenExpr(GenExprInner(Name('x'), [GenExprFor(AssName('x', 'OP_ASSIGN'), Name('ext_list'), [GenExprIf(Compare(CallFunc(Getattr(Name('x'), 'strip'), [Const('.')], None, None), [('not in', Name('ignored'))]))])]))], None, None))]))
Module(None, Stmt([From('django.utils.module_loading', [('import_string', None)], 0)]))
Module(None, Stmt([Return(Name('False'))]))
path = path_override if path_override is not None else request . path
Module(None, Stmt([For(AssName('model', 'OP_ASSIGN'), CallFunc(Getattr(Name('router'), 'get_migratable_models'), [Name('app_config'), Getattr(Name('connection'), 'alias'), Keyword('include_auto_created', Name('True'))], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([From('datetime', [('datetime', None)], 0)]))
Module(None, Stmt([Assign([AssName('urlunquote', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('urlunquote'), Getattr(Name('six'), 'text_type')], None, None))]))
Module(None, Stmt([If([(Compare(Name('count'), [('!=', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_createdir', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('level', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Assign([AssName('remaining_bits', 'OP_ASSIGN')], Slice(Name('bits'), 'OP_APPLY', Const(1), None))]))
Module(None, Stmt([Assign([AssName('nesting', 'OP_ASSIGN')], Const(1))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('hashlib'), 'pbkdf2_hmac'), [Getattr(CallFunc(Name('digest'), [], None, None), 'name'), Name('password'), Name('salt'), Name('iterations'), Name('dklen')], None, None))]))
Module(None, Stmt([Discard(Yield(Const("#   * Rearrange models' order")))]))
Module(None, Stmt([Assign([AssName('run_syncdb', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('error'), Const('error_dict')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Name('template_localtime'), [Name('obj'), Getattr(Name('context'), 'use_tz')], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('value'), Tuple([Name('bytes'), Getattr(Name('six'), 'text_type')])], None, None)), Stmt([Pass()]))], None)]))
elif cwords [ 0 ] in subcommands and cwords [ 0 ] != 'help' :
Module(None, Stmt([Assign([AssName('SafeString', 'OP_ASSIGN')], Name('SafeBytes'))]))
Module(None, Stmt([Assign([AssName('options', 'OP_ASSIGN')], ListComp(Name('opt'), [ListCompFor(AssName('opt', 'OP_ASSIGN'), Name('options'), [ListCompIf(Compare(Subscript(Name('opt'), 'OP_APPLY', [Const(0)]), [('not in', Name('prev_opts'))]))])]))]))
Module(None, Stmt([Assign([AssName('renamed', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Function(None, 'tzname', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssTuple([AssName('ISO_8859_1', 'OP_ASSIGN'), AssName('UTF_8', 'OP_ASSIGN')])], Tuple([CallFunc(Name('str'), [Const('iso-8859-1')], None, None), CallFunc(Name('str'), [Const('utf-8')], None, None)]))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'dicts', 'OP_ASSIGN')], List([Name('builtins')]))]))
except ValueError :
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('re'), 'search'), [Const('^[_a-zA-Z]\\w*$'), Name('name')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_get_to_python', ['self', 'field'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'add', ['self', 'data', 'conn_type', 'squash'], [Name('True')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('NamedTemporaryFile', 'OP_ASSIGN')], Getattr(Name('tempfile'), 'NamedTemporaryFile'))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('fixture_files_in_dir')], None, None), [('>', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const(''))]))
except ValueError :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('args'), 'append'), [Tuple([Name('True'), CallFunc(Name('Variable'), [Name('var_arg')], None, None)])], None, None))]))
Module(None, Stmt([Return(CallFunc(CallFunc(Getattr(Name('func'), '__get__'), [Name('self'), CallFunc(Name('type'), [Name('self')], None, None)], None, None), [], Name('args2'), Name('kwargs2')))]))
return None if timeout is None else time . time ( ) + timeout
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'startElement'), [Const('channel'), CallFunc(Getattr(Name('self'), 'root_attributes'), [], None, None)], None, None))]))
Module(None, Stmt([From('django.utils.safestring', [('mark_safe', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('Checking %s for fixtures...'), CallFunc(Name('humanize'), [Name('fixture_dir')], None, None)))], None, None))]))
Module(None, Stmt([Return(Compare(CallFunc(Name('importlib_find'), [Name('full_module_name'), Name('package_path')], None, None), [('is not', Name('None'))]))]))
Module(None, Stmt([Function(None, '_resolve_lookup', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '__language', 'OP_ASSIGN')], Name('language'))]))
Module(None, Stmt([Assign([AssName('dow', 'OP_ASSIGN')], Subscript(Name('days'), 'OP_APPLY', [CallFunc(Getattr(Name('date'), 'weekday'), [], None, None)]))]))
Module(None, Stmt([Assign([AssName('mask', 'OP_ASSIGN')], Bitor([Getattr(Name('pyinotify'), 'IN_MODIFY'), Getattr(Name('pyinotify'), 'IN_DELETE'), Getattr(Name('pyinotify'), 'IN_ATTRIB'), Getattr(Name('pyinotify'), 'IN_MOVED_FROM'), Getattr(Name('pyinotify'), 'IN_MOVED_TO'), Getattr(Name('pyinotify'), 'IN_CREATE')]))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('router'), 'allow_migrate'), [Name('database'), Getattr(Name('cache'), 'cache_model_class')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('smart_str', 'OP_ASSIGN')], Name('smart_bytes'))]))
@ wraps ( fdel )
Module(None, Stmt([Assign([AssAttr(Name('self'), 'namespace', 'OP_ASSIGN')], Name('namespace'))]))
Module(None, Stmt([If([(Compare(Name('processors'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_close_files'), [], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const("'%s.%s' has no field named '%s'."), Tuple([Getattr(Getattr(Name('model'), '_meta'), 'app_label'), Getattr(Getattr(Name('model'), '_meta'), 'object_name'), Name('fk_name')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_raw_ipv6', 'OP_ASSIGN')], CallFunc(Name('bool'), [Getattr(Name('self'), 'use_ipv6')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("Invalid templatetag argument: '%s'. Must be one of: %s"), Tuple([Name('tag'), CallFunc(Name('list'), [Getattr(Name('TemplateTagNode'), 'mapping')], None, None)])))], None, None), None, None)]))
Module(None, Stmt([From('django.utils.six.moves.urllib.parse', [('quote', None)], 0)]))
@ register . filter ( "escapejs" )
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Function(None, 'serialize', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'connector', 'OP_ASSIGN')], Or([Name('connector'), Getattr(Name('self'), 'default')]))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('ModelMultipleChoiceField'), Name('self')], None, None), 'prepare_value'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('want_unicode', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Function(None, 'B', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], Mod((Const("'%s' already exists"), Name('top_dir'))))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([From('django', [('http', None)], 0)]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
except ( ValueError , TypeError ) :
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'queryset'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_load_post_and_files'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('copystat'), [Name('old_file_name'), Name('new_file_name')], None, None))]))
else :
Module(None, Stmt([If([(Name('origin'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('self'), 'OP_ASSIGN', [Name('key')])], Name('result'))]))
Module(None, Stmt([Assign([AssName('fixture_dirs', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('dir_'), CallFunc(Getattr(Getattr(Name('os'), 'path'), 'dirname'), [Name('fixture_name')], None, None)], None, None), [ListCompFor(AssName('dir_', 'OP_ASSIGN'), Name('fixture_dirs'), [])]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('s'), Name('SafeData')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Compare(Subscript(Name('value'), 'OP_APPLY', [Const(0)]), [('in', Getattr(Name('self'), 'empty_values'))]), Compare(Subscript(Name('value'), 'OP_APPLY', [Const(1)]), [('in', Getattr(Name('self'), 'empty_values'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('t'), 'to_language'), [], None, None))]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
except ImportError :
Module(None, Stmt([If([(Getattr(Name('self'), 'asvar'), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([From('django.core.handlers', [('base', None)], 0)]))
Module(None, Stmt([Assign([AssName('formfield', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'fields'), 'OP_APPLY', [Name('field_name')]))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('form'), '_errors'), 'OP_ASSIGN', [Name('NON_FIELD_ERRORS')])], CallFunc(Getattr(Name('self'), 'error_class'), [List([CallFunc(Getattr(Name('self'), 'get_form_error'), [], None, None)])], None, None))]))
Module(None, Stmt([Discard(Yield(Tuple([Name('representative'), Name('True')])))]))
Module(None, Stmt([Assign([Subscript(Name('self'), 'OP_ASSIGN', [Name('key')])], Name('default'))]))
Module(None, Stmt([For(AssName('bit', 'OP_ASSIGN'), Name('bits'), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssName('obj', 'OP_ASSIGN'), CallFunc(Getattr(Name('queryset'), 'iterator'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('inner'))]))
Module(None, Stmt([Function(None, 'cycle', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('old_attr'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'negated'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('d'), [Name('stream_or_string')], None, Name('options')))]))
Module(None, Stmt([Assign([Subscript(Name('memo'), 'OP_ASSIGN', [CallFunc(Name('id'), [Name('self')], None, None)])], Name('result'))]))
Module(None, Stmt([Import([('pickle', None)])]))
Module(None, Stmt([If([(Getattr(Name('pattern'), 'app_name'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('old_umask', 'OP_ASSIGN')], CallFunc(Getattr(Name('os'), 'umask'), [Const(0)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('ignoring file %s in %s\n'), Tuple([Name('filename'), Name('dirpath')])))], None, None))]))
Module(None, Stmt([Assign([AssName('DefaultFeed', 'OP_ASSIGN')], Name('Rss201rev2Feed'))]))
Module(None, Stmt([Return(Name('self'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'toks', 'OP_ASSIGN')], Dict(()))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'silent', 'OP_ASSIGN')], Name('silent'))]))
Module(None, Stmt([Discard(CallFunc(Name('import_module'), [Name('app_name')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('Exception'), [Mod((Const('This %s instance is not writable'), Getattr(Getattr(Name('self'), '__class__'), '__name__')))], None, None), None, None)]))
Module(None, Stmt([If([(Or([Compare(Name('localized_fields'), [('==', Name('ALL_FIELDS'))]), And([Name('localized_fields'), Compare(Getattr(Name('f'), 'name'), [('in', Name('localized_fields'))])])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Subscript(Getattr(Name('self'), '_expire_info'), 'OP_DELETE', [Name('key')])]))
Module(None, Stmt([Import([('sys', None)])]))
except ImportError :
Module(None, Stmt([Function(None, 'modified_time', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('item', 'OP_ASSIGN'), AssName('old_style_list', 'OP_ASSIGN')])], CallFunc(Name('convert_old_style_list'), [Name('sublist')], None, None))]))
Module(None, Stmt([Function(None, 'render', ['self', 'name', 'value', 'attrs', 'choices'], [Name('None'), Tuple(())], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [CallFunc(Name('format_html'), [Getattr(Name('self'), 'inner_html'), Keyword('choice_value', CallFunc(Name('force_text'), [Name('w')], None, None)), Keyword('sub_widgets', Const(''))], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('opts', 'OP_ASSIGN')], Getattr(Name('instance'), '_meta'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'host', 'OP_ASSIGN')], Or([Name('host'), Getattr(Name('settings'), 'EMAIL_HOST')]))]))
Module(None, Stmt([Assign([AssName('qs', 'OP_ASSIGN')], CallFunc(Getattr(Name('qs'), 'using'), [Getattr(Getattr(Getattr(Name('form'), 'instance'), '_state'), 'db')], None, None))]))
Module(None, Stmt([Assign([AssName('p_pattern', 'OP_ASSIGN')], Getattr(Getattr(Name('pattern'), 'regex'), 'pattern'))]))
Module(None, Stmt([Assign([AssName('code', 'OP_ASSIGN')], Const('max_length'))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'val_expr'), 'resolve'), [Name('context')], None, None))]))
Module(None, Stmt([Assign([AssName('auto_id', 'OP_ASSIGN')], Getattr(Name('self'), 'auto_id'))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('required')]), Keyword('code', Const('required'))], None, None), None, None)]))
Module(None, Stmt([Return(CallFunc(Name('getattr'), [Name('_urlconfs'), Const('value'), Name('default')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('migration_name'), Keyword('nargs', Const('?')), Keyword('help', Const('Database state will be brought to the state after that migration.'))], None, None))]))
except IndexError :
Module(None, Stmt([If([(Getattr(Name('self'), 'localize'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_bytes'), [Name('value')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('type'), [Name('self')], None, None), '__bool__'), [Name('self')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('new_name', 'OP_ASSIGN'), AssName('num_repl', 'OP_ASSIGN')])], CallFunc(Getattr(Name('re'), 'subn'), [Const('\\W'), Const('_'), Name('new_name')], None, None))]))
Module(None, Stmt([Function(None, 'add', ['self', 'key', 'value', 'timeout', 'version'], [Name('DEFAULT_TIMEOUT'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('child_nodelists', 'OP_ASSIGN')], Tuple([Const('nodelist')]))]))
Module(None, Stmt([Return(Mod((Const('%s%s'), Tuple([Mod((Const('\x1b[%sm'), CallFunc(Getattr(Const(';'), 'join'), [Name('code_list')], None, None))), Or([Name('text'), Const('')])]))))]))
Module(None, Stmt([Assign([AssName('boundary', 'OP_ASSIGN')], CallFunc(Getattr(Name('opts'), 'get'), [Const('boundary')], None, None))]))
Module(None, Stmt([Return(Subscript(Name('PALETTES'), 'OP_APPLY', [Name('DEFAULT_PALETTE')]))]))
Module(None, Stmt([Assign([AssName('content_length', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Return(Tuple([Const(0), Subscript(Name('k'), 'OP_APPLY', [Const(1)])]))]))
except ( ImportError , IndentationError , NameError , SyntaxError ,  TypeError , AttributeError ) :
Module(None, Stmt([Function(None, 'clear_cdata_mode', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_has_changed', ['self', 'initial', 'data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'run_validators'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('construct_instance_exclude', 'OP_ASSIGN')], CallFunc(Name('list'), [Name('exclude')], None, None))]))
Module(None, Stmt([If([(Name('options'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('field_params'), 'OP_ASSIGN', [Const('db_column')])], Name('col_name'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'content', 'OP_ASSIGN')], Name('content'))]))
Module(None, Stmt([Discard(CallFunc(Name('touch_import'), [Const('django.utils.encoding'), Const('python_2_unicode_compatible'), Name('decorated')], None, None))]))
Module(None, Stmt([Class('ResolverMatch', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'fed'), 'append'), [Name('d')], None, None))]))
Module(None, Stmt([Assign([AssName('exec_', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Getattr(Name('moves'), 'builtins'), Const('exec')], None, None))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Assign([AssName('compressed', 'OP_ASSIGN')], CallFunc(Getattr(Name('zlib'), 'compress'), [Name('data')], None, None))]))
try :
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
elif self . verbosity > 0 :
Module(None, Stmt([From('datetime', [('datetime', None), ('timedelta', None), ('tzinfo', None)], 0)]))
Module(None, Stmt([Return(Compare(Getattr(Name('self'), 'scheme'), [('==', Const('https'))]))]))
Module(None, Stmt([From('django.utils._os', [('npath', None), ('upath', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--database'), Keyword('action', Const('store')), Keyword('dest', Const('database')), Keyword('default', Name('DEFAULT_DB_ALIAS')), Keyword('help', Const('Nominates a specific database to load fixtures into. Defaults to the "default" database.'))], None, None))]))
Module(None, Stmt([If([(Name('fields'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'split_contents', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('EscapeData', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('reporter', 'OP_ASSIGN')], CallFunc(Name('ExceptionReporter'), [Name('request'), Keyword('is_email', Name('True'))], Name('exc_info'), None))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Class('FloatField', [Name('IntegerField')], None, Stmt([Pass()]), None)]))
@ python_2_unicode_compatible
Module(None, Stmt([Assign([Subscript(Name('wsgi_opts'), 'OP_ASSIGN', [Const('bindAddress')])], Tuple([Subscript(Name('options'), 'OP_APPLY', [Const('host')]), CallFunc(Name('int'), [Subscript(Name('options'), 'OP_APPLY', [Const('port')])], None, None)]))]))
Module(None, Stmt([Assign([AssName('url_markup_template', 'OP_ASSIGN')], Const('<a href="{0}">{1}</a>'))]))
@ stringfilter
Module(None, Stmt([Function(None, 'dictitem', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_get_height', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('digits', 'OP_ASSIGN')], Name('decimals'))]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([If([(Name('register_to'), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('var', 'OP_ASSIGN'), Name('loopvars'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'db', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'pop'), [Const('using'), Name('DEFAULT_DB_ALIAS')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'states', 'first'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'attrs', 'OP_ASSIGN')], Name('attrs'))]))
Module(None, Stmt([Assign([AssName('hidden_widget', 'OP_ASSIGN')], Name('MultipleHiddenInput'))]))
Module(None, Stmt([AugAssign(Name('week_number'), '-=', Const(1))]))
Module(None, Stmt([If([(Compare(Name('new_name'), [('in', Name('used_column_names'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'%s' is not a valid tag library: %s"), Tuple([Name('taglib'), Name('e')])))], None, None), None, None)]))
except TemplateSyntaxError as e :
Module(None, Stmt([Class('override', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([Subscript(Name('html'), 'OP_ASSIGN', [Const('day')])], CallFunc(Getattr(Name('self'), 'create_select'), [Name('name'), Getattr(Name('self'), 'day_field'), Name('value'), Name('day_val'), Name('choices'), Getattr(Name('self'), 'day_none_value')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'backout'), 'append'), [Getattr(Name('self'), 'pointer')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('ExtendsNode'), [Name('nodelist'), Name('parent_name')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Name('name')])], CallFunc(Getattr(Name('parser'), 'compile_filter'), [Name('value')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('elt'), Tuple([Name('Choice'), Name('NonCapture')])], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.six.moves', [('input', None)], 0)]))
else :
Module(None, Stmt([For(AssName('f', 'OP_ASSIGN'), Name('fields'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'pbkdf2', ['password', 'salt', 'iterations', 'dklen', 'digest'], [Const(0), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('classonlymethod', [Name('classmethod')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('cache_timeout'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('values', 'OP_ASSIGN')], CallFunc(Name('list'), [Name('values')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('URLField'), Name('self')], None, None), 'clean'), [Name('value')], None, None))]))
Module(None, Stmt([If([(Name('label_output'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Name('NumberInput'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'save_m2m', 'OP_ASSIGN')], Name('save_m2m'))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'delete'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'var1', 'var2', 'nodelist_true', 'nodelist_false', 'negate'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('invalid_var_format_string', 'OP_ASSIGN')], Compare(Const('%s'), [('in', Getattr(Name('settings'), 'TEMPLATE_STRING_IF_INVALID'))]))]))
Module(None, Stmt([Return(CallFunc(Name('IfEqualNode'), [Name('val1'), Name('val2'), Name('nodelist_true'), Name('nodelist_false'), Name('negate')], None, None))]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([For(AssName('migration', 'OP_ASSIGN'), Name('merge_migrations'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Global(['_supported'])]))
Module(None, Stmt([If([(Compare(Name('status'), [('!=', Name('STATUS_OK'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'has_key'), [Name('key')], None, None))]))
Module(None, Stmt([Return(And([Name('forms_valid'), Not(CallFunc(Getattr(Name('self'), 'non_form_errors'), [], None, None))]))]))
Module(None, Stmt([Assign([AssName('parse', 'OP_ASSIGN')], Subscript(Getattr(Name('sys'), 'modules'), 'OP_APPLY', [Add((Name('__name__'), Const('.moves.urllib_parse')))]))]))
Module(None, Stmt([Assign([AssName('lang_code', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('request'), 'COOKIES'), 'get'), [Getattr(Name('settings'), 'LANGUAGE_COOKIE_NAME')], None, None))]))
Module(None, Stmt([Assign([AssName('_expire_info', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssName('arg', 'OP_ASSIGN')], Add((Const(','), Name('arg'))))]))
Module(None, Stmt([Assign([AssAttr(Name('value'), 'configurator', 'OP_ASSIGN')], Name('self'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const(':'), 'join'), [Name('ret_ip')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_set_regex'), [Name('regex')], None, None))]))
Module(None, Stmt([Function(None, 'as_table', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Const(''))]))
@ register . filter ( is_safe = False )
Module(None, Stmt([Function(None, '_archive_cls', ['file'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('chunk'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of Storage must provide a created_time() method')], None, None), None, None)]))
Module(None, Stmt([Return(CallFunc(Name('timedelta'), [Keyword('seconds', UnarySub(Getattr(Name('time'), 'altzone')))], None, None))]))
Module(None, Stmt([Assign([AssName('new_name', 'OP_ASSIGN')], Slice(Name('new_name'), 'OP_APPLY', None, UnarySub(Const(3))))]))
Module(None, Stmt([Class('InlineForeignKeyField', [Name('Field')], None, Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Return(Tuple([Name('_lazy_proxy_unpickle'), Add((Tuple([Name('func'), Getattr(Name('self'), '__args'), Getattr(Name('self'), '__kw')]), Name('resultclasses')))]))]))
Module(None, Stmt([Function(None, 'make_view_atomic', ['self', 'view'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'close', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('all'), [GenExpr(GenExprInner(Compare(CallFunc(Name('getattr'), [Name('self'), Name('attr')], None, None), [('==', CallFunc(Name('getattr'), [Name('other'), Name('attr')], None, None))]), [GenExprFor(AssName('attr', 'OP_ASSIGN'), List([Const('level'), Const('msg'), Const('hint'), Const('obj'), Const('id')]), [])]))], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'host', 'port', 'username', 'password', 'use_tls', 'fail_silently', 'use_ssl', 'timeout', 'kwargs'], [Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('False'), Name('None'), Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'data', 'files', 'auto_id', 'prefix', 'initial', 'error_class', 'label_suffix', 'empty_permitted', 'instance'], [Name('None'), Name('None'), Const('id_%s'), Name('None'), Name('None'), Name('ErrorList'), Name('None'), Name('False'), Name('None')], 0, None, Stmt([Pass()]))]))
except TypeError :
Module(None, Stmt([Assign([AssName('input_formats', 'OP_ASSIGN')], CallFunc(Getattr(Name('formats'), 'get_format_lazy'), [Const('TIME_INPUT_FORMATS')], None, None))]))
try :
Module(None, Stmt([Function(None, 'check_migrations', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'match_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Getattr(Name('self'), 'match')], None, None))]))
from django . core . exceptions import ImproperlyConfigured
else :
Module(None, Stmt([If([(Name('escaped'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('now', 'OP_ASSIGN')], CallFunc(Getattr(Name('now'), 'replace'), [Keyword('microsecond', Const(0))], None, None))]))
Module(None, Stmt([Assign([AssName('stream_class', 'OP_ASSIGN')], Name('BytesIO'))]))
Module(None, Stmt([Assign([AssAttr(Name('check'), 'tags', 'OP_ASSIGN')], Name('tags'))]))
Module(None, Stmt([Assign([AssName('template', 'OP_ASSIGN')], Slice(Name('template'), 'OP_APPLY', Const(7), None))]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], List([Const('luhn')]))]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('i'), Getattr(Name('six'), 'integer_types')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'compile_filter_error', ['self', 'token', 'e'], [], 0, None, Stmt([Pass()]))]))
try :
except OSError as e :
elif f . unique :
Module(None, Stmt([Function(None, 'receive_data_chunk', ['self', 'raw_data', 'start'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('log', 'OP_ASSIGN'), Name('existing'), Stmt([Pass()]), None)]))
try :
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], List([Const('get_cache'), Const('cache'), Const('DEFAULT_CACHE_ALIAS'), Const('InvalidCacheBackendError'), Const('CacheKeyWarning'), Const('BaseCache')]))]))
Module(None, Stmt([If([(Compare(Name('lang_code'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Getattr(Name('self'), 'widget'), 'choices', 'OP_ASSIGN')], Getattr(Name('self'), 'choices'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Add((CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_HEADING'), [Mod((Const("Migrations for '%s':"), Name('app_label')))], None, None), Const('\n')))], None, None))]))
else :
Module(None, Stmt([Assign([AssName('resource_string', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Function(None, 'led', ['self', 'left', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('BASE2_ALPHABET', 'OP_ASSIGN')], Const('01'))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('__imul__', 'OP_ASSIGN')], Name('complain'))]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], Const("The included urlconf '{name}' does not appear to have any patterns in it. If you see valid patterns in the file then the issue is probably caused by a circular import."))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--indent'), Keyword('default', Name('None')), Keyword('dest', Const('indent')), Keyword('type', Name('int')), Keyword('help', Const('Specifies the indent level to use when pretty-printing output.'))], None, None))]))
Module(None, Stmt([Assign([AssName('cached_loaders', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([If([(Getattr(Name('opts'), 'managed'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Function(None, 'pop', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], Add((List([Const('xgettext'), Const('-d'), Name('domain'), Const('--language=C'), Const('--keyword=gettext_noop'), Const('--keyword=gettext_lazy'), Const('--keyword=ngettext_lazy:1,2'), Const('--keyword=pgettext:1c,2'), Const('--keyword=npgettext:1c,2,3'), Const('--output=-')]), Getattr(Name('command'), 'xgettext_options'))))]))
Module(None, Stmt([Assign([AssName('_anonymous_', 'OP_ASSIGN')], List([Const('_offset_union')]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('data'), Name('bytes')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stream'), 'write'), [Const('\n')], None, None))]))
Module(None, Stmt([Class('RadioSelect', [Name('RendererMixin'), Name('Select')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [CallFunc(Name('_'), [Const('Enter a valid IPv6 address.')], None, None), Keyword('code', Const('invalid'))], None, None), None, None)]))
else :
elif option == 'only' :
@ register . filter ( is_safe = True )
Module(None, Stmt([Function(None, 'clean', ['self', 'data', 'initial'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('maxsize'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Function(None, 'handle_m2m_field', ['self', 'obj', 'field'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Prints the CREATE INDEX SQL statements for the given model module name(s).'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'delete_first_token'), [], None, None))]))
Module(None, Stmt([Return(Name('maybe'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('tried'), 'append'), [Name('filepath')], None, None))]))
Module(None, Stmt([Assign([AssName('exit_code', 'OP_ASSIGN')], CallFunc(Name('restart_with_reloader'), [], None, None))]))
Module(None, Stmt([Return(Mod((Const('%s_%s'), Tuple([Name('id_'), Name('first_select')]))))]))
Module(None, Stmt([If([(Compare(Name('fg'), [('in', Name('color_names'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('app_name', 'OP_ASSIGN')], Subscript(CallFunc(Name('get_commands'), [], None, None), 'OP_APPLY', [Name('name')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'setlist'), [Name('key'), Name('default_list')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'length', 'OP_ASSIGN'), AssAttr(Name('self'), 'mime_type', 'OP_ASSIGN')])], Tuple([Name('length'), Name('mime_type')]))]))
Module(None, Stmt([For(AssName('i', 'OP_ASSIGN'), CallFunc(Name('range'), [Const(0), CallFunc(Getattr(Name('self'), 'total_form_count'), [], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Name('PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('line', 'OP_ASSIGN'), CallFunc(Getattr(Name('header'), 'split'), [Const('\r\n')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'stream', 'OP_ASSIGN')], Name('stream'))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('b64encoded', 'OP_ASSIGN')], CallFunc(Getattr(Name('base64'), 'b64encode'), [Name('pickled')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('_trans'), 'check_for_language'), [Name('lang_code')], None, None))]))
Module(None, Stmt([Class('Loader', [Name('BaseLoader')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, 'flatten_result', ['source'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_post_clean', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('upload'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('categories', 'OP_ASSIGN')], ListComp(Name('c'), [ListCompFor(AssName('c', 'OP_ASSIGN'), Name('categories'), [])]))]))
Module(None, Stmt([Assign([AssName('re_formatchars', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('(?<!\\\\)([aAbBcdDeEfFgGhHiIjlLmMnNoOPrsStTUuwWyYzZ])')], None, None))]))
Module(None, Stmt([Assign([AssName('fd', 'OP_ASSIGN')], CallFunc(Getattr(Name('os'), 'open'), [Name('full_path'), Name('flags'), Const(438)], None, None))]))
Module(None, Stmt([From('django.db', [('router', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateDoesNotExist'), [CallFunc(Getattr(Const(', '), 'join'), [Name('not_found')], None, None)], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('default_error_messages', 'OP_ASSIGN')], Dict([(Const('invalid_choice'), CallFunc(Name('_'), [Const('Select a valid choice. That choice is not one of the available choices.')], None, None))]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_errors'), 'append'), [Getattr(Name('form'), 'errors')], None, None))]))
try :
Module(None, Stmt([Return(Name('new_class'))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_wrapped'), [('is', Name('empty'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('parts', 'OP_ASSIGN')], CallFunc(Getattr(Name('viewname'), 'split'), [Const(':')], None, None))]))
Module(None, Stmt([If([(Name('compress'), Stmt([Pass()]))], None)]))
@ property
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'errors'), 'get'), [Name('NON_FIELD_ERRORS'), CallFunc(Getattr(Name('self'), 'error_class'), [Keyword('error_class', Const('nonfield'))], None, None)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'value', 'OP_ASSIGN')], Name('value'))]))
Module(None, Stmt([Printnl([Name('FASTCGI_HELP')], None)]))
Module(None, Stmt([From('functools', [('wraps', None), ('update_wrapper', None), ('WRAPPER_ASSIGNMENTS', None)], 0)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Name('user_function'), [], Name('args'), Name('kwds')))]))
Module(None, Stmt([Class('UnrecognizedArchiveFormat', [Name('ArchiveException')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('singular', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Name('old_style_list'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('html_message'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'urlquote_plus', ['url', 'safe'], [Const('')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('attrvalue'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_populate'), [], None, None))]))
except :
Module(None, Stmt([Assign([AssName('lang_code', 'OP_ASSIGN')], CallFunc(Getattr(Name('regex_match'), 'group'), [Const(1)], None, None))]))
Module(None, Stmt([Assign([AssName('word_split_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('(\\s+)')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('UploadedFile'), Name('self')], None, None), '__init__'), [Name('file'), Name('name')], None, None))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], Tuple(()))]))
Module(None, Stmt([Class('HttpResponseNotAllowed', [Name('HttpResponse')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('next'), [Name('cycle_iter')], None, None), 'resolve'), [Name('context')], None, None))]))
except StandardError as e :
Module(None, Stmt([Class('CycleNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Import([('rlcompleter', None)])]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([From('django.utils.functional', [('lazy', None)], 0)]))
else :
Module(None, Stmt([Assign([AssName('response_fixes', 'OP_ASSIGN')], List([Getattr(Name('http'), 'fix_location_header'), Getattr(Name('http'), 'conditional_content_removal')]))]))
Module(None, Stmt([Assign([AssName('supported_platform', 'OP_ASSIGN')], And([Compare(Name('plat'), [('!=', Const('Pocket PC'))]), Or([Compare(Name('plat'), [('!=', Const('win32'))]), Compare(Const('ANSICON'), [('in', Getattr(Name('os'), 'environ'))])])]))]))
Module(None, Stmt([Function(None, 'values', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], Name('None'))]))
try :
Module(None, Stmt([Break()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--name'), Const('-n'), Keyword('dest', Const('files')), Keyword('action', Const('append')), Keyword('default', List(())), Keyword('help', Const('The file name(s) to render. Separate multiple extensions with commas, or use -n multiple times.'))], None, None))]))
Module(None, Stmt([Assign([AssName('months', 'OP_ASSIGN')], Tuple([Const('Jan'), Const('Feb'), Const('Mar'), Const('Apr'), Const('May'), Const('Jun'), Const('Jul'), Const('Aug'), Const('Sep'), Const('Oct'), Const('Nov'), Const('Dec')]))]))
else :
try :
Module(None, Stmt([Assign([AssName('connection_params', 'OP_ASSIGN')], Dict([(Const('local_hostname'), CallFunc(Getattr(Name('DNS_NAME'), 'get_fqdn'), [], None, None))]))]))
Module(None, Stmt([If([(Compare(Name('index'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.core.validators', [('EMPTY_VALUES', None)], 0)]))
Module(None, Stmt([From('django.utils.encoding', [('force_bytes', None), ('python_2_unicode_compatible', None)], 0)]))
Module(None, Stmt([Class('RegexValidator', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.core.mail.backends.base', [('BaseEmailBackend', None)], 0)]))
Module(None, Stmt([Assign([AssName('silent', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Const('If the flags are set, regex must be a regular expression string.')], None, None), None, None)]))
Module(None, Stmt([Function(None, 'pgettext', ['context', 'message'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'emit', ['self', 'record'], [], 0, None, Stmt([Pass()]))]))
elif prefix != common_prefix :
Module(None, Stmt([If([(Getattr(Name('response'), 'streaming'), Stmt([Pass()]))], None)]))
except OSError :
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_fname', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Getattr(Name('self'), 'file_path'), Name('fname')], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('context'), 'pop'), [], None, None))]))
Module(None, Stmt([Return(Name('cls'))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('connection'), 'cursor'), [], None, None), AssName('cursor', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Assign([AssName('node', 'OP_ASSIGN')], CallFunc(Name('CycleNode'), [Name('values'), Name('name'), Keyword('silent', Name('silent'))], None, None))]))
Module(None, Stmt([Assign([AssName('newline', 'OP_ASSIGN')], Const('\n'))]))
Module(None, Stmt([If([(Name('bf_errors'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Assign([AssName('state', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), '__dict__'), 'copy'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('list'), [CallFunc(Getattr(Name('self'), 'iteritems'), [], None, None)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_deleted_form_indexes', 'OP_ASSIGN')], List(()))]))
user_part , domain_part = value . rsplit ( '@' , 1 )
Module(None, Stmt([Assign([AssName('filenames', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Class('cached_property', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(And([Compare(Name('att_name'), [('==', Const('id'))]), Compare(Name('extra_params'), [('==', Dict([(Const('primary_key'), Name('True'))]))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('s'), Getattr(Name('six'), 'string_types')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('the_path'))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('ConvertingList'), [Name('value')], None, None))]))
Module(None, Stmt([If([(Or([Compare(Getattr(Name('self'), 'match'), [('is', Name('None'))]), CallFunc(Getattr(Getattr(Name('self'), 'match_re'), 'search'), [Name('f')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([From('itertools', [('chain', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('field'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('input_text', 'OP_ASSIGN')], CallFunc(Name('ugettext_lazy'), [Const('Change')], None, None))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'can_delete'), Stmt([Pass()]))], None)]))
response = self . get_exception_response ( request , resolver , 403 )
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('max_digits')]), Keyword('code', Const('max_digits')), Keyword('params', Dict([(Const('max'), Getattr(Name('self'), 'max_digits'))]))], None, None), None, None)]))
Module(None, Stmt([From('django.core.files', [('File', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--natural-foreign'), Keyword('action', Const('store_true')), Keyword('dest', Const('use_natural_foreign_keys')), Keyword('default', Name('False')), Keyword('help', Const('Use natural foreign keys if they are available.'))], None, None))]))
Module(None, Stmt([Function(None, 'default_key_func', ['key', 'key_prefix', 'version'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'prefix', 'OP_ASSIGN')], Or([Name('prefix'), CallFunc(Getattr(Name('self'), 'get_default_prefix'), [], None, None)]))]))
Module(None, Stmt([Function(None, 'b', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Getattr(Name('token'), 'split_contents'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('-e'), Const('--exclude'), Keyword('dest', Const('exclude')), Keyword('action', Const('append')), Keyword('default', List(())), Keyword('help', Const('An app_label or app_label.ModelName to exclude (use multiple --exclude to exclude multiple apps/models).'))], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'form', 'field', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('closable'), 'close'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_assert_mutable'), [], None, None))]))
Module(None, Stmt([If([(Name('takes_context'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'deactivate_all', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'do_translate', ['message', 'translation_function'], [], 0, None, Stmt([Pass()]))]))
elif isinstance ( rhs , SafeBytes ) :
Module(None, Stmt([If([(Not(Name('using_sysrandom')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Assign([AssName('dec_part', 'OP_ASSIGN')], Add((Name('decimal_sep'), Name('dec_part'))))]))
Module(None, Stmt([Return(Mod((Const('Error in formatting: %s'), CallFunc(Name('force_text'), [Name('e'), Keyword('errors', Const('replace'))], None, None))))]))
Module(None, Stmt([Assign([AssName('val', 'OP_ASSIGN')], CallFunc(Getattr(Const(', '), 'join'), [GenExpr(GenExprInner(CallFunc(Name('sanitize_address'), [Name('addr'), Name('encoding')], None, None), [GenExprFor(AssName('addr', 'OP_ASSIGN'), CallFunc(Name('getaddresses'), [Tuple([Name('val')])], None, None), [])]))], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('context'), 'OP_ASSIGN', [Const('block')])], Name('self'))]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('iterbytes', 'OP_ASSIGN')], Name('iter'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'creation_counter', 'OP_ASSIGN')], Getattr(Name('Field'), 'creation_counter'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'file'), 'write'), [Name('raw_data')], None, None))]))
Module(None, Stmt([Function(None, 'import_library', ['taglib_module'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('transfer_encoding'), [('==', Const('base64'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('field', 'OP_ASSIGN'), Getattr(Getattr(Name('model'), '_meta'), 'fields'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('filelist', 'OP_ASSIGN')], Name('new_filenames'))]))
@ register . filter ( is_safe = True )
else :
Module(None, Stmt([Function(None, 'getvalue', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('mimetype', 'OP_ASSIGN')], Name('DEFAULT_ATTACHMENT_MIME_TYPE'))]))
Module(None, Stmt([Assign([AssName('rollback', 'OP_ASSIGN')], Getattr(Name('self'), '_rollback'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('comment_notes'), 'extend'), [Name('notes')], None, None))]))
Module(None, Stmt([Assign([AssName('top_dir', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'abspath'), [CallFunc(Getattr(Name('path'), 'expanduser'), [Name('target')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('__str__', 'OP_ASSIGN')], CallFunc(Name('new_method_proxy'), [Name('str')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of LazyObject must provide a _setup() method')], None, None), None, None)]))
Module(None, Stmt([Return(Name('form'))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Return(CallFunc(Name('render_value_in_context'), [Name('value'), Name('context')], None, None))]))
Module(None, Stmt([Assign([AssName('error_msg', 'OP_ASSIGN')], Const('Your TEMPLATE_DIRS setting is empty. Change it to point to at least one template directory.'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_delete'), [Name('fname')], None, None))]))
Module(None, Stmt([Assign([AssName('klass', 'OP_ASSIGN')], Name('app_name'))]))
Module(None, Stmt([Assign([AssName('text_kwargs', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Name('k'), CallFunc(Name('force_text'), [Name('v')], None, None)]), [GenExprFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('kwargs'), 'items'), [], None, None), [])]))], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('obj'), 'pk'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('get_supported_language_variant'), [Name('lang_code')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('zfile'), 'write'), [Name('item')], None, None))]))
Module(None, Stmt([Assign([AssName('middle', 'OP_ASSIGN')], Slice(Name('middle'), 'OP_APPLY', None, UnarySub(CallFunc(Name('len'), [Name('closing')], None, None))))]))
Module(None, Stmt([Assign([AssName('DEFAULT_ATTACHMENT_MIME_TYPE', 'OP_ASSIGN')], Const('application/octet-stream'))]))
Module(None, Stmt([Assign([AssName('new_name', 'OP_ASSIGN')], Mod((Const('%s_%d'), Tuple([Name('new_name'), Name('num')]))))]))
Module(None, Stmt([Function(None, '_set', ['self', 'key', 'value', 'timeout'], [Name('DEFAULT_TIMEOUT')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('traceback'), 'print_exc'), [], None, None))]))
Module(None, Stmt([Function(None, 'length', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('int_part', 'OP_ASSIGN'), AssName('dec_part', 'OP_ASSIGN')])], CallFunc(Getattr(Name('str_number'), 'split'), [Const('.')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('language'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('language')])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stderr'), 'write'), [Mod((Const('Error: %s'), Name('error_text')))], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of Serializer must provide a start_object() method')], None, None), None, None)]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([Class('override', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('stream'), 'unget'), [Name('chunk')], None, None))]))
Module(None, Stmt([Return(CallFunc(CallFunc(Name('getattr'), [Name('instance'), Name('name')], None, None), [], None, None))]))
Module(None, Stmt([Assign([AssName('html', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssName('pk_key', 'OP_ASSIGN')], Mod((Const('%s-%s'), Tuple([CallFunc(Getattr(Name('self'), 'add_prefix'), [Name('i')], None, None), Getattr(Getattr(Getattr(Getattr(Name('self'), 'model'), '_meta'), 'pk'), 'name')]))))]))
Module(None, Stmt([Function(None, 'upload_handlers', ['self', 'upload_handlers'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Pass()]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('category'), Const(''), Dict([(Const('term'), Name('cat'))])], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'tup', 'hash'], [Name('hash')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('parts', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('t'), 'contents'), 'split'), [Const('|')], None, None))]))
Module(None, Stmt([From('django.core.management.color', [('no_style', None)], 0)]))
Module(None, Stmt([If([(Name('neg'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('field'), '_has_changed'), [CallFunc(Getattr(Name('field'), 'to_python'), [Name('initial')], None, None), Name('data')], None, None), Stmt([Pass()]))], None)]))
else :
else :
Module(None, Stmt([Assign([AssName('headerlist', 'OP_ASSIGN')], CallFunc(Getattr(Name('cache'), 'get'), [Name('cache_key'), Name('None')], None, None))]))
Module(None, Stmt([Class('Operator', [Name('TokenBase')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('no_settings_commands', 'OP_ASSIGN')], List([Const('help'), Const('version'), Const('--help'), Const('--version'), Const('-h'), Const('compilemessages'), Const('makemessages'), Const('startapp'), Const('startproject')]))]))
Module(None, Stmt([Assign([AssName('loopvars', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'split'), [Const(' *, *'), CallFunc(Getattr(Const(' '), 'join'), [Slice(Name('bits'), 'OP_APPLY', Const(1), Name('in_index'))], None, None)], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('get_wsgi_application'), [], None, None))]))
Module(None, Stmt([Assign([AssName('klass', 'OP_ASSIGN')], CallFunc(Getattr(Name('node'), 'clone'), [], None, None))]))
Module(None, Stmt([Assign([AssName('rv', 'OP_ASSIGN')], Name('level'))]))
Module(None, Stmt([From('threading', [('local', None)], 0)]))
Module(None, Stmt([Class('CacheClass', [Name('DummyCache')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Subscript(Name('obj_dict'), 'OP_DELETE', [Name('attr')])]))
Module(None, Stmt([Assign([AssName('c', 'OP_ASSIGN')], CallFunc(Name('int'), [Slice(Name('text'), 'OP_APPLY', Const(1), None), Const(16)], None, None))]))
Module(None, Stmt([If([(Compare(Slice(Name('line'), 'OP_APPLY', UnarySub(Const(1)), None), [('in', Tuple([Const('\n'), Const('\r')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], CallFunc(Name('_'), [Const('Ensure this value is greater than or equal to %(limit_value)s.')], None, None))]))
else :
Module(None, Stmt([Function(None, 'get_script_name', ['environ'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'fix_location_header', ['request', 'response'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('value'), 'strip'), [], None, None))]))
Module(None, Stmt([Function(None, '__deepcopy__', ['self', 'memo'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'handle', ['self', 'app_labels', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Compare(Name('col_name'), [('!=', Name('new_name'))]), Name('field_notes')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('original_lookup', 'OP_ASSIGN')], Name('lookup_view'))]))
Module(None, Stmt([Assign([AssAttr(Name('obj'), 'children', 'OP_ASSIGN')], CallFunc(Getattr(Name('copy'), 'deepcopy'), [Getattr(Name('self'), 'children'), Name('memodict')], None, None))]))
Module(None, Stmt([Assign([AssName('fill_to', 'OP_ASSIGN')], Const(7))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('__bytes__', 'OP_ASSIGN')], Name('serialize_headers'))]))
Module(None, Stmt([Assign([AssName('docs_version', 'OP_ASSIGN')], Mod((Const('%d.%d'), Slice(Getattr(Name('django'), 'VERSION'), 'OP_APPLY', None, Const(2)))))]))
Module(None, Stmt([Assign([AssName('template_tuple', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'template_cache'), 'get'), [Name('key')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_leftover', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([For(AssName('option', 'OP_ASSIGN'), Name('options'), Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.core.management.utils', [('find_command', None), ('popen_wrapper', None)], 0)]))
Module(None, Stmt([Class('CommentNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('bytes'), [Name('value')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Context'), Name('self')], None, None), '__init__'), [Name('dict_')], None, None))]))
Module(None, Stmt([Import([('inspect', None)])]))
except ImportError :
else :
Module(None, Stmt([Assign([AssTuple([AssName('name', 'OP_ASSIGN'), AssName('val', 'OP_ASSIGN')])], CallFunc(Name('forbid_multi_line_headers'), [Name('name'), Name('val'), Getattr(Name('self'), 'encoding')], None, None))]))
Module(None, Stmt([Assign([AssName('help_text', 'OP_ASSIGN')], Mod((Name('help_text_html'), CallFunc(Name('force_text'), [Getattr(Name('field'), 'help_text')], None, None))))]))
Module(None, Stmt([For(AssName('candidate', 'OP_ASSIGN'), CallFunc(Getattr(Name('glob'), 'iglob'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('fixture_dir'), Add((Name('fixture_name'), Const('*')))], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('float'), [Name('value')], None, None), [('!=', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'media', 'kwargs'], [Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('lines', 'OP_ASSIGN')], CallFunc(Getattr(Name('value'), 'split'), [Const('\n')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_view_middleware', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('shutil'), 'copyfileobj'), [Name('extracted'), Name('outfile')], None, None))]))
Module(None, Stmt([For(AssName('f', 'OP_ASSIGN'), CallFunc(Getattr(Name('chain'), 'from_iterable'), [GenExpr(GenExprInner(Subscript(Name('l'), 'OP_APPLY', [Const(1)]), [GenExprFor(AssName('l', 'OP_ASSIGN'), CallFunc(Getattr(Getattr(Name('self'), '_files'), 'lists'), [], None, None), [])]))], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'validate_ipv6_address', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('compatibility', 'OP_ASSIGN')], Const('compatibility'))]))
Module(None, Stmt([Assign([AssName('base_path', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'splitext'), [Name('po_path')], None, None), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Assign([AssName('changes', 'OP_ASSIGN')], CallFunc(Getattr(Name('autodetector'), 'changes'), [Keyword('graph', Getattr(Name('loader'), 'graph')), Keyword('trim_to_apps', Or([Name('app_labels'), Name('None')])), Keyword('convert_apps', Or([Name('app_labels'), Name('None')]))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('logger'), 'removeHandler'), [Name('h')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('EmailBackend'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('You appear not to have the %r program installed or on your path.'), Getattr(Getattr(Name('connection'), 'client'), 'executable_name')))], None, None), None, None)]))
try :
Module(None, Stmt([Assign([AssName('wsgi_opts', 'OP_ASSIGN')], Dict([(Const('maxSpare'), CallFunc(Name('int'), [Subscript(Name('options'), 'OP_APPLY', [Const('maxspare')])], None, None)), (Const('minSpare'), CallFunc(Name('int'), [Subscript(Name('options'), 'OP_APPLY', [Const('minspare')])], None, None)), (Const('maxChildren'), CallFunc(Name('int'), [Subscript(Name('options'), 'OP_APPLY', [Const('maxchildren')])], None, None)), (Const('maxRequests'), CallFunc(Name('int'), [Subscript(Name('options'), 'OP_APPLY', [Const('maxrequests')])], None, None))]))]))
Module(None, Stmt([From('django.forms.utils', [('ErrorList', None)], 0)]))
Module(None, Stmt([Assign([AssTuple([AssName('base', 'OP_ASSIGN'), AssName('ext', 'OP_ASSIGN')])], CallFunc(Getattr(Name('posixpath'), 'splitext'), [Name('the_path')], None, None))]))
Module(None, Stmt([Assign([AssName('k', 'OP_ASSIGN')], CallFunc(Getattr(Name('m'), 'end'), [], None, None))]))
Module(None, Stmt([Return(Name('major'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'lineno', 'OP_ASSIGN')], Const(1))]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('base'), Name('old_method_name'), CallFunc(Name('wrapper'), [Name('old_method')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'queryset', 'OP_ASSIGN')], Name('queryset'))]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('parser'), Const('_namedCycleNodes')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Compare(Getattr(Name('self'), 'number'), [('>', Const(1))]))]))
Module(None, Stmt([Assign([AssName('writer', 'OP_ASSIGN')], CallFunc(Name('MigrationWriter'), [Name('new_migration')], None, None))]))
Module(None, Stmt([Assign([AssName('mode', 'OP_ASSIGN')], CallFunc(Getattr(Name('stat'), 'S_IMODE'), [Getattr(Name('st'), 'st_mode')], None, None))]))
Module(None, Stmt([Function(None, 'handle', ['self', 'app_labels', 'options'], [], 12, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Or([Name('widget'), Getattr(Name('self'), 'widget')]))]))
Module(None, Stmt([Assign([AssName('cache', 'OP_ASSIGN')], CallFunc(Name('_create_cache'), [Name('backend')], None, Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('lang', 'OP_ASSIGN')], CallFunc(Name('get_language'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'utime'), [Name('path'), Name('None')], None, None))]))
Module(None, Stmt([Class('BaseModelForm', [Name('BaseForm')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Import([('shutil', None)])]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(Name('datetime'), 'utcnow'), [], None, None), 'replace'), [Keyword('tzinfo', Name('utc'))], None, None))]))
Module(None, Stmt([Assign([AssName('units', 'OP_ASSIGN')], Sub((CallFunc(Name('len'), [Subscript(Name('tupl'), 'OP_APPLY', [Const(1)])], None, None), Subscript(Name('tupl'), 'OP_APPLY', [Const(2)]))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'choices'), 'append'), [Tuple([Name('full_file'), Name('f')])], None, None))]))
Module(None, Stmt([Assign([AssName('get_function_code', 'OP_ASSIGN')], CallFunc(Getattr(Name('operator'), 'attrgetter'), [Name('_func_code')], None, None))]))
Module(None, Stmt([From('django.utils.html', [('escape', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('value'), 'configurator', 'OP_ASSIGN')], Name('self'))]))
Module(None, Stmt([From('django.utils', [('termcolors', None)], 0)]))
@ register . tag ( 'extends' )
from django . core . exceptions import ImproperlyConfigured
Module(None, Stmt([Discard(CallFunc(Getattr(Name('pieces'), 'append'), [CallFunc(Getattr(Name('re_escaped'), 'sub'), [Const('\\1'), Name('piece')], None, None)], None, None))]))
except ValueError :
Module(None, Stmt([If([(Compare(Add((Name('top'), Getattr(Name('self'), 'orphans'))), [('>=', Getattr(Name('self'), 'count'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('ConvertingDict', [Name('dict')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Or([Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('<', Const(3))]), Compare(Subscript(Name('bits'), 'OP_APPLY', [Const(1)]), [('!=', Const('as'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('app_dir', 'OP_ASSIGN')], Getattr(CallFunc(Getattr(Name('apps'), 'get_app_config'), [Getattr(Getattr(Name('model'), '_meta'), 'app_label')], None, None), 'path'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('base64'), 'urlsafe_b64decode'), [Add((Name('s'), Name('pad')))], None, None))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY2'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'path_info', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('row', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [CallFunc(Getattr(Getattr(Name('connection'), 'introspection'), 'get_table_description'), [Name('cursor'), Name('table_name')], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Assign([AssName('script_url', 'OP_ASSIGN')], CallFunc(Name('get_bytes_from_wsgi'), [Name('environ'), Const('SCRIPT_URL'), Const('')], None, None))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'flo'), 'read'), [Getattr(Name('self'), 'chunk_size')], None, None))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Prints the CREATE TABLE, custom SQL and CREATE INDEX SQL statements for the given model module name(s).'))]))
Module(None, Stmt([For(AssName('path', 'OP_ASSIGN'), Getattr(Name('self'), 'locale_paths'), Stmt([Pass()]), None)]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'text'], [], 0, None, Stmt([Pass()]))]))
elif name is not None and filter_func is None :
Module(None, Stmt([Class('dummy', [], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('src_data', 'OP_ASSIGN')], CallFunc(Getattr(Name('fp'), 'read'), [], None, None))]))
Module(None, Stmt([From('collections', [('defaultdict', None)], 0)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Getattr(Name('datetime'), 'datetime')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('TimestampSigner'), Name('self')], None, None), 'unsign'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('field_output', 'OP_ASSIGN')], List([CallFunc(Name('qn'), [Getattr(Name('f'), 'name')], None, None), CallFunc(Getattr(Name('f'), 'db_type'), [Keyword('connection', Name('connection'))], None, None)]))]))
Module(None, Stmt([Assign([AssAttr(Name('get_git_changeset'), 'cache', 'OP_ASSIGN')], Name('changeset'))]))
Module(None, Stmt([Return(ListComp(CallFunc(Name('mark_safe'), [CallFunc(Name('force_text'), [Name('obj')], None, None)], None, None), [ListCompFor(AssName('obj', 'OP_ASSIGN'), Name('value'), [])]))]))
else :
Module(None, Stmt([If([(Compare(Getattr(Name('error'), 'code'), [('==', Name('code'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'as_data', ['self'], [], 0, None, Stmt([Pass()]))]))
@ python_2_unicode_compatible
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('endtag_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Mod((Const('</%s>'), Name('tags_re')))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_delete'), [Name('key')], None, None))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], ListComp(Mod((Const('"%s"'), Name('arg'))), [ListCompFor(AssName('arg', 'OP_ASSIGN'), Name('args'), [])]))]))
except MultiPartParserError :
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
except GeneratorExit :
Module(None, Stmt([Assign([AssTuple([AssName('res', 'OP_ASSIGN'), AssName('args', 'OP_ASSIGN')])], CallFunc(Name('flatten_result'), [Name('item')], None, None))]))
Module(None, Stmt([AssAttr(Name('self'), '_get', 'OP_DELETE')]))
Module(None, Stmt([If([(Not(Name('model_identifier')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'domain_whitelist', 'OP_ASSIGN')], Name('whitelist'))]))
Module(None, Stmt([From('django.core.management.color', [('color_style', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Name('delattr'), [Name('_MovedItems'), Name('name')], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), 'STDOFFSET'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('sys'), 'stderr'), 'write'), [Mod((Const("Unknown command: %r\nType '%s help' for usage.\n"), Tuple([Name('subcommand'), Getattr(Name('self'), 'prog_name')])))], None, None))]))
Module(None, Stmt([If([(And([Subscript(Getattr(Name('db'), 'settings_dict'), 'OP_APPLY', [Const('ATOMIC_REQUESTS')]), Compare(Getattr(Name('db'), 'alias'), [('not in', Name('non_atomic_requests'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('d', 'OP_ASSIGN'), CallFunc(Name('reversed'), [Getattr(Name('self'), 'dicts')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'flatten', ['self'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'append'), [CallFunc(Getattr(Name('self'), 'create_token'), [Slice(Getattr(Name('self'), 'template_string'), 'OP_APPLY', Name('upto'), Name('start')), Tuple([Name('upto'), Name('start')]), Name('False')], None, None)], None, None))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'configure_custom'), [Name('config')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('role', 'OP_ASSIGN'), AssName('instructions', 'OP_ASSIGN')])], CallFunc(Getattr(Name('part'), 'split'), [Const('=')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('PasswordInput'), Name('self')], None, None), 'render'), [Name('name'), Name('value'), Name('attrs')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'template', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([If([(Compare(Getattr(Name('qs'), '_result_cache'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('BaseInlineFormSet'), Name('self')], None, None), 'add_fields'), [Name('form'), Name('index')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('e'), 'django_template_source', 'OP_ASSIGN')], Getattr(Name('self'), 'source'))]))
Module(None, Stmt([Pass()]))
elif issubclass ( klass , logging . handlers . SysLogHandler ) and 'address' in config :
Module(None, Stmt([Class('NumberAwareString', [Name('resultclass')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'copy_plural_forms', ['self', 'msgs', 'locale'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'content_type', 'OP_ASSIGN')], Name('content_type'))]))
Module(None, Stmt([Function(None, 'upload_complete', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(None, None, None)]))
try :
Module(None, Stmt([Return(CallFunc(Name('InMemoryUploadedFile'), [Keyword('file', Getattr(Name('self'), 'file')), Keyword('field_name', Getattr(Name('self'), 'field_name')), Keyword('name', Getattr(Name('self'), 'file_name')), Keyword('content_type', Getattr(Name('self'), 'content_type')), Keyword('size', Name('file_size')), Keyword('charset', Getattr(Name('self'), 'charset')), Keyword('content_type_extra', Getattr(Name('self'), 'content_type_extra'))], None, None))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([From('django.utils.timezone', [('is_aware', None)], 0)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('float'), [Name('value')], None, None))]))
elif ch == ')' :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('sys'), 'exit'), [Const(0)], None, None))]))
@ deconstructible
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Getattr(Getattr(Name('self'), 'field'), 'widget'))]))
try :
Module(None, Stmt([Assign([AssName('encoded', 'OP_ASSIGN')], Add((Add((Const('"'), Name('encoded'))), Const('"'))))]))
Module(None, Stmt([Assign([AssTuple([AssName('fixture_name', 'OP_ASSIGN'), AssName('ser_fmt', 'OP_ASSIGN'), AssName('cmp_fmt', 'OP_ASSIGN')])], CallFunc(Getattr(Name('self'), 'parse_name'), [Name('fixture_label')], None, None))]))
Module(None, Stmt([Assign([AssName('status_code', 'OP_ASSIGN')], Const(403))]))
Module(None, Stmt([Assign([AssAttr(Name('cls'), '__str__', 'OP_ASSIGN')], Getattr(Name('cls'), '__bytes_cast'))]))
now = datetime . datetime . now ( utc if is_aware ( d ) else None )
Module(None, Stmt([Assign([AssName('nan', 'OP_ASSIGN')], FloorDiv((Mul((Const(1e+200), Const(1e+200))), Mul((Const(1e+200), Const(1e+200))))))]))
Module(None, Stmt([Assign([AssName('ch', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('renamed', 'OP_ASSIGN')], Name('True'))]))
@ register . tag
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('name'), [('in', Name('MEDIA_TYPES'))]), Stmt([Pass()]))], None)]))
elif isinstance ( obj , EscapeData ) :
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Function(None, 'send_messages', ['self', 'email_messages'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('handler', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'configure_handler'), [Subscript(Name('handlers'), 'OP_APPLY', [Name('name')])], None, None))]))
Module(None, Stmt([Function(None, 'validate_unique', ['self'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssAttr(Name('logger'), 'propagate', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'default_locale_path', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'locale_paths'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Assign([AssName('_cached_filenames', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('url', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'handle_data'), [Slice(Name('rawdata'), 'OP_APPLY', Name('i'), Name('j'))], None, None))]))
Module(None, Stmt([Return(Name('data'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'stderr', 'OP_ASSIGN')], CallFunc(Name('OutputWrapper'), [CallFunc(Getattr(Name('options'), 'get'), [Const('stderr'), Getattr(Name('sys'), 'stderr')], None, None), Getattr(Getattr(Name('self'), 'style'), 'ERROR')], None, None))]))
Module(None, Stmt([Assign([AssName('current_chunk', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Function(None, 'clean', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
cmp_fmts = list ( self . compression_formats . keys ( ) ) if cmp_fmt is None else [ cmp_fmt ]
Module(None, Stmt([Assign([AssName('parsed', 'OP_ASSIGN')], CallFunc(Name('urlparse'), [CallFunc(Name('force_text'), [Name('redirect_to')], None, None)], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ImproperlyConfigured'), [CallFunc(Getattr(Name('msg'), 'format'), [Keyword('name', Getattr(Name('self'), 'urlconf_name'))], None, None)], None, None), None, None)]))
except MiddlewareNotUsed :
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('value'), Tuple([Name('list'), Name('tuple')])], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('cls'), '__dispatch'), 'OP_ASSIGN', [Name('klass')])], Dict(()))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'regex', 'OP_ASSIGN')], Name('regex'))]))
Module(None, Stmt([Assign([AssName('internal_use_only', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([If([(CallFunc(Name('callable'), [CallFunc(Name('getattr'), [Getattr(Name('self'), 'stream'), Const('getvalue'), Name('None')], None, None)], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('key', 'OP_ASSIGN'), CallFunc(Getattr(Name('c'), 'keys'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Getattr(Name('o'), 'microsecond'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Subscript(Getattr(Name('self'), 'cookies'), 'OP_APPLY', [Name('key')]), 'OP_ASSIGN', [Const('expires')])], CallFunc(Name('cookie_date'), [Add((CallFunc(Getattr(Name('time'), 'time'), [], None, None), Name('max_age')))], None, None))]))
Module(None, Stmt([Assign([AssName('locales', 'OP_ASSIGN')], Name('all_locales'))]))
Module(None, Stmt([AugAssign(Name('end'), '-=', Const(1))]))
Module(None, Stmt([Raise(CallFunc(Name('KeyError'), [Mod((Const('Unknown media type "%s"'), Name('name')))], None, None), None, None)]))
Module(None, Stmt([AugAssign(Name('id_'), '+=', Const('_0'))]))
else :
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('e'), Const('django_template_source')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('field_value', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(CallFunc(Name('getInnerText'), [Name('k')], None, None), 'strip'), [], None, None), [ListCompFor(AssName('k', 'OP_ASSIGN'), Name('keys'), [])]))]))
else :
Module(None, Stmt([Function(None, 'as_textarea', ['self', 'attrs', 'kwargs'], [Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('phone2numeric', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('phone2numeric')], None, None))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_func_path', 'OP_ASSIGN')], CallFunc(Getattr(Const('.'), 'join'), [List([Getattr(Name('func'), '__module__'), Getattr(Name('func'), '__name__')])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('link'), Const(''), Dict([(Const('href'), Subscript(Name('item'), 'OP_APPLY', [Const('link')])), (Const('rel'), Const('alternate'))])], None, None))]))
Module(None, Stmt([Return(Name('supported'))]))
Module(None, Stmt([From('collections', [('OrderedDict', None)], 0)]))
Module(None, Stmt([Assign([AssName('fixture_dirs', 'OP_ASSIGN')], Getattr(Name('self'), 'fixture_dirs'))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([While(Compare(Name('i'), [('<', Name('list_length'))]), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('file', 'OP_ASSIGN')], CallFunc(Name('BytesIO'), [CallFunc(Getattr(Name('data'), 'read'), [], None, None)], None, None))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([If([(Name('old_field_name'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.regex_helper', [('normalize', None)], 0)]))
Module(None, Stmt([Return(Name('context_extras'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'STDOFFSET', 'OP_ASSIGN')], CallFunc(Name('timedelta'), [Keyword('seconds', UnarySub(Getattr(Name('_time'), 'timezone')))], None, None))]))
Module(None, Stmt([If([(Or([Compare(Name('value'), [('!=', Name('value'))]), Compare(Name('value'), [('in', Tuple([CallFunc(Name('Decimal'), [Const('Inf')], None, None), CallFunc(Name('Decimal'), [Const('-Inf')], None, None)]))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'sql_custom', ['app_config', 'style', 'connection'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'unlock', ['f'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('compile_func', 'OP_ASSIGN')], CallFunc(Name('partial'), [Name('generic_tag_compiler'), Keyword('params', Name('params')), Keyword('varargs', Name('varargs')), Keyword('varkw', Name('varkw')), Keyword('defaults', Name('defaults')), Keyword('name', Name('function_name')), Keyword('takes_context', Name('takes_context')), Keyword('node_class', Name('SimpleNode'))], None, None))]))
Module(None, Stmt([Discard(Yield(Const("# You'll have to do the following manually to clean this up:")))]))
Module(None, Stmt([If([(Compare(Name('ttl'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'G', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'header'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('candidate_subs', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Name('k'), CallFunc(Name('urlquote'), [Name('v')], None, None)]), [GenExprFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('candidate_subs'), 'items'), [], None, None), [])]))], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const('%r takes two arguments'), Subscript(Name('bits'), 'OP_APPLY', [Const(0)])))], None, None), None, None)]))
Module(None, Stmt([Return(CallFunc(Name('SafeText'), [Name('t')], None, None))]))
Module(None, Stmt([Assign([AssName('translators_comment_start', 'OP_ASSIGN')], Name('lineno'))]))
Module(None, Stmt([Assign([AssName('self', 'OP_ASSIGN')], CallFunc(Getattr(Name('tuple'), '__new__'), [Name('cls')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('modules', 'OP_ASSIGN')], CallFunc(Getattr(Name('_format_modules_cache'), 'setdefault'), [Name('lang'), CallFunc(Name('list'), [CallFunc(Name('iter_format_modules'), [Name('lang'), Getattr(Name('settings'), 'FORMAT_MODULE_PATH')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('resolved_args', 'OP_ASSIGN')], Add((List([Name('context')]), Name('resolved_args'))))]))
except KeyError :
try :
Module(None, Stmt([Assign([AssName('filelist', 'OP_ASSIGN')], Add((Add((Name('_cached_filenames'), Name('new_filenames'))), Name('_error_files'))))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'message', 'code', 'params'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Compare(CallFunc(Name('getattr'), [Name('e'), Const('winerror'), Const(0)], None, None), [('!=', Const(32))]), Compare(CallFunc(Name('getattr'), [Name('e'), Const('errno'), Const(0)], None, None), [('!=', Const(13))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_ipython_pre_011', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([Assign([Subscript(Name('attrs'), 'OP_ASSIGN', [Const('declared_fields')])], CallFunc(Name('OrderedDict'), [Name('current_fields')], None, None))]))
Module(None, Stmt([Assign([AssName('end', 'OP_ASSIGN')], Name('newline'))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '_current'), 'OP_ASSIGN', [Getattr(Name('field'), 'name')])], Name('value'))]))
Module(None, Stmt([Function(None, 'trim_url', ['x', 'limit'], [Name('trim_url_limit')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Or([Name('use_l10n'), And([Compare(Name('use_l10n'), [('is', Name('None'))]), Getattr(Name('settings'), 'USE_L10N')])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Name('user_function'), [], Name('args'), Name('kwds')))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [CallFunc(Name('blankout'), [Getattr(Name('t'), 'contents'), Const('B')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'decompress', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('default', 'OP_ASSIGN')], CallFunc(Name('bytes_to_text'), [Name('default'), Getattr(Name('self'), 'encoding')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_errors', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Name('exhaust'), [Getattr(Name('self'), '_input_data')], None, None))]))
formatted = (  color_style ( ) . ERROR ( force_str ( e ) )  if e . is_serious ( )  else color_style ( ) . WARNING ( force_str ( e ) )  for e in issues )
Module(None, Stmt([Assign([AssName('ULONG_PTR', 'OP_ASSIGN')], Name('c_int64'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('form'), 'cleaned_data'), 'get'), [Name('DELETION_FIELD_NAME'), Name('False')], None, None))]))
Module(None, Stmt([Assign([AssName('file', 'OP_ASSIGN')], CallFunc(Name('BytesIO'), [Subscript(Name('data'), 'OP_APPLY', [Const('content')])], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'object_list', 'OP_ASSIGN')], Name('object_list'))]))
Module(None, Stmt([Assign([AssName('has_bz2', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Discard(CallFunc(Name('check_for_migrations'), [Name('app_config'), Name('connection')], None, None))]))
try :
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('old_app_dir')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('datetime', None)])]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('form'), 'fields'), 'OP_ASSIGN', [Name('ORDERING_FIELD_NAME')])], CallFunc(Name('IntegerField'), [Keyword('label', CallFunc(Name('_'), [Const('Order')], None, None)), Keyword('required', Name('False'))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_wrapped', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_setupfunc'), [], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('StopIteration'), [], None, None), None, None)]))
Module(None, Stmt([Return(Name('templatetags_modules'))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('args')], None, None), [('!=', Add((CallFunc(Name('len'), [Name('params')], None, None), CallFunc(Name('len'), [Name('prefix_args')], None, None))))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('name'))]))
Module(None, Stmt([Function(None, 'more', ['self'], [], 0, None, Stmt([Pass()]))]))
filter = get_exception_reporter_filter ( request )
Module(None, Stmt([For(AssTuple([AssName('dirpath', 'OP_ASSIGN'), AssName('dirnames', 'OP_ASSIGN'), AssName('filenames', 'OP_ASSIGN')]), CallFunc(Getattr(Name('os'), 'walk'), [Name('root'), Keyword('topdown', Name('True')), Keyword('followlinks', Getattr(Name('self'), 'symlinks'))], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('exc_value', 'OP_ASSIGN')], CallFunc(Name('exc_type'), [Mod((Const('Unsupported value: %r. You should install pytz.'), Name('dt')))], None, None))]))
Module(None, Stmt([Assign([AssName('off', 'OP_ASSIGN')], Mul((Const(6), Add((FloorDiv((Name('delta'), Const(100))), FloorDiv((Name('delta'), Const(400))))))))]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_callback_strs', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('key', 'OP_ASSIGN'), AssName('op', 'OP_ASSIGN')]), CallFunc(Getattr(Name('OPERATORS'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const('Sign character found in converter base digits.')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('remaining_bits', 'OP_ASSIGN')], Slice(Name('bits'), 'OP_APPLY', Const(2), None))]))
Module(None, Stmt([Discard(CallFunc(Name('call_command'), [Const('loaddata'), Const('initial_data')], None, Name('options')))]))
Module(None, Stmt([Class('UnreadablePostError', [Name('IOError')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('filter_raw_string', 'OP_ASSIGN')], Mod((Const(' ^(?P<constant>%(constant)s)| ^(?P<var>[%(var_chars)s]+|%(num)s)|  (?:\\s*%(filter_sep)s\\s*      (?P<filter_name>\\w+)          (?:%(arg_sep)s              (?:               (?P<constant_arg>%(constant)s)|               (?P<var_arg>[%(var_chars)s]+|%(num)s)              )          )?  )'), Dict([(Const('constant'), Name('constant_string')), (Const('num'), Const('[-+\\.]?\\d[\\d\\.e]*')), (Const('var_chars'), Const('\\w\\.')), (Const('filter_sep'), CallFunc(Getattr(Name('re'), 'escape'), [Name('FILTER_SEPARATOR')], None, None)), (Const('arg_sep'), CallFunc(Getattr(Name('re'), 'escape'), [Name('FILTER_ARGUMENT_SEPARATOR')], None, None))]))))]))
Module(None, Stmt([Assign([AssName('_iteritems', 'OP_ASSIGN')], Const('iteritems'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('field_output'), 'append'), [Const('UNIQUE')], None, None))]))
else :
Module(None, Stmt([Function(None, 'send_messages', ['self', 'messages'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('IPython.frontend.terminal.ipapp', [('TerminalIPythonApp', None)], 0)]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('dict_'), 'getlist'), [Name('key')], None, None))]))
Module(None, Stmt([Assign([AssName('shells', 'OP_ASSIGN')], List([Const('ipython'), Const('bpython')]))]))
@ wraps ( func )
Module(None, Stmt([For(AssName('i', 'OP_ASSIGN'), CallFunc(Name('range'), [Const(0), CallFunc(Getattr(Name('self'), 'total_form_count'), [], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'cdata_tag'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'remove'), [Name('symlink_path')], None, None))]))
else :
Module(None, Stmt([Assign([AssName('nm', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('Header'), [Name('nm'), Const('utf-8')], None, None), 'encode'), [], None, None))]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], Tuple([Const('UploadedFile'), Const('TemporaryUploadedFile'), Const('InMemoryUploadedFile'), Const('SimpleUploadedFile')]))]))
elif tzinfo is not None :
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('description'), Subscript(Name('item'), 'OP_APPLY', [Const('description')])], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [CallFunc(Getattr(Name('self'), 'namelist'), [], None, None)], None, None), [('!=', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.safestring', [('SafeData', None), ('mark_safe', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'resolver_match', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('all_locales', 'OP_ASSIGN')], CallFunc(Name('map'), [Getattr(Getattr(Name('os'), 'path'), 'basename'), Name('locale_dirs')], None, None))]))
Module(None, Stmt([From('django.utils.encoding', [('force_str', None), ('force_text', None)], 0)]))
Module(None, Stmt([Function(None, 'value_from_datadict', ['self', 'data', 'files', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.html', [('avoid_wrapping', None)], 0)]))
Module(None, Stmt([From('django.utils.six.moves', [('html_entities', None)], 0)]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('args', 'OP_ASSIGN'), AssName('kwargs', 'OP_ASSIGN')])], CallFunc(Name('parse_bits'), [Name('parser'), Name('bits'), Name('params'), Name('varargs'), Name('varkw'), Name('defaults'), Name('takes_context'), Name('function_name')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('result'), Name('name'), Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('match', 'OP_ASSIGN')], CallFunc(Getattr(Name('time_re'), 'match'), [Name('value')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('timesince'), [Name('value'), Name('arg')], None, None))]))
except ImportError :
Module(None, Stmt([Assign([AssName('params', 'OP_ASSIGN')], Name('kwargs'))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('test_runner_class'), Const('add_arguments')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(Name('name')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('name_str', 'OP_ASSIGN')], CallFunc(Getattr(Const('; '), 'join'), [GenExpr(GenExprInner(Mod((Const('%s in %s'), Tuple([CallFunc(Getattr(Const(', '), 'join'), [Name('names')], None, None), Name('app')]))), [GenExprFor(AssTuple([AssName('app', 'OP_ASSIGN'), AssName('names', 'OP_ASSIGN')]), CallFunc(Getattr(Name('conflicts'), 'items'), [], None, None), [])]))], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('cmatches', 'OP_ASSIGN')], CallFunc(Getattr(Name('constant_re'), 'findall'), [Getattr(Name('t'), 'contents')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('message'), Name('SafeData')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'paginator', 'OP_ASSIGN')], Name('paginator'))]))
Module(None, Stmt([Return(Name('combined'))]))
Module(None, Stmt([Return(CallFunc(Name('chain'), [], ListComp(ListComp(CallFunc(Name('format_html'), [Const('<link href="{0}" type="text/css" media="{1}" rel="stylesheet" />'), CallFunc(Getattr(Name('self'), 'absolute_path'), [Name('path')], None, None), Name('medium')], None, None), [ListCompFor(AssName('path', 'OP_ASSIGN'), Subscript(Getattr(Name('self'), '_css'), 'OP_APPLY', [Name('medium')]), [])]), [ListCompFor(AssName('medium', 'OP_ASSIGN'), Name('media'), [])]), None))]))
Module(None, Stmt([While(Compare(Name('i'), [('<', Name('l'))]), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([If([(Compare(Name('error_class'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'stdout', 'OP_ASSIGN')], CallFunc(Name('OutputWrapper'), [CallFunc(Getattr(Name('options'), 'get'), [Const('stdout'), Getattr(Name('sys'), 'stdout')], None, None)], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'as_table'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('JsonResponse'), Name('self')], None, None), '__init__'), [Keyword('content', Name('data'))], None, Name('kwargs')))]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None)], 0)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
except ImportError :
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('self'), 'options'), 'get'), [Const('indent')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('dt'), 'year'), [('>=', Const(1900))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('new', 'OP_ASSIGN')], Add((Const('#: '), Slice(Name('orig_file'), 'OP_APPLY', Const(2), None))))]))
Module(None, Stmt([Assign([AssName('MEMCACHE_MAX_KEY_LENGTH', 'OP_ASSIGN')], Const(250))]))
Module(None, Stmt([Class('SuspiciousMultipartForm', [Name('SuspiciousOperation')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('filename')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('FilterExpression'), [Name('token'), Name('self')], None, None))]))
Module(None, Stmt([Assign([AssName('items', 'OP_ASSIGN')], Name('_iteritems'))]))
Module(None, Stmt([If([(Compare(Name('command'), [('in', Name('parse_until'))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([AssName('cword', 'OP_ASSIGN')], CallFunc(Name('int'), [Subscript(Getattr(Name('os'), 'environ'), 'OP_APPLY', [Const('COMP_CWORD')])], None, None))]))
Module(None, Stmt([For(AssName('key', 'OP_ASSIGN'), Name('self'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'children', 'OP_ASSIGN')], List([Name('obj'), Name('data')]))]))
Module(None, Stmt([Raise(Name('SystemRestart'), None, None)]))
Module(None, Stmt([Discard(CallFunc(Name('super_set'), [Name('key'), Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('tf', 'OP_ASSIGN')], CallFunc(Name('TimeFormat'), [Name('value')], None, None))]))
host = host [ : - 1 ] if host . endswith ( '.' ) else host
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Name('msg')], None, None), None, None)]))
Module(None, Stmt([From('django.core', [('signing', None)], 0)]))
try :
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(Name('six'), 'text_type'), [Name('s')], None, None), 'encode'), [Name('encoding'), Name('errors')], None, None))]))
Module(None, Stmt([Function(None, '_render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('__iadd__', 'OP_ASSIGN')], Name('complain'))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'extra_headers', 'OP_ASSIGN')], Or([Name('headers'), Dict(())]))]))
Module(None, Stmt([Assign([Subscript(Subscript(Getattr(Name('self'), 'cookies'), 'OP_APPLY', [Name('key')]), 'OP_ASSIGN', [Const('expires')])], Name('expires'))]))
Module(None, Stmt([Assign([AssName('max_age', 'OP_ASSIGN')], CallFunc(Name('max'), [Const(0), Add((Mul((Getattr(Name('delta'), 'days'), Const(86400))), Getattr(Name('delta'), 'seconds')))], None, None))]))
Module(None, Stmt([Function(None, 'activate', ['language'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'length_is', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'extend'), [CallFunc(Getattr(Name('f'), 'post_create_sql'), [Name('style'), Getattr(Getattr(Name('model'), '_meta'), 'db_table')], None, None)], None, None))]))
Module(None, Stmt([Subscript(Name('options'), 'OP_DELETE', [Const('liveserver')])]))
Module(None, Stmt([Assign([AssTuple([AssName('lead', 'OP_ASSIGN'), AssName('middle', 'OP_ASSIGN'), AssName('trail', 'OP_ASSIGN')])], Tuple([Const(''), Name('word'), Const('')]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_container', 'OP_ASSIGN')], List([Name('value')]))]))
Module(None, Stmt([From('django.conf', [('urls', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'email_backend', 'OP_ASSIGN')], Name('email_backend'))]))
Module(None, Stmt([Class('BaseLoader', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'setlistdefault', ['self', 'key', 'default_list'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'object_list', 'OP_ASSIGN')], Name('object_list'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'attrs', 'date_format', 'time_format'], [Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'nodelist', 'OP_ASSIGN')], Getattr(Name('t'), 'nodelist'))]))
self . keyOrder = list ( data ) if data else [ ]
Module(None, Stmt([Return(Mod((Const('%s=%s'), Tuple([Subscript(Name('t'), 'OP_APPLY', [Const(0)]), Subscript(Name('t'), 'OP_APPLY', [Const(1)])]))))]))
Module(None, Stmt([Import([('code', None)])]))
Module(None, Stmt([From('django.db.migrations.state', [('ProjectState', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Getattr(Const(''), 'join'), [Getattr(Name('self'), '_container')], None, None))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(CallFunc(Name('resolve'), [Name('path'), Name('urlconf')], None, None))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'paths_to_remove'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('tzinfo'), '__init__'), [Name('self')], None, None))]))
Module(None, Stmt([Assign([AssName('_iterlists', 'OP_ASSIGN')], Const('lists'))]))
Module(None, Stmt([Assign([AssName('formatter', 'OP_ASSIGN')], Subscript(Subscript(Getattr(Name('self'), 'config'), 'OP_APPLY', [Const('formatters')]), 'OP_APPLY', [Name('formatter')]))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Return(Name('_localtime'))]))
Module(None, Stmt([For(AssTuple([AssName('ch', 'OP_ASSIGN'), AssName('escaped', 'OP_ASSIGN')]), Name('input_iter'), Stmt([Pass()]), None)]))
@ register . filter ( is_safe = True )
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([AugAssign(Name('i'), '+=', Const(1))]))
Module(None, Stmt([Return(Or([Name('latest_date'), CallFunc(Getattr(Getattr(Name('datetime'), 'datetime'), 'now'), [], None, None)]))]))
except KeyError :
Module(None, Stmt([Assign([AssName('object_data', 'OP_ASSIGN')], CallFunc(Name('model_to_dict'), [Name('instance'), Getattr(Name('opts'), 'fields'), Getattr(Name('opts'), 'exclude')], None, None))]))
Module(None, Stmt([From('django.utils.six', [('StringIO', None)], 0)]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Function(None, 'load_template', ['self', 'template_name', 'template_dirs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Not(Name('m')), Compare(Name('p'), [('<', Const(0))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('trail', 'OP_ASSIGN')], Add((Name('closing'), Name('trail'))))]))
Module(None, Stmt([Function(None, '_get_size', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('TagHelperNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_num_pages', 'OP_ASSIGN')], CallFunc(Name('int'), [CallFunc(Name('ceil'), [Div((Name('hits'), CallFunc(Name('float'), [Getattr(Name('self'), 'per_page')], None, None)))], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Name('name'), [('not in', Getattr(Name('logging'), '_handlers'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'data', 'OP_ASSIGN')], Or([Name('data'), Dict(())]))]))
Module(None, Stmt([Return(Name('FASTCGI_HELP'))]))
Module(None, Stmt([Assign([AssName('inplural', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Return(Compare(Getattr(Name('self'), 'level'), [('>=', Name('ERROR'))]))]))
Module(None, Stmt([If([(Name('is_templatized'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'render_node', ['self', 'node', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Name('msg')], None, None))]))
else :
else :
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], Subscript(Getattr(Name('sys'), 'modules'), 'OP_APPLY', [Add((Name('__name__'), Const('.moves.urllib_response')))]))]))
Module(None, Stmt([Return(CallFunc(Name('smart_text'), [CallFunc(Getattr(Getattr(Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_meta'), 'pk'), 'to_python'), [Name('value')], None, None)], None, None))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([From('email.mime.message', [('MIMEMessage', None)], 0)]))
try :
Module(None, Stmt([With(CallFunc(Getattr(Name('connection'), 'cursor'), [], None, None), AssName('curs', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('sign'), [('in', Getattr(Name('self'), 'digits'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('size', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'file'), 'tell'), [], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid')]), Keyword('code', Const('invalid'))], None, None), None, None)]))
Module(None, Stmt([Return(Add((Name('time_str'), Mod((Const('%+03d:%02d'), Tuple([Name('hour'), Name('minute')]))))))]))
except ( ValueError , TypeError , ValidationError ) :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'indent'), [Const(0)], None, None))]))
Module(None, Stmt([Assign([AssName('__setitem__', 'OP_ASSIGN')], CallFunc(Name('new_method_proxy'), [Getattr(Name('operator'), 'setitem')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stderr'), 'write'), [Mod((Const('    Failed to install custom SQL for %s.%s model: %s\n'), Tuple([Name('app_name'), Getattr(Getattr(Name('model'), '_meta'), 'object_name'), Name('e')])))], None, None))]))
try :
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('self'), Const('_request')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('language_code_re'), 'search'), [Name('accept_lang')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('field'), 'clean'), [Name('value'), Name('initial')], None, None))]))
Module(None, Stmt([From('django.utils.http', [('urlquote', None)], 0)]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'DEBUG'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'parse_datetime', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('val', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('module'), Name('format_type')], None, None))]))
Module(None, Stmt([Assign([AssName('__T', 'OP_ASSIGN')], Const('(?P<hour>\\d{2}):(?P<min>\\d{2}):(?P<sec>\\d{2})'))]))
else :
Module(None, Stmt([If([(Compare(Name('number'), [('==', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('c', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'resolve'), [Name('c')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('fp'), 'write'), [Mod((Const('%d\n'), CallFunc(Getattr(Name('os'), 'getpid'), [], None, None)))], None, None))]))
Module(None, Stmt([Function(None, 'list', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Name('fields'), Compare(Getattr(Name('f'), 'name'), [('not in', Name('fields'))])]), Stmt([Pass()]))], None)]))
except ImportError :
Module(None, Stmt([Function(None, 'readline', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'app_label', 'OP_ASSIGN')], Const('django_cache'))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('%r is not a valid port number.'), Getattr(Name('self'), 'port')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'first', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_delete'), [Name('k')], None, None))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_key'), [Name('key')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Subscript(Getattr(Name('self'), 'blocks'), 'OP_APPLY', [Name('name')]), 'append'), [Name('block')], None, None))]))
Module(None, Stmt([Function(None, 'setdefault', ['self', 'key', 'default'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_HEADING'), [Const('Operations to perform:')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('val', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('Header'), [Name('val')], None, None), 'encode'), [], None, None))]))
Module(None, Stmt([Discard(Yield(Name('obj')))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('UnicodeDecodeError'), '__init__'), [Name('self')], Name('args'), None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'connection', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Add((Add((Const("Django doesn't know which syntax to use for your SQL statements,\n"), Const("because you haven't properly specified the ENGINE setting for the database.\n"))), Const('see: https://docs.djangoproject.com/en/dev/ref/settings/#databases')))], None, None), None, None)]))
@ register . tag
Module(None, Stmt([Class('EmailValidator', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils.translation', [('templatize', None)], 0)]))
Module(None, Stmt([Function(None, 'safe_join', ['base', 'paths'], [], 4, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('receiver'), Getattr(Name('types'), 'FunctionType')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('lang'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('get_declared_fields is deprecated and will be removed in Django 1.9.'), Name('RemovedInDjango19Warning'), Keyword('stacklevel', Const(2))], None, None))]))
Module(None, Stmt([Function(None, 'parse', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('__iter__', 'OP_ASSIGN')], Name('_iterkeys'))]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'DEBUG'), Stmt([Pass()]))], None)]))
from django . core . exceptions import ImproperlyConfigured
Module(None, Stmt([Function(None, 'deconstruct', ['obj'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('state_frame'), 'OP_ASSIGN', [Name('self')])], Name('compare_to'))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'is_required')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('random', None)])]))
Module(None, Stmt([Function(None, 'Deserializer', ['stream_or_string', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('unicodedata'), 'combining'), [Name('char')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.dates', [('MONTHS', None)], 0)]))
Module(None, Stmt([Return(Mod((Const('%s-%s-%s'), Tuple([Name('y'), Name('m'), Name('d')]))))]))
else :
Module(None, Stmt([Return(CallFunc(Name('from_current_timezone'), [Name('value')], None, None))]))
else :
Module(None, Stmt([Assign([AssName('level', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'pop'), [Const('level'), Name('None')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [Name('ValidationError'), CallFunc(Name('ValidationError'), [Name('message'), Keyword('code', Const('ambiguous_timezone')), Keyword('params', Name('params'))], None, None), Subscript(CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), 'OP_APPLY', [Const(2)])], None, None))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Assign([AssName('host', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'META'), 'OP_APPLY', [Const('HTTP_HOST')]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'app_name', 'OP_ASSIGN')], Name('app_name'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('description'), Subscript(Name('item'), 'OP_APPLY', [Const('description')])], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Name('os'), 'fork'), [], None, None), [('>', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.db', [('connections', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([Assign([AssName('mapping', 'OP_ASSIGN')], Dict([(Const('openblock'), Name('BLOCK_TAG_START')), (Const('closeblock'), Name('BLOCK_TAG_END')), (Const('openvariable'), Name('VARIABLE_TAG_START')), (Const('closevariable'), Name('VARIABLE_TAG_END')), (Const('openbrace'), Name('SINGLE_BRACE_START')), (Const('closebrace'), Name('SINGLE_BRACE_END')), (Const('opencomment'), Name('COMMENT_TAG_START')), (Const('closecomment'), Name('COMMENT_TAG_END'))]))]))
Module(None, Stmt([Return(CallFunc(Name('Context'), [Name('context')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'json_kwargs'), 'pop'), [Const('fields'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Name('factory'), [], None, Name('kwargs')))]))
else :
Module(None, Stmt([Function(None, 'O', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('ignore'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('indent', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('indent')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'close'), [], None, None))]))
Module(None, Stmt([AssAttr(Name('_prefixes'), 'value', 'OP_DELETE')]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_unget_history', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'render', ['self', 'name', 'value', 'attrs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Name('func'), [], Name('args'), Name('kwargs'))], None, None))]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'FILE_UPLOAD_TEMP_DIR'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('color_settings'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('x'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.translation', [('get_language', None), ('to_locale', None), ('check_for_language', None)], 0)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_callback'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('app_label'), Keyword('nargs', Const('?')), Keyword('help', Const('App label of an application to synchronize the state.'))], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Subscript(Name('new_name'), 'OP_APPLY', [Const(0)]), 'isdigit'), [], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('ContextDict', [Name('dict')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(And([CallFunc(Name('hasattr'), [Name('field_value'), Const('__iter__')], None, None), Not(CallFunc(Name('isinstance'), [Name('field_value'), Getattr(Name('six'), 'text_type')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Name('dirname'), Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('dirname')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_SUCCESS'), [Const(' OK')], None, None)], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('iter'), [CallFunc(Getattr(Getattr(Name('self'), 'dict'), 'keys'), [], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Name('new_mod'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'write_items', ['self', 'handler'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('stderr'), 'write'), [Mod((Const('%s: %s'), Tuple([Getattr(Getattr(Name('e'), '__class__'), '__name__'), Name('e')])))], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'attrs', 'date_format', 'time_format'], [Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('dateformat'), 'format'), [Name('value'), CallFunc(Name('get_format'), [Or([Name('format'), Const('DATE_FORMAT')]), Keyword('use_l10n', Name('use_l10n'))], None, None)], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('callback', 'OP_ASSIGN'), AssName('callback_args', 'OP_ASSIGN'), AssName('callback_kwargs', 'OP_ASSIGN')])], Name('resolver_match'))]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('EMPTY_DICT', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([From('django.contrib.auth', [('get_user_model', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('code'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('encoding', 'OP_ASSIGN')], Getattr(Name('settings'), 'DEFAULT_CHARSET'))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('str'), [Name('value')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'write_migration_files'), [Name('changes')], None, None))]))
Module(None, Stmt([Function(None, 'compile_string', ['template_string', 'origin'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Return(Mod((Const('\\u%04x'), CallFunc(Name('ord'), [CallFunc(Getattr(Name('match'), 'group'), [Const(1)], None, None)], None, None))))]))
Module(None, Stmt([For(AssName('statement', 'OP_ASSIGN'), Name('sql'), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'second', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'expression'), [Name('bp')], None, None))]))
Module(None, Stmt([Assign([AssName('_itervalues', 'OP_ASSIGN')], Const('itervalues'))]))
Module(None, Stmt([Raise(CallFunc(Name('IOError'), [Mod((Const('Destination file %s exists and allow_overwrite is False'), Name('new_file_name')))], None, None), None, None)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('<', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('reloader', 'OP_ASSIGN')], Name('jython_reloader'))]))
Module(None, Stmt([For(AssName('sub_stream', 'OP_ASSIGN'), Name('boundarystream'), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Function(None, 'open', ['self'], [], 0, None, Stmt([Pass()]))]))
self . requires_system_checks = (  self . requires_system_checks if has_new_option else  self . requires_model_validation if has_old_option else  True )
except ( TypeError , VariableDoesNotExist ) :
Module(None, Stmt([Assign([AssName('django_po', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('django_dir'), Const('conf'), Const('locale'), Name('locale'), Const('LC_MESSAGES'), Mod((Const('%s.po'), Name('domain')))], None, None))]))
try :
Module(None, Stmt([If([(Compare(Getattr(Getattr(Name('self'), 'data'), 'day'), [('in', Tuple([Const(11), Const(12), Const(13)]))]), Stmt([Pass()]))], None)]))
self . label_suffix = label_suffix if label_suffix is not None else _ ( ':' )
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('current_version'), [('>=', Tuple([Const(3), Const(4)]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('top_errors', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'non_field_errors'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_key'), [Name('key')], None, None))]))
Module(None, Stmt([Assign([AssName('kwargs', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([CallFunc(Name('smart_text'), [Name('k'), Const('ascii')], None, None), CallFunc(Getattr(Name('v'), 'resolve'), [Name('context')], None, None)]), [GenExprFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('self'), 'kwargs'), 'items'), [], None, None), [])]))], None, None))]))
except ( ValueError , TypeError ) :
Module(None, Stmt([Assign([Subscript(Name('msg'), 'OP_ASSIGN', [Const('Message-ID')])], CallFunc(Name('make_msgid'), [], None, None))]))
Module(None, Stmt([If([(Name('bad_app_labels'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('data'), Tuple([Name('MultiValueDict'), Name('MergeDict')])], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('iter'), [Getattr(Name('self'), 'forms')], None, None))]))
Module(None, Stmt([Function(None, 'iri_to_uri', ['iri'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('value'), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'format'), [Const('O')], None, None))]))
except ImportError :
Module(None, Stmt([If([(Compare(Subscript(Name('item'), 'OP_APPLY', [Const('item_copyright')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('_i18n_cache_key_suffix'), [Name('request'), Name('cache_key')], None, None))]))
Module(None, Stmt([Function(None, 'iterbytes', ['buf'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([If([(Compare(Name('field'), [('in', Getattr(Name('self'), 'cleaned_data'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('backend_cls', 'OP_ASSIGN')], CallFunc(Name('import_string'), [Name('backend')], None, None))]))
Module(None, Stmt([For(AssName('chunk', 'OP_ASSIGN'), CallFunc(Getattr(Name('self'), 'chunks'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('num', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(Name('cursor'), 'fetchone'), [], None, None), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Assign([AssName('words', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), '_wrapped'), 'split'), [], None, None))]))
Module(None, Stmt([Function(None, 'check_errors', ['fn'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('re_words', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('<.*?>|((?:\\w[-\\w]*|&.*?;)+)'), Bitor([Getattr(Name('re'), 'U'), Getattr(Name('re'), 'S')])], None, None))]))
Module(None, Stmt([Function(None, 'base64_hmac', ['salt', 'value', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Global(['_cached_modules', '_cached_filenames'])]))
Module(None, Stmt([For(AssName('bit', 'OP_ASSIGN'), Name('bits'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_base_set'), [Const('set'), Name('key'), Name('value'), Name('timeout')], None, None))]))
Module(None, Stmt([Return(Const('https'))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_namespace_dict', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_add_installed_apps_translations'), [], None, None))]))
response = self . get_exception_response ( request , resolver , 404 )
Module(None, Stmt([Function(None, '_get_choices', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('    Creating table %s\n'), Getattr(Getattr(Name('model'), '_meta'), 'db_table')))], None, None))]))
Module(None, Stmt([If([(Compare(Subscript(Name('args'), 'OP_APPLY', [UnarySub(Const(1))]), [('!=', Const('silent'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'render'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('hashlib'), Const('pbkdf2_hmac')], None, None), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([If([(Or([Compare(Const(100), [('<=', Getattr(Name('response'), 'status_code')), ('<', Const(200))]), Compare(Getattr(Name('response'), 'status_code'), [('in', Tuple([Const(204), Const(304)]))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('language')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], ListComp(CallFunc(Name('pformat'), [Name('val')], None, None), [ListCompFor(AssName('val', 'OP_ASSIGN'), Name('context'), [])]))]))
Module(None, Stmt([Assign([AssName('mime_type', 'OP_ASSIGN')], Const('application/atom+xml; charset=utf-8'))]))
Module(None, Stmt([Return(Add((Name('time_str'), Mod((Const('%+03d%02d'), Tuple([Name('hour'), Name('minute')]))))))]))
Module(None, Stmt([Assign([AssName('_version', 'OP_ASSIGN')], Const('2.0'))]))
Module(None, Stmt([Assign([AssName('tag', 'OP_ASSIGN')], CallFunc(Getattr(Name('re_tag'), 'match'), [CallFunc(Getattr(Name('m'), 'group'), [Const(0)], None, None)], None, None))]))
except IndexError :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [CallFunc(Getattr(Getattr(Name('self'), 'style'), 'NOTICE'), [Const("  Run 'manage.py makemigrations' to make new migrations, and then re-run 'manage.py migrate' to apply them.")], None, None)], None, None))]))
except NameError :
Module(None, Stmt([Return(CallFunc(Name('meta'), [Name('name'), Name('bases'), Name('d')], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Getattr(Name('form'), '_meta'), 'fields'), 'append'), [Getattr(Getattr(Name('self'), 'fk'), 'name')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('errors'), 'extend'), [GenExpr(GenExprInner(Name('m'), [GenExprFor(AssName('m', 'OP_ASSIGN'), Getattr(Name('e'), 'error_list'), [GenExprIf(Compare(Name('m'), [('not in', Name('errors'))]))])]))], None, None))]))
Module(None, Stmt([Assign([AssName('lang_code', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('request'), 'session'), 'get'), [Name('LANGUAGE_SESSION_KEY')], None, None))]))
Module(None, Stmt([From('django.utils.safestring', [('SafeData', None), ('EscapeData', None), ('mark_safe', None), ('mark_for_escaping', None)], 0)]))
Module(None, Stmt([Assign([AssName('domain', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('domain'), 'encode'), [Const('idna')], None, None), 'decode'), [Const('ascii')], None, None))]))
Module(None, Stmt([Function(None, 'copy', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('new_result'), 'append'), [Add((Name('item'), Name('i_item')))], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('filename'), Name('MIMEBase')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.core.management.sql', [('check_for_migrations', None)], 0)]))
except ImportError as e :
Module(None, Stmt([Assign([AssAttr(Name('EventHandler'), 'modified_code', 'OP_ASSIGN')], Name('I18N_MODIFIED'))]))
Module(None, Stmt([Function(None, 'dec', ['func'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--no-initial-data'), Keyword('action', Const('store_false')), Keyword('dest', Const('load_initial_data')), Keyword('default', Name('True')), Keyword('help', Const('Tells Django not to load any initial data after database synchronization.'))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'indent'), [Const(2)], None, None))]))
Module(None, Stmt([Class('HttpResponseBase', [Getattr(Name('six'), 'Iterator')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('tags_re', 'OP_ASSIGN')], Mod((Const('(%s)'), CallFunc(Getattr(Const('|'), 'join'), [Name('tags')], None, None))))]))
Module(None, Stmt([From('collections', [('OrderedDict', None)], 0)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const('%r tag takes at least one argument: the name of the template to be included.'), Subscript(Name('bits'), 'OP_APPLY', [Const(0)])))], None, None), None, None)]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parts'), 'append'), [Name('decimals')], None, None))]))
Module(None, Stmt([AugAssign(Name('weight'), '+=', Const(2))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('value'), 'strftime'), [Name('format')], None, None))]))
@ register . filter
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--locale'), Const('-l'), Keyword('default', List(())), Keyword('dest', Const('locale')), Keyword('action', Const('append')), Keyword('help', Const('Creates or updates the message files for the given locale(s) (e.g. pt_BR). Can be used multiple times.'))], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Class('Command', [Name('AppCommand')], None, Stmt([Pass()]), None)]))
@ deconstructible
except ImportError :
Module(None, Stmt([Return(Getattr(Name('self'), 'var'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_key'), [Name('key')], None, None))]))
Module(None, Stmt([If([(Compare(Name('option_value'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'negate', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Add((Add((CallFunc(Getattr(Slice(Name('locale'), 'OP_APPLY', None, Name('p')), 'lower'), [], None, None), Const('-'))), CallFunc(Getattr(Slice(Name('locale'), 'OP_APPLY', Add((Name('p'), Const(1))), None), 'lower'), [], None, None))))]))
Module(None, Stmt([Assign([AssName('error_class', 'OP_ASSIGN')], Name('TemplateSyntaxError'))]))
Module(None, Stmt([Import([('time', None)])]))
Module(None, Stmt([Function(None, '_wrapper', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('pos_inf', 'OP_ASSIGN')], Mul((Const(1e+200), Const(1e+200))))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'is_bound')), Stmt([Pass()]))], None)]))
except UnicodeDecodeError :
Module(None, Stmt([Assign([AssName('index_sql', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('connection'), 'creation'), 'sql_indexes_for_model'), [Name('model'), CallFunc(Name('no_style'), [], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('val2', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'compile_filter'), [Subscript(Name('bits'), 'OP_APPLY', [Const(2)])], None, None))]))
Module(None, Stmt([Class('DatabaseCache', [Name('BaseDatabaseCache')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('force_str'), [Name('signature')], None, None))]))
Module(None, Stmt([Return(ListComp(Name('field'), [ListCompFor(AssName('field', 'OP_ASSIGN'), Name('self'), [ListCompIf(Getattr(Name('field'), 'is_hidden'))])]))]))
Module(None, Stmt([Function(None, 'update', ['self', 'dict_'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Getattr(Name('self'), '__to_language'))]))
Module(None, Stmt([If([(Or([Compare(Getattr(Name('app_config'), 'models_module'), [('is', Name('None'))]), Compare(Name('app_config'), [('in', Name('excluded_apps'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Const('id'), [('in', Getattr(Name('self'), 'attrs'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Printnl([Mod((Const('Running post-migrate handlers for application %s'), Getattr(Name('app_config'), 'label')))], None)]))
except ( ValueError , TypeError ) :
Module(None, Stmt([Assign([AssName('comma_separated_int_list_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^[\\d,]+$')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ViewDoesNotExist'), [Mod((Const("Could not import '%s'. View does not exist in module %s."), Tuple([Name('lookup_view'), Name('mod_name')])))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'url_patterns', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'handle_m2m', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'add_library'), [Name('lib')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('response'), 'OP_ASSIGN', [Const('Location')])], CallFunc(Getattr(Name('request'), 'build_absolute_uri'), [Subscript(Name('response'), 'OP_APPLY', [Const('Location')])], None, None))]))
@ property
Module(None, Stmt([From('django.template.base', [('compile_string', None), ('resolve_variable', None), ('unescape_string_literal', None), ('generic_tag_compiler', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'file'), 'seek'), [Const(0)], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'isfile'), [Name('f')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const('form'))]))
Module(None, Stmt([Assign([AssName('generic_lang_code', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(Name('lang_code'), 'split'), [Const('-')], None, None), 'OP_APPLY', [Const(0)]))]))
self . _exception_middleware = [ ]
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_delete'), [Getattr(Name('f'), 'name')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('_trans'), 'gettext'), [Name('message')], None, None))]))
Module(None, Stmt([Assign([AssName('cache_timeout', 'OP_ASSIGN')], Getattr(Name('settings'), 'CACHE_MIDDLEWARE_SECONDS'))]))
Module(None, Stmt([From('django.utils.six.moves', [('xrange', None)], 0)]))
Module(None, Stmt([Assign([AssName('tzinfo', 'OP_ASSIGN')], CallFunc(Getattr(Name('kw'), 'pop'), [Const('tzinfo')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'current_token', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'next_token'), [], None, None))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Compare(Name('best_doublecolon_end'), [('==', CallFunc(Name('len'), [Name('hextets')], None, None))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([AssName('extracted', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), '_archive'), 'extractfile'), [Name('member')], None, None))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Function(None, 'has_header', ['self', 'header'], [], 0, None, Stmt([Pass()]))]))
file_ , _ , _ = imp . find_module ( module_name , [ entry ] )
Module(None, Stmt([If([(Compare(Name('dklen'), [('>', Mul((Sub((Power((Const(2), Const(32))), Const(1))), Name('hlen'))))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'become_daemon', ['our_home_dir', 'out_log', 'err_log', 'umask'], [Const('.'), Const('/dev/null'), Const('/dev/null'), Const(18)], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'get_version', ['version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'is_checked', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_is_rendered', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('zipfile'), 'ZipFile'), '__init__'), [Name('self')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('form'), 'save_m2m'), [], None, None))]))
Module(None, Stmt([Import([('operator', None)])]))
Module(None, Stmt([Discard(Yield(Name('subnode')))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'get'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
try :
Module(None, Stmt([Function(None, 'set', ['self', 'key', 'value', 'timeout', 'version'], [Name('DEFAULT_TIMEOUT'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('this_bases'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'get_valid_filename', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('_make_decorator'))]))
try :
Module(None, Stmt([If([(And([Compare(Name('field'), [('!=', Name('NON_FIELD_ERRORS'))]), Compare(Name('field'), [('not in', Getattr(Name('self'), 'fields'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('errors', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('value')], None, None), [('!=', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('trimmed', 'OP_ASSIGN')], CallFunc(Name('trim_url'), [Name('middle')], None, None))]))
Module(None, Stmt([If([(Getattr(Name('field'), 'help_text'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(Name('prefix')), Stmt([Pass()]))], None)]))
@ stringfilter
Module(None, Stmt([Assign([AssAttr(Name('self'), 'pointer', 'OP_ASSIGN')], Name('i'))]))
Module(None, Stmt([Assign([AssAttr(Name('e'), 'message', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Getattr(Name('e'), 'code')]))]))
Module(None, Stmt([Assign([AssName('_meth_func', 'OP_ASSIGN')], Const('im_func'))]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'create_var'), [Name('token')], None, None))]))
Module(None, Stmt([Return(Subscript(Name('MONTHS_3'), 'OP_APPLY', [Getattr(Getattr(Name('self'), 'data'), 'month')]))]))
Module(None, Stmt([Assign([AssName('__bool__', 'OP_ASSIGN')], CallFunc(Name('new_method_proxy'), [Name('bool')], None, None))]))
Module(None, Stmt([Assign([AssName('objects', 'OP_ASSIGN')], Getattr(Name('model'), '_base_manager'))]))
Module(None, Stmt([Assign([AssName('daemon_kwargs', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssName('best_doublecolon_start', 'OP_ASSIGN')], Name('doublecolon_start'))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'day_none_value', 'OP_ASSIGN')], Getattr(Name('self'), 'none_value'))]))
Module(None, Stmt([Function(None, 'linebreaksbr', ['value', 'autoescape'], [Name('None')], 0, None, Stmt([Pass()]))]))
elif callable ( func ) :
Module(None, Stmt([For(AssName('supported_code', 'OP_ASSIGN'), Name('_supported'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('LUHN_ODD_LOOKUP', 'OP_ASSIGN')], Tuple([Const(0), Const(2), Const(4), Const(6), Const(8), Const(1), Const(3), Const(5), Const(7), Const(9)]))]))
Module(None, Stmt([Assign([AssName('bytes', 'OP_ASSIGN')], CallFunc(Name('float'), [Name('bytes')], None, None))]))
try :
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Name('factory'), [], None, Name('kwargs')))]))
Module(None, Stmt([Return(Tuple([Name('host'), Const('')]))]))
else :
Module(None, Stmt([If([(Name('is_templatized'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'render_node', ['self', 'node', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Getattr(Name('six'), 'text_type')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'lists', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('request', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('chunk_size', 'OP_ASSIGN')], Mul((Const(64), Power((Const(2), Const(10))))))]))
Module(None, Stmt([Function(None, '_generate_cache_key', ['request', 'method', 'headerlist', 'key_prefix'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], CallFunc(Getattr(Const('.'), 'join'), [List([Getattr(Name('package'), '__name__'), Name('module_name')])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'configure_root'), [Name('root'), Name('True')], None, None))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'handle'), [], Name('args'), Name('options')))]))
Module(None, Stmt([If([(CallFunc(Name('contains'), [Name('elt'), Name('inst')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('opt', 'OP_ASSIGN'), Getattr(Name('self'), 'option_list'), Stmt([Pass()]), None)]))
try :
Module(None, Stmt([Assign([AssName('old_field_name', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([If([(Not(Getattr(Name('sys'), 'warnoptions')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stream'), 'write'), [Const('\n')], None, None))]))
Module(None, Stmt([Assign([AssName('st', 'OP_ASSIGN')], CallFunc(Getattr(Name('os'), 'stat'), [Name('filename')], None, None))]))
Module(None, Stmt([If([(Compare(Name('answer'), [('!=', Const('y'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'push', ['self', 'name', 'block'], [], 0, None, Stmt([Pass()]))]))
except KeyboardInterrupt :
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('query_string'), Name('bytes')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('InclusionNode', [Name('TagHelperNode')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'dec', ['func'], [], 0, None, Stmt([Pass()]))]))
except StopIteration :
@ decorator
Module(None, Stmt([Function(None, '_text_chars', ['self', 'length', 'truncate', 'text', 'truncate_len'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Add((CallFunc(Name('len'), [CallFunc(Getattr(Name('self'), 'non_form_errors'), [], None, None)], None, None), CallFunc(Name('sum'), [GenExpr(GenExprInner(CallFunc(Name('len'), [Name('form_errors')], None, None), [GenExprFor(AssName('form_errors', 'OP_ASSIGN'), Getattr(Name('self'), 'errors'), [])]))], None, None))))]))
except ValueError :
Module(None, Stmt([Assign([AssName('randint', 'OP_ASSIGN')], CallFunc(Getattr(Name('random'), 'randrange'), [Const(100000)], None, None))]))
Module(None, Stmt([Assign([AssName('field_list', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('value'), 'center'), [CallFunc(Name('int'), [Name('arg')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('ContextDict'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
finder = hook ( entry )
try :
Module(None, Stmt([Assign([Subscript(Name('msg'), 'OP_ASSIGN', [Name('name')])], Name('value'))]))
Module(None, Stmt([Assign([AssName('disposition', 'OP_ASSIGN')], Subscript(Subscript(Name('meta_data'), 'OP_APPLY', [Const('content-disposition')]), 'OP_APPLY', [Const(1)]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'widgets', 'attrs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'dst', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'close', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([With(CallFunc(Name('open'), [Name('new_path'), Const('wb')], None, None), AssName('new_file', 'OP_ASSIGN'), Stmt([Pass()]))]))
except KeyError :
Module(None, Stmt([Assign([AssName('leading', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'has_leading_dir'), [Name('namelist')], None, None))]))
Module(None, Stmt([Function(None, 'items', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('is_compressed', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Return(Name('guessed_path'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'makedirs'), [Name('dirname')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('BadHeaderError'), [Mod((Const("Header values can't contain newlines (got %r)"), Name('value')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_populated', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'waiting_readers', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'is_bound'), Compare(Name('i'), [('<', CallFunc(Getattr(Name('self'), 'initial_form_count'), [], None, None))])]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Function(None, '_has_changed', ['self', 'initial', 'data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('singular_suffix'))]))
Module(None, Stmt([Assign([AssName('offset', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('date'), 'tzinfo'), 'utcoffset'), [Name('date')], None, None))]))
Module(None, Stmt([Assign([AssName('version', 'OP_ASSIGN')], CallFunc(Name('get_complete_version'), [Name('version')], None, None))]))
Module(None, Stmt([Function(None, 'dst', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('translation', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_new_gnu_trans'), [Name('localedir')], None, None))]))
Module(None, Stmt([Return(List(()))]))
Module(None, Stmt([Return(Name('wrapper'))]))
Module(None, Stmt([Class('InMemoryUploadedFile', [Name('UploadedFile')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__getstate__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('flat'), 'update'), [Name('d')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('sql_files'), 'append'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('app_dir'), Mod((Const('%s.sql'), Getattr(Name('opts'), 'model_name')))], None, None)], None, None))]))
Module(None, Stmt([If([(And([CallFunc(Getattr(Name('kwargs'), 'get'), [Const('localize')], None, None), Compare(Getattr(Name('self'), 'widget'), [('==', Name('NumberInput'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('__class__', 'OP_ASSIGN')], CallFunc(Name('property'), [CallFunc(Name('new_method_proxy'), [CallFunc(Getattr(Name('operator'), 'attrgetter'), [Const('__class__')], None, None)], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('fks_to_parent')], None, None), [('==', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
@ stringfilter
else :
Module(None, Stmt([Assign([Subscript(Name('wsgi_opts'), 'OP_ASSIGN', [Const('bindAddress')])], Name('None'))]))
Module(None, Stmt([For(AssName('path', 'OP_ASSIGN'), Getattr(Name('self'), 'locale_paths'), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Assign([AssName('expires', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_template_response_middleware'), 'insert'), [Const(0), Getattr(Name('mw_instance'), 'process_template_response')], None, None))]))
Module(None, Stmt([From('django.utils.module_loading', [('module_has_submodule', None)], 0)]))
Module(None, Stmt([Function(None, 'as_ul', ['self'], [], 0, None, Stmt([Pass()]))]))
@ property
Module(None, Stmt([Assign([AssAttr(Name('self'), 'schemes', 'OP_ASSIGN')], Name('schemes'))]))
Module(None, Stmt([Raise(CallFunc(Name('ImproperlyConfigured'), [Mod((Const('Path for saving email messages exists, but is not a directory: %s'), Getattr(Name('self'), 'file_path')))], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Name('value'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('pytz', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('value')], None, None), [('!=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'as_ul', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, 'run', ['addr', 'port', 'wsgi_handler', 'ipv6', 'threading'], [Name('False'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('obj'))]))
Module(None, Stmt([Assign([AssName('s2', 'OP_ASSIGN')], CallFunc(Getattr(Name('time'), 'strftime'), [Name('fmt'), Add((Tuple([Add((Name('year'), Const(28)))]), Slice(Name('timetuple'), 'OP_APPLY', Const(1), None)))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_catalog'), 'update'), [Getattr(Name('other'), '_catalog')], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'sub'), [Const("([a-z])'([A-Z])"), Lambda(['m'], [], 0, CallFunc(Getattr(CallFunc(Getattr(Name('m'), 'group'), [Const(0)], None, None), 'lower'), [], None, None)), CallFunc(Getattr(Name('value'), 'title'), [], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Name('print_'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('is_usable', 'OP_ASSIGN')], Compare(Name('resource_string'), [('is not', Name('None'))]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('http'), 'parse_cookie'), [Name('raw_cookie')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('headerlist'), 'sort'), [], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid_choice')]), Keyword('code', Const('invalid_choice')), Keyword('params', Dict([(Const('value'), Name('value'))]))], None, None), None, None)]))
Module(None, Stmt([For(AssName('template_dir', 'OP_ASSIGN'), Name('template_dirs'), Stmt([Pass()]), None)]))
Module(None, Stmt([AugAssign(Name('bytes_read'), '+=', CallFunc(Name('len'), [Name('bytes')], None, None))]))
Module(None, Stmt([If([(Compare(Name('ch2'), [('==', Const('?'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('self'), Const('_files')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'coerce', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('coerce'), Lambda(['val'], [], 0, Name('val'))], None, None))]))
Module(None, Stmt([Assign([AssName('requires_system_checks', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_regex', 'OP_ASSIGN')], Name('regex'))]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'idx'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'cleaned_data'), 'OP_ASSIGN', [Name('name')])], Name('value'))]))
Module(None, Stmt([For(AssName('dict_', 'OP_ASSIGN'), Getattr(Name('self'), 'dicts'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Name('fake'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('_html_parser'), 'HTMLParser'), '__init__'), [Name('self'), Keyword('convert_charrefs', Name('convert_charrefs'))], None, Name('kwargs')))]))
Module(None, Stmt([Function(None, '__mod__', ['self', 'rhs'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'format', ['number', 'decimal_sep', 'decimal_pos', 'grouping', 'thousand_sep', 'force_grouping'], [Name('None'), Const(0), Const(''), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Const(None))]))
nofollow_attr = ' rel="nofollow"' if nofollow else ''
Module(None, Stmt([If([(Compare(Name('t'), [('in', Getattr(Name('self'), '__dispatch'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('operator', None)])]))
Module(None, Stmt([If([(Getattr(Name('field'), 'serialize'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'handle_raw_input', ['self', 'input_data', 'META', 'content_length', 'boundary', 'encoding'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('localedir', 'OP_ASSIGN'), CallFunc(Name('reversed'), [Getattr(Name('settings'), 'LOCALE_PATHS')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.http.utils', [('fix_location_header', None), ('conditional_content_removal', None)], 0)]))
Module(None, Stmt([From('django.http.response', [('REASON_PHRASES', 'STATUS_CODE_TEXT')], 0)]))
try :
Module(None, Stmt([Return(CallFunc(Getattr(Name('timezone'), 'make_naive'), [Name('value'), Name('current_timezone')], None, None))]))
except TypeError as te :
Module(None, Stmt([Break()]))
except StandardError as e :
try :
Module(None, Stmt([Function(None, 'clean', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'get_template_from_string', ['source', 'origin', 'name'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('view_name', 'OP_ASSIGN')], Add((Getattr(Getattr(Name('callback'), '__class__'), '__name__'), Const('.__call__'))))]))
Module(None, Stmt([Assign([AssName('input_type', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'obj', 'OP_ASSIGN')], Name('obj'))]))
Module(None, Stmt([Function(None, 'import_string', ['dotted_path'], [], 0, None, Stmt([Pass()]))]))
@ stringfilter
Module(None, Stmt([Assign([AssName('encoding', 'OP_ASSIGN')], Or([Getattr(Name('self'), 'encoding'), Getattr(Name('settings'), 'DEFAULT_CHARSET')]))]))
Module(None, Stmt([Class('Serializer', [Name('PythonSerializer')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssName('elt', 'OP_ASSIGN'), Name('source'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_createdir'), [], None, None))]))
Module(None, Stmt([Assign([AssName('toks', 'OP_ASSIGN')], Getattr(Name('self'), 'toks'))]))
Module(None, Stmt([If([(Compare(Const('--commands'), [('in', Name('args'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const(None))]))
else :
Module(None, Stmt([If([(Name('relative_dir'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('get_connection'), [Keyword('backend', Getattr(Name('self'), 'email_backend')), Keyword('fail_silently', Name('True'))], None, None))]))
Module(None, Stmt([If([(Name('url'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('iter'), [CallFunc(CallFunc(Name('getattr'), [Name('d'), Name('_itervalues')], None, None), [], None, Name('kw'))], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'name', 'OP_ASSIGN'), AssAttr(Name('self'), 'nodelist', 'OP_ASSIGN'), AssAttr(Name('self'), 'parent', 'OP_ASSIGN')])], Tuple([Name('name'), Name('nodelist'), Name('parent')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('nodes'), 'extend'), [CallFunc(Getattr(Name('nodelist'), 'get_nodes_by_type'), [Name('nodetype')], None, None)], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('date_value'), 'strftime'), [Name('input_format')], None, None))]))
else :
Module(None, Stmt([If([(Name('stream_created'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('_win'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('data'))]))
elif not os . path . exists ( self . file_path ) :
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('middleware'), Const('process_request')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(List(()))]))
Module(None, Stmt([Assign([AssName('manifest', 'OP_ASSIGN')], CallFunc(Name('OrderedDict'), [GenExpr(GenExprInner(Tuple([Name('app_name'), CallFunc(Name('list'), [CallFunc(Name('filter'), [Name('model_installed'), Name('model_list')], None, None)], None, None)]), [GenExprFor(AssTuple([AssName('app_name', 'OP_ASSIGN'), AssName('model_list', 'OP_ASSIGN')]), Name('all_models'), [])]))], None, None))]))
Module(None, Stmt([Assign([AssName('kwargs', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Return(CallFunc(Name('BoundField'), [Name('self'), Name('field'), Name('name')], None, None))]))
Module(None, Stmt([Assign([AssName('operations', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'widget_attrs', ['self', 'widget'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('parsed', 'OP_ASSIGN')], Name('True'))]))
register = registry . register
Module(None, Stmt([For(AssName('app_config', 'OP_ASSIGN'), Name('app_configs'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(Name('parent')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(Name('base64'), 'urlsafe_b64encode'), [Name('s')], None, None), 'rstrip'), [Const('\n=')], None, None))]))
Module(None, Stmt([If([(Not(Name('want_unicode')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__next__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('subclass', 'OP_ASSIGN')], CallFunc(Name('type'), [Const('Migration'), Tuple([Name('Migration')]), Dict([(Const('dependencies'), ListComp(Tuple([Name('app_label'), Getattr(Name('migration'), 'name')]), [ListCompFor(AssName('migration', 'OP_ASSIGN'), Name('merge_migrations'), [])]))])], None, None))]))
Module(None, Stmt([If([(And([Compare(Name('name'), [('is', Name('None'))]), Compare(Name('filter_func'), [('is', Name('None'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('DefusedXmlException', [Name('ValueError')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'serialize', ['self', 'queryset', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('get', 'OP_ASSIGN')], Const('<could not parse>'))]))
else :
except AttributeError :
else :
Module(None, Stmt([Function(None, 'remove_tags', ['html', 'tags'], [], 0, None, Stmt([Pass()]))]))
else :
elif not isinstance ( value , ( list , tuple ) ) :
Module(None, Stmt([For(AssName('subwidget', 'OP_ASSIGN'), CallFunc(Getattr(Getattr(Getattr(Name('self'), 'field'), 'widget'), 'subwidgets'), [Getattr(Name('self'), 'html_name'), CallFunc(Getattr(Name('self'), 'value'), [], None, None), Name('attrs')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'get_max_age', ['response'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('qn', 'OP_ASSIGN')], Getattr(Getattr(Name('connection'), 'ops'), 'quote_name'))]))
Module(None, Stmt([With(CallFunc(Name('open'), [Getattr(Name('writer'), 'path'), Const('wb')], None, None), AssName('fh', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('checkbox_name', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'clear_checkbox_name'), [Name('name')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('FixedOffset'), [Name('offset'), Name('name')], None, None))]))
Module(None, Stmt([If([(And([Getattr(Name('settings'), 'DEBUG'), Compare(CallFunc(Getattr(Getattr(Name('request'), 'META'), 'get'), [Const('REMOTE_ADDR')], None, None), [('in', Getattr(Name('settings'), 'INTERNAL_IPS'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Name('result'), Or([Compare(Name('mode'), [('==', Const('set'))]), And([Compare(Name('mode'), [('==', Const('add'))]), Compare(Name('current_expires'), [('<', Name('now'))])])])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('si', 'OP_ASSIGN')], CallFunc(Name('open'), [Const('/dev/null'), Const('r')], None, None))]))
finally :
Module(None, Stmt([Raise(CallFunc(Name('OverflowError'), [Const('dklen too big')], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Name('cache'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'file', 'OP_ASSIGN')], Name('file_name'))]))
Module(None, Stmt([If([(Name('id_'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'pop', ['self', 'key', 'default'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('replacement', 'OP_ASSIGN'), CallFunc(Name('set'), [List([Name('thousand_sep'), CallFunc(Getattr(Name('unicodedata'), 'normalize'), [Const('NFKD'), Name('thousand_sep')], None, None)])], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('value'), 'replace'), [Const(' '), Const('\xa0')], None, None))]))
Module(None, Stmt([Assign([AssName('conf', 'OP_ASSIGN')], Subscript(Getattr(Name('settings'), 'CACHES'), 'OP_APPLY', [Name('backend')]))]))
Module(None, Stmt([Function(None, '_reverse_with_prefix', ['self', 'lookup_view', '_prefix', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], Mod((Const("%s doesn't look like a module path"), Name('dotted_path'))))]))
Module(None, Stmt([Function(None, 'strftime', ['self', 'fmt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('_active'), 'value', 'OP_ASSIGN')], Getattr(Name('self'), 'old_timezone'))]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'waiting_writers'), '+=', Const(1))]))
Module(None, Stmt([If([(Not(Name('path_info')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Name('import_module'), [Const('.management'), Getattr(Name('app_config'), 'name')], None, None))]))
Module(None, Stmt([Assign([AssName('path', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Getattr(Name('app_config'), 'path'), Const('management')], None, None))]))
Module(None, Stmt([From('django.db', [('connections', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([Assign([AssName('message_context', 'OP_ASSIGN')], CallFunc(Getattr(Name('context_match'), 'group'), [Const(1)], None, None))]))
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], CallFunc(Getattr(Name('http'), 'HttpResponseBadRequest'), [], None, None))]))
Module(None, Stmt([From('django.utils.encoding', [('force_str', None), ('force_text', None), ('DEFAULT_LOCALE_ENCODING', None)], 0)]))
Module(None, Stmt([Assign([AssName('lineno', 'OP_ASSIGN')], Add((Name('lineno'), CallFunc(Getattr(Getattr(Name('self'), '__starttag_text'), 'count'), [Const('\n')], None, None))))]))
Module(None, Stmt([If([(Name('args'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_headers', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssName('one_percent_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('(?<!%)%(?!%)')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('msg'), 'OP_ASSIGN', [Const('Date')])], CallFunc(Name('formatdate'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'sort'), [Keyword('key', Lambda(['k'], [], 0, Subscript(Name('k'), 'OP_APPLY', [Const(1)]))), Keyword('reverse', Name('True'))], None, None))]))
Module(None, Stmt([Function(None, 'read', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'paginator'), 'validate_number'), [Sub((Getattr(Name('self'), 'number'), Const(1)))], None, None))]))
Module(None, Stmt([Assign([AssName('exclude', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_get_validation_exclusions'), [], None, None))]))
except KeyError :
Module(None, Stmt([Function(None, 'body', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('s'), 'feed'), [Name('value')], None, None))]))
Module(None, Stmt([Function(None, 'd', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Or([Not(Getattr(Name('pk'), 'editable')), Or([Getattr(Name('pk'), 'auto_created'), CallFunc(Name('isinstance'), [Name('pk'), Name('AutoField')], None, None)]), And([Getattr(Name('pk'), 'rel'), Getattr(Getattr(Name('pk'), 'rel'), 'parent_link'), CallFunc(Name('pk_is_not_editable'), [Getattr(Getattr(Getattr(Getattr(Name('pk'), 'rel'), 'to'), '_meta'), 'pk')], None, None)])]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_non_form_errors'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(Name('_serializers')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--list'), Const('-l'), Keyword('action', Const('store_true')), Keyword('dest', Const('list')), Keyword('default', Name('False')), Keyword('help', Const('Show a list of all known migrations and which are applied'))], None, None))]))
Module(None, Stmt([Assign([AssName('get_method_self', 'OP_ASSIGN')], CallFunc(Getattr(Name('operator'), 'attrgetter'), [Name('_meth_self')], None, None))]))
elif isinstance ( value , datetime . time ) :
Module(None, Stmt([Function(None, 'lock', ['f', 'flags'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('resolved_path'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('copy'), 'copy'), [Name('self')], None, None))]))
Module(None, Stmt([Assign([AssName('content', 'OP_ASSIGN')], CallFunc(Getattr(Name('content'), 'message'), [], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'loader', 'OP_ASSIGN'), AssAttr(Name('self'), 'loadname', 'OP_ASSIGN'), AssAttr(Name('self'), 'dirs', 'OP_ASSIGN')])], Tuple([Name('loader'), Name('name'), Name('dirs')]))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'parent_instance', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
except http . Http404 as e :
Module(None, Stmt([For(AssName('app_config', 'OP_ASSIGN'), Name('app_configs'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('error', 'OP_ASSIGN')], CallFunc(Name('ValidationError'), [Name('error')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid')]), Keyword('code', Const('invalid'))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'calculate_app_template_dirs', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Name('chunks')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('html'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Compare(Name('key'), [('in', Subscript(Name('caches'), 'OP_APPLY', [Name('DEFAULT_CACHE_ALIAS')]))]))]))
else :
row_data = tuple ( d . _get_pk_val ( ) if hasattr ( d , '_get_pk_val' ) else d  for d in row_data )
Module(None, Stmt([Import([('types', None)])]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('to_current_timezone'), [Name('value')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('ModelChoiceIterator'), [Name('self')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('PythonSerializer'), Name('self')], None, None), 'getvalue'), [], None, None))]))
Module(None, Stmt([Function(None, '__get__', ['self', 'obj', 'tp'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Slice(Name('data'), 'OP_APPLY', Name('last'), Add((Name('last'), Const(1)))), [('==', Const('\n'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'required'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('import_string'), [Name('app_path')], None, None))]))
@ stringfilter
Module(None, Stmt([Function(None, '_get_model_from_node', ['self', 'node', 'attr'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'close_called', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Return(CallFunc(Name('list'), [CallFunc(Getattr(Name('self'), 'iterkeys'), [], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('string_types', 'OP_ASSIGN')], Tuple([Name('str')]))]))
Module(None, Stmt([Assign([AssName('field_params', 'OP_ASSIGN')], CallFunc(Name('OrderedDict'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'find_template_cache'), 'clear'), [], None, None))]))
Module(None, Stmt([Assign([AssName('values', 'OP_ASSIGN')], DictComp(Name('name'), CallFunc(Getattr(Name('var'), 'resolve'), [Name('context')], None, None), [ListCompFor(AssTuple([AssName('name', 'OP_ASSIGN'), AssName('var', 'OP_ASSIGN')]), CallFunc(Getattr(Name('six'), 'iteritems'), [Getattr(Name('self'), 'extra_context')], None, None), [])]))]))
Module(None, Stmt([If([(And([Name('row_data'), Compare(Name('None'), [('not in', Name('row_data'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'stream'), 'read'), [Name('size')], None, None))]))
Module(None, Stmt([Assign([AssName('opt_dict', 'OP_ASSIGN')], Dict([(Const('bold'), Const('1')), (Const('underscore'), Const('4')), (Const('blink'), Const('5')), (Const('reverse'), Const('7')), (Const('conceal'), Const('8'))]))]))
Module(None, Stmt([Function(None, 'ext_convert', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('delattr'), [Subscript(Name('caches'), 'OP_APPLY', [Name('DEFAULT_CACHE_ALIAS')]), Name('name')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('ch', 'OP_ASSIGN'), AssName('escaped', 'OP_ASSIGN')])], CallFunc(Name('next'), [Name('pattern_iter')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'allow_empty_first_page', 'OP_ASSIGN')], Name('allow_empty_first_page'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--database'), Keyword('action', Const('store')), Keyword('dest', Const('database')), Keyword('default', Name('DEFAULT_DB_ALIAS')), Keyword('help', Const('Nominates a specific database to dump fixtures from. Defaults to the "default" database.'))], None, None))]))
Module(None, Stmt([Function(None, 'constant_time_compare', ['val1', 'val2'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('tzinfo', 'OP_ASSIGN')], CallFunc(Name('get_fixed_timezone'), [Name('offset')], None, None))]))
Module(None, Stmt([Return(Const('<IfEqualNode>'))]))
Module(None, Stmt([Function(None, 'get_language_from_request', ['request', 'check_path'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('leading', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'has_leading_dir'), [GenExpr(GenExprInner(Getattr(Name('x'), 'name'), [GenExprFor(AssName('x', 'OP_ASSIGN'), Name('members'), [])]))], None, None))]))
Module(None, Stmt([Assign([AssName('ret', 'OP_ASSIGN')], Name('_'))]))
else :
Module(None, Stmt([Return(Add((Getattr(Name('self'), 'sign'), Name('value'))))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('language'), 'lower'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('excluded_models'), 'add'), [Name('model')], None, None))]))
Module(None, Stmt([Return(Tuple([Name('name'), Tuple([Name('value'), Name('params')])]))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('conditional_escape'), [Name('arg')], None, None), 'join'), [Name('value')], None, None))]))
Module(None, Stmt([Function(None, 'truncatewords_html', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Getattr(Name('self'), 'data'), 'hour'), [('>', Const(11))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'clear_cdata_mode'), [], None, None))]))
Module(None, Stmt([For(AssName('label', 'OP_ASSIGN'), Name('app_labels'), Stmt([Pass()]), None)]))
Module(None, Stmt([While(Or([Not(Name('answer')), Compare(Name('answer'), [('not in', Const('yn'))])]), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('index'), [('<', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('statements', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_update_unget_history'), [CallFunc(Name('len'), [Name('bytes')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('tz_name', 'OP_ASSIGN')], CallFunc(Name('force_text'), [CallFunc(Name('get_current_timezone_name'), [], None, None), Keyword('errors', Const('ignore'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('int'), [Subscript(Name('cc'), 'OP_APPLY', [Const('max-age')])], None, None))]))
else :
Module(None, Stmt([For(AssTuple([AssName('item', 'OP_ASSIGN'), AssName('args', 'OP_ASSIGN')]), CallFunc(Name('zip'), [Name('result'), Name('result_args')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(And([Name('cursor'), Name('close_connection')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'reason_phrase', 'OP_ASSIGN')], Name('reason'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('sys'), 'stderr'), 'write'), [Const('  Unable to load the flup package.  In order to run django\n')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("App '%s' does not have migrations (you cannot selectively sync unmigrated apps)"), Name('app_label')))], None, None), None, None)]))
Module(None, Stmt([Import([('datetime', None)])]))
Module(None, Stmt([If([(Not(Name('renamed')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'instance', 'OP_ASSIGN')], Name('instance'))]))
Module(None, Stmt([Assign([AssName('FASTCGI_OPTIONS', 'OP_ASSIGN')], Dict([(Const('protocol'), Const('fcgi')), (Const('host'), Name('None')), (Const('port'), Name('None')), (Const('socket'), Name('None')), (Const('method'), Const('fork')), (Const('daemonize'), Name('None')), (Const('workdir'), Const('/')), (Const('pidfile'), Name('None')), (Const('maxspare'), Const(5)), (Const('minspare'), Const(2)), (Const('maxchildren'), Const(50)), (Const('maxrequests'), Const(0)), (Const('debug'), Name('None')), (Const('outlog'), Name('None')), (Const('errlog'), Name('None')), (Const('umask'), Name('None'))]))]))
Module(None, Stmt([Return(Name('token'))]))
elif name is not None and compile_function is not None :
Module(None, Stmt([Assign([AssName('flush', 'OP_ASSIGN')], CallFunc(Name('property'), [Lambda(['self'], [], 0, Getattr(Getattr(Name('self'), 'file'), 'flush'))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Getattr(Name('self'), 'file'), 'size', 'OP_ASSIGN')], Name('file_size'))]))
Module(None, Stmt([For(AssName('val', 'OP_ASSIGN'), Name('value'), Stmt([Pass()]), None)]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Function(None, 'incr_version', ['self', 'key', 'delta', 'version'], [Const(1), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core.management.base', [('CommandError', None)], 0)]))
Module(None, Stmt([Return(Name('style'))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Function(None, 'npgettext', ['context', 'singular', 'plural', 'number'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('regex', 'OP_ASSIGN')], Const(''))]))
except AttributeError :
Module(None, Stmt([If([(And([Name('commit'), CallFunc(Name('hasattr'), [Name('form'), Const('save_m2m')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'set_cookie'), [Name('key'), Name('value')], None, Name('kwargs')))]))
Module(None, Stmt([Class('SimpleLazyObject', [Name('LazyObject')], None, Stmt([Pass()]), None)]))
try :
Module(None, Stmt([Assign([Subscript(Subscript(Getattr(Name('cls'), '__dispatch'), 'OP_APPLY', [Name('klass')]), 'OP_ASSIGN', [Name('funcname')])], Name('method'))]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
except OSError as e :
else :
@ cached_property
Module(None, Stmt([Assign([AssName('inputs', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('parts', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('filename'), 'endswith'), [Const('$py.class')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'get_cache_key', ['request', 'key_prefix', 'method', 'cache'], [Name('None'), Const('GET'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('_trans'), 'ngettext'), [Name('singular'), Name('plural'), Name('number')], None, None))]))
Module(None, Stmt([Function(None, 'writer_leaves', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('imatch', 'OP_ASSIGN')], CallFunc(Getattr(Name('inline_re'), 'match'), [Getattr(Name('t'), 'contents')], None, None))]))
Module(None, Stmt([Assign([AssName('__ne__', 'OP_ASSIGN')], CallFunc(Name('new_method_proxy'), [Getattr(Name('operator'), 'ne')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('Debug'), Name('self')], None, None), '__init__'), [Name('DEBUG')], Name('args'), Name('kwargs')))]))
@ register ( Tags . compatibility )
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const("No changes detected in app '%s'"), CallFunc(Getattr(Name('app_labels'), 'pop'), [], None, None)))], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Const('Non-integer base36 conversion input.')], None, None), None, None)]))
Module(None, Stmt([From('django.utils.daemonize', [('become_daemon', None)], 0)]))
Module(None, Stmt([Function(None, 'make_msgid', ['idstring'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('final_attrs', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'build_attrs'), [Name('attrs'), Keyword('type', Getattr(Name('self'), 'input_type')), Keyword('name', Name('name'))], None, None))]))
self . LibraryValueNotFoundException = value_not_found_exception
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Return(Mod((CallFunc(Name('str'), [Const('%s%s%s')], None, None), Tuple([Name('value'), Getattr(Name('self'), 'sep'), CallFunc(Getattr(Name('self'), 'signature'), [Name('value')], None, None)]))))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Getattr(Name('self'), 'dirpath'), Getattr(Name('self'), 'file')], None, None))]))
Module(None, Stmt([If([(Compare(Name('key'), [('not in', Name('self'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'charset', 'OP_ASSIGN')], Name('charset'))]))
Module(None, Stmt([Function(None, 'l', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_key'), [Name('key')], None, None))]))
Module(None, Stmt([Assign([AssName('cache', 'OP_ASSIGN')], CallFunc(Name('dict'), [], None, None))]))
Module(None, Stmt([Function(None, 'exists', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
except OSError as e :
Module(None, Stmt([For(AssName('message', 'OP_ASSIGN'), Name('message'), Stmt([Pass()]), None)]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Break()]))
try :
Module(None, Stmt([If([(And([Name('current_app'), Compare(Name('current_app'), [('in', Name('app_list'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Tuple([Name('source'), Name('display_name')]))]))
Module(None, Stmt([From('django.utils', [('datetime_safe', None)], 0)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'allow_folders'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('six'), 'text_type'), [Name('name')], None, None))]))
Module(None, Stmt([Assign([AssName('confirm', 'OP_ASSIGN')], Const('yes'))]))
Module(None, Stmt([Function(None, 'encoding', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('ModelFormOptions', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Mod((Const('<DeserializedObject: %s.%s(pk=%s)>'), Tuple([Getattr(Getattr(Getattr(Name('self'), 'object'), '_meta'), 'app_label'), Getattr(Getattr(Getattr(Name('self'), 'object'), '_meta'), 'object_name'), Getattr(Getattr(Name('self'), 'object'), 'pk')]))))]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None)], 0)]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], Add((Slice(Name('name'), 'OP_APPLY', None, Sub((Const(255), CallFunc(Name('len'), [Name('ext')], None, None)))), Name('ext'))))]))
Module(None, Stmt([Assign([AssName('_anonymous_', 'OP_ASSIGN')], List([Const('_offset')]))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Getattr(Const(' '), 'join'), [ListComp(CallFunc(Name('force_text'), [Name('arg'), Name('encoding'), Name('strings_only'), Name('errors')], None, None), [ListCompFor(AssName('arg', 'OP_ASSIGN'), Name('s'), [])])], None, None))]))
Module(None, Stmt([Assign([AssName('cookiedict', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('orig_vars'), 'pop'), [Name('slots_var')], None, None))]))
Module(None, Stmt([Assign([AssName('u', 'OP_ASSIGN')], Add((Name('salt'), CallFunc(Getattr(Name('struct'), 'pack'), [Const('>I'), Name('i')], None, None))))]))
Module(None, Stmt([Assign([AssName('template_string', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('template_string')], None, None))]))
Module(None, Stmt([Assign([AssName('url', 'OP_ASSIGN')], Name('value'))]))
Module(None, Stmt([Import([('time', None)])]))
Module(None, Stmt([From('django.db', [('connections', None), ('DEFAULT_DB_ALIAS', None), ('migrations', None)], 0)]))
Module(None, Stmt([If([(And([Not(Name('data')), Name('initial')]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([If([(Compare(Name('field'), [('==', Name('NON_FIELD_ERRORS'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('in_tag', 'OP_ASSIGN')], Not(Name('in_tag')))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Class('Rss201rev2Feed', [Name('RssFeed')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Class('SplitDateTimeField', [Name('MultiValueField')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Const("Database inspection isn't supported for the currently selected database backend.")], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], Tuple([Const('SelectDateWidget')]))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'choices'), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([From('django.utils.functional', [('Promise', None)], 0)]))
Module(None, Stmt([Assign([AssName('loaders', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [Mod((Const(' %s '), Subscript(CallFunc(Getattr(Name('p'), 'split'), [Const(':'), Const(1)], None, None), 'OP_APPLY', [Const(1)])))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Getattr(Name('self'), 'setlistdefault'), [Name('key')], None, None), 'append'), [Name('value')], None, None))]))
else :
Module(None, Stmt([If([(Compare(Name('decimal_separator'), [('in', Name('value'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('raw_data'))]))
Module(None, Stmt([If([(And([Name('cursor'), Compare(CallFunc(Getattr(Getattr(Name('connection'), 'introspection'), 'table_name_converter'), [Getattr(Getattr(Name('model'), '_meta'), 'db_table')], None, None), [('in', Name('table_names'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('instance'), 'save'), [], None, None))]))
Module(None, Stmt([Assign([AssName('int2byte', 'OP_ASSIGN')], Name('chr'))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Return(Getattr(Getattr(Name('self'), 'empty_form'), 'media'))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('errors'), 'extend'), [Getattr(Name('e'), 'error_list')], None, None))]))
Module(None, Stmt([Assign([AssName('url', 'OP_ASSIGN')], CallFunc(Getattr(Name('hashlib'), 'md5'), [CallFunc(Name('force_bytes'), [CallFunc(Name('iri_to_uri'), [CallFunc(Getattr(Name('request'), 'build_absolute_uri'), [], None, None)], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('attrs'), 'OP_ASSIGN', [Const('labels')])], Name('labels'))]))
Module(None, Stmt([Function(None, 'use_argparse', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('x', 'OP_ASSIGN'), Name('argset'), Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Invalid header: %r'), Name('line')))], None, None), None, None)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'%s' is not a valid tag or filter in tag library '%s'"), Tuple([Name('name'), Name('taglib')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('fail_message', 'OP_ASSIGN')], Const('created'))]))
elif isinstance ( value , datetime . datetime ) :
Module(None, Stmt([Pass()]))
else :
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'nodelist_true', 'OP_ASSIGN'), AssAttr(Name('self'), 'nodelist_false', 'OP_ASSIGN')])], Tuple([Name('nodelist_true'), Name('nodelist_false')]))]))
else :
Module(None, Stmt([Return(CallFunc(Name('_'), [Const('noon')], None, None))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('os'), 'environ'), 'OP_ASSIGN', [Const('DJANGO_LIVE_TEST_SERVER_ADDRESS')])], Subscript(Name('options'), 'OP_APPLY', [Const('liveserver')]))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], Add((Getattr(Name('self'), 'buffer'), CallFunc(Getattr(Name('self'), '_read_limited'), [], None, None))))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'tags_available', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'get_language_from_path', ['request'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('_default'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('input_val'))]))
Module(None, Stmt([If([(Name('over_bytes'), Stmt([Pass()]))], None)]))
except ImportError :
Module(None, Stmt([For(AssTuple([AssName('pos', 'OP_ASSIGN'), AssName('elt', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Name('source')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Name('update_watch'), [], None, None))]))
Module(None, Stmt([Function(None, 'is_safe_url', ['url', 'host'], [Name('None')], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssName('inline_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^\\s*trans\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))(\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?\\s*')], None, None))]))
Module(None, Stmt([Function(None, 'unregister_serializer', ['format'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Return(Name('content'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('node'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('obj'), Getattr(Getattr(Name('field'), 'rel'), 'field_name')], None, None))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('connection'), 'constraint_checks_disabled'), [], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([CallFunc(Name('isinstance'), [Name('data'), Name('Node')], None, None), Not(Getattr(Name('data'), 'negated')), Or([Compare(Getattr(Name('data'), 'connector'), [('==', Name('conn_type'))]), Compare(CallFunc(Name('len'), [Name('data')], None, None), [('==', Const(1))])])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.six.moves', [('html_parser', '_html_parser')], 0)]))
Module(None, Stmt([Function(None, 'get_serializer', ['format'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'keys', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('form'), 'data'), 'OP_ASSIGN', [CallFunc(Getattr(Name('form'), 'add_prefix'), [Getattr(Getattr(Name('self'), 'fk'), 'name')], None, None)])], Name('None'))]))
Module(None, Stmt([AugAssign(Name('options'), '+=', ListComp(Tuple([Subscript(CallFunc(Name('sorted'), [Getattr(Name('s_opt'), 'option_strings')], None, None), 'OP_APPLY', [Const(0)]), Compare(Getattr(Name('s_opt'), 'nargs'), [('!=', Const(0))])]), [ListCompFor(AssName('s_opt', 'OP_ASSIGN'), Getattr(Name('parser'), '_actions'), [ListCompIf(Getattr(Name('s_opt'), 'option_strings'))])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'extend'), [CallFunc(Getattr(Getattr(Name('connection'), 'creation'), 'sql_destroy_model'), [Name('model'), Name('references_to_delete'), Name('style')], None, None)], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'dicts'], [], 4, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('line', 'OP_ASSIGN')], CallFunc(Getattr(Name('sio'), 'readline'), [], None, None))]))
Module(None, Stmt([Return(Dict(()))]))
Module(None, Stmt([Raise(CallFunc(Name('KeyError'), [Name('key')], None, None), None, None)]))
Module(None, Stmt([Import([('time', None)])]))
Module(None, Stmt([Assign([Subscript(Name('last'), 'OP_ASSIGN', [Name('NEXT')]), Subscript(Name('root'), 'OP_ASSIGN', [Name('PREV')])], Name('link'))]))
Module(None, Stmt([Return(CallFunc(Name('do_translate'), [Name('message'), Const('ugettext')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_setup'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Command'), Name('self')], None, None), 'add_arguments'), [Name('parser')], None, None))]))
Module(None, Stmt([Assign([AssName('OPERATORS', 'OP_ASSIGN')], Dict([(Const('or'), CallFunc(Name('infix'), [Const(6), Lambda(['context', 'x', 'y'], [], 0, Or([CallFunc(Getattr(Name('x'), 'eval'), [Name('context')], None, None), CallFunc(Getattr(Name('y'), 'eval'), [Name('context')], None, None)]))], None, None)), (Const('and'), CallFunc(Name('infix'), [Const(7), Lambda(['context', 'x', 'y'], [], 0, And([CallFunc(Getattr(Name('x'), 'eval'), [Name('context')], None, None), CallFunc(Getattr(Name('y'), 'eval'), [Name('context')], None, None)]))], None, None)), (Const('not'), CallFunc(Name('prefix'), [Const(8), Lambda(['context', 'x'], [], 0, Not(CallFunc(Getattr(Name('x'), 'eval'), [Name('context')], None, None)))], None, None)), (Const('in'), CallFunc(Name('infix'), [Const(9), Lambda(['context', 'x', 'y'], [], 0, Compare(CallFunc(Getattr(Name('x'), 'eval'), [Name('context')], None, None), [('in', CallFunc(Getattr(Name('y'), 'eval'), [Name('context')], None, None))]))], None, None)), (Const('not in'), CallFunc(Name('infix'), [Const(9), Lambda(['context', 'x', 'y'], [], 0, Compare(CallFunc(Getattr(Name('x'), 'eval'), [Name('context')], None, None), [('not in', CallFunc(Getattr(Name('y'), 'eval'), [Name('context')], None, None))]))], None, None)), (Const('='), CallFunc(Name('infix'), [Const(10), Lambda(['context', 'x', 'y'], [], 0, Compare(CallFunc(Getattr(Name('x'), 'eval'), [Name('context')], None, None), [('==', CallFunc(Getattr(Name('y'), 'eval'), [Name('context')], None, None))]))], None, None)), (Const('=='), CallFunc(Name('infix'), [Const(10), Lambda(['context', 'x', 'y'], [], 0, Compare(CallFunc(Getattr(Name('x'), 'eval'), [Name('context')], None, None), [('==', CallFunc(Getattr(Name('y'), 'eval'), [Name('context')], None, None))]))], None, None)), (Const('!='), CallFunc(Name('infix'), [Const(10), Lambda(['context', 'x', 'y'], [], 0, Compare(CallFunc(Getattr(Name('x'), 'eval'), [Name('context')], None, None), [('!=', CallFunc(Getattr(Name('y'), 'eval'), [Name('context')], None, None))]))], None, None)), (Const('>'), CallFunc(Name('infix'), [Const(10), Lambda(['context', 'x', 'y'], [], 0, Compare(CallFunc(Getattr(Name('x'), 'eval'), [Name('context')], None, None), [('>', CallFunc(Getattr(Name('y'), 'eval'), [Name('context')], None, None))]))], None, None)), (Const('>='), CallFunc(Name('infix'), [Const(10), Lambda(['context', 'x', 'y'], [], 0, Compare(CallFunc(Getattr(Name('x'), 'eval'), [Name('context')], None, None), [('>=', CallFunc(Getattr(Name('y'), 'eval'), [Name('context')], None, None))]))], None, None)), (Const('<'), CallFunc(Name('infix'), [Const(10), Lambda(['context', 'x', 'y'], [], 0, Compare(CallFunc(Getattr(Name('x'), 'eval'), [Name('context')], None, None), [('<', CallFunc(Getattr(Name('y'), 'eval'), [Name('context')], None, None))]))], None, None)), (Const('<='), CallFunc(Name('infix'), [Const(10), Lambda(['context', 'x', 'y'], [], 0, Compare(CallFunc(Getattr(Name('x'), 'eval'), [Name('context')], None, None), [('<=', CallFunc(Getattr(Name('y'), 'eval'), [Name('context')], None, None))]))], None, None))]))]))
Module(None, Stmt([Assign([AssName('tried', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('  %s:\n'), Tuple([CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_LABEL'), [Getattr(Name('writer'), 'filename')], None, None)])))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('lazy_number'), [Name('ungettext'), Getattr(Name('six'), 'text_type'), Keyword('singular', Name('singular')), Keyword('plural', Name('plural')), Keyword('number', Name('number'))], None, None))]))
Module(None, Stmt([Assign([AssName('terminal_char', 'OP_ASSIGN')], Const(')'))]))
Module(None, Stmt([Assign([AssName('DEFAULT_PALETTE', 'OP_ASSIGN')], Name('DARK_PALETTE'))]))
Module(None, Stmt([Assign([AssName('fext', 'OP_ASSIGN')], Add((Name('f'), Name('ext'))))]))
Module(None, Stmt([Function(None, '_ipython', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Subscript(Subscript(Name('indexes'), 'OP_APPLY', [Name('column_name')]), 'OP_APPLY', [Const('primary_key')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'localized_fields', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('options'), Const('localized_fields'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssName('match', 'OP_ASSIGN')], CallFunc(Getattr(Name('datetime_re'), 'match'), [Name('value')], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('parts')], None, None), [('>', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('arg'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], CallFunc(Getattr(Name('debug'), 'technical_404_response'), [Name('request'), Name('e')], None, None))]))
Module(None, Stmt([Assign([AssName('hits', 'OP_ASSIGN')], CallFunc(Name('max'), [Const(1), Sub((Getattr(Name('self'), 'count'), Getattr(Name('self'), 'orphans')))], None, None))]))
Module(None, Stmt([Assign([AssName('used', 'OP_ASSIGN')], CallFunc(Getattr(Name('name'), 'pop'), [Const(0)], None, None))]))
Module(None, Stmt([Return(Name('new_class'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'loaded_object_count', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Assign([AssName('memoryview', 'OP_ASSIGN')], Name('memoryview'))]))
Module(None, Stmt([AugAssign(Name('i'), '+=', Const(1))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Getattr(Const(''), 'join'), [GenExpr(GenExprInner(CallFunc(Name('force_text'), [Name('s')], None, None), [GenExprFor(AssName('s', 'OP_ASSIGN'), Name('strings'), [])]))], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'producer', 'length'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('\n'), 'join'), [Name('statements')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('extra_params'), 'OP_ASSIGN', [Const('blank')])], Name('True'))]))
Module(None, Stmt([Assign([AssName('params', 'OP_ASSIGN')], CallFunc(Getattr(Name('conf'), 'copy'), [], None, None))]))
Module(None, Stmt([Function(None, 'incr', ['self', 'key', 'delta', 'version'], [Const(1), Name('None')], 0, None, Stmt([Pass()]))]))
for entry in package_path :
Module(None, Stmt([Assign([AssName('parent', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'parent_name'), 'resolve'), [Name('context')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('self'), Const('_coerce')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of BaseCache must provide a get() method')], None, None), None, None)]))
Module(None, Stmt([Return(Getattr(Name('self'), '__name'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--database'), Keyword('default', Name('DEFAULT_DB_ALIAS')), Keyword('help', Const('Nominates a database to create SQL for. Defaults to the "default" database.'))], None, None))]))
Module(None, Stmt([Return(Name('self'))]))
Module(None, Stmt([Assign([AssName('wrapped_main_func', 'OP_ASSIGN')], CallFunc(Name('check_errors'), [Name('main_func')], None, None))]))
Module(None, Stmt([Function(None, '_i18n_cache_key_suffix', ['request', 'cache_key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('cache_choices', 'OP_ASSIGN')], Name('False'))]))
elif maxsize is None :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('logging'), '_releaseLock'), [], None, None))]))
Module(None, Stmt([Assign([AssName('DEFAULT_LOGGING', 'OP_ASSIGN')], Dict([(Const('version'), Const(1)), (Const('disable_existing_loggers'), Name('False')), (Const('filters'), Dict([(Const('require_debug_false'), Dict([(Const('()'), Const('django.utils.log.RequireDebugFalse'))])), (Const('require_debug_true'), Dict([(Const('()'), Const('django.utils.log.RequireDebugTrue'))]))])), (Const('handlers'), Dict([(Const('console'), Dict([(Const('level'), Const('INFO')), (Const('filters'), List([Const('require_debug_true')])), (Const('class'), Const('logging.StreamHandler'))])), (Const('null'), Dict([(Const('class'), Const('logging.NullHandler'))])), (Const('mail_admins'), Dict([(Const('level'), Const('ERROR')), (Const('filters'), List([Const('require_debug_false')])), (Const('class'), Const('django.utils.log.AdminEmailHandler'))]))])), (Const('loggers'), Dict([(Const('django'), Dict([(Const('handlers'), List([Const('console')]))])), (Const('django.request'), Dict([(Const('handlers'), List([Const('mail_admins')])), (Const('level'), Const('ERROR')), (Const('propagate'), Name('False'))])), (Const('django.security'), Dict([(Const('handlers'), List([Const('mail_admins')])), (Const('level'), Const('ERROR')), (Const('propagate'), Name('False'))])), (Const('py.warnings'), Dict([(Const('handlers'), List([Const('console')]))]))]))]))]))
Module(None, Stmt([Function(None, 'construct_instance', ['form', 'instance', 'fields', 'exclude'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'obj', 'm2m_data'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('f', 'OP_ASSIGN'), Getattr(Name('opts'), 'fields'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Name('truncate_text'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'mail_managers', ['subject', 'message', 'fail_silently', 'connection', 'html_message'], [Name('False'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], Getattr(Name('self'), 'current_token'))]))
Module(None, Stmt([If([(CallFunc(Name('callable'), [Name('current')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('_assertCountEqual', 'OP_ASSIGN')], Const('assertItemsEqual'))]))
Module(None, Stmt([For(AssName('base', 'OP_ASSIGN'), Subscript(Name('bases'), 'OP_APPLY', [Sliceobj([Const(None), Const(None), UnarySub(Const(1))])]), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Getattr(Name('self'), 'dicts')], None, None), [('==', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('imatch'), Stmt([Pass()]))], None)]))
@ register . filter ( "timesince" , is_safe = False )
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('base'), Name('old_method_name'), CallFunc(Name('wrapper'), [Name('new_method')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('Module_six_moves_urllib_robotparser'), '_moved_attributes', 'OP_ASSIGN')], Name('_urllib_robotparser_moved_attributes'))]))
Module(None, Stmt([Assign([AssName('targets', 'OP_ASSIGN')], CallFunc(Name('set'), [GenExpr(GenExprInner(CallFunc(Getattr(Const('.'), 'join'), [Tuple([Name('fixture_name'), Name('suffix')])], None, None), [GenExprFor(AssName('suffix', 'OP_ASSIGN'), Name('suffixes'), [])]))], None, None))]))
Module(None, Stmt([Assign([AssName('utf8_charset', 'OP_ASSIGN')], CallFunc(Getattr(Name('Charset'), 'Charset'), [Const('utf-8')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('compile_func'), '__doc__', 'OP_ASSIGN')], Getattr(Name('func'), '__doc__'))]))
Module(None, Stmt([Function(None, 'receive_data_chunk', ['self', 'raw_data', 'start'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'addr'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('inner_text'), 'append'), [Getattr(Name('child'), 'data')], None, None))]))
Module(None, Stmt([For(AssName('v', 'OP_ASSIGN'), Getattr(Name('self'), 'validators'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'get_connection', ['self', 'fail_silently'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'wrapped', ['args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssName('emitting', 'OP_ASSIGN')], Slice(Name('chunk'), 'OP_APPLY', None, Name('remaining')))]))
except InvalidTemplateLibrary as e :
Module(None, Stmt([Return(Tuple([Name('neg'), Name('res')]))]))
Module(None, Stmt([Function(None, 'add_prefix', ['self', 'prefix'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Compare(Name('event'), [('==', Const('START_ELEMENT'))]), Compare(Getattr(Name('node'), 'nodeName'), [('==', Const('object'))])]), Stmt([Pass()]))], None)]))
except UnicodeDecodeError :
Module(None, Stmt([If([(CallFunc(Name('is_library_missing'), [Name('taglib_module')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.six.moves.urllib.request', [('urlretrieve', None)], 0)]))
Module(None, Stmt([Function(None, 'validate_domain_part', ['self', 'domain_part'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Getattr(Name('self'), 'text'))]))
Module(None, Stmt([If([(Compare(Name('app_config'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('pickle'), 'loads'), [CallFunc(Getattr(Name('zlib'), 'decompress'), [CallFunc(Getattr(Name('f'), 'read'), [], None, None)], None, None)], None, None))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('name', 'OP_ASSIGN'), Name('handlers'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(And([Name('cnt'), Not(Mod((Name('cnt'), Name('grouping'))))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cache'), 'set'), [Name('cache_key'), List(()), Name('cache_timeout')], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Name('avoid_wrapping'), [Mod((Name('name'), Name('count')))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Mod((Const('DELETE FROM %s WHERE cache_key < %%s'), Name('table'))), List([Subscript(CallFunc(Getattr(Name('cursor'), 'fetchone'), [], None, None), 'OP_APPLY', [Const(0)])])], None, None))]))
Module(None, Stmt([Class('EmailBackend', [Name('BaseEmailBackend')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('list'), [CallFunc(Getattr(Name('self'), 'iteritems'), [], None, None)], None, None))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('var'), 'resolve'), [Name('context'), Name('True')], None, None))]))
Module(None, Stmt([Assign([AssName('_locs_', 'OP_ASSIGN')], Name('_globs_'))]))
Module(None, Stmt([Assign([AssTuple([AssName('field_type', 'OP_ASSIGN'), AssName('field_params', 'OP_ASSIGN'), AssName('field_notes', 'OP_ASSIGN')])], CallFunc(Getattr(Name('self'), 'get_field_type'), [Name('connection'), Name('table_name'), Name('row')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'delete_first_token'), [], None, None))]))
Module(None, Stmt([While(Compare(Name('current_len'), [('<=', Name('length'))]), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('timeout'), [('>', Const(2592000))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('signals'), 'request_finished'), 'connect'), [Getattr(Name('cache'), 'close')], None, None))]))
Module(None, Stmt([Assign([AssName('kwargs', 'OP_ASSIGN')], Dict([(Const('form'), Name('form')), (Const('formfield_callback'), Name('formfield_callback')), (Const('formset'), Name('formset')), (Const('extra'), Name('extra')), (Const('can_delete'), Name('can_delete')), (Const('can_order'), Name('can_order')), (Const('fields'), Name('fields')), (Const('exclude'), Name('exclude')), (Const('min_num'), Name('min_num')), (Const('max_num'), Name('max_num')), (Const('widgets'), Name('widgets')), (Const('validate_min'), Name('validate_min')), (Const('validate_max'), Name('validate_max')), (Const('localized_fields'), Name('localized_fields')), (Const('labels'), Name('labels')), (Const('help_texts'), Name('help_texts')), (Const('error_messages'), Name('error_messages'))]))]))
Module(None, Stmt([Function(None, 'tokenize', ['self'], [], 0, None, Stmt([Pass()]))]))
@ property
Module(None, Stmt([Assign([AssName('_tc', 'OP_ASSIGN')], CallFunc(Getattr(Name('http_cookies'), 'SimpleCookie'), [], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('domain', 'OP_ASSIGN'), Name('domains'), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('choice', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Getattr(Name('self'), 'choices')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Mod((Const('DELETE FROM %s WHERE expires < %%s'), Name('table'))), List([CallFunc(Getattr(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'ops'), 'value_to_db_datetime'), [Name('now')], None, None)])], None, None))]))
Module(None, Stmt([Class('DeserializationError', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils.encoding', [('force_str', None)], 0)]))
Module(None, Stmt([If([(And([Not(Name('allow_overwrite')), CallFunc(Getattr(Name('os'), 'access'), [Name('new_file_name'), Getattr(Name('os'), 'F_OK')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid_list')]), Keyword('code', Const('invalid_list'))], None, None), None, None)]))
else :
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(Name('file'), 'read'), [Name('chunk_size')], None, None))]))
Module(None, Stmt([Function(None, 'get_callable', ['lookup_view', 'can_fail'], [Name('False')], 0, None, Stmt([Pass()]))]))
usage . append ( style . NOTICE (  "Note that only Django core commands are listed "  "as settings are not properly configured (error: %s)."  % self . settings_exception ) )
Module(None, Stmt([Return(Name('instance'))]))
Module(None, Stmt([Assign([AssName('number', 'OP_ASSIGN')], Slice(CallFunc(Name('str'), [Name('number')], None, None), 'OP_APPLY', Const(1), None))]))
Module(None, Stmt([Function(None, 'content', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('connection_params'), 'OP_ASSIGN', [Const('timeout')])], Getattr(Name('self'), 'timeout'))]))
from . registry import register , run_checks , tag_exists , Tags
Module(None, Stmt([Function(None, 'get_bytes_from_wsgi', ['environ', 'key', 'default'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('failures'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'rfc2822_date', ['date'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('locale', 'OP_ASSIGN'), Name('locales'), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssTuple([AssName('root', 'OP_ASSIGN'), AssName('dirs', 'OP_ASSIGN'), AssName('files', 'OP_ASSIGN')]), CallFunc(Name('sorted'), [CallFunc(Getattr(Name('os'), 'walk'), [Getattr(Name('self'), 'path')], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'empty_block_tag', ['self', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Mod((CallFunc(Name('ugettext'), [Const('%s TB')], None, None), CallFunc(Name('filesize_number_format'), [Div((Name('bytes'), Name('TB')))], None, None))))]))
Module(None, Stmt([Class('WSGIHandler', [Getattr(Name('base'), 'BaseHandler')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('token', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'next_token'), [], None, None))]))
Module(None, Stmt([Function(None, 'incr', ['self', 'key', 'delta', 'version'], [Const(1), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([With(CallFunc(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'cursor'), [], None, None), AssName('cursor', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('filename'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'validate', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('vary_on', 'OP_ASSIGN')], Tuple(()))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'vals', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('http'), 'QueryDict'), [Name('raw_query_string'), Keyword('encoding', Getattr(Name('self'), '_encoding'))], None, None))]))
Module(None, Stmt([Assign([AssName('subject', 'OP_ASSIGN')], Mod((Const('%s: %s'), Tuple([Getattr(Name('record'), 'levelname'), CallFunc(Getattr(Name('record'), 'getMessage'), [], None, None)]))))]))
Module(None, Stmt([Discard(Yield(CallFunc(Getattr(Name('bit'), 'group'), [Const(0)], None, None)))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('val'), 'encode'), [Const('ascii')], None, None))]))
Module(None, Stmt([Function(None, 'load_template_source', ['self', 'template_name', 'template_dirs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([AugAssign(Name('msg'), '+=', Const(' The domain name provided is not valid according to RFC 1034/1035.'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('o'), 'isoformat'), [], None, None))]))
else :
Module(None, Stmt([Assign([AssName('__setslice__', 'OP_ASSIGN')], Name('complain'))]))
Module(None, Stmt([For(AssName('cache', 'OP_ASSIGN'), CallFunc(Getattr(Name('caches'), 'all'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('file_size', 'OP_ASSIGN')], Getattr(Name('data'), 'size'))]))
Module(None, Stmt([Assign([AssName('LOCK_EX', 'OP_ASSIGN')], Const(2))]))
Module(None, Stmt([Assign([AssName('post', 'OP_ASSIGN')], Const('<could not parse>'))]))
@ stringfilter
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], Mod((Const('%sError importing module %s: "%s"'), Tuple([Name('error_prefix'), Name('dotted_path'), Name('e')]))))]))
Module(None, Stmt([Function(None, '_set_post', ['self', 'post'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('test_runner_class', 'OP_ASSIGN')], CallFunc(Name('get_runner'), [Name('settings'), Getattr(Name('self'), 'test_runner')], None, None))]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], CallFunc(Getattr(Name('message'), 'message'), [], None, None))]))
Module(None, Stmt([For(AssName('choice', 'OP_ASSIGN'), Name('value'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('fs_encoding', 'OP_ASSIGN')], Or([CallFunc(Getattr(Name('sys'), 'getfilesystemencoding'), [], None, None), CallFunc(Getattr(Name('sys'), 'getdefaultencoding'), [], None, None)]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'startElement'), [Name('name'), Name('attrs')], None, None))]))
try :
@ register . filter ( is_safe = True )
Module(None, Stmt([Assign([AssName('dictreprs', 'OP_ASSIGN')], CallFunc(Getattr(Const(', '), 'join'), [GenExpr(GenExprInner(CallFunc(Name('repr'), [Name('d')], None, None), [GenExprFor(AssName('d', 'OP_ASSIGN'), Getattr(Name('self'), 'dicts'), [])]))], None, None))]))
Module(None, Stmt([Class('EmailBackend', [Name('BaseEmailBackend')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('zbuf', 'OP_ASSIGN')], CallFunc(Name('BytesIO'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('six'), 'iteritems'), [CallFunc(Name('super'), [Name('MultiValueDict'), Name('self')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('created_models', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Name('git_changeset'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('locales', 'OP_ASSIGN')], Or([Name('locale'), Name('all_locales')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('JsLexer'), Name('self')], None, None), '__init__'), [Getattr(Name('self'), 'states'), Const('reg')], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('viewname'), Getattr(Name('six'), 'string_types')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('fname', 'OP_ASSIGN'), Name('filelist'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '_is_shorthand_ip', ['ip_str'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(Yield(Name('line')))]))
Module(None, Stmt([Return(And([Compare(Name('form_class'), [('is not', Name('None'))]), And([CallFunc(Name('hasattr'), [Name('form_class'), Const('_meta')], None, None), Or([Compare(Getattr(Getattr(Name('form_class'), '_meta'), 'fields'), [('is not', Name('None'))]), Compare(Getattr(Getattr(Name('form_class'), '_meta'), 'exclude'), [('is not', Name('None'))])])])]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'handle_noargs'), [], None, Name('options')))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'makedirs'), [Name('dirname')], None, None))]))
Module(None, Stmt([Assign([AssName('final_attrs', 'OP_ASSIGN')], CallFunc(Name('dict'), [Getattr(Name('self'), 'attrs'), Keyword('type', Getattr(Name('self'), 'input_type')), Keyword('name', Getattr(Name('self'), 'name')), Keyword('value', Getattr(Name('self'), 'choice_value'))], None, None))]))
Module(None, Stmt([Import([('base64', None)])]))
Module(None, Stmt([Class('ValidationError', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('var_obj'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
@ stringfilter
Module(None, Stmt([Assign([AssName('evens', 'OP_ASSIGN')], CallFunc(Name('sum'), [GenExpr(GenExprInner(CallFunc(Name('int'), [Name('c')], None, None), [GenExprFor(AssName('c', 'OP_ASSIGN'), Subscript(Name('candidate'), 'OP_APPLY', [Sliceobj([UnarySub(Const(1)), Const(None), UnarySub(Const(2))])]), [])]))], None, None))]))
Module(None, Stmt([Function(None, 'media_property', ['cls'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('lang_code'))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'to_python'), [Name('data')], None, None))]))
Module(None, Stmt([Assign([AssName('compare', 'OP_ASSIGN')], Lambda(['self', 'a', 'b'], [], 0, Compare(Name('a'), [('<', Name('b'))])))]))
Module(None, Stmt([Assign([AssName('table_name_filter', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('table_name_filter')], None, None))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Getattr(Name('s'), 'replace'), [Const('\r'), Const('\\r')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'params', 'OP_ASSIGN')], Name('params'))]))
Module(None, Stmt([Raise(CallFunc(Getattr(Name('parser'), 'error_class'), [Const('Unexpected end of expression in if tag.')], None, None), None, None)]))
try :
Module(None, Stmt([Function(None, 'first', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('cache'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('_standard_context_processors'))]))
Module(None, Stmt([Class('StringOrigin', [Name('Origin')], None, Stmt([Pass()]), None)]))
try :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'error_class', 'OP_ASSIGN')], Name('error_class'))]))
Module(None, Stmt([Assign([Subscript(Name('context'), 'OP_ASSIGN', [Getattr(Name('self'), 'var_name')])], List(()))]))
return '%s-%s' % ( self . prefix , field_name ) if self . prefix else field_name
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('args')], None, None), [('==', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('invalid_apps'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('Iterator', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('offset', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'timezone'), 'utcoffset'), [Getattr(Name('self'), 'data')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('_trans'), 'to_locale'), [Name('language')], None, None))]))
Module(None, Stmt([Function(None, 'linebreaks', ['value', 'autoescape'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('optparse', [('OptionParser', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('commands'), 'update'), [DictComp(Name('name'), Getattr(Name('app_config'), 'name'), [ListCompFor(AssName('name', 'OP_ASSIGN'), CallFunc(Name('find_commands'), [Name('path')], None, None), [])])], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Getattr(Name('self'), 'message'), Keyword('code', Getattr(Name('self'), 'code'))], None, None), None, None)]))
except Exception as e :
Module(None, Stmt([Assign([AssName('ch2', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('base', 'OP_ASSIGN')], CallFunc(Name('Media'), [], None, None))]))
Module(None, Stmt([Assign([AssName('as_form', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Return(Slice(CallFunc(Getattr(Name('six'), 'text_type'), [Getattr(Getattr(Name('self'), 'data'), 'year')], None, None), 'OP_APPLY', Const(2), None))]))
Module(None, Stmt([Import([('base64', None)])]))
elif item [ "author_name" ] :
Module(None, Stmt([Return(Name('retval'))]))
except ImportError :
Module(None, Stmt([Function(None, '_make_parser', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'origin', 'OP_ASSIGN')], Name('origin'))]))
Module(None, Stmt([Assign([AssName('file_name', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'IE_sanitize'), [CallFunc(Name('unescape_entities'), [Name('file_name')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('reverse_lazy', 'OP_ASSIGN')], CallFunc(Name('lazy'), [Name('reverse'), Name('str')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('force_text'), [Subscript(Getattr(Name('time'), 'tzname'), 'OP_APPLY', [Name('is_dst')]), Name('DEFAULT_LOCALE_ENCODING')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'set_cookie'), [Name('key'), Keyword('max_age', Const(0)), Keyword('path', Name('path')), Keyword('domain', Name('domain')), Keyword('expires', Const('Thu, 01-Jan-1970 00:00:00 GMT'))], None, None))]))
Module(None, Stmt([If([(And([Compare(Getattr(Name('obj'), 'pk'), [('is', Name('None'))]), CallFunc(Name('hasattr'), [Name('Model'), Const('natural_key')], None, None), CallFunc(Name('hasattr'), [Getattr(Name('Model'), '_default_manager'), Const('get_by_natural_key')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Mod((Const('<%s: %s>'), Tuple([Getattr(Getattr(Name('self'), '__class__'), '__name__'), Name('self')]))))]))
Module(None, Stmt([Assign([AssName('label_for', 'OP_ASSIGN')], Const(''))]))
try :
Module(None, Stmt([Function(None, 'ifequal', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_options', 'OP_ASSIGN')], CallFunc(Getattr(Name('params'), 'get'), [Const('OPTIONS'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'address_family', 'OP_ASSIGN')], Getattr(Name('socket'), 'AF_INET6'))]))
Module(None, Stmt([If([(And([Getattr(Name('settings'), 'USE_X_FORWARDED_HOST'), Compare(Const('HTTP_X_FORWARDED_HOST'), [('in', Getattr(Name('self'), 'META'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(ListComp(Subscript(Getattr(Name('self'), 'forms'), 'OP_APPLY', [Subscript(Name('i'), 'OP_APPLY', [Const(0)])]), [ListCompFor(AssName('i', 'OP_ASSIGN'), Getattr(Name('self'), '_ordering'), [])]))]))
Module(None, Stmt([Function(None, '__nonzero__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(CallFunc(Name('is_valid_ipv6_address'), [Name('ip_str')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('errors'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Return(Name('wrapper'))]))
except ValidationError as e :
Module(None, Stmt([Subscript(Getattr(Name('self'), '_cache'), 'OP_DELETE', [Name('key')])]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Getattr(Name('json'), '__version__'), 'split'), [Const('.')], None, None), [('>=', List([Const('2'), Const('1'), Const('3')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Unable to configure logger %r: %s'), Tuple([Name('name'), Name('e')])))], None, None), None, None)]))
Module(None, Stmt([Class('LoadNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('request_queue_size', 'OP_ASSIGN')], Const(10))]))
Module(None, Stmt([Function(None, 'latest_post_date', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], CallFunc(Name('select_template'), [Name('template_name'), Name('dirs')], None, None))]))
Module(None, Stmt([From('django.db', [('models', None), ('router', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('apps'), 'get_model'), [Name('model_identifier')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('signal'), 'signal'), [Getattr(Name('signal'), 'SIGTTOU'), Name('old_handler')], None, None))]))
Module(None, Stmt([Assign([AssName('print_', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Getattr(Name('moves'), 'builtins'), Const('print'), Name('None')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('opts'), 'model'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'empty_permitted', 'OP_ASSIGN')], Name('empty_permitted'))]))
Module(None, Stmt([From('inspect', [('getargspec', None), ('getcallargs', None)], 0)]))
Module(None, Stmt([If([(Name('cc'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_closable_objects'), 'append'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('__delitem__', 'OP_ASSIGN')], CallFunc(Name('new_method_proxy'), [Getattr(Name('operator'), 'delitem')], None, None))]))
Module(None, Stmt([Assign([AssName('to_unicode', 'OP_ASSIGN')], Lambda(['s'], [], 0, CallFunc(Name('force_text'), [Name('s'), Keyword('strings_only', Name('True'))], None, None)))]))
Module(None, Stmt([Function(None, 'reset', ['self'], [], 0, None, Stmt([Pass()]))]))
except KeyError :
Module(None, Stmt([If([(Getattr(Name('settings'), 'USE_L10N'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Name('domain'), CallFunc(Name('validate_host'), [Name('domain'), Getattr(Name('settings'), 'ALLOWED_HOSTS')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Compare(Name('initial'), [('!=', Name('data'))]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'renderer'), [Name('name'), Name('value'), Name('final_attrs'), Name('choices')], None, None))]))
Module(None, Stmt([Assign([AssName('mime_type', 'OP_ASSIGN')], Const('application/rss+xml; charset=utf-8'))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const("'%s.%s' has more than one ForeignKey to '%s.%s'."), Tuple([Getattr(Getattr(Name('model'), '_meta'), 'app_label'), Getattr(Getattr(Name('model'), '_meta'), 'object_name'), Getattr(Getattr(Name('parent_model'), '_meta'), 'app_label'), Getattr(Getattr(Name('parent_model'), '_meta'), 'object_name')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'form', 'OP_ASSIGN')], Name('form'))]))
Module(None, Stmt([Assign([AssName('nodelist', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'parse'), [Tuple([Const('endautoescape')])], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('empty')]), Keyword('code', Const('empty'))], None, None), None, None)]))
except KeyError :
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'apply_response_fixes'), [Name('request'), Name('response')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Subscript(Name('result_args'), 'OP_APPLY', [Name('i')]), 'append'), [Name('param')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('app_config'), 'models_module'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('value'), [('is not', Name('result'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('BadHeaderError', [Name('ValueError')], None, Stmt([Pass()]), None)]))
except ValidationError :
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('float'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('ASCTIME_DATE', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Mod((Const('^\\w{3} %s %s %s %s$'), Tuple([Name('__M'), Name('__D2'), Name('__T'), Name('__Y')])))], None, None))]))
Module(None, Stmt([Import([('time', None)])]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(CallFunc(Name('conditional_escape'), [Name('sep')], None, None), 'join'), [GenExpr(GenExprInner(CallFunc(Name('format_html'), [Name('format_string')], CallFunc(Name('tuple'), [Name('args')], None, None), None), [GenExprFor(AssName('args', 'OP_ASSIGN'), Name('args_generator'), [])]))], None, None)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('UnlockFileEx'), 'restype', 'OP_ASSIGN')], Name('BOOL'))]))
except AttributeError :
Module(None, Stmt([If([(Compare(Name('action'), [('==', Const('apply_start'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('_meth_self', 'OP_ASSIGN')], Const('__self__'))]))
Module(None, Stmt([Assign([AssName('path_rest', 'OP_ASSIGN')], Slice(Name('root'), 'OP_APPLY', Name('prefix_length'), None))]))
Module(None, Stmt([If([(Name('decompress'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.template.loader', [('BaseLoader', None)], 0)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('rhs'), Name('SafeData')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('iso_input', 'OP_ASSIGN'), CallFunc(Getattr(Name('ISO_INPUT_FORMATS'), 'get'), [Name('format_type'), Tuple(())], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('boundary', 'OP_ASSIGN')], CallFunc(Getattr(Name('boundary'), 'encode'), [Const('ascii')], None, None))]))
Module(None, Stmt([Function(None, 'load_template', ['self', 'template_name', 'template_dirs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('klass'))]))
Module(None, Stmt([Assign([AssName('escapejs', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('escapejs'), Getattr(Name('six'), 'text_type')], None, None))]))
got_request_exception = Signal ( providing_args = [ "request" ] )
Module(None, Stmt([Discard(CallFunc(Getattr(Name('bad_app_labels'), 'add'), [Name('app_label')], None, None))]))
Module(None, Stmt([Assign([AssName('_empty_value', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Return(Name('out'))]))
Module(None, Stmt([Raise(CallFunc(Name('ContentNotRenderedError'), [Const('The response content must be rendered before it can be pickled.')], None, None), None, None)]))
Module(None, Stmt([If([(Not(Name('email_messages')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('VARIABLE_TAG_END', 'OP_ASSIGN')], Const('}}'))]))
Module(None, Stmt([Assign([AssName('m', 'OP_ASSIGN')], CallFunc(Getattr(Name('data'), 'get'), [Mod((Getattr(Name('self'), 'month_field'), Name('name')))], None, None))]))
Module(None, Stmt([Return(Const('UTC'))]))
Module(None, Stmt([Assign([AssName('settingsfile', 'OP_ASSIGN')], CallFunc(Name('upath'), [Getattr(Subscript(Getattr(Name('sys'), 'modules'), 'OP_APPLY', [Getattr(Name('settings'), '__module__')]), '__file__')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('escape'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('integer_types', 'OP_ASSIGN')], Tuple([Name('int'), Name('long')]))]))
Module(None, Stmt([From('django.core.management', [('call_command', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '__class__'), [Name('self')], None, None))]))
Module(None, Stmt([Import([('bpython', None)])]))
else :
Module(None, Stmt([Assign([AssName('script_name', 'OP_ASSIGN')], CallFunc(Name('get_bytes_from_wsgi'), [Name('environ'), Const('SCRIPT_NAME'), Const('')], None, None))]))
Module(None, Stmt([Assign([AssName('expanded_template', 'OP_ASSIGN')], CallFunc(Getattr(Name('path'), 'expanduser'), [Name('template')], None, None))]))
Module(None, Stmt([If([(Compare(Name('tag'), [('not in', Getattr(Name('TemplateTagNode'), 'mapping'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('logging_settings'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('value'), [('is', Name('True'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('make_key', 'OP_ASSIGN')], Name('_make_key'))]))
Module(None, Stmt([Function(None, 'execute', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('datetime', None)])]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'day_none_value', 'OP_ASSIGN')], Tuple([Const(0), Subscript(Name('empty_label'), 'OP_APPLY', [Const(2)])]))]))
Module(None, Stmt([Import([('warnings', None)])]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'setsid'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Getattr(Name('models'), 'signals'), 'post_migrate'), 'send'), [Keyword('sender', Name('app_config')), Keyword('app_config', Name('app_config')), Keyword('verbosity', Name('verbosity')), Keyword('interactive', Name('interactive')), Keyword('using', Name('db'))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'language', 'OP_ASSIGN')], Name('language'))]))
Module(None, Stmt([Function(None, 'build_attrs', ['self', 'extra_attrs', 'kwargs'], [Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(CallFunc(Name('getattr'), [Name('_default'), Name('translation_function')], None, None), [Name('eol_message')], None, None))]))
Module(None, Stmt([If([(And([CallFunc(Name('isinstance'), [Name('widget'), Name('NumberInput')], None, None), Compare(Const('step'), [('not in', Getattr(Name('widget'), 'attrs'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None)], 0)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('rhs'), Name('SafeText')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('interactive'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('URLValidator'), Name('self')], None, None), '__call__'), [Name('value')], None, None))]))
try :
Module(None, Stmt([Assign([AssName('this_year', 'OP_ASSIGN')], Getattr(CallFunc(Getattr(Getattr(Name('datetime'), 'date'), 'today'), [], None, None), 'year'))]))
Module(None, Stmt([For(AssName('hook', 'OP_ASSIGN'), Getattr(Name('sys'), 'path_hooks'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'delete_first_token', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([While(And([Compare(Name('i'), [('<', CallFunc(Name('len'), [Name('subject')], None, None))]), Compare(Subscript(Name('subject'), 'OP_APPLY', [Name('i')]), [('in', Tuple([Const(' '), Const('\t')]))])]), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'max_length'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'set'), [Name('key'), Name('value'), Keyword('timeout', Name('timeout')), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('os'), Const('utime')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('replacement'))]))
except OSError as err :
Module(None, Stmt([Function(None, '_get_val', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('data'), 'OP_ASSIGN', [Getattr(Getattr(Getattr(Name('Model'), '_meta'), 'pk'), 'attname')])], CallFunc(Getattr(Getattr(Getattr(Name('Model'), '_meta'), 'pk'), 'to_python'), [CallFunc(Getattr(Name('node'), 'getAttribute'), [Const('pk')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('emit_post_migrate_signal'), [CallFunc(Name('set'), [Name('all_models')], None, None), Name('verbosity'), Name('interactive'), Name('database')], None, None))]))
Module(None, Stmt([Assign([AssName('hard_coded_bullets_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Mod((Const('((?:<p>(?:%s).*?[a-zA-Z].*?</p>\\s*)+)'), CallFunc(Getattr(Const('|'), 'join'), [GenExpr(GenExprInner(CallFunc(Getattr(Name('re'), 'escape'), [Name('x')], None, None), [GenExprFor(AssName('x', 'OP_ASSIGN'), Name('DOTS'), [])]))], None, None))), Getattr(Name('re'), 'DOTALL')], None, None))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Getattr(Name('references_to_delete'), 'setdefault'), [Getattr(Getattr(Name('f'), 'rel'), 'to'), List(())], None, None), 'append'), [Tuple([Name('model'), Name('f')])], None, None))]))
Module(None, Stmt([Return(Name('j'))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of BaseCache must provide a set() method')], None, None), None, None)]))
Module(None, Stmt([If([(Or([Getattr(Name('settings'), 'USE_I18N'), Getattr(Name('settings'), 'USE_L10N')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('The syncdb command will be removed in Django 1.9'), Name('RemovedInDjango19Warning')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'as_widget'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_assert_mutable'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'remove'), [Name('tmp_path')], None, None))]))
Module(None, Stmt([If([(Or([Not(Name('match')), Not(CallFunc(Getattr(Name('match'), 'group'), [Const(1)], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('initial_forms', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'initial_form_count'), [], None, None))]))
Module(None, Stmt([Assign([AssName('values', 'OP_ASSIGN')], Name('_itervalues'))]))
try :
elif value in ( False , 'False' , '0' ) :
Module(None, Stmt([Assign([AssAttr(Name('klass'), '__unicode__', 'OP_ASSIGN')], Getattr(Name('klass'), '__str__'))]))
else :
Module(None, Stmt([If([(Compare(Subscript(Name('k'), 'OP_APPLY', [Const(1)]), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('path', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('path')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Add((Const('\n'), CallFunc(Getattr(Getattr(Name('self'), 'style'), 'SQL_KEYWORD'), [CallFunc(Getattr(Getattr(Name('connection'), 'ops'), 'end_transaction_sql'), [], None, None)], None, None)))], None, None))]))
Module(None, Stmt([Assign([AssName('all_unique_checks', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))]))
Module(None, Stmt([Assign([AssName('next', 'OP_ASSIGN')], Name('advance_iterator'))]))
Module(None, Stmt([Assign([AssName('related', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('obj'), Getattr(Name('field'), 'name')], None, None))]))
Module(None, Stmt([Function(None, 'o', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Name('answer')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'empty_permitted'), Not(CallFunc(Getattr(Name('self'), 'has_changed'), [], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('idstring', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Return(Const(0))]))
Module(None, Stmt([For(AssName('frag', 'OP_ASSIGN'), Name('name'), Stmt([Pass()]), None)]))
except DatabaseError as e :
Module(None, Stmt([Function(None, 'has_vary_header', ['response', 'header_query'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core.files', [('temp', 'tempfile')], 0)]))
Module(None, Stmt([From('decimal', [('Decimal', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Getattr(Name('models'), 'signals'), 'pre_migrate'), 'send'), [Keyword('sender', Name('app_config')), Keyword('app_config', Name('app_config')), Keyword('verbosity', Name('verbosity')), Keyword('interactive', Name('interactive')), Keyword('using', Name('db'))], None, None))]))
Module(None, Stmt([Function(None, 'render_value_in_context', ['value', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'verbosity', 'OP_ASSIGN')], CallFunc(Name('int'), [CallFunc(Getattr(Name('options'), 'get'), [Const('verbosity')], None, None)], None, None))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Function(None, 'deserialize', ['format', 'stream_or_string', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'configurator'), 'convert'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('_urllib_parse_moved_attributes', 'OP_ASSIGN')], List([CallFunc(Name('MovedAttribute'), [Const('ParseResult'), Const('urlparse'), Const('urllib.parse')], None, None), CallFunc(Name('MovedAttribute'), [Const('SplitResult'), Const('urlparse'), Const('urllib.parse')], None, None), CallFunc(Name('MovedAttribute'), [Const('parse_qs'), Const('urlparse'), Const('urllib.parse')], None, None), CallFunc(Name('MovedAttribute'), [Const('parse_qsl'), Const('urlparse'), Const('urllib.parse')], None, None), CallFunc(Name('MovedAttribute'), [Const('urldefrag'), Const('urlparse'), Const('urllib.parse')], None, None), CallFunc(Name('MovedAttribute'), [Const('urljoin'), Const('urlparse'), Const('urllib.parse')], None, None), CallFunc(Name('MovedAttribute'), [Const('urlparse'), Const('urlparse'), Const('urllib.parse')], None, None), CallFunc(Name('MovedAttribute'), [Const('urlsplit'), Const('urlparse'), Const('urllib.parse')], None, None), CallFunc(Name('MovedAttribute'), [Const('urlunparse'), Const('urlparse'), Const('urllib.parse')], None, None), CallFunc(Name('MovedAttribute'), [Const('urlunsplit'), Const('urlparse'), Const('urllib.parse')], None, None), CallFunc(Name('MovedAttribute'), [Const('quote'), Const('urllib'), Const('urllib.parse')], None, None), CallFunc(Name('MovedAttribute'), [Const('quote_plus'), Const('urllib'), Const('urllib.parse')], None, None), CallFunc(Name('MovedAttribute'), [Const('unquote'), Const('urllib'), Const('urllib.parse')], None, None), CallFunc(Name('MovedAttribute'), [Const('unquote_plus'), Const('urllib'), Const('urllib.parse')], None, None), CallFunc(Name('MovedAttribute'), [Const('urlencode'), Const('urllib'), Const('urllib.parse')], None, None), CallFunc(Name('MovedAttribute'), [Const('splitquery'), Const('urllib'), Const('urllib.parse')], None, None)]))]))
Module(None, Stmt([Return(Const(0))]))
try :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'index', 'OP_ASSIGN')], Name('index'))]))
elif str ( level ) == level :
Module(None, Stmt([If([(Compare(Getattr(Name('command'), 'verbosity'), [('>', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.core.servers.fastcgi', [('FASTCGI_OPTIONS', None)], 0)]))
Module(None, Stmt([Class('AutoEscapeControlNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(List(()))]))
Module(None, Stmt([If([(And([Not(CallFunc(Getattr(CallFunc(Name('normcase'), [Name('final_path')], None, None), 'startswith'), [CallFunc(Name('normcase'), [Add((Name('base_path'), Name('sep')))], None, None)], None, None)), Compare(CallFunc(Name('normcase'), [Name('final_path')], None, None), [('!=', CallFunc(Name('normcase'), [Name('base_path')], None, None))]), Compare(CallFunc(Name('dirname'), [CallFunc(Name('normcase'), [Name('base_path')], None, None)], None, None), [('!=', CallFunc(Name('normcase'), [Name('base_path')], None, None))])]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([Subscript(Name('field_params'), 'OP_ASSIGN', [Const('max_digits')])], Subscript(Name('row'), 'OP_APPLY', [Const(4)]))]))
Module(None, Stmt([Return(Name('EndToken'))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const("Don't mix *args and **kwargs in call to reverse()!")], None, None), None, None)]))
@ register . filter ( is_safe = True , needs_autoescape = True )
Module(None, Stmt([Class('HttpResponseServerError', [Name('HttpResponse')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('_entity_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('&(#?[xX]?(?:[0-9a-fA-F]+|\\w{1,8}));')], None, None))]))
Module(None, Stmt([Assign([AssName('questioner', 'OP_ASSIGN')], CallFunc(Name('InteractiveMigrationQuestioner'), [], None, None))]))
Module(None, Stmt([If([(Compare(Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('language')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'META'), 'OP_ASSIGN', [Const('SCRIPT_NAME')])], Name('script_name'))]))
Module(None, Stmt([Assign([AssName('builtins', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'handle_file_complete', ['self', 'old_field_name', 'counters'], [], 0, None, Stmt([Pass()]))]))
except ValueError :
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Function(None, 'colorize', ['text', 'opts', 'kwargs'], [Const(''), Tuple(())], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Const(None))]))
except NotImplementedError :
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'get'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
elif len ( app_labels ) > 1 :
Module(None, Stmt([Function(None, '_init_translation_catalog', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Function(None, 'to_language', ['locale'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__exit__', ['self', 'exc_type', 'exc_value', 'traceback'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_ordering'), 'append'), [Tuple([Name('i'), Subscript(Getattr(Name('form'), 'cleaned_data'), 'OP_APPLY', [Name('ORDERING_FIELD_NAME')])])], None, None))]))
Module(None, Stmt([Return(Getattr(CallFunc(Getattr(CallFunc(Getattr(Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_default_manager'), 'db_manager'), [Name('db')], None, None), 'get_by_natural_key'), [], Name('value'), None), 'pk'))]))
Module(None, Stmt([Function(None, 'stringfilter', ['func'], [], 0, None, Stmt([Pass()]))]))
elif field in self . _errors . keys ( ) :
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'match'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'make_middleware_decorator', ['middleware_class'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('closed', 'OP_ASSIGN')], CallFunc(Name('property'), [Name('_get_closed')], None, None))]))
Module(None, Stmt([If([(And([Name('now'), Not(CallFunc(Name('isinstance'), [Name('now'), Getattr(Name('datetime'), 'datetime')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('response'), 'has_header'), [Const('Cache-Control')], None, None), Stmt([Pass()]))], None)]))
run_checks = registry . run_checks
Module(None, Stmt([Return(Name('state'))]))
Module(None, Stmt([If([(Compare(Name('field'), [('in', Getattr(Name('self'), 'errors'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('pending_references', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('IntegerField'), Name('self')], None, None), 'to_python'), [Name('value')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Getattr(Name('self'), 'message'), Keyword('code', Getattr(Name('self'), 'code')), Keyword('params', Name('params'))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('push', 'OP_ASSIGN'), AssName('block', 'OP_ASSIGN')], CallFunc(Getattr(Name('block_context'), 'pop'), [Getattr(Name('self'), 'name')], None, None))]))
Module(None, Stmt([Import([('bz2', None)])]))
Module(None, Stmt([Assign([AssName('pk_value', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([With(CallFunc(Name('open'), [Name('old_path'), Const('rb')], None, None), AssName('template_file', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'filter', ['self', 'name', 'filter_func', 'flags'], [Name('None'), Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([From('threading', [('RLock', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('new_class'), 'base_fields', 'OP_ASSIGN')], Name('declared_fields'))]))
Module(None, Stmt([If([(Compare(Name('name'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('dec'))]))
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'get_response'), [Name('request')], None, None))]))
Module(None, Stmt([Continue()]))
try :
Module(None, Stmt([Return(Mod((Const('%s_month'), Name('id_'))))]))
Module(None, Stmt([From('django.utils.html', [('format_html', None), ('format_html_join', None), ('escape', None)], 0)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'directory_permissions_mode'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
@ property
else :
Module(None, Stmt([Function(None, 'prepare_value', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'tag_exists', ['self', 'tag'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'resolve', ['self', 's'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('known_models', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'load_initial_data'), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'loaded_object_count'), [('>', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Assign([AssName('_fields_', 'OP_ASSIGN')], List([Tuple([Const('Offset'), Name('DWORD')]), Tuple([Const('OffsetHigh'), Name('DWORD')])]))]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([If([(Compare(Subscript(Name('item'), 'OP_APPLY', [Const('enclosure')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Or([Compare(Getattr(Name('child'), 'nodeType'), [('==', Getattr(Name('child'), 'TEXT_NODE'))]), Compare(Getattr(Name('child'), 'nodeType'), [('==', Getattr(Name('child'), 'CDATA_SECTION_NODE'))])]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([If([(Compare(Name('num'), [('>', Getattr(Name('self'), '_max_entries'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('flags'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_text_words'), [Name('length'), Name('truncate')], None, None))]))
except ( ValueError , TypeError ) :
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(CallFunc(Name('_is_shorthand_ip'), [Name('ip_str')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('form'), 'save_m2m', 'OP_ASSIGN')], Name('save_m2m'))]))
Module(None, Stmt([Assign([AssName('default_error_messages', 'OP_ASSIGN')], Dict([(Const('invalid'), CallFunc(Name('_'), [Const('Enter a valid URL.')], None, None))]))]))
try :
Module(None, Stmt([Function(None, 'get_language_bidi', (), (), 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([If([(Compare(Name('option'), [('==', Const('with'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const('Negative base36 conversion input.')], None, None), None, None)]))
Module(None, Stmt([Return(CallFunc(Name('ord'), [Subscript(Name('buf'), 'OP_APPLY', [Name('i')])], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'token_type', 'contents'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('ResolverMatch'), [Getattr(Name('sub_match'), 'func'), Getattr(Name('sub_match'), 'args'), Name('sub_match_dict'), Getattr(Name('sub_match'), 'url_name'), Or([Getattr(Name('self'), 'app_name'), Getattr(Name('sub_match'), 'app_name')]), Add((List([Getattr(Name('self'), 'namespace')]), Getattr(Name('sub_match'), 'namespaces')))], None, None))]))
Module(None, Stmt([Assign([AssName('context_extras', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'attrs', 'choices'], [Name('None'), Tuple(())], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('ext_list', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('__contains__', 'OP_ASSIGN')], Name('has_header'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'subject', 'body', 'from_email', 'to', 'bcc', 'connection', 'attachments', 'headers', 'alternatives', 'cc'], [Const(''), Const(''), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'load', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Name('check_for_migrations'), [Name('app_config'), Name('connection')], None, None))]))
Module(None, Stmt([With(CallFunc(Name('open'), [Name('fn'), Const('rb')], None, None), AssName('f', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
if '@' in addr :
Module(None, Stmt([Assign([AssName('field_dict', 'OP_ASSIGN')], CallFunc(Name('OrderedDict'), [ListComp(Tuple([Name('f'), CallFunc(Getattr(Name('field_dict'), 'get'), [Name('f')], None, None)]), [ListCompFor(AssName('f', 'OP_ASSIGN'), Name('fields'), [ListCompIf(And([Or([Not(Name('exclude')), And([Name('exclude'), Compare(Name('f'), [('not in', Name('exclude'))])])]), Compare(Name('f'), [('not in', Name('ignored'))])]))])])], None, None))]))
Module(None, Stmt([Return(List([Const(''), Const('    class Meta:'), Const('        managed = False'), Mod((Const("        db_table = '%s'"), Name('table_name')))]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_validate_unique', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Function(None, 'int_to_base36', ['i'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Name('ensure_echo_on'), [], None, None))]))
Module(None, Stmt([Function(None, 'split_url', ['url'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('wrapped_callback', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_view_atomic'), [Name('callback')], None, None))]))
elif simple_url_2_re . match ( middle ) :
Module(None, Stmt([If([(Compare(Name('obj_pk'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Slice(Name('bits'), 'OP_DELETE', None, Const(3))]))
Module(None, Stmt([Assign([AssName('command_dir', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('management_dir'), Const('commands')], None, None))]))
Module(None, Stmt([For(AssName('ext', 'OP_ASSIGN'), Name('pathext'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'META', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([For(AssTuple([AssName('dirpath', 'OP_ASSIGN'), AssName('dirnames', 'OP_ASSIGN'), AssName('filenames', 'OP_ASSIGN')]), CallFunc(Getattr(Name('os'), 'walk'), [Name('ldir')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Getattr(Name('self'), 'form'), 'errors'), 'get'), [Getattr(Name('self'), 'name'), CallFunc(Getattr(Getattr(Name('self'), 'form'), 'error_class'), [], None, None)], None, None))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), '_mutable')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('PALETTES', 'OP_ASSIGN')], Dict([(Name('NOCOLOR_PALETTE'), Dict([(Const('ERROR'), Dict(())), (Const('WARNING'), Dict(())), (Const('NOTICE'), Dict(())), (Const('SQL_FIELD'), Dict(())), (Const('SQL_COLTYPE'), Dict(())), (Const('SQL_KEYWORD'), Dict(())), (Const('SQL_TABLE'), Dict(())), (Const('HTTP_INFO'), Dict(())), (Const('HTTP_SUCCESS'), Dict(())), (Const('HTTP_REDIRECT'), Dict(())), (Const('HTTP_NOT_MODIFIED'), Dict(())), (Const('HTTP_BAD_REQUEST'), Dict(())), (Const('HTTP_NOT_FOUND'), Dict(())), (Const('HTTP_SERVER_ERROR'), Dict(())), (Const('MIGRATE_HEADING'), Dict(())), (Const('MIGRATE_LABEL'), Dict(())), (Const('MIGRATE_SUCCESS'), Dict(())), (Const('MIGRATE_FAILURE'), Dict(()))])), (Name('DARK_PALETTE'), Dict([(Const('ERROR'), Dict([(Const('fg'), Const('red')), (Const('opts'), Tuple([Const('bold')]))])), (Const('WARNING'), Dict([(Const('fg'), Const('yellow')), (Const('opts'), Tuple([Const('bold')]))])), (Const('NOTICE'), Dict([(Const('fg'), Const('red'))])), (Const('SQL_FIELD'), Dict([(Const('fg'), Const('green')), (Const('opts'), Tuple([Const('bold')]))])), (Const('SQL_COLTYPE'), Dict([(Const('fg'), Const('green'))])), (Const('SQL_KEYWORD'), Dict([(Const('fg'), Const('yellow'))])), (Const('SQL_TABLE'), Dict([(Const('opts'), Tuple([Const('bold')]))])), (Const('HTTP_INFO'), Dict([(Const('opts'), Tuple([Const('bold')]))])), (Const('HTTP_SUCCESS'), Dict(())), (Const('HTTP_REDIRECT'), Dict([(Const('fg'), Const('green'))])), (Const('HTTP_NOT_MODIFIED'), Dict([(Const('fg'), Const('cyan'))])), (Const('HTTP_BAD_REQUEST'), Dict([(Const('fg'), Const('red')), (Const('opts'), Tuple([Const('bold')]))])), (Const('HTTP_NOT_FOUND'), Dict([(Const('fg'), Const('yellow'))])), (Const('HTTP_SERVER_ERROR'), Dict([(Const('fg'), Const('magenta')), (Const('opts'), Tuple([Const('bold')]))])), (Const('MIGRATE_HEADING'), Dict([(Const('fg'), Const('cyan')), (Const('opts'), Tuple([Const('bold')]))])), (Const('MIGRATE_LABEL'), Dict([(Const('opts'), Tuple([Const('bold')]))])), (Const('MIGRATE_SUCCESS'), Dict([(Const('fg'), Const('green')), (Const('opts'), Tuple([Const('bold')]))])), (Const('MIGRATE_FAILURE'), Dict([(Const('fg'), Const('red')), (Const('opts'), Tuple([Const('bold')]))]))])), (Name('LIGHT_PALETTE'), Dict([(Const('ERROR'), Dict([(Const('fg'), Const('red')), (Const('opts'), Tuple([Const('bold')]))])), (Const('WARNING'), Dict([(Const('fg'), Const('yellow')), (Const('opts'), Tuple([Const('bold')]))])), (Const('NOTICE'), Dict([(Const('fg'), Const('red'))])), (Const('SQL_FIELD'), Dict([(Const('fg'), Const('green')), (Const('opts'), Tuple([Const('bold')]))])), (Const('SQL_COLTYPE'), Dict([(Const('fg'), Const('green'))])), (Const('SQL_KEYWORD'), Dict([(Const('fg'), Const('blue'))])), (Const('SQL_TABLE'), Dict([(Const('opts'), Tuple([Const('bold')]))])), (Const('HTTP_INFO'), Dict([(Const('opts'), Tuple([Const('bold')]))])), (Const('HTTP_SUCCESS'), Dict(())), (Const('HTTP_REDIRECT'), Dict([(Const('fg'), Const('green')), (Const('opts'), Tuple([Const('bold')]))])), (Const('HTTP_NOT_MODIFIED'), Dict([(Const('fg'), Const('green'))])), (Const('HTTP_BAD_REQUEST'), Dict([(Const('fg'), Const('red')), (Const('opts'), Tuple([Const('bold')]))])), (Const('HTTP_NOT_FOUND'), Dict([(Const('fg'), Const('red'))])), (Const('HTTP_SERVER_ERROR'), Dict([(Const('fg'), Const('magenta')), (Const('opts'), Tuple([Const('bold')]))])), (Const('MIGRATE_HEADING'), Dict([(Const('fg'), Const('cyan')), (Const('opts'), Tuple([Const('bold')]))])), (Const('MIGRATE_LABEL'), Dict([(Const('opts'), Tuple([Const('bold')]))])), (Const('MIGRATE_SUCCESS'), Dict([(Const('fg'), Const('green')), (Const('opts'), Tuple([Const('bold')]))])), (Const('MIGRATE_FAILURE'), Dict([(Const('fg'), Const('red')), (Const('opts'), Tuple([Const('bold')]))]))]))]))]))
Module(None, Stmt([Assign([AssName('fields', 'OP_ASSIGN')], Getattr(Name('new_class'), 'declared_fields'))]))
Module(None, Stmt([Assign([Subscript(Name('memo'), 'OP_ASSIGN', [CallFunc(Name('id'), [Name('self')], None, None)])], Name('result'))]))
Module(None, Stmt([Assert(Compare(Getattr(Name('token'), 'contents'), [('==', Const('endif'))]), None)]))
Module(None, Stmt([Assign([Subscript(Name('self'), 'OP_ASSIGN', [Name('key')])], Name('result'))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Return(Dict(()))]))
Module(None, Stmt([Discard(Yield(Const('#')))]))
Module(None, Stmt([If([(Compare(Name('name'), [('in', Getattr(Name('lib'), 'filters'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('encoding', 'OP_ASSIGN')], Const('ascii'))]))
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('SafeBytes'), Name('self')], None, None), '__add__'), [Name('rhs')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('DebugNode'), [], None, None))]))
elif len ( key ) == 1 and type ( key [ 0 ] ) in fasttypes :
Module(None, Stmt([Return(Name('response'))]))
Module(None, Stmt([Class('Deserializer', [Getattr(Name('base'), 'Deserializer')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'old_timezone'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('BASE56_ALPHABET', 'OP_ASSIGN')], Const('23456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnpqrstuvwxyz'))]))
Module(None, Stmt([Function(None, '_parse_date_fmt', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('obj', 'OP_ASSIGN'), CallFunc(Name('PythonDeserializer'), [CallFunc(Getattr(Name('yaml'), 'load'), [Name('stream'), Keyword('Loader', Name('SafeLoader'))], None, None)], None, Name('options')), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Getattr(Name('self'), '_upload_handlers'))]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'addr', 'OP_ASSIGN'), AssName('_ipv4', 'OP_ASSIGN'), AssName('_ipv6', 'OP_ASSIGN'), AssName('_fqdn', 'OP_ASSIGN'), AssAttr(Name('self'), 'port', 'OP_ASSIGN')])], CallFunc(Getattr(Name('m'), 'groups'), [], None, None))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Import([('binascii', None)])]))
Module(None, Stmt([Function(None, '__init__', ['self', 'stream', 'boundary'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([With(Name('lock'), None, Stmt([Pass()]))]))
Module(None, Stmt([While(Compare(Name('ch'), [('!=', Name('terminal_char'))]), Stmt([Pass()]), None)]))
@ stringfilter
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Name('logging'), 'Filter'), [Name('name')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'target', 'expression', 'var_name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'parse_args', ['self', 'args', 'namespace'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('codecs', None)])]))
Module(None, Stmt([Assign([AssName('_len', 'OP_ASSIGN')], Name('len'))]))
Module(None, Stmt([If([(Compare(Name('current_len'), [('<=', Name('length'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('field_name', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('field_name'), Name('encoding'), Keyword('errors', Const('replace'))], None, None))]))
Module(None, Stmt([If([(Compare(Const('noreset'), [('not in', Name('opts'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'sign', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('view'))]))
Module(None, Stmt([Function(None, 'find_files', ['self', 'root'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('cmd'), 'endswith'), [Name('ext')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('k', 'OP_ASSIGN')], CallFunc(Getattr(Name('match'), 'end'), [], None, None))]))
Module(None, Stmt([Assign([AssName('unused_char', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), '_stream'), 'read'), [Const(1)], None, None))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'tags', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'fed'), 'append'), [Mod((Const('&%s;'), Name('name')))], None, None))]))
Module(None, Stmt([Assign([AssName('cycle_iter', 'OP_ASSIGN')], Subscript(Getattr(Name('context'), 'render_context'), 'OP_APPLY', [Name('self')]))]))
Module(None, Stmt([Assign([AssName('matches', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([For(AssName('line', 'OP_ASSIGN'), CallFunc(Getattr(Name('self'), 'handle_inspection'), [Name('options')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], CallFunc(Name('middleware_method'), [Name('request'), Name('e')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('DjangoSafeDumper'), 'add_representer'), [Getattr(Name('decimal'), 'Decimal'), Getattr(Name('DjangoSafeDumper'), 'represent_decimal')], None, None))]))
Module(None, Stmt([Assign([AssName('WSGIServer', 'OP_ASSIGN')], Getattr(Name('module'), 'WSGIServer'))]))
else :
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Name('str'), [CallFunc(Name('int'), [CallFunc(Name('round'), [Name('ratio')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'initial', 'OP_ASSIGN')], Or([Name('initial'), Dict(())]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'dup2'), [CallFunc(Getattr(Name('so'), 'fileno'), [], None, None), CallFunc(Getattr(Getattr(Name('sys'), 'stdout'), 'fileno'), [], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('field_notes'), 'append'), [Const('max_digits and decimal_places have been guessed, as this database handles decimal fields as float')], None, None))]))
Module(None, Stmt([If([(Compare(Name('max_value'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('InvalidTemplateLibrary', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('email_message'), 'recipients'), [], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '__copy__'), [], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'basename'), [Name('candidate')], None, None), [('in', Name('targets'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('self'), 'to_python'), [Name('value')], None, None), 'strip'), [], None, None))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'coerce', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('coerce'), Lambda(['val'], [], 0, Name('val'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(Slice(Name('s'), 'OP_APPLY', Const(1), UnarySub(Const(1))), 'replace'), [Mod((Const('\\%s'), Name('quote'))), Name('quote')], None, None), 'replace'), [Const('\\\\'), Const('\\')], None, None))]))
Module(None, Stmt([Assign([AssName('validate_slug', 'OP_ASSIGN')], CallFunc(Name('RegexValidator'), [Name('slug_re'), CallFunc(Name('_'), [Const("Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.")], None, None), Const('invalid')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_createdir'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('field_params'), 'update'), [Name('new_params')], None, None))]))
Module(None, Stmt([Return(Name('self'))]))
Module(None, Stmt([Assign([AssName('errors', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Import([('django.core.checks.compatibility.django_1_7_0', None)])]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("Conflicting migrations detected (%s).\nTo fix them run 'python manage.py makemigrations --merge'"), Name('name_str')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('style_func', 'OP_ASSIGN')], Subscript(ListComp(Name('f'), [ListCompFor(AssName('f', 'OP_ASSIGN'), Tuple([Name('style_func'), Getattr(Name('self'), 'style_func'), Lambda(['x'], [], 0, Name('x'))]), [ListCompIf(Compare(Name('f'), [('is not', Name('None'))]))])]), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'start_serialization'), [], None, None))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'active_writers', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Assign([AssName('string_concat', 'OP_ASSIGN')], CallFunc(Name('lazy'), [Name('_string_concat'), Getattr(Name('six'), 'text_type')], None, None))]))
Module(None, Stmt([Assign([AssName('template_with_initial', 'OP_ASSIGN')], Const('%(initial_text)s: %(initial)s %(clear_template)s<br />%(input_text)s: %(input)s'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'startElement'), [Const('object'), Dict(())], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_ordering'), 'sort'), [Keyword('key', Name('compare_ordering_key'))], None, None))]))
Module(None, Stmt([Function(None, '__enter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Const('_'), [('in', Name('locale'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('SimpleCookie', 'OP_ASSIGN')], Getattr(Name('http_cookies'), 'SimpleCookie'))]))
Module(None, Stmt([Assign([AssName('num', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Function(None, 'root_attributes', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('InlineForeignKeyField'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('context'), 'dicts'), 'append'), [Name('self')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'table', 'params'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('msg'), 'OP_ASSIGN', [Const('To')])], CallFunc(Getattr(Getattr(Name('self'), 'extra_headers'), 'get'), [Const('To'), CallFunc(Getattr(Const(', '), 'join'), [Getattr(Name('self'), 'to')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'render_js', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Runs a development server with data from the given fixture(s).'))]))
Module(None, Stmt([Return(CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Name('k'), CallFunc(Name('repr'), [Name('v')], None, None)]), [GenExprFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('module'), '__dict__'), 'items'), [], None, None), [GenExprIf(Not(CallFunc(Name('omittable'), [Name('k')], None, None)))])]))], None, None))]))
Module(None, Stmt([Assign([AssName('handler', 'OP_ASSIGN')], CallFunc(Name('SimplerXMLGenerator'), [Name('outfile'), Name('encoding')], None, None))]))
Module(None, Stmt([Function(None, '__delitem__', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('unittest2', [('*', None)], 0)]))
Module(None, Stmt([Function(None, 'handle', ['self', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Name('locale_dir')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'append'), [Name('ch')], None, None))]))
Module(None, Stmt([From('django.utils.safestring', [('mark_safe', None), ('SafeData', None)], 0)]))
Module(None, Stmt([Function(None, 'create_var', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('punctuation', 'OP_ASSIGN'), Name('TRAILING_PUNCTUATION'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'write', ['self', 'outfile', 'encoding'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('expanded_template'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('path_info'), 'decode'), [Name('UTF_8')], None, None))]))
Module(None, Stmt([Assign([AssName('re_chars', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('<.*?>|(.)'), Bitor([Getattr(Name('re'), 'U'), Getattr(Name('re'), 'S')])], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'max_width', 'OP_ASSIGN')], Name('max_width'))]))
Module(None, Stmt([Function(None, 'handle', ['self', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'reverse', ['self', 'lookup_view', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of Deserializer must provide a __next__() method')], None, None), None, None)]))
Module(None, Stmt([Function(None, '_BaseCookie__set', ['self', 'key', 'real_value', 'coded_value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('post', 'OP_ASSIGN')], Const('<could not parse>'))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of BaseCommand must provide a handle() method')], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'language'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(Name('etags')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_iteritems', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'render', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('filelist', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Getattr(Name('self'), '_dir'), Name('fname')], None, None), [ListCompFor(AssName('fname', 'OP_ASSIGN'), CallFunc(Getattr(Name('glob'), 'glob1'), [Getattr(Name('self'), '_dir'), Mod((Const('*%s'), Getattr(Name('self'), 'cache_suffix')))], None, None), [])]))]))
Module(None, Stmt([Function(None, 'resolve_expression', ['self', 'obj', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'regex', 'callback', 'default_args', 'name'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('background', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Subscript(Name('color_names'), 'OP_APPLY', [Name('x')]), Mod((Const('4%s'), Name('x')))]), [GenExprFor(AssName('x', 'OP_ASSIGN'), CallFunc(Name('range'), [Const(8)], None, None), [])]))], None, None))]))
Module(None, Stmt([For(AssName('post_callback', 'OP_ASSIGN'), Getattr(Name('self'), '_post_render_callbacks'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'request', 'template', 'context', 'content_type', 'status', 'current_app'], [Name('None'), Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Mod((Const('%s.%s'), Tuple([Slice(Name('package'), 'OP_APPLY', None, Name('dot')), Name('name')]))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--fake'), Keyword('action', Const('store_true')), Keyword('dest', Const('fake')), Keyword('default', Name('False')), Keyword('help', Const('Mark migrations as run without actually running them'))], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_size'))]))
else :
Module(None, Stmt([If([(Compare(Name('name'), [('not in', Name('data'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('self'))]))
Module(None, Stmt([Assign([AssName('s_len', 'OP_ASSIGN')], Const(0))]))
@ contextlib . contextmanager
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Name('ugettext'), [Name('msg_with_ctxt')], None, None))]))
Module(None, Stmt([Assign([AssName('_supported', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'characters'), [CallFunc(Name('smart_text'), [Name('key_value')], None, None)], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('formatdate'), [Name('epoch_seconds'), Keyword('usegmt', Name('True'))], None, None))]))
Module(None, Stmt([If([(Not(Name('_cookie_allows_colon_in_names')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('var_obj', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Name('Node'), [Keyword('connector', Getattr(Name('self'), 'connector')), Keyword('negated', Getattr(Name('self'), 'negated'))], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Return(CallFunc(Name('WSGIHandler'), [], None, None))]))
Module(None, Stmt([Function(None, 'media', ['request'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Pass()]))
Module(None, Stmt([Class('SafeMIMEMultipart', [Name('MIMEMixin'), Name('MIMEMultipart')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('old_field_name', 'OP_ASSIGN')], Name('field_name'))]))
Module(None, Stmt([If([(Name('size'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('is_protected_type'), [Name('value')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('field_type'), [('==', Const('AutoField('))]), Stmt([Pass()]))], None)]))
_BASE64_DECODE_ERROR = TypeError if six . PY2 else binascii . Error
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(Name('self'), 'split_leading_dir'), [Name('name')], None, None), 'OP_APPLY', [Const(1)]))]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'msg', 'OP_ASSIGN')], Name('msg'))]))
Module(None, Stmt([Assign([AssName('overlapped', 'OP_ASSIGN')], CallFunc(Name('OVERLAPPED'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('MovedAttribute'), Name('self')], None, None), '__init__'), [Name('name')], None, None))]))
except ( ValueError , TypeError ) :
try :
Module(None, Stmt([For(AssName('middleware_method', 'OP_ASSIGN'), Getattr(Name('self'), '_request_middleware'), Stmt([Pass()]), None)]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'name', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_encoding', 'OP_ASSIGN')], Or([Name('encoding'), Getattr(Name('settings'), 'DEFAULT_CHARSET')]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_content_length'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('reduce'), [Getattr(Name('operator'), 'add'), CallFunc(Getattr(CallFunc(Name('dict'), [Name('self')], None, None), 'values'), [], None, None)], None, None))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('obj'), 'delete'), [], None, None))]))
Module(None, Stmt([Assign([AssName('buffer_types', 'OP_ASSIGN')], Tuple([Name('bytearray'), Name('memoryview')]))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Name('b64_decode'), [Name('base64d')], None, None))]))
Module(None, Stmt([If([(Name('out_log'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Name('bytes_to_text'), [Name('key'), Getattr(Name('self'), 'encoding')], None, None))]))
Module(None, Stmt([Assign([AssName('filename', 'OP_ASSIGN')], Getattr(Name('ev'), 'filename'))]))
Module(None, Stmt([Subscript(Getattr(Name('form'), 'cleaned_data'), 'OP_DELETE', [Name('field')])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('to_delete'), 'add'), [Name('model')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('link'), Subscript(Name('item'), 'OP_APPLY', [Const('link')])], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Name('logging'), 'Formatter'), [Name('fmt'), Name('dfmt')], None, None))]))
Module(None, Stmt([Return(Name('translation'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'year_none_value', 'OP_ASSIGN')], Tuple([Const(0), Subscript(Name('empty_label'), 'OP_APPLY', [Const(0)])]))]))
Module(None, Stmt([From('django.db.migrations.executor', [('MigrationExecutor', None)], 0)]))
Module(None, Stmt([Assign([AssName('path', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'path'), [Name('path')], None, None))]))
Module(None, Stmt([Function(None, 'get_standard_processors', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('upto', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Assign([AssName('default', 'OP_ASSIGN')], Const('DEFAULT'))]))
Module(None, Stmt([If([(Not(Name('template_name_list')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('ContextDict'), [Name('self')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Function(None, 'invalid_block_tag', ['self', 'token', 'command', 'parse_until'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'validate', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([AugAssign(Name('field_type'), '+=', Const('('))]))
Module(None, Stmt([Return(Compare(Subscript(Getattr(Name('sys'), 'modules'), 'OP_APPLY', [Name('name')]), [('is not', Name('None'))]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('attr'), Name('MovedModule')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('k', 'OP_ASSIGN')], Subscript(Name('item'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('app_label'), Keyword('help', Const('App label of the application containing the migration.'))], None, None))]))
Module(None, Stmt([Function(None, 'parse_starttag', ['self', 'i'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Const('\n'), 'join'), [List([CallFunc(Getattr(Name('six'), 'text_type'), [Getattr(Name('self'), 'management_form')], None, None), Name('forms')])], None, None)], None, None))]))
else :
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'activated')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('line', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Assign([AssTuple([AssName('name', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')])], CallFunc(Getattr(Name('main_value_pair'), 'split'), [Const(':'), Const(1)], None, None))]))
Module(None, Stmt([Assign([AssName('loader', 'OP_ASSIGN')], CallFunc(Name('find_template_loader'), [Name('loader_name')], None, None))]))
Module(None, Stmt([Function(None, 'reload', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('default_error_messages', 'OP_ASSIGN')], Dict([(Const('invalid'), CallFunc(Name('_'), [Const('Enter a number.')], None, None))]))]))
Module(None, Stmt([Assign([AssName('headers', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Const(': '), 'join'), [List([CallFunc(Name('to_bytes'), [Name('key'), Const('ascii')], None, None), CallFunc(Name('to_bytes'), [Name('value'), Const('latin-1')], None, None)])], None, None), [ListCompFor(AssTuple([AssName('key', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('self'), '_headers'), 'values'), [], None, None), [])]))]))
Module(None, Stmt([Assign([AssName('errors', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('fp'), Const('errors'), Name('None')], None, None))]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'active_readers'), '+=', Const(1))]))
Module(None, Stmt([With(CallFunc(Name('open'), [Name('path'), Const('rb')], None, None), AssName('f', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Return(And([Getattr(Name('self'), 'is_bound'), Not(Getattr(Name('self'), 'errors'))]))]))
Module(None, Stmt([Assign([AssName('props', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'pop'), [Const('.'), Name('None')], None, None))]))
Module(None, Stmt([Function(None, 'is_checked', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('doy'))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('html_class_attr', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'empty', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('empty'), Name('False')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'url', 'length', 'mime_type'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Name('check_for_migrations'), [Name('app_config'), Name('connection')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'dirpath', 'OP_ASSIGN')], Name('dirpath'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'vals'), 'append'), [Name('val')], None, None))]))
Module(None, Stmt([Function(None, 'set_urlconf', ['urlconf_name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('base'), Const('declared_fields')], None, None), Stmt([Pass()]))], None)]))
except IndexError :
Module(None, Stmt([From('collections', [('OrderedDict', None)], 0)]))
elif not isinstance ( value , ConvertingList ) and isinstance ( value , list ) :
else :
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Function(None, '__get__', ['self', 'instance', 'owner'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([AssAttr(Name('self'), '_post', 'OP_DELETE')]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'handle_m2m_field', ['self', 'obj', 'field'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'run_validators'), [Name('out')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('exclude'), 'append'), [Getattr(Name('f'), 'name')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('wsgi_opts'), 'OP_ASSIGN', [Const('debug')])], Compare(Subscript(Name('options'), 'OP_APPLY', [Const('debug')]), [('is not', Name('None'))]))]))
Module(None, Stmt([Assign([AssName('migrations_to_squash', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Getattr(Name('executor'), 'loader'), 'get_migration'), [Name('al'), Name('mn')], None, None), [ListCompFor(AssTuple([AssName('al', 'OP_ASSIGN'), AssName('mn', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Getattr(Name('executor'), 'loader'), 'graph'), 'forwards_plan'), [Tuple([Getattr(Name('migration'), 'app_label'), Getattr(Name('migration'), 'name')])], None, None), [ListCompIf(Compare(Name('al'), [('==', Getattr(Name('migration'), 'app_label'))]))])]))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('r'), 'endswith'), [Const('+00:00')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([CallFunc(Getattr(Name('self'), 'L'), [], None, None), Compare(Getattr(Getattr(Name('self'), 'data'), 'month'), [('>', Const(2))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'copy'), [], None, None))]))
except ValidationError as e :
Module(None, Stmt([If([(Compare(Name('proto'), [('>=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'get_wsgi_application', (), (), 0, None, Stmt([Pass()]))]))
exts = extensions if extensions else [ 'html' , 'txt' ]
Module(None, Stmt([Assign([AssName('taglib_module', 'OP_ASSIGN')], Mod((Const('%s.%s'), Tuple([Name('module'), Name('library_name')]))))]))
Module(None, Stmt([If([(Name('media'), Stmt([Pass()]))], None)]))
else :
except VariableDoesNotExist :
Module(None, Stmt([Global(['_supported'])]))
Module(None, Stmt([Assign([AssName('leave_locale_alone', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([If([(Compare(Subscript(Name('item'), 'OP_APPLY', [Const('enclosure')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateDoesNotExist'), [Name('template_name')], None, None), None, None)]))
Module(None, Stmt([From('django.utils.datastructures', [('MultiValueDict', None), ('MergeDict', None)], 0)]))
Module(None, Stmt([Function(None, '__setitem__', ['self', 'name', 'val'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('types', None)])]))
Module(None, Stmt([Assign([AssName('new_mod', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([Assign([AssName('ERROR', 'OP_ASSIGN')], Const(40))]))
Module(None, Stmt([While(And([Compare(Name('end'), [('>', Const(0))]), Mod((CallFunc(Getattr(Name('s'), 'count'), [Const('"'), Const(0), Name('end')], None, None), Const(2)))]), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'callback', 'OP_ASSIGN')], Name('callback'))]))
Module(None, Stmt([Assign([AssName('path', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('path'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssName('counters', 'OP_ASSIGN')], Mul((List([Const(0)]), CallFunc(Name('len'), [Name('handlers')], None, None))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('_error_files'), 'append'), [Name('filename')], None, None))]))
Module(None, Stmt([Assign([AssName('lookups', 'OP_ASSIGN')], CallFunc(Name('MultiValueDict'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('SafeText'), [Name('t')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('header_names', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('key'), 'lower'), [], None, None), [ListCompFor(AssName('key', 'OP_ASSIGN'), Getattr(Name('self'), 'extra_headers'), [])]))]))
Module(None, Stmt([Function(None, 'num_items', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Discard(Yield(Mod((Const('class %s(models.Model):'), CallFunc(Name('table2model'), [Name('table_name')], None, None)))))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('content'), Name('EmailMessage')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('handler', 'OP_ASSIGN')], CallFunc(Name('SimplerXMLGenerator'), [Name('outfile'), Name('encoding')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'literal', 'OP_ASSIGN')], CallFunc(Name('mark_safe'), [CallFunc(Name('unescape_string_literal'), [Name('var')], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Name('target'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('_active'), 'value', 'OP_ASSIGN')], CallFunc(Name('translation'), [Name('language')], None, None))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('thread'), 'start_new_thread'), [Name('main_func'), Name('args'), Name('kwargs')], None, None))]))
else :
Module(None, Stmt([Assign([AssName('encoding', 'OP_ASSIGN')], CallFunc(Name('property'), [Lambda(['self'], [], 0, Getattr(Getattr(Name('self'), 'file'), 'encoding'))], None, None))]))
Module(None, Stmt([Assign([AssName('ret', 'OP_ASSIGN')], CallFunc(Name('LockFileEx'), [Name('hfile'), Name('flags'), Const(0), Const(0), Const(4294901760), CallFunc(Name('byref'), [Name('overlapped')], None, None)], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('filepath'), 'startswith'), [Name('root')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Const('\n'), 'join'), [List([CallFunc(Getattr(Name('six'), 'text_type'), [Getattr(Name('self'), 'management_form')], None, None), Name('forms')])], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Mod((Name('msg'), Tuple([Name('language'), Subscript(Name('_DJANGO_DEPRECATED_LOCALES'), 'OP_APPLY', [Name('language')])]))), Name('RemovedInDjango19Warning'), Keyword('stacklevel', Const(2))], None, None))]))
Module(None, Stmt([If([(Compare(Name('instance'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('strip_tags', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('strip_tags')], None, None))]))
Module(None, Stmt([From('django.core.management.base', [('AppCommand', None)], 0)]))
Module(None, Stmt([Assign([AssName('upto', 'OP_ASSIGN')], CallFunc(Getattr(Name('match'), 'end'), [], None, None))]))
Module(None, Stmt([From('django.core.serializers.base', [('DeserializationError', None)], 0)]))
Module(None, Stmt([If([(Name('sign'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'instance', 'OP_ASSIGN')], Name('instance'))]))
Module(None, Stmt([Assert(Compare(Name('iterations'), [('>', Const(0))]), None)]))
Module(None, Stmt([Return(CallFunc(Name('len'), [CallFunc(Name('list'), [CallFunc(Getattr(Name('self'), '__iter__'), [], None, None)], None, None)], None, None))]))
Module(None, Stmt([Subscript(Name('_error_files'), 'OP_DELETE', [CallFunc(Getattr(Name('_error_files'), 'index'), [Name('filename')], None, None)])]))
Module(None, Stmt([Assign([AssName('cleaned', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'clean'), [Name('value')], None, None))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([From('django.forms.extras.widgets', [('SelectDateWidget', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'emit_post_migrate'), [Name('verbosity'), Name('interactive'), Name('database')], None, None))]))
Module(None, Stmt([Assign([AssName('width', 'OP_ASSIGN')], CallFunc(Name('property'), [Name('_get_width')], None, None))]))
Module(None, Stmt([Subscript(Getattr(Name('self'), 'dict'), 'OP_DELETE', [Name('item')])]))
Module(None, Stmt([From('django.template', [('Lexer', None), ('TOKEN_TEXT', None), ('TOKEN_VAR', None), ('TOKEN_BLOCK', None), ('TOKEN_COMMENT', None), ('TRANSLATOR_COMMENT_MARK', None)], 0)]))
Module(None, Stmt([Assign([AssName('asvar', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('required')])], Name('False'))]))
Module(None, Stmt([Function(None, 'parse_http_date', ['date'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'encoding', 'OP_ASSIGN')], Name('encoding'))]))
Module(None, Stmt([If([(Compare(Name('year'), [('<', Const(100))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '__deepcopy__'), [Dict(())], None, None))]))
Module(None, Stmt([Assign([AssName('choices', 'OP_ASSIGN')], CallFunc(Name('list'), [CallFunc(Name('chain'), [Getattr(Name('self'), 'choices'), Name('choices')], None, None)], None, None))]))
Module(None, Stmt([AugAssign(Name('year'), '+=', Const(1900))]))
Module(None, Stmt([Function(None, 'save', ['self', 'name', 'content'], [], 0, None, Stmt([Pass()]))]))
except Exception :
Module(None, Stmt([For(AssName('filename', 'OP_ASSIGN'), Name('filenames'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('MultiValueField'), Name('self')], None, None), '__deepcopy__'), [Name('memo')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('NoReverseMatch'), [Mod((Const("%s is not a registered namespace inside '%s'"), Tuple([Name('key'), CallFunc(Getattr(Const(':'), 'join'), [Name('resolved_path')], None, None)])))], None, None), None, None)]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Const('\n'), 'join'), [Name('output')], None, None)], None, None))]))
Module(None, Stmt([Class('BadSignature', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None), ('CommandError', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_expire_info', 'OP_ASSIGN')], CallFunc(Getattr(Name('_expire_info'), 'setdefault'), [Name('name'), Dict(())], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), 'file'))]))
Module(None, Stmt([From('pkg_resources', [('resource_string', None)], 0)]))
Module(None, Stmt([Assign([AssName('trim_whitespace_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('\\s*\n\\s*')], None, None))]))
Module(None, Stmt([For(AssName('f', 'OP_ASSIGN'), CallFunc(Name('sorted'), [CallFunc(Getattr(Name('os'), 'listdir'), [Getattr(Name('self'), 'path')], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('dfmt', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'get'), [Const('datefmt'), Name('None')], None, None))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Assign([Subscript(Name('data'), 'OP_ASSIGN', [Getattr(Name('f'), 'name')])], ListComp(Getattr(Name('item'), 'pk'), [ListCompFor(AssName('item', 'OP_ASSIGN'), Name('qs'), [])]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('value'), 'rjust'), [CallFunc(Name('int'), [Name('arg')], None, None)], None, None))]))
Module(None, Stmt([While(And([Compare(Name('i'), [('<', Name('num_existing'))]), Compare(Slice(Subscript(Name('existing'), 'OP_APPLY', [Name('i')]), 'OP_APPLY', None, Name('pflen')), [('==', Name('prefixed'))])]), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('defaults', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'parse_args'), [Keyword('args', Name('args'))], None, None))]))
Module(None, Stmt([For(AssName('obj', 'OP_ASSIGN'), Name('queryset'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('line'))]))
from django . core . exceptions import SuspiciousFileOperation
Module(None, Stmt([Assign([AssName('_meth_func', 'OP_ASSIGN')], Const('__func__'))]))
Module(None, Stmt([For(AssName('module_to_search', 'OP_ASSIGN'), Name('args'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('ret_ip', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('sites1', 'OP_ASSIGN')], CallFunc(Name('_findall'), [Name('s1'), CallFunc(Name('str'), [Name('year')], None, None)], None, None))]))
Module(None, Stmt([Return(Name('val'))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Return(Name('fixture_files'))]))
Module(None, Stmt([Discard(CallFunc(Name('activate'), [Getattr(Name('self'), 'timezone')], None, None))]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'USE_L10N'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('FilterNode'), [Name('filter_expr'), Name('nodelist')], None, None))]))
except ( OSError , IOError ) :
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_meta'), 'get_field'), [Getattr(Getattr(Name('field'), 'rel'), 'field_name')], None, None), 'to_python'), [Name('field_value')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('it'), 'next'), [], None, None))]))
Module(None, Stmt([For(AssName('path', 'OP_ASSIGN'), Name('format_module_path'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('AutoEscapeControlNode'), [Compare(Name('arg'), [('==', Const('on'))]), Name('nodelist')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'filter_expr', 'nodelist'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('processors'), 'append'), [Name('func')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'regex', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Getattr(Name('self'), 'regex'), Getattr(Name('self'), 'flags')], None, None))]))
Module(None, Stmt([If([(Compare(Name('token'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('FixedOffset', [Name('tzinfo')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '_has_expired', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([With(CallFunc(Getattr(Getattr(Name('self'), '_lock'), 'writer'), [], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([AugAssign(Name('timeout'), '+=', CallFunc(Name('int'), [CallFunc(Getattr(Name('time'), 'time'), [], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Name('_supported'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Const('back called without some previous parsing')], None, None), None, None)]))
Module(None, Stmt([If([(CallFunc(Name('code_changed'), [], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Name('formats'), 'number_format'), [Name('number'), CallFunc(Name('abs'), [Name('p')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('field_params'), 'OP_ASSIGN', [Const('decimal_places')])], Subscript(Name('row'), 'OP_APPLY', [Const(5)]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_wrapped'), [('is', Name('empty'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Subscript(Getattr(Name('field'), 'error_messages'), 'OP_APPLY', [Const('incomplete')]), [('not in', Name('errors'))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Function(None, '_check_boolean_field_default_value', ['app_configs', 'kwargs'], [Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('template'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('mail'), 'attach_alternative'), [Name('html_message'), Const('text/html')], None, None))]))
Module(None, Stmt([If([(Compare(Subscript(Name('bits'), 'OP_APPLY', [Const(0)]), [('!=', Const('and'))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
try :
Module(None, Stmt([Return(Tuple([Name('RAW'), Dict(()), Name('stream')]))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Runs a Python interactive interpreter. Tries to use IPython or bpython, if one of them is available.'))]))
Module(None, Stmt([Function(None, '_should_delete_form', ['self', 'form'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'connection')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('now', 'OP_ASSIGN')], CallFunc(Getattr(Name('now'), 'decode'), [Const('utf-8')], None, None))]))
Module(None, Stmt([From('django.utils.timezone', [('get_default_timezone', None), ('is_aware', None), ('is_naive', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('newretval'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(CallFunc(Name('getattr'), [Name('self'), Name('_assertRegex')], None, None), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'set_payload'), [Name('text'), Name('utf8_charset')], None, None))]))
Module(None, Stmt([Function(None, 'get_deserializer', ['format'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('errors'), 'extend'), [CallFunc(Name('_check_boolean_field_default_value'), [], None, Name('kwargs'))], None, None))]))
Module(None, Stmt([If([(Name('kwds'), Stmt([Pass()]))], None)]))
except ValueError :
Module(None, Stmt([Return(CallFunc(Name('sorted'), [Name('all_files')], None, None))]))
Module(None, Stmt([From('django.core.validators', [('validate_ipv4_address', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of Serializer must provide an handle_field() method')], None, None), None, None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('text'), '__html__'), [], None, None))]))
Module(None, Stmt([Assign([AssName('allow_multiple_selected', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([AugAssign(Name('field_desc'), '+=', Const(')'))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Getattr(Name('self'), '_cache')], None, None), [('>=', Getattr(Name('self'), '_max_entries'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('escaper', 'OP_ASSIGN')], Name('conditional_escape'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('mapped_tokens'), 'append'), [CallFunc(Getattr(Name('self'), 'translate_token'), [Name('token')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('base2', 'OP_ASSIGN')], CallFunc(Name('BaseConverter'), [Name('BASE2_ALPHABET')], None, None))]))
Module(None, Stmt([Class('Select', [Name('Widget')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils.itercompat', [('is_iterable', None)], 0)]))
Module(None, Stmt([Function(None, 'parse_date', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('fp'), 'write'), [Name('data')], None, None))]))
try :
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('handler'), 'name', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('path'), 'join'), [Subscript(Getattr(Name('django'), '__path__'), 'OP_APPLY', [Const(0)]), Const('conf'), Name('subdir')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('args'), Keyword('metavar', Const('test_label')), Keyword('nargs', Const('*')), Keyword('help', Const('Module paths to test; can be modulename, modulename.TestCase or modulename.TestCase.test_method'))], None, None))]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'years', 'OP_ASSIGN')], Name('years'))]))
Module(None, Stmt([From('django.template.loader', [('BaseLoader', None), ('get_template_from_string', None), ('find_template_loader', None), ('make_origin', None)], 0)]))
Module(None, Stmt([Assign([AssName('reverse', 'OP_ASSIGN')], Name('complain'))]))
Module(None, Stmt([Discard(Tuple([CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--noinput'), Keyword('action', Const('store_false')), Keyword('dest', Const('interactive')), Keyword('default', Name('True')), Keyword('help', Const('Tells Django to NOT prompt the user for input of any kind.'))], None, None)]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('httpd'), 'serve_forever'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('get_supported_language_variant'), [Getattr(Name('settings'), 'LANGUAGE_CODE')], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('file'), 'seek'), [Const(0)], None, None))]))
Module(None, Stmt([If([(Compare(Name('field_type'), [('==', Const('DecimalField'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('base64d', 'OP_ASSIGN')], CallFunc(Name('force_bytes'), [CallFunc(Getattr(CallFunc(Name('TimestampSigner'), [Name('key'), Keyword('salt', Name('salt'))], None, None), 'unsign'), [Name('s'), Keyword('max_age', Name('max_age'))], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Name('bytes'), [('<', Name('KB'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'unlink'), [Name('work_file')], None, None))]))
Module(None, Stmt([Assign([AssName('res', 'OP_ASSIGN')], CallFunc(Name('func'), [], Getattr(Name('self'), '__args'), Getattr(Name('self'), '__kw')))]))
Module(None, Stmt([If([(And([Name('safe'), Compare(Name('arg'), [('!=', Const(';'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.functional', [('cached_property', None)], 0)]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Creates a Django app directory structure for the given app name in the current directory or optionally in the given directory.'))]))
Module(None, Stmt([Assign([AssName('digest', 'OP_ASSIGN')], Getattr(Name('hashlib'), 'sha256'))]))
Module(None, Stmt([If([(Not(Name('commit')), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Function(None, 'has_key', ['self', 'key', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('io', [('BytesIO', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('widget'), 'is_localized', 'OP_ASSIGN')], Getattr(Name('self'), 'is_localized'))]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(Name('self'), 'split_leading_dir'), [Name('name')], None, None), 'OP_APPLY', [Const(1)]))]))
Module(None, Stmt([Assign([AssName('request', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'request_class'), [Name('environ')], None, None))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'requires_system_checks'), Not(CallFunc(Getattr(Name('options'), 'get'), [Const('skip_validation')], None, None)), Not(CallFunc(Getattr(Name('options'), 'get'), [Const('skip_checks')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('lazy_number'), [Name('ngettext'), Name('str'), Keyword('singular', Name('singular')), Keyword('plural', Name('plural')), Keyword('number', Name('number'))], None, None))]))
Module(None, Stmt([Assign([AssName('tmpdir', 'OP_ASSIGN')], CallFunc(Getattr(Name('tempfile'), 'mkdtemp'), [], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(CallFunc(Getattr(Name('col_name'), 'lower'), [], None, None), 'find'), [Const('__')], None, None), [('>=', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('ch', 'OP_ASSIGN'), AssName('escaped', 'OP_ASSIGN')])], CallFunc(Name('next'), [Name('input_iter')], None, None))]))
Module(None, Stmt([Assign([AssName('cc', 'OP_ASSIGN')], CallFunc(Getattr(Const(', '), 'join'), [GenExpr(GenExprInner(CallFunc(Name('dictvalue'), [Name('el')], None, None), [GenExprFor(AssName('el', 'OP_ASSIGN'), CallFunc(Getattr(Name('cc'), 'items'), [], None, None), [])]))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('M'), 'set'), [Name('key'), Name('real_value'), Name('coded_value')], None, None))]))
return value if six . PY2 else value . encode ( ISO_8859_1 )
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Getattr(Name('s'), 'replace'), [Const('"'), Const('&quot;')], None, None))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(Name('field_stream'), 'read'), [], None, None))]))
Module(None, Stmt([AugAssign(Name('key'), '+=', Name('kwd_mark'))]))
Module(None, Stmt([If([(CallFunc(Getattr(CallFunc(Getattr(Getattr(Name('self'), 'META'), 'get'), [Const('CONTENT_TYPE'), Const('')], None, None), 'startswith'), [Const('multipart/form-data')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('filename', 'OP_ASSIGN')], Tuple([Const('utf-8'), Const(''), Name('filename')]))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(Name('six'), 'text_type'), [Name('s')], None, None), 'encode'), [Name('encoding')], None, None))]))
Module(None, Stmt([Assign([AssName('fs_encoding', 'OP_ASSIGN')], Or([CallFunc(Getattr(Name('sys'), 'getfilesystemencoding'), [], None, None), CallFunc(Getattr(Name('sys'), 'getdefaultencoding'), [], None, None)]))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Updates database schema. Manages both apps with migrations and those without.'))]))
Module(None, Stmt([If([(Compare(Const('warning'), [('in', Name('kwargs'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('kwargs'))]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('self'), Const('bad_cookies')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'location', 'base_url', 'file_permissions_mode', 'directory_permissions_mode'], [Name('None'), Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('t'), 'token_type'), [('==', Name('TOKEN_BLOCK'))]), Stmt([Pass()]))], None)]))
try :
except re . error as e :
Module(None, Stmt([For(AssName('role', 'OP_ASSIGN'), Subscript(Getattr(Name('termcolors'), 'PALETTES'), 'OP_APPLY', [Getattr(Name('termcolors'), 'NOCOLOR_PALETTE')]), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'loads', ['s', 'key', 'salt', 'serializer', 'max_age'], [Name('None'), Const('django.core.signing'), Name('JSONSerializer'), Name('None')], 0, None, Stmt([Pass()]))]))
except ImportError as exc :
Module(None, Stmt([Function(None, 'strftime', ['self', 'fmt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('plist'), 'append'), [CallFunc(Getattr(Name('f'), 'strip'), [], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('chunk_buffer', 'OP_ASSIGN')], CallFunc(Name('BytesIO'), [Name('chunk')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('MultiValueDict'), Name('self')], None, None), '__getitem__'), [Name('key')], None, None))]))
Module(None, Stmt([Assign([AssName('hhmm', 'OP_ASSIGN')], Mod((Const('%02d%02d'), CallFunc(Name('divmod'), [CallFunc(Name('abs'), [Name('offset')], None, None), Const(60)], None, None))))]))
except StandardError as e :
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('callable'), [Name('name')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Slice(Getattr(Name('self'), 'forms'), 'OP_APPLY', None, CallFunc(Getattr(Name('self'), 'initial_form_count'), [], None, None)))]))
Module(None, Stmt([Assign([AssName('scheme', 'OP_ASSIGN')], CallFunc(Getattr(Subscript(CallFunc(Getattr(Name('value'), 'split'), [Const('://')], None, None), 'OP_APPLY', [Const(0)]), 'lower'), [], None, None))]))
Module(None, Stmt([Assign([AssName('i', 'OP_ASSIGN')], CallFunc(Getattr(Name('p'), 'find'), [Const('=')], None, None))]))
Module(None, Stmt([Assign([AssName('PVOID', 'OP_ASSIGN')], Name('c_void_p'))]))
Module(None, Stmt([Assign([AssName('media_attrs', 'OP_ASSIGN')], Name('kwargs'))]))
Module(None, Stmt([Return(Dict(()))]))
Module(None, Stmt([If([(Not(Name('use_workaround')), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([For(AssName('path', 'OP_ASSIGN'), Getattr(Name('self'), 'locale_paths'), Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Getattr(Name('self'), 'message'), Keyword('code', Getattr(Name('self'), 'code'))], None, None), None, None)]))
Module(None, Stmt([With(CallFunc(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'cursor'), [], None, None), AssName('cursor', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('_slugify'), [Name('value')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'as_ul'), [], None, None))]))
Module(None, Stmt([Assign([AssName('quant', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('default_attrs', 'OP_ASSIGN')], Dict([(Const('cols'), Const('40')), (Const('rows'), Const('10'))]))]))
Module(None, Stmt([Assign([AssName('connection', 'OP_ASSIGN')], Subscript(Name('connections'), 'OP_APPLY', [Name('database')]))]))
Module(None, Stmt([Assign([AssName('ignore', 'OP_ASSIGN')], Lambda(['pattern'], [], 0, CallFunc(Getattr(Name('fnmatch'), 'fnmatchcase'), [Name('filename'), Name('pattern')], None, None)))]))
Module(None, Stmt([Assign([AssName('fk', 'OP_ASSIGN')], CallFunc(Name('_get_foreign_key'), [Name('parent_model'), Name('model'), Keyword('fk_name', Name('fk_name'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('clean_ipv6_address'), [Name('value'), Getattr(Name('self'), 'unpack_ipv4')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('pot_path')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('opts'), Name('opt')], None, None))]))
Module(None, Stmt([Raise(None, None, None)]))
else :
Module(None, Stmt([From('django.template.defaultfilters', [('date', None)], 0)]))
Module(None, Stmt([Function(None, 'addslashes', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssTuple([AssName('field', 'OP_ASSIGN'), AssName('errors', 'OP_ASSIGN')]), CallFunc(Getattr(Name('self'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('result'), 'queryset', 'OP_ASSIGN')], Getattr(Name('result'), 'queryset'))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('QueryDict'), Name('self')], None, None), 'setlistdefault'), [Name('key'), Name('default_list')], None, None))]))
Module(None, Stmt([From('django.conf.locale', [('LANG_INFO', None)], 0)]))
Module(None, Stmt([Function(None, 'setdefault', ['self', 'key', 'default'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('data'), 'getlist'), [Name('name')], None, None))]))
Module(None, Stmt([Assign([AssName('base', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('base')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'key', 'OP_ASSIGN')], Or([Name('key'), Getattr(Name('settings'), 'SECRET_KEY')]))]))
Module(None, Stmt([Assign([Subscript(Name('substitutions'), 'OP_ASSIGN', [Const('initial')])], CallFunc(Name('format_html'), [Getattr(Name('self'), 'url_markup_template'), Getattr(Name('value'), 'url'), CallFunc(Name('force_text'), [Name('value')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('HttpResponseNotModified'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('command'), 'stdout'), 'write'), [Mod((Const('processing file %s in %s\n'), Tuple([Getattr(Name('self'), 'file'), Getattr(Name('self'), 'dirpath')])))], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('key', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')]), CallFunc(Name('list'), [CallFunc(Getattr(Name('attrs'), 'items'), [], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([From('yaml', [('SafeLoader', None), ('SafeDumper', None)], 0)]))
Module(None, Stmt([Assign([AssName('next', 'OP_ASSIGN')], Add((Name('index'), CallFunc(Name('len'), [Getattr(Name('self'), '_boundary')], None, None))))]))
@ register . filter ( is_safe = True )
Module(None, Stmt([Function(None, 'fix', ['match'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'nud', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('val'), 'append'), [Name('iso_input')], None, None))]))
Module(None, Stmt([Function(None, 'reset_format_cache', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('kwargs_safe', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Name('k'), CallFunc(Name('conditional_escape'), [Name('v')], None, None)]), [GenExprFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('six'), 'iteritems'), [Name('kwargs')], None, None), [])]))], None, None))]))
except VariableDoesNotExist :
Module(None, Stmt([Import([('errno', None)])]))
Module(None, Stmt([From('datetime', [('datetime', None)], 0)]))
assert is_iterable ( new_errors ) , (  "The function %r did not return a list. All functions registered "  "with the checks registry must return a list." % check )
Module(None, Stmt([Assign([AssAttr(Name('self'), '_stream', 'OP_ASSIGN')], Name('stream'))]))
Module(None, Stmt([Function(None, 'reraise', ['tp', 'value', 'tb'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'handle_merge', ['self', 'loader', 'conflicts'], [], 0, None, Stmt([Pass()]))]))
except ( ValueError , TypeError ) :
Module(None, Stmt([Assign([AssName('cookies', 'OP_ASSIGN')], Const('<could not parse>'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'isolated_context', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('isolated_context'), Name('False')], None, None))]))
Module(None, Stmt([Return(Getattr(Getattr(Getattr(Name('self'), 'field'), 'widget'), 'is_hidden'))]))
Module(None, Stmt([Return(Tuple([Name('directories'), Name('files')]))]))
Module(None, Stmt([Assign([AssName('stamp', 'OP_ASSIGN')], CallFunc(Getattr(Name('_time'), 'mktime'), [Name('tt')], None, None))]))
Module(None, Stmt([Return(Name('decorator'))]))
Module(None, Stmt([Function(None, 'validate', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([For(AssName('message', 'OP_ASSIGN'), Name('email_messages'), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssTuple([AssName('key', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')]), CallFunc(Getattr(Name('dict'), 'items'), [Name('self')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'value', 'OP_ASSIGN')], CallFunc(Name('set'), [GenExpr(GenExprInner(CallFunc(Name('force_text'), [Name('v')], None, None), [GenExprFor(AssName('v', 'OP_ASSIGN'), Getattr(Name('self'), 'value'), [])]))], None, None))]))
except AttributeError :
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('request_finished'), 'connect'), [Name('update_watch')], None, None))]))
Module(None, Stmt([Assign([AssName('opts', 'OP_ASSIGN')], Getattr(Name('self'), '_meta'))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('<', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'clean_ipv6_address', ['ip_str', 'unpack_ipv4', 'error_message'], [Name('False'), CallFunc(Name('_'), [Const('This is not a valid IPv6 address.')], None, None)], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([With(Getattr(Name('self'), 'mutex'), None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'file'), 'seek'), [Const(0)], None, None))]))
Module(None, Stmt([Function(None, 'get_urlconf', ['default'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('intrans', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssName('y', 'OP_ASSIGN')], CallFunc(Getattr(Name('data'), 'get'), [Mod((Getattr(Name('self'), 'year_field'), Name('name')))], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Const('This script should be run from the Django Git checkout or your project or app tree, or with the settings module specified.')], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'prepend_token'), [Name('token')], None, None))]))
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Name('HiddenInput'))]))
Module(None, Stmt([Class('Command', [Name('TemplateCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'has_other_pages', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('_encoding', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Return(CallFunc(Name('range'), [Const(1), Add((Getattr(Name('self'), 'num_pages'), Const(1)))], None, None))]))
Module(None, Stmt([Assign([AssName('silent_variable_failure', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid')]), Keyword('code', Const('invalid'))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'sql_indexes', ['app_config', 'style', 'connection'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'find_command', ['cmd', 'path', 'pathext'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('message_context'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_setup'), [], None, None))]))
from django . core . exceptions import DisallowedRedirect
Module(None, Stmt([Discard(CallFunc(Getattr(Name('bits'), 'append'), [CallFunc(Name('int'), [Name('x')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('logging'), 'Handler'), '__init__'), [Name('self')], None, None))]))
Module(None, Stmt([Assign([AssName('res', 'OP_ASSIGN'), Subscript(Getattr(Name('instance'), '__dict__'), 'OP_ASSIGN', [Getattr(Name('self'), 'name')])], CallFunc(Getattr(Name('self'), 'func'), [Name('instance')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('self'), Const('error_dict')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils', [('lru_cache', None)], 0)]))
Module(None, Stmt([Assign([AssName('handlers', 'OP_ASSIGN')], Getattr(Name('self'), '_upload_handlers'))]))
Module(None, Stmt([For(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('ret'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__lt__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Return(CallFunc(Getattr(Name('_trans'), 'get_language'), [], None, None))]))
elif finder . find_module ( name ) :
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('bit', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'render_node'), [Name('node'), Name('context')], None, None))]))
Module(None, Stmt([Function(None, 'message', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'popitem', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([AugAssign(Name('flup_module'), '+=', Const('_fork'))]))
Module(None, Stmt([Assign([AssName('forms', 'OP_ASSIGN')], CallFunc(Getattr(Const(' '), 'join'), [GenExpr(GenExprInner(CallFunc(Getattr(Name('form'), 'as_table'), [], None, None), [GenExprFor(AssName('form', 'OP_ASSIGN'), Name('self'), [])]))], None, None))]))
@ wraps ( fset )
Module(None, Stmt([AugAssign(Getattr(Name('e'), 'reason'), '+=', Mod((Const(', HTTP response headers must be in %s format'), Name('charset'))))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--tag'), Const('-t'), Keyword('action', Const('append')), Keyword('dest', Const('tags')), Keyword('help', Const('Run only checks labeled with given tag.'))], None, None))]))
Module(None, Stmt([If([(And([Name('autoescape'), Not(Name('safe_input'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('token_name', 'OP_ASSIGN')], Subscript(Name('TOKEN_MAPPING'), 'OP_APPLY', [Getattr(Name('self'), 'token_type')]))]))
quit_command = 'CTRL-BREAK' if sys . platform == 'win32' else 'CONTROL-C'
Module(None, Stmt([If([(Or([And([Getattr(Name('context'), 'autoescape'), Not(CallFunc(Name('isinstance'), [Name('output'), Name('SafeData')], None, None))]), CallFunc(Name('isinstance'), [Name('output'), Name('EscapeData')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'filters', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssName('app_configs', 'OP_ASSIGN')], CallFunc(Getattr(Name('apps'), 'get_app_configs'), [], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Getattr(Name('self'), '_dir')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('p', 'OP_ASSIGN')], CallFunc(Getattr(Name('PillowImageFile'), 'Parser'), [], None, None))]))
Module(None, Stmt([Assign([AssName('mw_class', 'OP_ASSIGN')], CallFunc(Name('import_string'), [Name('middleware_path')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'exclude', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('options'), Const('exclude'), Name('None')], None, None))]))
Module(None, Stmt([If([(Name('locales'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('finder'), 'find_module'), [Name('name')], None, None), Stmt([Pass()]))], None)]))
except CommandError :
Module(None, Stmt([Function(None, '__init__', ['self', 'path', 'match', 'recursive', 'allow_files', 'allow_folders', 'required', 'widget', 'label', 'initial', 'help_text', 'args', 'kwargs'], [Name('None'), Name('False'), Name('True'), Name('False'), Name('True'), Name('None'), Name('None'), Name('None'), Const('')], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const('attempted relative import beyond top-level package')], None, None), None, None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Const(''), 'join'), [Name('bits')], None, None)], None, None))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
before_import_registry = copy . copy ( register_to . _registry )
Module(None, Stmt([From('django.db.migrations.writer', [('MigrationWriter', None)], 0)]))
Module(None, Stmt([Assign([AssName('app_list', 'OP_ASSIGN')], CallFunc(Name('OrderedDict'), [GenExpr(GenExprInner(Tuple([Name('app_config'), Name('None')]), [GenExprFor(AssName('app_config', 'OP_ASSIGN'), CallFunc(Getattr(Name('apps'), 'get_app_configs'), [], None, None), [GenExprIf(And([Compare(Getattr(Name('app_config'), 'models_module'), [('is not', Name('None'))]), Compare(Name('app_config'), [('not in', Name('excluded_apps'))])]))])]))], None, None))]))
Module(None, Stmt([Assign([AssName('g', 'OP_ASSIGN')], CallFunc(Getattr(Name('g'), 'strip'), [Const('"')], None, None))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Name('str'), [Name('data')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'buf_size', 'OP_ASSIGN')], Name('buf_size'))]))
Module(None, Stmt([Function(None, 'setdefault', ['self', 'key', 'default'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('table_names', 'OP_ASSIGN')], ListComp(Getattr(Getattr(Name('model'), '_meta'), 'db_table'), [ListCompFor(AssName('model', 'OP_ASSIGN'), Getattr(Name('self'), 'models'), [])]))]))
Module(None, Stmt([From('threading', [('Lock', None)], 0)]))
Module(None, Stmt([If([(Getattr(Getattr(Name('self'), 'cmd'), '_called_from_command_line'), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('sql', 'OP_ASSIGN'), Name('index_sql'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('result'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('charset', 'OP_ASSIGN')], CallFunc(Getattr(Name('content_type_extra'), 'get'), [Const('charset')], None, None))]))
Module(None, Stmt([Function(None, 'rmtree_errorhandler', ['func', 'path', 'exc_info'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([CallFunc(Name('isinstance'), [Name('nodelist'), Name('NodeList')], None, None), Not(CallFunc(Name('isinstance'), [Name('node'), Name('TextNode')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'current_token', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'next_token'), [], None, None))]))
Module(None, Stmt([Class('StreamingHttpResponse', [Name('HttpResponseBase')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('verbosity'), [('>=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'close'), [], None, None))]))
return format_html ( self . outer_html ,  id_attr = format_html ( ' id="{0}"' , id_ ) if id_ else '' ,  content = mark_safe ( '\n' . join ( output ) ) )
Module(None, Stmt([Assign([AssName('inhibit_post_migrate', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('inhibit_post_migrate'), Name('False')], None, None))]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], CallFunc(Name('SafeMIMEText'), [Getattr(Name('self'), 'body'), Getattr(Name('self'), 'content_subtype'), Name('encoding')], None, None))]))
try :
Module(None, Stmt([Return(Name('data'))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("Can't find %s. Make sure you have GNU gettext tools 0.15 or newer installed."), Getattr(Name('self'), 'program')))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'saved_forms'), 'append'), [Name('form')], None, None))]))
Module(None, Stmt([Class('EntitiesForbidden', [Name('DefusedXmlException')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils.six.moves', [('http_cookies', None)], 0)]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Assign([AssName('stream', 'OP_ASSIGN')], Getattr(Name('self'), '_stream'))]))
Module(None, Stmt([Return(CallFunc(Name('_'), [Const('a.m.')], None, None))]))
Module(None, Stmt([Assign([AssName('pathext', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Getattr(Name('os'), 'environ'), 'get'), [Const('PATHEXT'), Const('.COM;.EXE;.BAT;.CMD')], None, None), 'split'), [Getattr(Name('os'), 'pathsep')], None, None))]))
Module(None, Stmt([Function(None, 'pk_is_not_editable', ['pk'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('_illegal_formatting', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('((^|[^%])(%%)*%[sy])')], None, None))]))
except AttributeError :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('BaseModelFormSet'), Name('self')], None, None), '__init__'), [], None, Name('defaults')))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Getattr(Name('six'), 'text_type'), [Name('s'), Name('encoding'), Name('errors')], None, None))]))
try :
Module(None, Stmt([Function(None, 'sql_flush', ['style', 'connection', 'only_django', 'reset_sequences', 'allow_cascade'], [Name('False'), Name('True'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'get_backend_timeout', ['self', 'timeout'], [Name('DEFAULT_TIMEOUT')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'required'), Not(Name('value'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'main', ['main_func', 'args', 'kwargs'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('forms_to_delete', 'OP_ASSIGN')], Getattr(Name('self'), 'deleted_forms'))]))
Module(None, Stmt([Import([('json', None)])]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '__class__'), [], Getattr(Name('self'), 'dicts'), None))]))
except ValueError :
Module(None, Stmt([Assign([AssName('advance_iterator', 'OP_ASSIGN')], Name('next'))]))
Module(None, Stmt([If([(Name('commit'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('intrans', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('sub_match_dict', 'OP_ASSIGN')], CallFunc(Name('dict'), [CallFunc(Getattr(Name('match'), 'groupdict'), [], None, None)], None, Getattr(Name('self'), 'default_kwargs')))]))
Module(None, Stmt([If([(Compare(Name('best_doublecolon_len'), [('>', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('read', 'OP_ASSIGN')], CallFunc(Name('property'), [Lambda(['self'], [], 0, Getattr(Getattr(Name('self'), 'file'), 'read'))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'rmdir'), [Name('original_path')], None, None))]))
Module(None, Stmt([Assign([AssName('abspathu', 'OP_ASSIGN')], Name('abspath'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_get_page'), [Slice(Getattr(Name('self'), 'object_list'), 'OP_APPLY', Name('bottom'), Name('top')), Name('number'), Name('self')], None, None))]))
elif self . _meta . fields and field not in self . _meta . fields :
Module(None, Stmt([Pass()]))
Module(None, Stmt([From('django.utils.http', [('urlquote', None)], 0)]))
Module(None, Stmt([For(AssName('field', 'OP_ASSIGN'), CallFunc(Getattr(Getattr(Name('self'), 'fields'), 'values'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Subscript(Name('self'), 'OP_DELETE', [Const('Content-Transfer-Encoding')])]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), '_is_rendered')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Unable to configure logger %r: %s'), Tuple([Name('name'), Name('e')])))], None, None), None, None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('arg'), 'startswith'), [Name('option')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'endElement'), [Const('item')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('list'), [Name('self')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'locale_paths', 'OP_ASSIGN')], List([CallFunc(Getattr(Getattr(Name('os'), 'path'), 'abspath'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Const('conf'), Const('locale')], None, None)], None, None)]))]))
Module(None, Stmt([Assign([AssName('msg_with_ctxt', 'OP_ASSIGN')], Mod((Const('%s%s%s'), Tuple([Name('context'), Name('CONTEXT_SEPARATOR'), Name('message')]))))]))
Module(None, Stmt([Discard(Yield(Const(None)))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Return(Lambda(['text'], [], 0, CallFunc(Name('colorize'), [Name('text'), Name('opts')], None, Name('kwargs'))))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('sizeof'), [Name('c_ulong')], None, None), [('!=', CallFunc(Name('sizeof'), [Name('c_void_p')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('file'), Const('name'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssName('locale_dirs', 'OP_ASSIGN')], CallFunc(Name('filter'), [Getattr(Getattr(Name('os'), 'path'), 'isdir'), CallFunc(Getattr(Name('glob'), 'glob'), [Mod((Const('%s/*'), Name('basedir')))], None, None)], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('SuspiciousMultipartForm'), [Const("The multipart parser got stuck, which shouldn't happen with normal uploaded files. Check for malicious upload activity; if there is none, report this to the Django developers.")], None, None), None, None)]))
else :
Module(None, Stmt([Return(CallFunc(Name('force_text'), [CallFunc(Name('unquote'), [CallFunc(Name('force_str'), [Name('quoted_url')], None, None)], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Name('column_name'), [('in', Name('indexes'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_create_attachment', ['self', 'filename', 'content', 'mimetype'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('connection', 'OP_ASSIGN')], Subscript(Name('connections'), 'OP_APPLY', [Subscript(Name('options'), 'OP_APPLY', [Const('database')])]))]))
Module(None, Stmt([Assign([AssName('var_node', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'create_variable_node'), [Name('filter_expression')], None, None))]))
Module(None, Stmt([From('django.utils.module_loading', [('import_string', None)], 0)]))
Module(None, Stmt([If([(Getattr(Name('f'), 'primary_key'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('handler_config', 'OP_ASSIGN')], Subscript(Name('handlers'), 'OP_APPLY', [Name('name')]))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Getattr(Name('s'), 'replace'), [Const('\t'), Const('\\t')], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_fname'))]))
Module(None, Stmt([Return(Getattr(Subscript(Name('_serializers'), 'OP_APPLY', [Name('format')]), 'Serializer'))]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], Getattr(Name('message'), 'error_dict'))]))
Module(None, Stmt([Function(None, 'handle', ['self', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('kw'), 'OP_ASSIGN', [Const('microsecond')])], CallFunc(Getattr(Subscript(Name('kw'), 'OP_APPLY', [Const('microsecond')]), 'ljust'), [Const(6), Const('0')], None, None))]))
Module(None, Stmt([From('django.core.cache.backends.db', [('BaseDatabaseCache', None)], 0)]))
Module(None, Stmt([From('django.http.multipartparser', [('MultiPartParser', None), ('MultiPartParserError', None)], 0)]))
Module(None, Stmt([Function(None, 'Deserializer', ['object_list', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stream'), 'write'), [Add((CallFunc(Getattr(CallFunc(Getattr(Name('message'), 'message'), [], None, None), 'as_bytes'), [], None, None), Const('\n')))], None, None))]))
Module(None, Stmt([Assign([AssName('_format_modules_cache', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('o'), Getattr(Name('datetime'), 'datetime')], None, None), Stmt([Pass()]))], None)]))
except ImportError :
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], CallFunc(Getattr(Name('s'), 'split'), [Const('='), Const(1)], None, None))]))
Module(None, Stmt([Assign([AssName('nofollow_attr', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Return(Const(''))]))
else :
Module(None, Stmt([Assign([AssName('format_string', 'OP_ASSIGN')], Slice(Subscript(Name('bits'), 'OP_APPLY', [Const(1)]), 'OP_APPLY', Const(1), UnarySub(Const(1))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('defaults'), 'update'), [Name('kwargs')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [Mod((Const(' pgettext(%r, %r) '), Tuple([Name('message_context'), CallFunc(Name('join_tokens'), [Name('singular'), Name('trimmed')], None, None)])))], None, None))]))
Module(None, Stmt([If([(Compare(Name('args'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('CacheClass', [Name('DatabaseCache')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('loader'), Getattr(Name('six'), 'string_types')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Name('_add_doc'), [Name('b'), Const('Byte literal')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('s'), Name('Promise')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'key_to_list_mapping'], [Tuple(())], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('__bytes__', 'OP_ASSIGN')], Name('serialize'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'cookies', 'OP_ASSIGN')], CallFunc(Name('SimpleCookie'), [Getattr(Name('self'), 'cookies')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('dict'), '__getitem__'), [Name('self'), Name('key')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('field'), Name('InlineForeignKeyField')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('connection', 'OP_ASSIGN')], Subscript(Name('connections'), 'OP_APPLY', [Subscript(Name('options'), 'OP_APPLY', [Const('database')])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--addrport'), Keyword('default', Const('')), Keyword('help', Const('Port number or ipaddr:port to run the server on.'))], None, None))]))
Module(None, Stmt([Assign([AssName('oldkey', 'OP_ASSIGN')], Subscript(Name('root'), 'OP_APPLY', [Name('KEY')]))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [Name('ValidationError'), CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid_image')]), Keyword('code', Const('invalid_image'))], None, None), Subscript(CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), 'OP_APPLY', [Const(2)])], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('message'), Const('error_dict')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'is_bound', 'OP_ASSIGN')], Or([Compare(Name('data'), [('is not', Name('None'))]), Compare(Name('files'), [('is not', Name('None'))])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Const('</select>')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('connection'), 'cursor'), [], None, None), AssName('cursor', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('as_form'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Getattr(CallFunc(Getattr(Name('base'), 'lower'), [], None, None), 'endswith'), [Const('.tar')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('template'), Const('render')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('author_link')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssName('m', 'OP_ASSIGN')], Name('base'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'models', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))]))
try :
Module(None, Stmt([Assign([AssName('now', 'OP_ASSIGN')], CallFunc(Getattr(Name('now'), 'replace'), [Keyword('microsecond', Const(0))], None, None))]))
Module(None, Stmt([If([(Name('inplural'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('extra_classes', 'OP_ASSIGN')], CallFunc(Getattr(Name('extra_classes'), 'split'), [], None, None))]))
Module(None, Stmt([Function(None, 'handle_template', ['self', 'template', 'subdir'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('cls'), Name('opname'), Name('opfunc')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('year_val', 'OP_ASSIGN'), AssName('month_val', 'OP_ASSIGN'), AssName('day_val', 'OP_ASSIGN')])], Tuple([Getattr(Name('v'), 'year'), Getattr(Name('v'), 'month'), Getattr(Name('v'), 'day')]))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('TimestampSigner'), [Name('key'), Keyword('salt', Name('salt'))], None, None), 'sign'), [Name('base64d')], None, None))]))
Module(None, Stmt([Function(None, 'all_valid', ['formsets'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [CallFunc(Name('blankout'), [Name('p'), Const('F')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'e', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([CallFunc(Name('isinstance'), [Getattr(Name('self'), 'urlconf_name'), Name('list')], None, None), CallFunc(Name('len'), [Getattr(Name('self'), 'urlconf_name')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.core.management.color', [('color_style', None), ('no_style', None)], 0)]))
Module(None, Stmt([Assign([AssName('template_dir', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'handle_template'), [Subscript(Name('options'), 'OP_APPLY', [Const('template')]), Name('base_subdir')], None, None))]))
elif 'HTTP_HOST' in self . META :
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'buffer'), '+=', Name('chunk'))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Name('copy'), 'copy'), [Name('self')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('archive'), 'extract'), [Name('filename'), Name('tempdir')], None, None))]))
Module(None, Stmt([Function(None, 'decorating_function', ['user_function'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('block_context', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('context'), 'render_context'), 'get'), [Name('BLOCK_CONTEXT_KEY')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('trans_real'), '_translations', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('_trans'), 'activate'), [Name('language')], None, None))]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([Return(Name('filenames'))]))
Module(None, Stmt([Assign([AssName('EscapeString', 'OP_ASSIGN')], Name('EscapeBytes'))]))
Module(None, Stmt([Assign([AssName('WARNING', 'OP_ASSIGN')], Const(30))]))
Module(None, Stmt([Assign([AssName('app_configs', 'OP_ASSIGN')], CallFunc(Name('reversed'), [CallFunc(Name('list'), [CallFunc(Getattr(Name('apps'), 'get_app_configs'), [], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_cull_frequency', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('cull_frequency')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_fqdn', 'OP_ASSIGN')], CallFunc(Getattr(Name('socket'), 'getfqdn'), [], None, None))]))
else :
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '__class__'), [Const(''), Keyword('mutable', Name('True')), Keyword('encoding', Getattr(Name('self'), 'encoding'))], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'content'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'check'), [], None, None))]))
Module(None, Stmt([Assign([AssName('old_setting', 'OP_ASSIGN')], Getattr(Name('context'), 'autoescape'))]))
Module(None, Stmt([Function(None, 'escapejs_filter', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('HttpResponseBadRequest', [Name('HttpResponse')], None, Stmt([Pass()]), None)]))
else :
@ property
Module(None, Stmt([Function(None, 'render', ['self', 'name', 'value', 'attrs', 'choices'], [Name('None'), Tuple(())], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('etags', 'OP_ASSIGN')], CallFunc(Getattr(Name('ETAG_MATCH'), 'findall'), [Name('etag_str')], None, None))]))
Module(None, Stmt([Assign([AssName('language_code', 'OP_ASSIGN')], CallFunc(Name('get_language'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('self'), 'is_checked'), [], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Getattr(Name('self'), 'limit_choices_to'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'var', 'OP_ASSIGN')], Name('var'))]))
Module(None, Stmt([Assign([AssName('timeout', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'get_backend_timeout'), [Name('timeout')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('pattern'), Name('RegexURLResolver')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('django', None)])]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('types'), 'MethodType'), [Name('func'), Name('obj'), Getattr(Name('obj'), '__class__')], None, None))]))
Module(None, Stmt([Assign([AssName('parser', 'OP_ASSIGN')], CallFunc(Name('parser_class'), [CallFunc(Getattr(Name('lexer'), 'tokenize'), [], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [Name('ImportError'), CallFunc(Name('ImportError'), [Name('msg')], None, None), Subscript(CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), 'OP_APPLY', [Const(2)])], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'tag_function'), [Name('name')], None, None))]))
Module(None, Stmt([Assign([AssName('timeout', 'OP_ASSIGN')], CallFunc(Getattr(Name('params'), 'get'), [Const('timeout'), CallFunc(Getattr(Name('params'), 'get'), [Const('TIMEOUT'), Const(300)], None, None)], None, None))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_container'), 'append'), [CallFunc(Getattr(Name('self'), 'make_bytes'), [Name('content')], None, None)], None, None))]))
Module(None, Stmt([If([(Name('app_output'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Getattr(Name('self'), '_read_started'), Not(CallFunc(Name('hasattr'), [Name('self'), Const('_body')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('table', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'ops'), 'quote_name'), [Getattr(Name('self'), '_table')], None, None))]))
Module(None, Stmt([Function(None, 'splitext', ['self', 'the_path'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Const(':'), 'join'), [Slice(Name('hextets'), 'OP_APPLY', Const(0), Const(6))], None, None))]))
Module(None, Stmt([Return(List([Name('None'), Name('None')]))]))
Module(None, Stmt([Assign([Subscript(Name('link_next'), 'OP_ASSIGN', [Name('PREV')])], Name('link_prev'))]))
Module(None, Stmt([Assign([AssName('stderr', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('self'), Const('stderr'), CallFunc(Name('OutputWrapper'), [Getattr(Name('sys'), 'stderr'), Getattr(Getattr(Name('self'), 'style'), 'ERROR')], None, None)], None, None))]))
Module(None, Stmt([If([(Not(Name('now')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('-n'), Const('--natural'), Keyword('action', Const('store_true')), Keyword('dest', Const('use_natural_keys')), Keyword('default', Name('False')), Keyword('help', Const('Use natural keys if they are available (deprecated: use --natural-foreign instead).'))], None, None))]))
Module(None, Stmt([Assign([AssName('FILTER_SEPARATOR', 'OP_ASSIGN')], Const('|'))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
except Exception as e :
Module(None, Stmt([If([(Compare(Const('DJANGO_AUTO_COMPLETE'), [('not in', Getattr(Name('os'), 'environ'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Return(Name('s'))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], Slice(CallFunc(Getattr(Name('token'), 'split_contents'), [], None, None), 'OP_APPLY', Const(1), None))]))
Module(None, Stmt([Function(None, 'T', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_deleted_form_indexes'), 'append'), [Name('i')], None, None))]))
try :
Module(None, Stmt([Function(None, 'mail_admins', ['subject', 'message', 'fail_silently', 'connection', 'html_message'], [Name('False'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_wrapped'), [('is', Name('empty'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('self'), 'domain_regex'), 'match'), [Name('domain_part')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'flatatt', ['attrs'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('path'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'unordered_list', ['value', 'autoescape'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core.management', [('call_command', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Unsupported version: %s'), Subscript(Name('config'), 'OP_APPLY', [Const('version')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('filter_func'), '_filter_name', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([Function(None, 'strip_tags', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([With(CallFunc(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'cursor'), [], None, None), AssName('cursor', 'OP_ASSIGN'), Stmt([Pass()]))]))
except ValueError :
Module(None, Stmt([From('django.utils.safestring', [('mark_safe', None), ('SafeData', None), ('mark_for_escaping', None)], 0)]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], CallFunc(Name('SafeMIMEMultipart'), [Keyword('_subtype', Getattr(Name('self'), 'mixed_subtype')), Keyword('encoding', Name('encoding'))], None, None))]))
Module(None, Stmt([Discard(Yield(Const("# Feel free to rename the models, but don't rename db_table values or field names.")))]))
Module(None, Stmt([Assign([AssName('field_value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('getInnerText'), [Name('node')], None, None), 'strip'), [], None, None))]))
else :
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_default_manager'), Const('get_by_natural_key')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('is_aware'), [Name('o')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'prepare_value', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'handle_m2m_field'), [Name('obj'), Name('field')], None, None))]))
Module(None, Stmt([Exec(Const('exec _code_ in _globs_, _locs_'), None, None)]))
Module(None, Stmt([Import([('tarfile', None)])]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Import([('cgi', None)])]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('Critical'), Name('self')], None, None), '__init__'), [Name('CRITICAL')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('mail'), 'send'), [Keyword('fail_silently', Name('fail_silently'))], None, None))]))
Module(None, Stmt([Assign([AssName('use_natural_foreign_keys', 'OP_ASSIGN')], Or([CallFunc(Getattr(Name('options'), 'get'), [Const('use_natural_foreign_keys')], None, None), Name('use_natural_keys')]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('f'), Name('ManyToManyField')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([With(CallFunc(Getattr(Name('connection'), 'cursor'), [], None, None), AssName('cursor', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'get', ['self', 'key', 'default', 'version'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core.files', [('locks', None), ('File', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Name('walk_to_end'), [Name('ch'), Name('pattern_iter')], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('type'), [Name('result')], None, None), [('in', Tuple([Name('ConvertingDict'), Name('ConvertingList'), Name('ConvertingTuple')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssTuple([AssName('attr', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('base'), '__dict__'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Class('SignatureExpired', [Name('BadSignature')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('kwargs', 'OP_ASSIGN')], Dict([(Const('label'), CallFunc(Name('getattr'), [CallFunc(Getattr(Getattr(Name('form'), 'fields'), 'get'), [Name('name')], None, None), Const('label'), CallFunc(Name('capfirst'), [Getattr(Getattr(Name('self'), 'fk'), 'verbose_name')], None, None)], None, None))]))]))
Module(None, Stmt([Function(None, 'compare_ordering_key', ['k'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('result'), 'parent', 'OP_ASSIGN')], Name('self'))]))
try :
Module(None, Stmt([If([(Name('root'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('template', 'OP_ASSIGN')], Const('%(input)s'))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'can_order'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('form'), 'fields'), 'OP_ASSIGN', [Getattr(Getattr(Name('self'), '_pk_field'), 'name')])], CallFunc(Name('ModelChoiceField'), [Name('qs'), Keyword('initial', Name('pk_value')), Keyword('required', Name('False')), Keyword('widget', Name('widget'))], None, None))]))
Module(None, Stmt([Assign([AssName('existing_headers', 'OP_ASSIGN')], CallFunc(Name('set'), [GenExpr(GenExprInner(CallFunc(Getattr(Name('header'), 'lower'), [], None, None), [GenExprFor(AssName('header', 'OP_ASSIGN'), Name('vary_headers'), [])]))], None, None))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('Resolver404', [Name('Http404')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'kwargs', 'OP_ASSIGN')], Name('kwargs'))]))
except IOError as e :
Module(None, Stmt([Discard(Yield(Name('v')))]))
Module(None, Stmt([If([(Or([Compare(Subscript(Name('row'), 'OP_APPLY', [Const(4)]), [('is', Name('None'))]), Compare(Subscript(Name('row'), 'OP_APPLY', [Const(5)]), [('is', Name('None'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('renamed_methods', 'OP_ASSIGN')], Tuple(()))]))
Module(None, Stmt([Assign([AssName('kwargs', 'OP_ASSIGN')], Dict([(Const('pk_field'), Name('True'))]))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], Add((Add((List([Const('msgmerge')]), Getattr(Name('self'), 'msgmerge_options'))), List([Name('pofile'), Name('potfile')]))))]))
Module(None, Stmt([Assign([AssName('match', 'OP_ASSIGN')], CallFunc(Getattr(Name('RE_DATE'), 'match'), [Name('value')], None, None))]))
Module(None, Stmt([If([(Not(Name('match')), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Return(Name('lookup_view'))]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('fastcgi_help'), [Const('ERROR: Invalid option for daemonize parameter.')], None, None))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '_expire_info'), 'OP_ASSIGN', [Name('key')])], CallFunc(Getattr(Name('self'), 'get_backend_timeout'), [Name('timeout')], None, None))]))
Module(None, Stmt([Import([('itertools', None)])]))
Module(None, Stmt([If([(Name('safe'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('path', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('path'), 'lstrip'), [Const('/')], None, None), 'lstrip'), [Const('\\')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('memo'), 'OP_ASSIGN', [CallFunc(Name('id'), [Name('self')], None, None)])], Name('obj'))]))
Module(None, Stmt([Return(Getattr(Name('self'), '__name'))]))
Module(None, Stmt([Assign([AssName('_func_globals', 'OP_ASSIGN')], Const('func_globals'))]))
Module(None, Stmt([If([(Name('use_func'), Stmt([Pass()]))], None)]))
except Exception :
Module(None, Stmt([If([(Compare(Name('tablename'), [('in', CallFunc(Getattr(Getattr(Name('connection'), 'introspection'), 'table_names'), [], None, None))]), Stmt([Pass()]))], None)]))
parser . add_option ( '--traceback' , action = 'store_true' ,  help = 'Raise on exception' )
Module(None, Stmt([Assign([AssName('d', 'OP_ASSIGN')], CallFunc(Getattr(Name('m'), 'groupdict'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'paginator'), 'validate_number'), [Add((Getattr(Name('self'), 'number'), Const(1)))], None, None))]))
Module(None, Stmt([Assign([AssName('httpd', 'OP_ASSIGN')], CallFunc(Name('httpd_cls'), [Name('server_address'), Name('WSGIRequestHandler'), Keyword('ipv6', Name('ipv6'))], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('loader'), Tuple([Name('tuple'), Name('list')])], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('new_migration', 'OP_ASSIGN')], CallFunc(Name('subclass'), [Mod((Const('0001_squashed_%s'), Getattr(Name('migration'), 'name'))), Name('app_label')], None, None))]))
Module(None, Stmt([Assign([AssName('filemsg', 'OP_ASSIGN')], Mod((Const('file %s, '), Name('origin'))))]))
Module(None, Stmt([Assign([Subscript(Name('attrs'), 'OP_ASSIGN', [Const('id')])], Getattr(Name('self'), 'html_initial_id'))]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Name('mark_for_escaping'), [Name('new_obj')], None, None))]))
Module(None, Stmt([Class('SimpleNode', [Name('TagHelperNode')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('initial_forms'), [('>', Getattr(Name('self'), 'max_num')), ('>=', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('cache'))]))
Module(None, Stmt([Assign([AssName('vary_headers', 'OP_ASSIGN')], CallFunc(Getattr(Name('cc_delim_re'), 'split'), [Subscript(Name('response'), 'OP_APPLY', [Const('Vary')])], None, None))]))
Module(None, Stmt([Assign([AssName('leave_locale_alone', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Return(Name('default_key_func'))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('arg'), Name('Promise')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__add__', ['self', 'rhs'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssName('itervalues', 'OP_ASSIGN')], Name('_itervalues'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const(' [ ] %s'), Name('title')))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('f'), 'error_messages'), 'setdefault'), [Const('incomplete'), Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('incomplete')])], None, None))]))
Module(None, Stmt([Assign([AssName('PATTERN', 'OP_ASSIGN')], Const("     classdef< 'class' any+ ':'               suite< any*                      funcdef< 'def' unifunc='__unicode__'                               parameters< '(' NAME ')' > any+ >                      any* > >     "))]))
Module(None, Stmt([Assign([AssName('escaper', 'OP_ASSIGN')], Lambda(['x'], [], 0, Name('x')))]))
else :
Module(None, Stmt([If([(Not(Bitand([Subscript(Name('attr_list'), 'OP_APPLY', [Const(3)]), Getattr(Name('termios'), 'ECHO')])), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'find_template_cache'), 'OP_ASSIGN', [Name('key')])], Name('result'))]))
Module(None, Stmt([If([(And([Compare(Name('text'), [('==', Const(''))]), Compare(CallFunc(Name('len'), [Name('opts')], None, None), [('==', Const(1))]), Compare(Subscript(Name('opts'), 'OP_APPLY', [Const(0)]), [('==', Const('reset'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('basedirs'), 'append'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Getattr(Name('app_config'), 'path'), Const('locale')], None, None)], None, None))]))
@ property
Module(None, Stmt([Function(None, 'create_variable_node', ['self', 'contents'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Name('package')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('unlink', 'OP_ASSIGN')], Getattr(Name('os'), 'unlink'))]))
except ( AttributeError , TypeError ) :
field_params [ 'decimal_places' ] = row [ 5 ] if row [ 5 ] is not None else 5
@ stringfilter
Module(None, Stmt([Assign([AssAttr(Name('self'), 'filter_expression', 'OP_ASSIGN')], Name('filter_expression'))]))
Module(None, Stmt([Assign([AssName('libraries', 'OP_ASSIGN')], Dict(()))]))
except ValidationError as e :
Module(None, Stmt([Assign([AssName('illegal_formatting', 'OP_ASSIGN')], CallFunc(Getattr(Name('_illegal_formatting'), 'search'), [Name('fmt')], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_num_pages'))]))
Module(None, Stmt([If([(Name('msg'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('errors happened while running msguniq\n%s'), Name('errors')))], None, None), None, None)]))
Module(None, Stmt([For(AssName('filepath', 'OP_ASSIGN'), CallFunc(Getattr(Name('self'), 'get_template_sources'), [Name('template_name'), Name('template_dirs')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('VARIABLE_ATTRIBUTE_SEPARATOR', 'OP_ASSIGN')], Const('.'))]))
Module(None, Stmt([Function(None, 'format_subject', ['self', 'subject'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('script_name', 'OP_ASSIGN')], Slice(Name('script_url'), 'OP_APPLY', None, UnarySub(CallFunc(Name('len'), [Name('path_info')], None, None))))]))
Module(None, Stmt([From('importlib', [('import_module', None)], 0)]))
Module(None, Stmt([Function(None, 't', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'autocomplete'), [], None, None))]))
Module(None, Stmt([Pass()]))
else :
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([Subscript(Name('url_fields'), 'OP_ASSIGN', [Const(1)])], Subscript(Name('url_fields'), 'OP_APPLY', [Const(2)]))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('initial')], None, None), [('!=', CallFunc(Name('len'), [Name('data')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Mod((Const('%s-%s'), Tuple([Getattr(Name('self'), 'prefix'), Name('index')]))))]))
Module(None, Stmt([From('django.core.management.base', [('AppCommand', None)], 0)]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assert(Compare(Name('remaining'), [('>', Const(0))]), Const('remaining bytes to read should never go negative'))]))
Module(None, Stmt([With(CallFunc(Name('open'), [Name('pythonrc')], None, None), AssName('handle', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('result'), 'lower'), [], None, None))]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None), ('CommandError', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('sys'), 'stderr'), 'write'), [Name('msg')], None, None))]))
Module(None, Stmt([Assign([AssName('collect', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('content', 'OP_ASSIGN')], CallFunc(Getattr(Name('template'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([Assign([AssName('file', 'OP_ASSIGN')], CallFunc(Getattr(Name('tempfile'), 'NamedTemporaryFile'), [Keyword('suffix', Const('.upload'))], None, None))]))
Module(None, Stmt([Function(None, 'load', ['self', 'rawdata'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Not(Compare(Name('self'), [('==', Name('other'))])))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_current', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Assign([AssName('input_type', 'OP_ASSIGN')], Const('checkbox'))]))
Module(None, Stmt([Assign([AssName('host', 'OP_ASSIGN')], Mod((Const('%s:%s'), Tuple([Name('host'), Name('server_port')]))))]))
Module(None, Stmt([Discard(Yield(CallFunc(Name('SubWidget'), [Name('self'), Name('name'), Name('value'), Name('attrs'), Name('choices')], None, None)))]))
Module(None, Stmt([Function(None, 'temporary_file_path', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('root', 'OP_ASSIGN'), Getattr(Name('settings'), 'ALLOWED_INCLUDE_ROOTS'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Name('kwds'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('df', 'OP_ASSIGN')], CallFunc(Name('DateFormat'), [Name('value')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('sys'), 'stdout'), 'write'), [Add((CallFunc(Getattr(Name('self'), 'main_help_text'), [Keyword('commands_only', Name('True'))], None, None), Const('\n')))], None, None))]))
Module(None, Stmt([Return(Name('cached'))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('models', 'OP_ASSIGN')], Const('models'))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('\n'), 'join'), [Name('statements')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('datetime'), 'date'), [], None, Name('kw')))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid')]), Keyword('code', Const('invalid'))], None, None), None, None)]))
Module(None, Stmt([For(AssName('o', 'OP_ASSIGN'), Name('opts'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('text'), Const('__html__')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Class('BadSerializer', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'iter_format_modules', ['lang', 'format_module_path'], [Name('None')], 0, None, Stmt([Pass()]))]))
except AttributeError :
Module(None, Stmt([If([(Name('formatter'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('cache', 'OP_ASSIGN')], CallFunc(Name('DefaultCacheProxy'), [], None, None))]))
Module(None, Stmt([Class('TokenBase', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(CallFunc(Name('type'), [Name('self')], None, None), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'delete_first_token'), [], None, None))]))
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Name('URLInput'))]))
Module(None, Stmt([Assign([AssName('_format_cache', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([From('importlib.util', [('find_spec', 'importlib_find')], 0)]))
Module(None, Stmt([If([(Compare(Getattr(Name('e'), 'errno'), [('!=', Getattr(Name('errno'), 'EEXIST'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('lead', 'OP_ASSIGN'), AssName('trail', 'OP_ASSIGN')])], Tuple([CallFunc(Name('escape'), [Name('lead')], None, None), CallFunc(Name('escape'), [Name('trail')], None, None)]))]))
else :
Module(None, Stmt([If([(And([Name('ignore'), Compare(Name('field_name'), [('not in', Name('model_fields'))])]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Function(None, '__deepcopy__', ['self', 'memo'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('old_style_list', 'OP_ASSIGN')], Name('True'))]))
@ stringfilter
Module(None, Stmt([For(AssTuple([AssName('x', 'OP_ASSIGN'), AssName('y', 'OP_ASSIGN')]), CallFunc(Name('zip'), [Name('val1'), Name('val2')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'urlsafe_base64_encode', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('force_str', 'OP_ASSIGN')], Name('force_text'))]))
Module(None, Stmt([Function(None, 'handle', ['self', 'args', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('connection', 'OP_ASSIGN')], Subscript(Name('connections'), 'OP_APPLY', [Name('database')]))]))
Module(None, Stmt([Assign([AssName('attrs', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('IntegerField'), Name('self')], None, None), 'widget_attrs'), [Name('widget')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('cls'), '__dispatch', 'OP_ASSIGN')], Dict(()))]))
else :
Module(None, Stmt([If([(CallFunc(Name('reduce'), [Getattr(Name('operator'), 'eq'), Name('level')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('exc_info', 'OP_ASSIGN')], Tuple([Name('None'), CallFunc(Getattr(Name('record'), 'getMessage'), [], None, None), Name('None')]))]))
Module(None, Stmt([Assign([AssName('latest_date', 'OP_ASSIGN')], Name('item_date'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'common_logger_config'), [Name('root'), Name('config'), Name('incremental')], None, None))]))
Module(None, Stmt([From('importlib', [('import_module', None)], 0)]))
elif name == 'id' :
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Const('\n'), 'join'), [Name('output')], None, None)], None, None))]))
self . use_tls = settings . EMAIL_USE_TLS if use_tls is None else use_tls
Module(None, Stmt([If([(Compare(Name('key'), [('in', Name('dict_'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'content', 'OP_ASSIGN')], Name('content'))]))
Module(None, Stmt([Assign([AssName('basedirs', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'abspath'), [Name('basedir')], None, None), [ListCompFor(AssName('basedir', 'OP_ASSIGN'), Name('basedirs'), [ListCompIf(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'isdir'), [Name('basedir')], None, None))])]))]))
Module(None, Stmt([Assign([AssName('meta', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('form'), Const('Meta'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('prefix_norm', 'OP_ASSIGN'), AssName('prefix_args', 'OP_ASSIGN')])], Subscript(CallFunc(Name('normalize'), [CallFunc(Name('urlquote'), [Name('_prefix')], None, None)], None, None), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'configure_root'), [Name('root')], None, None))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'can_delete'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'compress', ['self', 'data_list'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('provided', 'OP_ASSIGN')], CallFunc(Name('list'), [Name('provided')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('exclude'), 'append'), [Getattr(Name('f'), 'name')], None, None))]))
Module(None, Stmt([Function(None, 'forms', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('space'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('UploadedFile', [Name('File')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('module', 'OP_ASSIGN')], CallFunc(Name('_import_module'), [Getattr(Name('self'), 'mod')], None, None))]))
Module(None, Stmt([Assign([AssName('cache_key', 'OP_ASSIGN')], Mod((Const('views.decorators.cache.cache_header.%s.%s'), Tuple([Name('key_prefix'), CallFunc(Getattr(Name('url'), 'hexdigest'), [], None, None)]))))]))
Module(None, Stmt([Assign([AssName('PB', 'OP_ASSIGN')], LeftShift((Const(1), Const(50))))]))
Module(None, Stmt([If([(Or([Compare(Name('limit'), [('is', Name('None'))]), Compare(CallFunc(Name('len'), [Name('x')], None, None), [('<=', Name('limit'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'a', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('attachment', 'OP_ASSIGN')], CallFunc(Name('SafeMIMEMessage'), [Name('content'), Name('subtype')], None, None))]))
Module(None, Stmt([Assign([AssName('sec', 'OP_ASSIGN')], CallFunc(Name('int'), [CallFunc(Getattr(Name('m'), 'group'), [Const('sec')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('TypedMultipleChoiceField'), Name('self')], None, None), 'validate'), [Name('value')], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Discard(CallFunc(Name('import_string'), [Name('backend')], None, None))]))
Module(None, Stmt([Assign([AssName('text', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('text')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('final_attrs'), 'OP_ASSIGN', [Const('checked')])], Const('checked'))]))
Module(None, Stmt([Function(None, 'split_domain_port', ['host'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'set_script_prefix', ['prefix'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'filters', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'template', 'context', 'content_type', 'status'], [Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Class('EmailBackend', [Name('BaseEmailBackend')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'module_to_dict', ['module', 'omittable'], [Lambda(['k'], [], 0, CallFunc(Getattr(Name('k'), 'startswith'), [Const('_')], None, None))], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'use_natural_keys', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'pop'), [Const('use_natural_keys'), Name('False')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'convert_charrefs', 'kwargs'], [Name('False')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('attrs', 'OP_ASSIGN')], CallFunc(Name('dict'), [Or([Name('attrs'), Dict(())])], None, Dict([(Const('for'), Name('id_for_label'))])))]))
Module(None, Stmt([If([(And([Subscript(Name('options'), 'OP_APPLY', [Const('host')]), Subscript(Name('options'), 'OP_APPLY', [Const('port')]), Not(Subscript(Name('options'), 'OP_APPLY', [Const('socket')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('leading'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('attrs'), 'OP_ASSIGN', [Const('max')])], Getattr(Name('self'), 'max_value'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_callback', 'OP_ASSIGN')], CallFunc(Name('get_callable'), [Getattr(Name('self'), '_callback_str')], None, None))]))
Module(None, Stmt([If([(Name('endbmatch'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'label_tag', ['self', 'contents', 'attrs', 'label_suffix'], [Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('input_format', 'OP_ASSIGN')], Subscript(CallFunc(Name('get_format'), [Const('DATE_INPUT_FORMATS')], None, None), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Assign([AssName('pos', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'file'), 'tell'), [], None, None))]))
Module(None, Stmt([Assign([AssName('text', 'OP_ASSIGN')], Slice(Name('text'), 'OP_APPLY', Const(1), None))]))
else :
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('elt'), Name('Group')], None, None), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'version', 'OP_ASSIGN')], CallFunc(Getattr(Name('params'), 'get'), [Const('VERSION'), Const(1)], None, None))]))
Module(None, Stmt([If([(Name('extra_attrs'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('message_context', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([For(AssTuple([AssName('refto', 'OP_ASSIGN'), AssName('refs', 'OP_ASSIGN')]), CallFunc(Getattr(Name('references'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('db', 'OP_ASSIGN')], CallFunc(Getattr(Name('router'), 'db_for_write'), [Getattr(Name('self'), 'cache_model_class')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('"%s" is not a valid IPv6 address.'), Getattr(Name('self'), 'addr')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('v', 'OP_ASSIGN')], CallFunc(Name('ValueError'), [Mod((Const('Cannot resolve %r: %s'), Tuple([Name('s'), Name('e')])))], None, None))]))
Module(None, Stmt([Assign([AssName('param', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'leave_locale_alone')), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('f', 'OP_ASSIGN'), Name('file_list'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([Subscript(Name('result'), 'OP_ASSIGN', [UnarySub(Const(1))])], CallFunc(Name('Choice'), [List([Name('None'), Subscript(Name('result'), 'OP_APPLY', [UnarySub(Const(1))])])], None, None))]))
else :
Module(None, Stmt([Return(CallFunc(Name('AssignmentNode'), [Name('takes_context'), Name('args'), Name('kwargs'), Name('target_var')], None, None))]))
Module(None, Stmt([Assign([AssName('buf', 'OP_ASSIGN')], CallFunc(Name('StreamingBuffer'), [], None, None))]))
signals . got_request_exception . send ( sender = self . __class__ , request = request )
Module(None, Stmt([Class('RadioChoiceInput', [Name('ChoiceInput')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Return(Name('FILE_INPUT_CONTRADICTION'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--no-color'), Keyword('action', Const('store_true')), Keyword('dest', Const('no_color')), Keyword('default', Name('False')), Keyword('help', Const("Don't colorize the command output."))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'locale_dir', 'OP_ASSIGN')], Name('locale_dir'))]))
Module(None, Stmt([Assign([AssName('major', 'OP_ASSIGN')], CallFunc(Getattr(Const('.'), 'join'), [GenExpr(GenExprInner(CallFunc(Name('str'), [Name('x')], None, None), [GenExprFor(AssName('x', 'OP_ASSIGN'), Slice(Name('version'), 'OP_APPLY', None, Name('parts')), [])]))], None, None))]))
Module(None, Stmt([If([(Not(Name('pythonrc')), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Assign([AssName('fixture_files', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Name('msg')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('__Y2', 'OP_ASSIGN')], Const('(?P<year>\\d{2})'))]))
Module(None, Stmt([Function(None, 'force_escape', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Name('_urlize'), [Name('value'), Keyword('nofollow', Name('True')), Keyword('autoescape', Name('autoescape'))], None, None)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('sys'), 'stderr', 'OP_ASSIGN')], CallFunc(Name('open'), [Name('err_log'), Const('a'), Name('buffering')], None, None))]))
@ lru_cache . lru_cache ( maxsize = None )
Module(None, Stmt([Assign([AssName('tt', 'OP_ASSIGN')], CallFunc(Getattr(Name('_time'), 'localtime'), [Name('stamp')], None, None))]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Return(Name('retval'))]))
Module(None, Stmt([Assign([AssName('ns_resolver', 'OP_ASSIGN')], CallFunc(Name('RegexURLResolver'), [Name('ns_pattern'), Getattr(Name('resolver'), 'url_patterns')], None, None))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'timezone')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateDoesNotExist'), [Const('No template names provided')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('m', 'OP_ASSIGN')], CallFunc(Name('Media'), [], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("Destination directory '%s' does not exist, please create it first."), Name('top_dir')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_upload_handlers', 'OP_ASSIGN')], Name('upload_handlers'))]))
Module(None, Stmt([Class('RegexURLResolver', [Name('LocaleRegexProvider')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], Mod((Const("%(model)s.Meta.%(opt)s cannot be a string. Did you mean to type: ('%(value)s',)?"), Dict([(Const('model'), Getattr(Name('new_class'), '__name__')), (Const('opt'), Name('opt')), (Const('value'), Name('value'))]))))]))
@ property
Module(None, Stmt([Function(None, 'save_instance', ['form', 'instance', 'fields', 'fail_message', 'commit', 'exclude', 'construct'], [Name('None'), Const('saved'), Name('True'), Name('None'), Name('True')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('_'), [Const('midnight')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('callback'), [Name('request')], None, Name('param_dict')))]))
Module(None, Stmt([Function(None, '__setstate__', ['self', 'obj_dict'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'nodelist'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('initial', 'OP_ASSIGN')], List(()))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'msgattrib_options', 'OP_ASSIGN')], Add((Slice(Getattr(Name('self'), 'msgattrib_options'), 'OP_APPLY', None, None), List([Const('--no-location')]))))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('field_node'), 'getElementsByTagName'), [Const('None')], None, None), Stmt([Pass()]))], None)]))
except ImportError :
Module(None, Stmt([Assign([AssName('vary_headers', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Getattr(Name('form'), 'instance'), CallFunc(Getattr(Getattr(Name('self'), 'fk'), 'get_attname'), [], None, None), Getattr(Getattr(Name('self'), 'instance'), 'pk')], None, None))]))
Module(None, Stmt([AugAssign(Name('error_msg'), '+=', Mod((Const(" Got this from the '%s' variable."), Getattr(Getattr(Name('self'), 'parent_name'), 'token'))))]))
Module(None, Stmt([Assign([AssName('natural', 'OP_ASSIGN')], CallFunc(Getattr(Name('value'), 'natural_key'), [], None, None))]))
Module(None, Stmt([Function(None, 'find_filter', ['self', 'filter_name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'setting', 'OP_ASSIGN'), AssAttr(Name('self'), 'nodelist', 'OP_ASSIGN')])], Tuple([Name('setting'), Name('nodelist')]))]))
Module(None, Stmt([Assign([AssName('d', 'OP_ASSIGN')], CallFunc(Getattr(Name('datetime'), 'datetime'), [Getattr(Name('d'), 'year'), Getattr(Name('d'), 'month'), Getattr(Name('d'), 'day')], None, None))]))
Module(None, Stmt([If([(Name('trim'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([If([(And([CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Getattr(Name('self'), 'file_path')], None, None), Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'isdir'), [Getattr(Name('self'), 'file_path')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'emit_post_migrate_signal', ['created_models', 'verbosity', 'interactive', 'db'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'tell', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('tuple'), [Name('app_template_dirs')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('check_programs'), [Const('msguniq'), Const('msgmerge'), Const('msgattrib')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('exec_'), [Const('def reraise(tp, value, tb=None):     raise tp, value, tb ')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'subject', 'body', 'from_email', 'to', 'bcc', 'connection', 'attachments', 'headers', 'cc'], [Const(''), Const(''), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_callback', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('allowed_schemes', 'OP_ASSIGN')], List([Const('http'), Const('https'), Const('ftp')]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'resolve'), [Name('value')], None, None))]))
Module(None, Stmt([Import([('json', None)])]))
Module(None, Stmt([Assign([Subscript(Name('config'), 'OP_ASSIGN', [Const('()')])], Name('factory'))]))
else :
Module(None, Stmt([Raise(CallFunc(Name('ContentNotRenderedError'), [Const('The response content must be rendered before it can be accessed.')], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Name('format_module_path'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'utcoffset', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('bf'), 'is_hidden'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Class('SplitHiddenDateTimeWidget', [Name('SplitDateTimeWidget')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('cls', 'OP_ASSIGN')], CallFunc(Getattr(Name('extension_map'), 'get'), [Name('ext')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('key'), 'startswith'), [Getattr(Name('self'), 'prefix')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Const('Invalid arguments provided to assignment_tag')], None, None), None, None)]))
Module(None, Stmt([Function(None, 'set_cdata_mode', ['self', 'tag'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_container', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Name('errors'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Name('import_module'), [Const('.management'), Getattr(Name('app_config'), 'name')], None, None))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(Mod((Const('%s(%s)'), Tuple([Getattr(Getattr(Name('self'), '__class__'), '__name__'), Name('dictreprs')]))))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('logging_config_func', 'OP_ASSIGN')], CallFunc(Name('import_string'), [Name('logging_config')], None, None))]))
Module(None, Stmt([Function(None, '__getattr__', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('final_output'), 'extend'), [Name('output')], None, None))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Discover and run tests in the specified modules or the current directory.'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cache'), 'clear'), [], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Getattr(Name('self'), 'message'), Keyword('code', Getattr(Name('self'), 'code'))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('default_translation', 'OP_ASSIGN')], CallFunc(Name('translation'), [Getattr(Name('settings'), 'LANGUAGE_CODE')], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Function(None, 'tzname', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const('must define at least one ordering operation: < > <= >=')], None, None), None, None)]))
Module(None, Stmt([Assign([Subscript(Name('words'), 'OP_ASSIGN', [Name('i')])], CallFunc(Name('mark_safe'), [Mod((Const('%s%s%s'), Tuple([Name('lead'), Name('middle'), Name('trail')])))], None, None))]))
Module(None, Stmt([AugAssign(Name('out'), '+=', Mod((Const('</%s>'), Name('tag'))))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([If([(CallFunc(Name('len'), [Name('bits')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([AugAssign(Name('password'), '+=', Mul((Const('\x00'), Sub((Getattr(Name('inner'), 'block_size'), CallFunc(Name('len'), [Name('password')], None, None))))))]))
elif isinstance ( value , datetime . date ) :
Module(None, Stmt([Return(Name('_wrapper'))]))
files . append ( entry )
Module(None, Stmt([Return(CallFunc(Getattr(Name('pickle'), 'loads'), [Name('pickled')], None, None))]))
Module(None, Stmt([Function(None, 'clear', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'render', ['self', 'name', 'value', 'attrs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([If([(Getattr(Name('f'), 'db_index'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([From('django.utils.translation', [('ugettext_lazy', '_')], 0)]))
Module(None, Stmt([Assign([AssName('values', 'OP_ASSIGN')], Name('_itervalues'))]))
Module(None, Stmt([Return(Tuple([List([Subscript(Name('source'), 'OP_APPLY', [Const(0)])]), List([Name('params')])]))]))
else :
Module(None, Stmt([From('django.core.serializers.python', [('Deserializer', 'PythonDeserializer')], 0)]))
Module(None, Stmt([Assign([AssName('directory', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'dirname'), [Name('full_path')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--keep-pot'), Keyword('action', Const('store_true')), Keyword('dest', Const('keep_pot')), Keyword('default', Name('False')), Keyword('help', Const('Keep .pot file after making messages. Useful when debugging.'))], None, None))]))
Module(None, Stmt([Function(None, '_cull', ['self', 'db', 'cursor', 'now'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('smart_text'), [Name('value')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('s'), Name('bytes')], None, None), Stmt([Pass()]))], None)]))
@ register . filter ( is_safe = True , needs_autoescape = True )
Module(None, Stmt([If([(Name('response'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Function(None, 'upload_handlers', ['self'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([If([(Name('id_'), Stmt([Pass()]))], None)]))
from django . core . exceptions import ValidationError
Module(None, Stmt([Function(None, 'load_handler', ['path', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('palette'), 'update'), [Subscript(Name('PALETTES'), 'OP_APPLY', [Name('part')])], None, None))]))
Module(None, Stmt([Assign([AssName('Iterator', 'OP_ASSIGN')], Name('object'))]))
Module(None, Stmt([Return(Compare(Name('initial_value'), [('!=', Name('data_value'))]))]))
Module(None, Stmt([Function(None, 'is_writable', ['path'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('Unable to serialize database: %s'), Name('e')))], None, None), None, None)]))
Module(None, Stmt([Class('CallbackFilter', [Getattr(Name('logging'), 'Filter')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([With(CallFunc(Getattr(Name('transaction'), 'atomic'), [Keyword('using', Getattr(Name('connection'), 'alias'))], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'next', 'OP_ASSIGN')], Name('next'))]))
Module(None, Stmt([Function(None, '__call__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('display_url', 'OP_ASSIGN')], Name('url'))]))
@ stringfilter
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Getattr(Name('base'), 'build_instance'), [Name('Model'), Name('data'), Name('db')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('timezone'), 'localize'), [Name('value'), Keyword('is_dst', Name('None'))], None, None))]))
Module(None, Stmt([Assign([AssName('handler', 'OP_ASSIGN')], Subscript(Getattr(Name('logging'), '_handlers'), 'OP_APPLY', [Name('name')]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'get_str_from_wsgi', ['environ', 'key', 'default'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'yesno', ['value', 'arg'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'execute', ['self', 'args', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'slugify', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'clean', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'offset', 'name'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('end', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('text')], None, None))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([From('itertools', [('dropwhile', None)], 0)]))
Module(None, Stmt([Return(List([Tuple([Const(''), List(())])]))]))
Module(None, Stmt([If([(Compare(Const('class'), [('in', Name('attrs'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'filter', ['self', 'record'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Getattr(Name('settings'), 'configured')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('MIMEMessage'), '__setitem__'), [Name('self'), Name('name'), Name('val')], None, None))]))
Module(None, Stmt([Return(Add((List([Name('globalpath')]), CallFunc(Name('list'), [Getattr(Name('settings'), 'LOCALE_PATHS')], None, None))))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('app_label'), [('not in', Getattr(Getattr(Name('executor'), 'loader'), 'migrated_apps'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__eq__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_ordering', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('current_chunk', 'OP_ASSIGN')], CallFunc(Getattr(Name('old_file'), 'read'), [Name('chunk_size')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('values', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('parser'), 'compile_filter'), [Name('arg')], None, None), [ListCompFor(AssName('arg', 'OP_ASSIGN'), Slice(Name('args'), 'OP_APPLY', Const(1), None), [])]))]))
Module(None, Stmt([If([(Compare(Name('saved_locale'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
elif common_prefix is None :
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('line', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Name('table_output')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'errors'), CallFunc(Name('hasattr'), [Getattr(Name('self'), 'form'), Const('error_css_class')], None, None)]), Stmt([Pass()]))], None)]))
@ register . tag ( 'block' )
try :
Module(None, Stmt([Function(None, 'unescape_entities', ['text'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('renamed_methods', 'OP_ASSIGN')], Tuple([Tuple([Const('_get_memcache_timeout'), Const('get_backend_timeout'), Name('RemovedInDjango19Warning')])]))]))
@ register . filter ( "phone2numeric" , is_safe = True )
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('must_be_first', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('sql_file')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('only_new'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'set_many', ['self', 'data', 'timeout', 'version'], [Name('DEFAULT_TIMEOUT'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('urlconf_name'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'environ'), 'get'), [Const('DJANGO_SETTINGS_MODULE')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('g', 'OP_ASSIGN')], CallFunc(Getattr(Name('generator'), 'Generator'), [Name('fp'), Keyword('mangle_from_', Name('False'))], None, None))]))
Module(None, Stmt([Function(None, 'error', ['self', 'token', 'msg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'widgets', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('options'), Const('widgets'), Name('None')], None, None))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([From('django.utils.encoding', [('force_bytes', None), ('force_text', None), ('iri_to_uri', None)], 0)]))
Module(None, Stmt([Assign([AssName('url', 'OP_ASSIGN')], CallFunc(Getattr(Name('hashlib'), 'md5'), [CallFunc(Name('force_bytes'), [CallFunc(Name('iri_to_uri'), [CallFunc(Getattr(Name('request'), 'build_absolute_uri'), [], None, None)], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('template', 'OP_ASSIGN')], CallFunc(Name('Template'), [Name('content')], None, None))]))
Module(None, Stmt([If([(Name('typed'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('field', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('Model'), '_meta'), 'get_field'), [Name('field_name')], None, None))]))
Module(None, Stmt([Assign([AssName('references_to_delete', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('errno', None)])]))
Module(None, Stmt([If([(Compare(Name('refto'), [('in', Name('seen_models'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'incr_version'), [Name('key'), UnarySub(Name('delta')), Name('version')], None, None))]))
Module(None, Stmt([If([(Compare(Name('loader'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'base36_to_int', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], Slice(CallFunc(Getattr(Name('token'), 'split_contents'), [], None, None), 'OP_APPLY', Const(1), None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_producer', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Compare(Getattr(Name('sys'), 'version_info'), [('>=', Tuple([Const(2), Const(7), Const(2)]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'clear', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_set_regex', ['self', 'regex'], [], 0, None, Stmt([Pass()]))]))
elif settings . USE_TZ :
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('Unable to find a locale path to store translations for file %s'), Name('file_path')))], None, None), None, None)]))
Module(None, Stmt([If([(And([Not(Getattr(Name('self'), 'allow_empty_file')), Not(Name('file_size'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'escapejs', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('int'), [Subscript(CallFunc(Name('str'), [Name('value')], None, None), 'OP_APPLY', [UnarySub(Name('arg'))])], None, None))]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('time'), 'sleep'), [Const(1)], None, None))]))
Module(None, Stmt([For(AssName('pythonrc', 'OP_ASSIGN'), Tuple([CallFunc(Getattr(Getattr(Name('os'), 'environ'), 'get'), [Const('PYTHONSTARTUP')], None, None), Const('~/.pythonrc.py')]), Stmt([Pass()]), None)]))
Module(None, Stmt([AugAssign(Name('i'), '+=', Const(1))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('CommandParser'), Name('self')], None, None), 'parse_args'), [Name('args'), Name('namespace')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_max_entries', 'OP_ASSIGN')], Const(300))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('io'), 'open'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Getattr(Name('self'), 'dirpath'), Name('thefile')], None, None), Const('w'), Keyword('encoding', Const('utf-8'))], None, None), AssName('fp', 'OP_ASSIGN'), Stmt([Pass()]))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('-i'), Const('--interface'), Keyword('choices', Getattr(Name('self'), 'shells')), Keyword('dest', Const('interface')), Keyword('help', Const('Specify an interactive interpreter interface. Available options: "ipython" and "bpython"'))], None, None))]))
Module(None, Stmt([If([(Name('data'), Stmt([Pass()]))], None)]))
except OSError as e :
Module(None, Stmt([Assign([AssName('format_module_path', 'OP_ASSIGN')], Getattr(Name('settings'), 'FORMAT_MODULE_PATH'))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Name('value'), 'replace'), [Const('\n'), Const('<br />')], None, None)], None, None))]))
Module(None, Stmt([Function(None, '_set_queryset', ['self', 'queryset'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('ungettext', 'OP_ASSIGN')], Name('ngettext'))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('empty_label'), Tuple([Name('list'), Name('tuple')])], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Return(Const(None))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_wrapped', 'OP_ASSIGN')], Name('empty'))]))
@ property
@ property
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Getattr(Name('self'), 'message'), Keyword('code', Getattr(Name('self'), 'code'))], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Name('fp'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('directory'), Keyword('nargs', Const('?')), Keyword('help', Const('Optional destination directory'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('format_html'), [Const('<label{0}>{1} {2}</label>'), Name('label_for'), CallFunc(Getattr(Name('self'), 'tag'), [], None, None), Getattr(Name('self'), 'choice_label')], None, None))]))
try :
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None)], 0)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('SortedDict'), Name('self')], None, None), 'setdefault'), [Name('key'), Name('default')], None, None))]))
Module(None, Stmt([Function(None, 'parse_endtag', ['self', 'i'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('whitelist'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([If([(And([CallFunc(Name('isinstance'), [Getattr(Name('settings'), 'TIME_ZONE'), Getattr(Name('six'), 'string_types')], None, None), Compare(Name('pytz'), [('is not', Name('None'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.encoding', [('force_str', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'close'), [], None, None))]))
Module(None, Stmt([If([(Compare(Name('representative'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_caches', 'OP_ASSIGN')], CallFunc(Name('local'), [], None, None))]))
Module(None, Stmt([Class('ExternalReferenceForbidden', [Name('DefusedXmlException')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of BaseArchive must provide a list() method')], None, None), None, None)]))
Module(None, Stmt([For(AssName('line', 'OP_ASSIGN'), CallFunc(Getattr(Name('text'), 'splitlines'), [Name('True')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(Getattr(Name('field'), 'show_hidden_initial')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'hide_empty', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('hide_empty'), Name('False')], None, None))]))
Module(None, Stmt([If([(Compare(Name('basetype'), [('==', Const('text'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('errors'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('existing_headers', 'OP_ASSIGN')], CallFunc(Name('set'), [GenExpr(GenExprInner(CallFunc(Getattr(Name('header'), 'lower'), [], None, None), [GenExprFor(AssName('header', 'OP_ASSIGN'), Name('vary_headers'), [])]))], None, None))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('field_notes'), 'append'), [Const('Field renamed because it was a Python reserved word.')], None, None))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Function(None, 'loaders', ['self'], [], 0, None, Stmt([Pass()]))]))
self . exception = exception
Module(None, Stmt([Function(None, '__init__', ['self', 'attrs', 'format'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
elif self . fixture_object_count == self . loaded_object_count :
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([If([(Not(CallFunc(Name('supports_color'), [], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), '_exit'), [Const(1)], None, None))]))
Module(None, Stmt([Assign([AssName('_localtime', 'OP_ASSIGN')], CallFunc(Name('LocalTimezone'), [], None, None))]))
else :
Module(None, Stmt([Function(None, '__copy__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Getattr(Name('six'), 'text_type'), [Name('s')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'interactive', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('interactive')], None, None))]))
Module(None, Stmt([Return(Subscript(Getattr(Name('self'), '_namespace_dict'), 'OP_APPLY', [Name('language_code')]))]))
Module(None, Stmt([For(AssName('taglib', 'OP_ASSIGN'), Slice(Name('bits'), 'OP_APPLY', Const(1), None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '_get_request', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Subscript(Getattr(Name('self'), 'object_list'), 'OP_APPLY', [Name('index')]))]))
Module(None, Stmt([Return(CallFunc(CallFunc(Name('getattr'), [Name('self'), Name('_assertRaisesRegex')], None, None), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('__getattr__', 'OP_ASSIGN')], CallFunc(Name('new_method_proxy'), [Name('getattr')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('value'), 'encode'), [Name('charset')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'locale_paths'), 'insert'), [Const(0), CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'abspath'), [Name('dirpath')], None, None), Name('dirname')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'gettext', ['message'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('insert', 'OP_ASSIGN')], Name('complain'))]))
Module(None, Stmt([From('django.utils.functional', [('total_ordering', None)], 0)]))
Module(None, Stmt([Function(None, '__reduce_ex__', ['self', 'proto'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'execute'), [], Name('args'), Name('cmd_options')))]))
Module(None, Stmt([Return(Name('False'))]))
elif char == '\\' :
try :
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('Awaiting Implementation')], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'app_name', 'OP_ASSIGN')], Name('app_name'))]))
Module(None, Stmt([Assign([AssName('parts', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('config_string'), 'lower'), [], None, None), 'split'), [Const(';')], None, None))]))
Module(None, Stmt([For(AssName('p', 'OP_ASSIGN'), Name('plist'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'assertCountEqual', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('password')], None, None), [('>', Getattr(Name('inner'), 'block_size'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], List(()))]))
try :
Module(None, Stmt([Function(None, 'urlconf_module', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('first', 'OP_ASSIGN'), AssName('lang', 'OP_ASSIGN'), AssName('priority', 'OP_ASSIGN')])], Slice(Name('pieces'), 'OP_APPLY', Name('i'), Add((Name('i'), Const(3)))))]))
Module(None, Stmt([Assign([AssName('language_code', 'OP_ASSIGN')], CallFunc(Name('get_language'), [], None, None))]))
Module(None, Stmt([Function(None, 'new_date', ['d'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Name('value'), Compare(Const(':'), [('in', Name('value'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Getattr(Name('base'), 'DeserializationError'), [Mod((Const("<%s> node has invalid model identifier: '%s'"), Tuple([Getattr(Name('node'), 'nodeName'), Name('model_identifier')])))], None, None), None, None)]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Name('handle_default_options'), [Name('options')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Import([('codecs', None)])]))
Module(None, Stmt([Assign([AssName('locales', 'OP_ASSIGN')], Sub((CallFunc(Name('set'), [Name('locales')], None, None), CallFunc(Name('set'), [Name('exclude')], None, None))))]))
Module(None, Stmt([Return(CallFunc(Name('backend_cls'), [Name('location'), Name('params')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Getattr(Name('self'), 'error'), [Name('token'), Mod((Const("Invalid block tag: '%s'"), Name('command')))], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_cache', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('cmp_fmt', 'OP_ASSIGN')], Name('None'))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('connection'), 'check_constraints'), [Keyword('table_names', Name('table_names'))], None, None))]))
Module(None, Stmt([If([(And([CallFunc(Name('hasattr'), [Name('self'), Const('_regex_validator')], None, None), Compare(Getattr(Name('self'), '_regex_validator'), [('in', Getattr(Name('self'), 'validators'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_populate', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.db.migrations.questioner', [('MigrationQuestioner', None), ('InteractiveMigrationQuestioner', None)], 0)]))
Module(None, Stmt([Return(Add((Add((Const('('), CallFunc(Getattr(Const(' '), 'join'), [Name('out')], None, None))), Const(')'))))]))
Module(None, Stmt([If([(And([CallFunc(Name('isinstance'), [Name('data'), Tuple([Getattr(Name('datetime'), 'datetime'), Getattr(Name('datetime'), 'time')])], None, None), Not(CallFunc(Name('getattr'), [Getattr(Getattr(Name('self'), 'field'), 'widget'), Const('supports_microseconds'), Name('True')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('remove', 'OP_ASSIGN')], Name('complain'))]))
elif domain == 'django' and ( file_ext == '.py' or file_ext in command . extensions ) :
try :
Module(None, Stmt([Assign([AssName('initial_set', 'OP_ASSIGN')], CallFunc(Name('set'), [GenExpr(GenExprInner(CallFunc(Name('force_text'), [Name('value')], None, None), [GenExprFor(AssName('value', 'OP_ASSIGN'), CallFunc(Getattr(Name('self'), 'prepare_value'), [Name('initial')], None, None), [])]))], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'for' statements should use the format 'for x in y': %s"), Getattr(Name('token'), 'contents')))], None, None), None, None)]))
Module(None, Stmt([Return(Dict([(Const('version'), Getattr(Name('self'), '_version')), (Const('xmlns:atom'), Const('http://www.w3.org/2005/Atom'))]))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Assign([AssName('sub', 'OP_ASSIGN')], Mod((Const('.dev%s'), Name('git_changeset'))))]))
Module(None, Stmt([Return(Const(0))]))
Module(None, Stmt([Assign([AssName('indent', 'OP_ASSIGN')], Mul((Const('\t'), Name('tabs'))))]))
Module(None, Stmt([Function(None, 'module_has_submodule', ['package', 'module_name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'max_value', 'OP_ASSIGN'), AssAttr(Name('self'), 'min_value', 'OP_ASSIGN')])], Tuple([Name('max_value'), Name('min_value')]))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'default_locale_path', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'locale_paths'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('response'), 'has_header'), [Const('Last-Modified')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('part', 'OP_ASSIGN'), Name('singular'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Getattr(Getattr(Name('self'), 'instance'), 'pk'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('netloc', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('netloc'), 'encode'), [Const('idna')], None, None), 'decode'), [Const('ascii')], None, None))]))
except PermissionDenied :
Module(None, Stmt([Assign([Subscript(Name('context'), 'OP_ASSIGN', [Const('block')])], Name('block'))]))
Module(None, Stmt([Return(Mod((Const('<Variable Node: %s>'), Getattr(Name('self'), 'filter_expression'))))]))
else :
except KeyError :
Module(None, Stmt([Return(Mod((Const('%02d'), Getattr(Getattr(Name('self'), 'data'), 'month'))))]))
Module(None, Stmt([Function(None, 'clean', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_set_size', ['self', 'size'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssTuple([AssName('app_label', 'OP_ASSIGN'), AssName('app_migrations', 'OP_ASSIGN')]), CallFunc(Getattr(Name('changes'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_start_relational_field'), [Name('field')], None, None))]))
Module(None, Stmt([If([(Name('comment_notes'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('fp'), 'write'), [Name('src_data')], None, None))]))
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('_active'), Const('value'), Name('None')], None, None))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('io'), 'open'), [Name('django_po'), Const('r'), Keyword('encoding', Const('utf-8'))], None, None), AssName('fp', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Return(Getattr(Name('settings'), 'LANGUAGE_CODE'))]))
Module(None, Stmt([Assign([AssName('num_pages', 'OP_ASSIGN')], CallFunc(Name('property'), [Name('_get_num_pages')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('extra_params'), 'OP_ASSIGN', [Const('unique')])], Name('True'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('field_notes'), 'append'), [Const("Field renamed because it contained more than one '_' in a row.")], None, None))]))
Module(None, Stmt([Function(None, 'prepare_value', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([For(AssName('error', 'OP_ASSIGN'), Subscript(CallFunc(Getattr(Getattr(Name('self'), 'errors'), 'as_data'), [], None, None), 'OP_APPLY', [Name('field')]), Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([For(AssName('slots_var', 'OP_ASSIGN'), Name('slots'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_table', 'OP_ASSIGN')], Name('table'))]))
Module(None, Stmt([AugAssign(Name('s_len'), '+=', Const(1))]))
Module(None, Stmt([Return(CallFunc(CallFunc(Name('lazy'), [Name('func')], Name('resultclasses'), None), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('val', 'OP_ASSIGN')], Subscript(Name('self'), 'OP_APPLY', [Name('key')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_HEADING'), [Mod((Const('Created new squashed migration %s'), Getattr(Name('writer'), 'path')))], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'value_from_datadict', ['self', 'data', 'files', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'digits', 'sign'], [Const('-')], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Function(None, 'assignment_tag', ['self', 'func', 'takes_context', 'name'], [Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('wrapper'), '__wrapped__', 'OP_ASSIGN')], Name('user_function'))]))
Module(None, Stmt([Assign([AssName('bit', 'OP_ASSIGN')], CallFunc(Name('next'), [Name('bits')], None, None))]))
Module(None, Stmt([Return(Name('yes'))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('mw_instance'), Const('process_request')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'from_email', 'OP_ASSIGN')], Or([Name('from_email'), Getattr(Name('settings'), 'DEFAULT_FROM_EMAIL')]))]))
Module(None, Stmt([Assign([AssName('has_bz2', 'OP_ASSIGN')], Name('False'))]))
from django . core . exceptions import ValidationError
Module(None, Stmt([If([(Not(Name('value')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], Getattr(Name('settings'), 'TEMPLATE_STRING_IF_INVALID'))]))
Module(None, Stmt([If([(Name('autoescape'), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssTuple([AssName('name', 'OP_ASSIGN'), AssName('field', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('self'), 'fields'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_reverse_dict', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([If([(CallFunc(Name('callable'), [Getattr(Name('self'), 'limit_choices_to')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__hash__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Subscript(Name('item'), 'OP_APPLY', [Const('author_name')]), Subscript(Name('item'), 'OP_APPLY', [Const('author_email')])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'firstof', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('p', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('arg')], None, None))]))
Module(None, Stmt([If([(Name('response'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('site'), [('in', Name('sites2'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('pickled', 'OP_ASSIGN')], CallFunc(Getattr(Name('pickle'), 'dumps'), [Name('value'), Getattr(Name('pickle'), 'HIGHEST_PROTOCOL')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('lookups'), 'appendlist'), [Getattr(Name('pattern'), 'callback'), Tuple([Name('bits'), Name('p_pattern'), Getattr(Name('pattern'), 'default_args')])], None, None))]))
Module(None, Stmt([Assign([AssName('getLogger', 'OP_ASSIGN')], Getattr(Name('logging'), 'getLogger'))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('value'), 'replace'), [Name('arg'), Const('')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'characters'), [CallFunc(Name('smart_text'), [Name('related_att')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('url', 'OP_ASSIGN')], CallFunc(Name('reverse'), [Add((Add((Name('project_name'), Const('.'))), Name('view_name'))), Keyword('args', Name('args')), Keyword('kwargs', Name('kwargs')), Keyword('current_app', Getattr(Name('context'), 'current_app'))], None, None))]))
Module(None, Stmt([Assign([AssName('trimmed', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([If([(Compare(Name('format'), [('not in', Name('_serializers'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'idx'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('File'), [CallFunc(Name('open'), [CallFunc(Getattr(Name('self'), 'path'), [Name('name')], None, None), Name('mode')], None, None)], None, None))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('temp_lib'), 'tags'), 'OP_ASSIGN', [Name('name')])], Subscript(Getattr(Name('lib'), 'tags'), 'OP_APPLY', [Name('name')]))]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Name('bytes_to_text'), [Name('key'), Getattr(Name('self'), 'encoding')], None, None))]))
Module(None, Stmt([If([(Getattr(Name('options'), 'pythonpath'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('_samefile'), [Name('old_file_name'), Name('new_file_name')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('date_value', 'OP_ASSIGN')], CallFunc(Getattr(Name('datetime'), 'date'), [CallFunc(Name('int'), [Name('y')], None, None), CallFunc(Name('int'), [Name('m')], None, None), CallFunc(Name('int'), [Name('d')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('block_context'), 'push'), [Getattr(Name('self'), 'name'), Name('push')], None, None))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([If([(Compare(Name('values'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Discard(Yield(CallFunc(Getattr(Name('buf'), 'read'), [], None, None)))]))
Module(None, Stmt([Return(Mod((Const('%s...'), Slice(Name('x'), 'OP_APPLY', None, CallFunc(Name('max'), [Const(0), Sub((Name('limit'), Const(3)))], None, None)))))]))
Module(None, Stmt([From('django.utils.text', [('get_text_list', None), ('capfirst', None)], 0)]))
Module(None, Stmt([Assign([AssName('new_context', 'OP_ASSIGN')], CallFunc(Name('copy'), [Name('self')], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Name('options'), 'get'), [Const('liveserver')], None, None), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('encoding', 'OP_ASSIGN')], Name('None'))]))
ending = self . ending if ending is None else ending
Module(None, Stmt([Assign([AssName('choices', 'OP_ASSIGN')], ListComp(Tuple([Name('i'), Name('i')]), [ListCompFor(AssName('i', 'OP_ASSIGN'), CallFunc(Name('range'), [Const(1), Const(32)], None, None), [])]))]))
Module(None, Stmt([Assign([AssName('status_code', 'OP_ASSIGN')], Const(302))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const(''), 'join'), [Name('pieces')], None, None))]))
Module(None, Stmt([For(AssName('model', 'OP_ASSIGN'), Name('model_list'), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Assign([AssName('weight', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Assign([AssName('__version__', 'OP_ASSIGN')], Const('1.6.1'))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Unable to configure root logger: %s'), Name('e')))], None, None), None, None)]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Function(None, 'errors', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('GB', 'OP_ASSIGN')], LeftShift((Const(1), Const(30))))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('sys'), 'modules'), 'OP_ASSIGN', [Add((Name('__name__'), Const('.moves.urllib')))])], CallFunc(Name('Module_six_moves_urllib'), [Add((Name('__name__'), Const('.moves.urllib')))], None, None))]))
Module(None, Stmt([Function(None, 'popitem', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('_itervalues', 'OP_ASSIGN')], Const('values'))]))
Module(None, Stmt([Assign([AssName('cache_get', 'OP_ASSIGN')], Getattr(Name('cache'), 'get'))]))
Module(None, Stmt([Return(List([CallFunc(Name('Warning'), [Const('Some project unittests may not execute as expected.'), Keyword('hint', Const('Django 1.6 introduced a new default test runner. It looks like this project was generated using Django 1.5 or earlier. You should ensure your tests are all running & behaving as expected. See https://docs.djangoproject.com/en/dev/releases/1.6/#new-test-runner for more information.')), Keyword('obj', Name('None')), Keyword('id', Const('1_6.W001'))], None, None)]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'merge'), [Name('translation')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('lineno_comment_map'), 'OP_ASSIGN', [Name('comment_lineno_cache')])], List(()))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('_trans'), 'get_language_bidi'), [], None, None))]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([If([(Not(Getattr(Name('settings'), 'ADMINS')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('parser', 'OP_ASSIGN')], CallFunc(Getattr(Name('subcommand_cls'), 'create_parser'), [Const(''), Subscript(Name('cwords'), 'OP_APPLY', [Const(0)])], None, None))]))
elif t . token_type == TOKEN_VAR :
Module(None, Stmt([Discard(CallFunc(Name('_load_serializers'), [], None, None))]))
Module(None, Stmt([Assign([AssName('text_type', 'OP_ASSIGN')], Name('unicode'))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('transaction'), 'atomic'), [Keyword('using', Name('db'))], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('MONTHS_AP', 'OP_ASSIGN')], Dict([(Const(1), CallFunc(Name('pgettext_lazy'), [Const('abbrev. month'), Const('Jan.')], None, None)), (Const(2), CallFunc(Name('pgettext_lazy'), [Const('abbrev. month'), Const('Feb.')], None, None)), (Const(3), CallFunc(Name('pgettext_lazy'), [Const('abbrev. month'), Const('March')], None, None)), (Const(4), CallFunc(Name('pgettext_lazy'), [Const('abbrev. month'), Const('April')], None, None)), (Const(5), CallFunc(Name('pgettext_lazy'), [Const('abbrev. month'), Const('May')], None, None)), (Const(6), CallFunc(Name('pgettext_lazy'), [Const('abbrev. month'), Const('June')], None, None)), (Const(7), CallFunc(Name('pgettext_lazy'), [Const('abbrev. month'), Const('July')], None, None)), (Const(8), CallFunc(Name('pgettext_lazy'), [Const('abbrev. month'), Const('Aug.')], None, None)), (Const(9), CallFunc(Name('pgettext_lazy'), [Const('abbrev. month'), Const('Sept.')], None, None)), (Const(10), CallFunc(Name('pgettext_lazy'), [Const('abbrev. month'), Const('Oct.')], None, None)), (Const(11), CallFunc(Name('pgettext_lazy'), [Const('abbrev. month'), Const('Nov.')], None, None)), (Const(12), CallFunc(Name('pgettext_lazy'), [Const('abbrev. month'), Const('Dec.')], None, None))]))]))
elif change == I18N_MODIFIED :
Module(None, Stmt([Assign([AssName('app_configs', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Return(CallFunc(Name('iter'), [Getattr(Name('self'), 'keyOrder')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'connection', 'OP_ASSIGN')], CallFunc(Name('get_connection'), [Keyword('fail_silently', Name('fail_silently'))], None, None))]))
Module(None, Stmt([Function(None, 'timesince_filter', ['value', 'arg'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('password', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('digest'), [Name('password')], None, None), 'digest'), [], None, None))]))
else :
Module(None, Stmt([If([(Not(Name('only_initial')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'mod', 'OP_ASSIGN')], Name('new_mod'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'feed'), 'update'), [Name('kwargs')], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_regex'))]))
try :
Module(None, Stmt([Import([('logging', None)])]))
Module(None, Stmt([Assign([AssName('is_templatized', 'OP_ASSIGN')], Compare(Name('file_ext'), [('in', Getattr(Name('command'), 'extensions'))]))]))
Module(None, Stmt([Return(Tuple([Const(1), Const(0)]))]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'target', 'OP_ASSIGN'), AssAttr(Name('self'), 'expression', 'OP_ASSIGN')])], Tuple([Name('target'), Name('expression')]))]))
Module(None, Stmt([Function(None, '_html_output', ['self', 'normal_row', 'error_row', 'row_ender', 'help_text_html', 'errors_on_separate_row'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('as_bytes', 'OP_ASSIGN')], Name('as_string'))]))
Module(None, Stmt([Assign([AssName('table', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'ops'), 'quote_name'), [Getattr(Name('self'), '_table')], None, None))]))
@ classmethod
Module(None, Stmt([Function(None, '__exit__', ['self', 'exc', 'value', 'tb'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'tags'), 'update'), [Getattr(Name('lib'), 'tags')], None, None))]))
Module(None, Stmt([Function(None, 'add_prefix', ['self', 'field_name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('flags', 'OP_ASSIGN')], Bitor([Getattr(Name('os'), 'O_WRONLY'), Getattr(Name('os'), 'O_CREAT'), Getattr(Name('os'), 'O_EXCL'), CallFunc(Name('getattr'), [Name('os'), Const('O_BINARY'), Const(0)], None, None)]))]))
Module(None, Stmt([Return(List(()))]))
Module(None, Stmt([Return(Compare(Getattr(Name('tt'), 'tm_isdst'), [('>', Const(0))]))]))
Module(None, Stmt([For(AssName('f', 'OP_ASSIGN'), Name('file_field_list'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('_fields_', 'OP_ASSIGN')], List([Tuple([Const('_offset'), Name('_OFFSET')]), Tuple([Const('Pointer'), Name('PVOID')])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('EmailBackend'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'source_error'), [Getattr(Name('token'), 'source'), Name('msg')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('event'), 'path'), 'endswith'), [Const('.mo')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('translation', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_new_gnu_trans'), [Name('localedir'), Name('use_null_fallback')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('app_name'), Name('BaseCommand')], None, None), Stmt([Pass()]))], None)]))
elif ch == '(' :
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('TimestampSigner'), Name('self')], None, None), 'sign'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('default_error_messages', 'OP_ASSIGN')], Dict([(Const('invalid_choice'), CallFunc(Name('_'), [Const('Select a valid choice. %(value)s is not one of the available choices.')], None, None))]))]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None)], 0)]))
elif args [ 1 ] == '404' :
Module(None, Stmt([If([(Compare(Name('meta'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('is_accept_language_redundant', 'OP_ASSIGN')], Or([Getattr(Name('settings'), 'USE_I18N'), Getattr(Name('settings'), 'USE_L10N')]))]))
Module(None, Stmt([If([(Compare(Const(':'), [('not in', Name('ip_str'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('iri_to_uri'), [CallFunc(Getattr(Name('resolver'), '_reverse_with_prefix'), [Name('view'), Name('prefix')], Name('args'), Name('kwargs'))], None, None))]))
Module(None, Stmt([If([(Name('autoescape'), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([Subscript(Name('cache'), 'OP_ASSIGN', [Name('key')])], Name('result'))]))
Module(None, Stmt([If([(Compare(Const('='), [('in', Name('x'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('stat', None)])]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_queryset', 'OP_ASSIGN')], Name('qs'))]))
Module(None, Stmt([Return(Name('errors'))]))
Module(None, Stmt([Return(Name('rv'))]))
Module(None, Stmt([Class('MultiPartParserError', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils.crypto', [('constant_time_compare', None), ('salted_hmac', None)], 0)]))
Module(None, Stmt([Assign([AssName('salt', 'OP_ASSIGN')], CallFunc(Name('force_bytes'), [Name('salt')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const('Base36 input too large')], None, None), None, None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('sys'), 'platform'), 'startswith'), [Const('java')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('to_current_timezone'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '_cache'), 'OP_ASSIGN', [Name('key')])], Name('pickled'))]))
Module(None, Stmt([Assign([AssName('MAXSIZE', 'OP_ASSIGN')], CallFunc(Name('int'), [Sub((LeftShift((Const(1), Const(31))), Const(1)))], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('token_string'), 'startswith'), [Name('VARIABLE_TAG_START')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.functional', [('cached_property', None)], 0)]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], Tuple([Const('Storage'), Const('FileSystemStorage'), Const('DefaultStorage'), Const('default_storage')]))]))
Module(None, Stmt([Assign([AssName('known_models', 'OP_ASSIGN')], CallFunc(Name('set'), [GenExpr(GenExprInner(Name('model'), [GenExprFor(AssName('model', 'OP_ASSIGN'), CallFunc(Getattr(Getattr(Name('connection'), 'introspection'), 'installed_models'), [Name('tables')], None, None), [GenExprIf(Compare(Name('model'), [('not in', Name('app_models'))]))])]))], None, None))]))
except AttributeError :
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('value'), 'astimezone'), [Name('timezone')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'timezone', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Assign([AssName('old_handler', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('input_type', 'OP_ASSIGN')], Const('file'))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Return(Subscript(Name('context'), 'OP_APPLY', [Const('forloop')]))]))
Module(None, Stmt([For(AssName('d', 'OP_ASSIGN'), CallFunc(Name('reversed'), [Getattr(Name('self'), 'dicts')], None, None), Stmt([Pass()]), None)]))
sign = '-' if offset < 0 else '+'
Module(None, Stmt([From('django.forms.formsets', [('BaseFormSet', None), ('formset_factory', None)], 0)]))
except KeyError :
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Return(Getattr(Name('self'), 'size'))]))
Module(None, Stmt([If([(Compare(Name('attr'), [('in', Name('flags'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('stream', 'OP_ASSIGN')], Name('stream_or_string'))]))
Module(None, Stmt([For(AssTuple([AssName('name', 'OP_ASSIGN'), AssName('tok', 'OP_ASSIGN')]), CallFunc(Getattr(Name('lexer'), 'lex'), [Name('js')], None, None), Stmt([Pass()]), None)]))
subject = '%s (%s IP): %s' % (  record . levelname ,  ( 'internal' if request . META . get ( 'REMOTE_ADDR' ) in settings . INTERNAL_IPS  else 'EXTERNAL' ) ,  record . getMessage ( )  )
Module(None, Stmt([Assign([AssName('thefile', 'OP_ASSIGN')], Mod((Const('%s.c'), Getattr(Name('self'), 'file'))))]))
Module(None, Stmt([Function(None, '_replace_entity', ['match'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('max_length'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--noreload'), Keyword('action', Const('store_false')), Keyword('dest', Const('use_reloader')), Keyword('default', Name('True')), Keyword('help', Const('Tells Django to NOT use the auto-reloader.'))], None, None))]))
Module(None, Stmt([If([(And([Compare(Name('fixture_name'), [('!=', Const('initial_data'))]), Not(Name('fixture_files'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('lexer', 'OP_ASSIGN')], CallFunc(Name('lexer_class'), [Name('template_string'), Name('origin')], None, None))]))
Module(None, Stmt([Function(None, 'write', ['self', 'outfile', 'encoding'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'handle_startendtag'), [Name('tag'), Name('attrs')], None, None))]))
Module(None, Stmt([Assign([AssName('delta', 'OP_ASSIGN')], Add((Name('delta'), CallFunc(Getattr(Name('datetime'), 'timedelta'), [Keyword('seconds', Const(1))], None, None))))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'val_expr', 'OP_ASSIGN')], Name('val_expr'))]))
elif name is not None and filter_func is not None :
Module(None, Stmt([Assign([AssName('invalid_tag', 'OP_ASSIGN')], CallFunc(Name('next'), [GenExpr(GenExprInner(Name('tag'), [GenExprFor(AssName('tag', 'OP_ASSIGN'), Name('tags'), [GenExprIf(Not(CallFunc(Getattr(Name('checks'), 'tag_exists'), [Name('tag')], None, None)))])]))], None, None))]))
Module(None, Stmt([Function(None, 'remove', ['self', 'item'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], Slice(Name('key'), 'OP_APPLY', CallFunc(Name('len'), [Getattr(Name('self'), 'prefix')], None, None), None))]))
Module(None, Stmt([From('django.db', [('models', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_js', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'y', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Getattr(Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_meta'), 'pk'), 'rel'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('lexer', 'OP_ASSIGN')], CallFunc(Name('JsLexer'), [], None, None))]))
Module(None, Stmt([If([(Compare(Name('value'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Const('You can only use --pks option with one model')], None, None), None, None)]))
from django . core . exceptions import ValidationError , NON_FIELD_ERRORS
Module(None, Stmt([Function(None, 'file_move_safe', ['old_file_name', 'new_file_name', 'chunk_size', 'allow_overwrite'], [Mul((Const(1024), Const(64))), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Class('DjangoUnicodeDecodeError', [Name('UnicodeDecodeError')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Dict([(Const('xmlns'), Getattr(Name('self'), 'ns')), (Const('xml:lang'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('language')]))]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('s'), Name('Promise')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None)], 0)]))
Module(None, Stmt([Assign([AssName('idhost', 'OP_ASSIGN')], Name('DNS_NAME'))]))
Module(None, Stmt([Function(None, 'subwidgets', ['self', 'name', 'value', 'attrs', 'choices'], [Name('None'), Tuple(())], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.module_loading', [('import_string', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('StopIteration'), [], None, None), None, None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_closable_objects'), 'append'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('out', 'OP_ASSIGN')], CallFunc(Getattr(Const(''), 'join'), [CallFunc(Name('parts'), [], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Command'), Name('self')], None, None), 'handle'), [Const('project'), Name('project_name'), Name('target')], None, Name('options')))]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('name')], None, None), Stmt([Pass()]))], None)]))
try :
else :
Module(None, Stmt([If([(Name('PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('encoding'), [('==', Const('utf-8'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('requires_system_checks', 'OP_ASSIGN')], Name('False'))]))
except TypeError :
Module(None, Stmt([Return(Const(None))]))
else :
Module(None, Stmt([Return(Const('Raw content'))]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'initial_extra', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('initial'), Name('None')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_update_errors'), [Name('e')], None, None))]))
Module(None, Stmt([If([(Compare(Name('language_code'), [('not in', Getattr(Name('self'), '_regex_dict'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Command'), Name('self')], None, None), 'add_arguments'), [Name('parser')], None, None))]))
try :
data_value = data if data is not None else ''
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], Getattr(Name('self'), 'waiting_readers'))]))
Module(None, Stmt([Function(None, 'add_item_elements', ['self', 'handler', 'item'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('subclass', 'OP_ASSIGN')], CallFunc(Name('type'), [Const('Migration'), Tuple([Getattr(Name('migrations'), 'Migration')]), Dict([(Const('dependencies'), List(())), (Const('operations'), Name('new_operations')), (Const('replaces'), Name('replaces'))])], None, None))]))
Module(None, Stmt([Assign([AssName('b64encoded', 'OP_ASSIGN')], CallFunc(Getattr(Name('b64encoded'), 'decode'), [Const('latin1')], None, None))]))
Module(None, Stmt([Return(Const(0))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('context'), 'push'), [Keyword('var', Name('output'))], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'default_locale_path', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Return(Name('week_number'))]))
Module(None, Stmt([Function(None, 'page', ['self', 'number'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('lookup_view'))]))
Module(None, Stmt([Function(None, 'get_storage_class', ['import_path'], [Name('None')], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssName('i', 'OP_ASSIGN')], Const(366))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('Template'), [Name('source'), Name('origin'), Name('name')], None, None))]))
Module(None, Stmt([Return(Subscript(Getattr(Name('self'), 'template_cache'), 'OP_APPLY', [Name('key')]))]))
Module(None, Stmt([While(Name('path'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '_string_concat', ['strings'], [], 4, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'get_many', ['self', 'keys', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('new_class', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('RenameMethodsBase'), Name('cls')], None, None), '__new__'), [Name('cls'), Name('name'), Name('bases'), Name('attrs')], None, None))]))
Module(None, Stmt([If([(Or([CallFunc(Name('isinstance'), [Name('s'), Name('bytes')], None, None), And([CallFunc(Name('isinstance'), [Name('s'), Name('Promise')], None, None), Getattr(Name('s'), '_delegate_bytes')])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('choice_input_class', 'OP_ASSIGN')], Name('RadioChoiceInput'))]))
Module(None, Stmt([Function(None, 'compile_function_error', ['self', 'token', 'e'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('request_repr', 'OP_ASSIGN')], Const('unavailable'))]))
Module(None, Stmt([Assign([AssName('neg_inf', 'OP_ASSIGN')], Mul((UnarySub(Const(1e+200)), Const(1e+200))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('LocaleRegexProvider'), '__init__'), [Name('self'), Name('regex')], None, None))]))
Module(None, Stmt([Function(None, 'write', ['self', 'content'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'use_natural_keys'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('rel_to'), [('in', Name('known_models'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Function(None, 'validate_name', ['self', 'name', 'app_or_project'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('digits', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('six'), 'text_type'), [Name('digit')], None, None), [ListCompFor(AssName('digit', 'OP_ASSIGN'), CallFunc(Name('reversed'), [Name('digits')], None, None), [])]))]))
Module(None, Stmt([Assign([AssName('visible_issue_count', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([If([(Compare(Name('num_entries'), [('<', Getattr(Name('self'), '_max_entries'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_setup', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('source', 'OP_ASSIGN'), AssName('display_name', 'OP_ASSIGN')])], CallFunc(Getattr(Name('self'), 'load_template_source'), [Name('template_name'), Name('template_dirs')], None, None))]))
Module(None, Stmt([Function(None, 'process_default', ['self', 'event'], [], 0, None, Stmt([Pass()]))]))
@ property
Module(None, Stmt([From('django.utils', [('six', None), ('lru_cache', None)], 0)]))
Module(None, Stmt([For(AssName('x', 'OP_ASSIGN'), CallFunc(Name('range'), [Name('level'), Const(1), UnarySub(Const(1))], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Class('DateInput', [Name('DateTimeBaseInput')], None, Stmt([Pass()]), None)]))
parser . add_argument ( '--no-optimize' , action = 'store_true' , dest = 'no_optimize' , default = False ,  help = 'Do not try to optimize the squashed operations.' )
Module(None, Stmt([For(AssName('c', 'OP_ASSIGN'), Subscript(Name('lineno_comment_map'), 'OP_APPLY', [Name('comment_lineno_cache')]), Stmt([Pass()]), None)]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([Function(None, 'validate', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'args', 'OP_ASSIGN')], Name('args'))]))
try :
Module(None, Stmt([Function(None, 'safe', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Name('add_to_builtins'), [Const('django.template.defaulttags')], None, None))]))
else :
Module(None, Stmt([For(AssName('attr', 'OP_ASSIGN'), Name('_moved_attributes'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('errors'), 'append'), [CallFunc(Getattr(Name('self'), 'get_date_error_message'), [Name('date_check')], None, None)], None, None))]))
Module(None, Stmt([Return(Compare(Subscript(Name('caches'), 'OP_APPLY', [Name('DEFAULT_CACHE_ALIAS')]), [('==', Name('other'))]))]))
Module(None, Stmt([If([(Compare(Name('instance'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('format_key', 'OP_ASSIGN')], Const('DATE_INPUT_FORMATS'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('value'), 'ljust'), [CallFunc(Name('int'), [Name('arg')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'discard', ['self', 'item'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Getattr(Name('self'), 'error_class'), [Mod((Const("Unused '%s' at end of if expression."), CallFunc(Getattr(Getattr(Name('self'), 'current_token'), 'display'), [], None, None)))], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Name('value'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssTuple([AssName('field', 'OP_ASSIGN'), AssName('messages', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('errors'), 'error_dict'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssName('app_config', 'OP_ASSIGN'), CallFunc(Getattr(Name('apps'), 'get_app_configs'), [], None, None), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('field'), Name('FileField')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('_win', 'OP_ASSIGN')], Compare(Getattr(Name('sys'), 'platform'), [('==', Const('win32'))]))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Function(None, '__len__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'name', 'OP_ASSIGN'), AssAttr(Name('self'), 'value', 'OP_ASSIGN')])], Tuple([Name('name'), Name('value')]))]))
Module(None, Stmt([Assign([AssName('timezone', 'OP_ASSIGN')], Add((Mul((Mul((Getattr(Name('offset'), 'days'), Const(24))), Const(60))), FloorDiv((Getattr(Name('offset'), 'seconds'), Const(60))))))]))
Module(None, Stmt([If([(And([Name('help_texts'), Compare(Getattr(Name('f'), 'name'), [('in', Name('help_texts'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('docs_version', 'OP_ASSIGN')], Const('dev'))]))
else :
@ python_2_unicode_compatible
Module(None, Stmt([Function(None, 'server_bind', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
except :
Module(None, Stmt([Return(CallFunc(Name('len'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('year_val', 'OP_ASSIGN'), AssName('month_val', 'OP_ASSIGN'), AssName('day_val', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('language_code_prefix_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^/([\\w-]+)(/|$)')], None, None))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'required'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'normpath'), [Name('path')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('block_context'), 'add_blocks'), [Getattr(Name('self'), 'blocks')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--extension'), Const('-e'), Keyword('dest', Const('extensions')), Keyword('action', Const('append')), Keyword('default', List([Const('py')])), Keyword('help', Const('The file extension(s) to render (default: "py"). Separate multiple extensions with commas, or use -e multiple times.'))], None, None))]))
Module(None, Stmt([Assign([AssName('deactivate', 'OP_ASSIGN'), AssName('deactivate_all', 'OP_ASSIGN')], Lambda((), (), 0, Name('None')))]))
Module(None, Stmt([Function(None, 'check_all_models', ['app_configs', 'kwargs'], [Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core.servers.fastcgi', [('runfastcgi', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_template_response_middleware', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(Const(''))]))
else :
Module(None, Stmt([AugAssign(Name('factor'), '+=', Const(1))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Const('widthratio takes at least three arguments')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('quote', 'OP_ASSIGN')], Subscript(Name('s'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Assign([AssName('_version', 'OP_ASSIGN')], Const('0.91'))]))
Module(None, Stmt([Import([('readline', None)])]))
Module(None, Stmt([From('django.utils.functional', [('LazyObject', None)], 0)]))
Module(None, Stmt([Assign([AssName('BASE36_ALPHABET', 'OP_ASSIGN')], Const('0123456789abcdefghijklmnopqrstuvwxyz'))]))
Module(None, Stmt([Discard(CallFunc(Name('call_command'), [Const('loaddata'), Const('initial_data'), Keyword('verbosity', Getattr(Name('self'), 'verbosity')), Keyword('database', Getattr(Name('connection'), 'alias')), Keyword('skip_validation', Name('True')), Keyword('app_label', Name('app_label')), Keyword('hide_empty', Name('True'))], None, None))]))
Module(None, Stmt([Assign([AssName('endblock', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'next_token'), [], None, None))]))
Module(None, Stmt([If([(Name('script_url'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'get_text_list', ['list_', 'last_word'], [CallFunc(Name('ugettext_lazy'), [Const('or')], None, None)], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'close'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Getattr(Name('self'), 'field'), 'choice_cache', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('self'), 'choice'), [Name('obj')], None, None), [ListCompFor(AssName('obj', 'OP_ASSIGN'), CallFunc(Getattr(Getattr(Name('self'), 'queryset'), 'all'), [], None, None), [])]))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('field_type'), [('not in', Tuple([Const('TextField('), Const('CharField(')]))]), Stmt([Pass()]))], None)]))
except VariableDoesNotExist :
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'is_bound')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('options'), 'get'), [Const('test_flush'), Name('False')], None, None), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([AssTuple([AssName('ch', 'OP_ASSIGN'), AssName('escaped', 'OP_ASSIGN')])], CallFunc(Name('next'), [Name('pattern_iter')], None, None))]))
Module(None, Stmt([Assign([AssName('package', 'OP_ASSIGN')], CallFunc(Name('import_module'), [Name('path')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'extend_nodelist'), [Name('nodelist'), Name('compiled_result'), Name('token')], None, None))]))
Module(None, Stmt([From('django.template', [('Template', None), ('Context', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_raw_ipv6', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Discard(Yield(Const('#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table')))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'cdata_tag', 'OP_ASSIGN')], CallFunc(Getattr(Name('tag'), 'lower'), [], None, None))]))
Module(None, Stmt([For(AssName('date_check', 'OP_ASSIGN'), Name('all_date_checks'), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssName('module', 'OP_ASSIGN'), Name('templatetags_modules'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'id', 'OP_ASSIGN')], Getattr(Name('Tok'), 'num'))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('field'), '_has_changed'), [Name('initial_value'), Name('data_value')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('title'), Subscript(Name('item'), 'OP_APPLY', [Const('title')])], None, None))]))
Module(None, Stmt([If([(Name('is_compressed'), Stmt([Pass()]))], None)]))
elif isinstance ( self . obj , models . base . ModelBase ) :
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_default_manager'), Const('get_by_natural_key')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'cache_key', ['self', 'template_name', 'template_dirs'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('line', 'OP_ASSIGN'), CallFunc(Getattr(Name('msgs'), 'split'), [Const('\n')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('fp'), 'write'), [Name('msgs')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('nodes'), 'extend'), [CallFunc(Getattr(Name('node'), 'get_nodes_by_type'), [Name('nodetype')], None, None)], None, None))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('tzinfo', 'OP_ASSIGN')], Name('utc'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'size', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('content')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'inner_run'), [Name('None')], None, Name('options')))]))
Module(None, Stmt([Function(None, '__ne__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'exec_', ['_code_', '_globs_', '_locs_'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('LocalTimezone'), Name('self')], None, None), '_isdst'), [Name('dt')], None, None))]))
Module(None, Stmt([Assign([AssName('pdict', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], Slice(Getattr(Name('self'), 'buffer'), 'OP_APPLY', None, Name('size')))]))
Module(None, Stmt([Assign([AssName('app_list', 'OP_ASSIGN')], CallFunc(Name('OrderedDict'), [], None, None))]))
Module(None, Stmt([Assign([AssName('_file', 'OP_ASSIGN')], CallFunc(Getattr(Name('os'), 'fdopen'), [Name('fd'), Name('mode')], None, None))]))
Module(None, Stmt([If([(Compare(Name('status'), [('!=', Name('STATUS_OK'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'avoid_wrapping', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'clean', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Compare(CallFunc(Getattr(Name('self'), 'get'), [Name('key'), Keyword('version', Name('version'))], None, None), [('is not', Name('None'))]))]))
try :
Module(None, Stmt([Assign([AssName('base64d', 'OP_ASSIGN')], Slice(Name('base64d'), 'OP_APPLY', Const(1), None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('type'), '__new__'), [Name('cls'), Name('name'), Tuple(()), Name('d')], None, None))]))
Module(None, Stmt([Function(None, 'loaddata', ['self', 'fixture_labels'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('_cached_modules'), [('==', Name('module_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Printnl([Name('message')], None)]))
Module(None, Stmt([Return(Name('s'))]))
@ register . tag ( 'for' )
Module(None, Stmt([If([(Compare(Name('attrs'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('filepath', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'compile_filter'), [Subscript(Name('bits'), 'OP_APPLY', [Const(1)])], None, None))]))
Module(None, Stmt([Assign([AssName('block_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^\\s*blocktrans(\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?(?:\\s+|$)')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'message', 'OP_ASSIGN')], Name('message'))]))
Module(None, Stmt([Return(CallFunc(Name('format'), [Name('value'), Name('arg')], None, None))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Assign([AssName('dec_part', 'OP_ASSIGN')], Slice(Name('dec_part'), 'OP_APPLY', None, Name('decimal_pos')))]))
else :
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Function(None, 'unlock', ['f'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('self'), '_done'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('_ExpatParser'), 'reset'), [Name('self')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'auto_id', 'OP_ASSIGN')], Name('auto_id'))]))
Module(None, Stmt([Assign([AssName('root', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('HttpResponseRedirectBase'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('bytes_read', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Function(None, 'clean', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'DEBUG'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Getattr(Name('field'), 'to_python'))]))
Module(None, Stmt([Function(None, '_get_closed', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('m2m_data', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('initial')])], Subscript(Getattr(Name('self'), 'initial_extra'), 'OP_APPLY', [Sub((Name('i'), CallFunc(Getattr(Name('self'), 'initial_form_count'), [], None, None)))]))]))
Module(None, Stmt([Function(None, '_cache', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Or([Not(Name('boundary')), Not(CallFunc(Getattr(Name('cgi'), 'valid_boundary'), [Name('boundary')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'open', ['self', 'mode'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Tuple([CallFunc(Getattr(Subscript(Name('t'), 'OP_APPLY', [Const(0)]), 'lower'), [], None, None), Name('True')]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const("'package' not set to a string")], None, None), None, None)]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'startElement'), [Const('natural'), Dict(())], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stderr'), 'write'), [Mod((Const("Notice: Couldn't set permission bits on %s. You're probably using an uncommon filesystem setup. No problem."), Name('new_path'))), Getattr(Getattr(Name('self'), 'style'), 'NOTICE')], None, None))]))
Module(None, Stmt([Assign([AssName('migration', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('executor'), 'loader'), 'get_migration_by_prefix'), [Name('app_label'), Name('migration_name')], None, None))]))
Module(None, Stmt([If([(Name('filters'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'ugettext', ['message'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('bit', 'OP_ASSIGN'), CallFunc(Getattr(Name('tag_re'), 'split'), [Getattr(Name('self'), 'template_string')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('DateTimeInput', [Name('DateTimeBaseInput')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('fields', 'OP_ASSIGN')], Add((CallFunc(Name('list'), [CallFunc(Getattr(Name('six'), 'iteritems'), [Getattr(Name('base'), 'declared_fields')], None, None)], None, None), Name('fields'))))]))
Module(None, Stmt([Function(None, 'patch_response_headers', ['response', 'cache_timeout'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('hash'), [CallFunc(Getattr(Name('self'), '__cast'), [], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('_tc'), 'load'), [CallFunc(Name('str'), [Const('foo:bar=1')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'add_fields'), [Name('form'), Name('None')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('required')]), Keyword('code', Const('required'))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('accept_language_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('         ([A-Za-z]{1,8}(?:-[A-Za-z0-9]{1,8})*|\\*)      # "en", "en-au", "x-y-z", "es-419", "*"         (?:\\s*;\\s*q=(0(?:\\.\\d{,3})?|1(?:.0{,3})?))?   # Optional "q=1.00", "q=0.8"         (?:\\s*,\\s*|$)                                 # Multiple accepts per header.         '), Getattr(Name('re'), 'VERBOSE')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('field'), 'clean'), [Name('value')], None, None))]))
Module(None, Stmt([Function(None, 'start_index', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'resolve_context', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([AugAssign(Name('i'), '+=', Const(1))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [CallFunc(Name('format_html'), [Getattr(Name('self'), 'inner_html'), Keyword('choice_value', Name('choice_value')), Keyword('sub_widgets', CallFunc(Getattr(Name('sub_ul_renderer'), 'render'), [], None, None))], None, None)], None, None))]))
seqs = connection . introspection . sequence_list ( ) if reset_sequences else ( )
Module(None, Stmt([From('django.utils.translation', [('get_language', None)], 0)]))
Module(None, Stmt([Pass()]))
except ValidationError :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('errors'), 'append'), [CallFunc(Getattr(Name('self'), 'get_unique_error_message'), [Name('unique_check')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_key'), [Name('key')], None, None))]))
Module(None, Stmt([Assign([AssName('messages', 'OP_ASSIGN')], CallFunc(Name('ValidationError'), [Name('messages')], None, None))]))
Module(None, Stmt([Assign([AssName('_caches', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Return(ListComp(CallFunc(Getattr(CallFunc(Name('super'), [Name('ModelMultipleChoiceField'), Name('self')], None, None), 'prepare_value'), [Name('v')], None, None), [ListCompFor(AssName('v', 'OP_ASSIGN'), Name('value'), [])]))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_body'))]))
Module(None, Stmt([Function(None, '__setitem__', ['self', 'name', 'val'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'clear_url_caches', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('_globs_', 'OP_ASSIGN')], Getattr(Name('frame'), 'f_globals'))]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_stream'), 'unget'), [Name('unused_char')], None, None))]))
Module(None, Stmt([Class('RegexField', [Name('CharField')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('name'), [('==', Const('_wrapped'))]), Stmt([Pass()]))], None)]))
elif ( attrvalue [ : 1 ] == '\'' == attrvalue [ - 1 : ] or  attrvalue [ : 1 ] == '"' == attrvalue [ - 1 : ] ) :
except AttributeError :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--list-tags'), Keyword('action', Const('store_true')), Keyword('dest', Const('list_tags')), Keyword('help', Const('List available tags.'))], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('error'), Name('ValidationError')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('filters'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('django_po')], None, None), Stmt([Pass()]))], None)]))
elif self . use_ipv6 and not _fqdn :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_post_render_callbacks', 'OP_ASSIGN')], List(()))]))
else :
Module(None, Stmt([If([(Or([Not(CallFunc(Getattr(Name('self'), 'is_valid'), [], None, None)), Not(Getattr(Name('self'), 'can_order'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('DOT_PATTERN', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^\\.\\s*(\\w+)\\s*')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('key', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')])], Tuple([Subscript(Name('bits'), 'OP_APPLY', [Const(2)]), Subscript(Name('bits'), 'OP_APPLY', [Const(0)])]))]))
Module(None, Stmt([For(AssName('hextet', 'OP_ASSIGN'), Name('new_ip'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'url', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(Yield(Const('day')))]))
Module(None, Stmt([Function(None, '_get_page_range', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssTuple([AssName('accept_lang', 'OP_ASSIGN'), AssName('unused', 'OP_ASSIGN')]), CallFunc(Name('parse_accept_lang_header'), [Name('accept')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('statements', 'OP_ASSIGN')], CallFunc(Name('sql_custom'), [Name('app_config'), Getattr(Name('self'), 'style'), Name('connection')], None, None))]))
Module(None, Stmt([If([(Name('match'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('res'))]))
Module(None, Stmt([Assign([AssName('_cached_modules', 'OP_ASSIGN')], CallFunc(Getattr(Name('_cached_modules'), 'union'), [Name('new_modules')], None, None))]))
Module(None, Stmt([From('django.forms.fields', [('Field', None), ('ChoiceField', None)], 0)]))
Module(None, Stmt([Return(Name('_curried'))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'is_reversed'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('filters'), 'append'), [Tuple([Name('filter_func'), Name('args')])], None, None))]))
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], CallFunc(Name('Template'), [Name('output'), Keyword('name', Name('filepath'))], None, None))]))
Module(None, Stmt([Return(Subscript(Name('cache'), 'OP_APPLY', [Name('mem_args')]))]))
Module(None, Stmt([Assign([AssName('server_port', 'OP_ASSIGN')], CallFunc(Name('str'), [Subscript(Getattr(Name('self'), 'META'), 'OP_APPLY', [Const('SERVER_PORT')])], None, None))]))
Module(None, Stmt([Assign([AssName('last_bit', 'OP_ASSIGN')], Slice(Getattr(Name('self'), 'template_string'), 'OP_APPLY', Name('upto'), None))]))
Module(None, Stmt([Assign([AssTuple([AssName('msgs', 'OP_ASSIGN'), AssName('errors', 'OP_ASSIGN'), AssName('status', 'OP_ASSIGN')])], CallFunc(Name('popen_wrapper'), [Name('args')], None, None))]))
Module(None, Stmt([While(Compare(Name('current_chunk'), [('!=', Const(''))]), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('sys'), 'exit'), [CallFunc(Name('bool'), [Name('failures')], None, None)], None, None))]))
Module(None, Stmt([If([(And([Compare(Name('domain_part'), [('not in', Getattr(Name('self'), 'domain_whitelist'))]), Not(CallFunc(Getattr(Name('self'), 'validate_domain_part'), [Name('domain_part')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('app_config'), 'models_module'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__len__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Slice(Name('self'), 'OP_ASSIGN', None, None)], Name('tup'))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'for' statements should have at least four words: %s"), Getattr(Name('token'), 'contents')))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'validators'), 'append'), [Getattr(Name('self'), '_regex_validator')], None, None))]))
except AttributeError :
Module(None, Stmt([If([(Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('top_dir')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Starts a lightweight Web server for development.'))]))
Module(None, Stmt([Assign([Subscript(Name('loop_dict'), 'OP_ASSIGN', [Const('revcounter0')])], Sub((Sub((Name('len_values'), Name('i'))), Const(1))))]))
Module(None, Stmt([From('django.db.models', [('AutoField', None), ('OneToOneField', None), ('ForeignKey', None)], 0)]))
Module(None, Stmt([Return(Name('plural_suffix'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('addrport'), Keyword('nargs', Const('?')), Keyword('help', Const('Optional port number, or ipaddr:port'))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'remove'), [Name('old_file_name')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_HEADING'), [Mod((Const('Merging %s'), Name('app_label')))], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'configure_formatter', ['self', 'config'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('ExtendsNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('is_library_missing'), [Name('path')], None, None))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Function(None, '_get_files', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Const('Resetting sequences\n')], None, None))]))
Module(None, Stmt([Class('MaxLengthValidator', [Name('BaseValidator')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'next_space_index', ['subject', 'i'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.deconstruct', [('deconstructible', None)], 0)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('obj'), '__class__', 'OP_ASSIGN')], Getattr(Name('self'), '__class__'))]))
Module(None, Stmt([Assign([AssName('__D', 'OP_ASSIGN')], Const('(?P<day>\\d{2})'))]))
Module(None, Stmt([Pass()]))
elif t . token_type == TOKEN_VAR :
Module(None, Stmt([Discard(CallFunc(Name('reset_translations'), [], None, None))]))
else :
Module(None, Stmt([Import([('pytz', None)])]))
Module(None, Stmt([Assign([AssName('xgettext_options', 'OP_ASSIGN')], List([Const('--from-code=UTF-8'), Const('--add-comments=Translators')]))]))
ser_fmts = serializers . get_public_serializer_formats ( ) if ser_fmt is None else [ ser_fmt ]
Module(None, Stmt([Assign([AssName('d', 'OP_ASSIGN')], CallFunc(Getattr(Name('data'), 'get'), [Mod((Getattr(Name('self'), 'day_field'), Name('name')))], None, None))]))
Module(None, Stmt([Return(Name('errors'))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('s'), Name('Exception')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_read_started', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Function(None, 'choice', ['self', 'obj'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([CallFunc(Name('isinstance'), [Name('fp'), Name('file')], None, None), CallFunc(Name('isinstance'), [Name('data'), Name('unicode')], None, None), Compare(Getattr(Name('fp'), 'encoding'), [('is not', Name('None'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'seek'), [Const(0)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'mutex', 'OP_ASSIGN')], CallFunc(Getattr(Name('threading'), 'RLock'), [], None, None))]))
Module(None, Stmt([From('django.utils.six.moves.urllib.parse', [('urljoin', None)], 0)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Assign([AssName('g', 'OP_ASSIGN')], CallFunc(Getattr(Name('one_percent_re'), 'sub'), [Const('%%'), Name('g')], None, None))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('title'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('title')])], None, None))]))
Module(None, Stmt([If([(And([Not(Name('value')), Getattr(Name('self'), 'required')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assert(Not(CallFunc(Name('isinstance'), [Name('bcc'), Getattr(Name('six'), 'string_types')], None, None)), Const('"bcc" argument must be a list or tuple'))]))
try :
Module(None, Stmt([Assign([AssName('namelist', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), '_archive'), 'namelist'), [], None, None))]))
Module(None, Stmt([If([(Compare(Name('data'), [('in', Name('seen_data'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Break()]))
Module(None, Stmt([From('django.utils.module_loading', [('import_string', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('result'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('functools', None)])]))
Module(None, Stmt([If([(Getattr(Name('error'), 'params'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'stream', 'boundary'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('    Installing index for %s.%s model\n'), Tuple([Name('app_name'), Getattr(Getattr(Name('model'), '_meta'), 'object_name')])))], None, None))]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'index'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('BaseModelFormSet'), Name('self')], None, None), '_construct_form'), [Name('i')], None, Name('kwargs')))]))
Module(None, Stmt([For(AssName('i', 'OP_ASSIGN'), CallFunc(Name('range'), [Const(0), CallFunc(Getattr(Name('self'), 'total_form_count'), [], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('Error: %s'), Name('message')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('latest_date', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('now', 'OP_ASSIGN')], CallFunc(Getattr(Name('datetime'), 'utcnow'), [], None, None))]))
Module(None, Stmt([Class('DeclarativeFieldsMetaclass', [Name('MediaDefiningClass')], None, Stmt([Pass()]), None)]))
except LookupError :
Module(None, Stmt([Break()]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '__class__'), [Const(''), Keyword('mutable', Name('True')), Keyword('encoding', Getattr(Name('self'), 'encoding'))], None, None))]))
Module(None, Stmt([If([(Compare(Slice(Name('data'), 'OP_APPLY', Name('last'), Add((Name('last'), Const(1)))), [('==', Const('\r'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'waiting_writers'), '-=', Const(1))]))
Module(None, Stmt([Return(Name('path'))]))
Module(None, Stmt([Assign([AssName('close', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Function(None, 'as_text', ['self', 'attrs', 'kwargs'], [Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'error_class', 'OP_ASSIGN')], Const('errorlist'))]))
Module(None, Stmt([Function(None, '__newobj__', ['cls', 'args'], [], 4, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('module', 'OP_ASSIGN')], CallFunc(Name('import_module'), [Name('module_path')], None, None))]))
Module(None, Stmt([For(AssName('item', 'OP_ASSIGN'), Name('sequence'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'test_runner', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateDoesNotExist'), [Name('name')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('nodelist_false', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'parse'), [Tuple([Const('endifchanged')])], None, None))]))
Module(None, Stmt([Class('RendererMixin', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'as_ul', ['self'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Function(None, '__init__', ['self', 'obj'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('time'), 'sleep'), [Const(1)], None, None))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Function(None, '__init__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('FormSet'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'attrs', 'render_value'], [Name('None'), Name('False')], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('mail'), 'mail_admins'), [Name('subject'), Name('message'), Keyword('fail_silently', Name('True')), Keyword('html_message', Name('html_message')), Keyword('connection', CallFunc(Getattr(Name('self'), 'connection'), [], None, None))], None, None))]))
Module(None, Stmt([If([(Name('safe_input'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], CallFunc(Name('view_func'), [Name('request')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Return(Name('plural'))]))
Module(None, Stmt([Function(None, '__enter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'startElement'), [Const('field'), Dict([(Const('name'), Getattr(Name('field'), 'name')), (Const('rel'), Getattr(Getattr(Getattr(Name('field'), 'rel'), '__class__'), '__name__')), (Const('to'), CallFunc(Name('smart_text'), [Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_meta')], None, None))])], None, None))]))
Module(None, Stmt([Assign([AssName('val1', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'var1'), 'resolve'), [Name('context'), Name('True')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), '_stream'), 'read'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Return(Name('version'))]))
Module(None, Stmt([Assign([AssName('INFO', 'OP_ASSIGN')], Const(20))]))
Module(None, Stmt([From('django.forms.formsets', [('*', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('BaseCache'), '__init__'), [Name('self'), Name('params')], None, None))]))
Module(None, Stmt([Assign([AssName('resource', 'OP_ASSIGN')], CallFunc(Getattr(Name('resource'), 'decode'), [Getattr(Name('settings'), 'FILE_CHARSET')], None, None))]))
Module(None, Stmt([Continue()]))
else :
Module(None, Stmt([Function(None, '_explode_shorthand_ip_string', ['ip_str'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Tuple([Name('result'), Name('result_args')]))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("Variables and attributes may not begin with underscores: '%s'"), Name('var')))], None, None), None, None)]))
Module(None, Stmt([Return(CallFunc(Name('escape'), [Name('text')], None, None))]))
Module(None, Stmt([Assign([AssName('val', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), '_cache'), 'incr'), [Name('key'), Name('delta')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_cull_frequency'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--no-startup'), Keyword('action', Const('store_true')), Keyword('dest', Const('no_startup')), Keyword('help', Const('When using plain Python, ignore the PYTHONSTARTUP environment variable and ~/.pythonrc.py script.'))], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('DisallowedHost'), [Name('msg')], None, None), None, None)]))
Module(None, Stmt([Function(None, 'strip_spaces_between_tags', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__deepcopy__', ['self', 'memo'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Subscript(Name('MONTHS'), 'OP_APPLY', [Getattr(Getattr(Name('self'), 'data'), 'month')]))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], Tuple(()))]))
Module(None, Stmt([From('django', [('http', None)], 0)]))
signals . got_request_exception . send ( sender = self . __class__ , request = request )
Module(None, Stmt([Assign([AssName('definition', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('cls'), Const('Media'), Name('None')], None, None))]))
Module(None, Stmt([Function(None, 'get_public_serializer_formats', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('pickled', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('sql'), 'extend'), [CallFunc(Getattr(Getattr(Name('connection'), 'creation'), 'sql_for_pending_references'), [Name('refto'), CallFunc(Name('no_style'), [], None, None), Name('pending_references')], None, None)], None, None))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
except IndexError :
@ property
Module(None, Stmt([Class('MediaDefiningClass', [Name('type')], None, Stmt([Pass()]), None)]))
try :
else :
Module(None, Stmt([Return(Subscript(Name('MONTHS_ALT'), 'OP_APPLY', [Getattr(Getattr(Name('self'), 'data'), 'month')]))]))
Module(None, Stmt([Function(None, 'cfg_convert', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('value'), 'configurator', 'OP_ASSIGN')], Name('self'))]))
Module(None, Stmt([Assign([AssName('format_locations', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'replace_header'), [Const('Content-Type'), Mod((Const('text/%s; charset="%s"'), Tuple([Name('subtype'), Name('charset')])))], None, None))]))
Module(None, Stmt([Assign([AssName('javascript_quote', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('javascript_quote'), Getattr(Name('six'), 'text_type')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('value'), 'decode'), [Name('charset')], None, None))]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Const('<IfNode>'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'error_list'), 'extend'), [Getattr(Name('message'), 'error_list')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_key'), [Name('key')], None, None))]))
Module(None, Stmt([If([(And([Getattr(Name('parsed'), 'scheme'), Compare(Getattr(Name('parsed'), 'scheme'), [('not in', Getattr(Name('self'), 'allowed_schemes'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('callable'), [Name('callback')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'items'), 'append'), [Name('item')], None, None))]))
Module(None, Stmt([Return(And([CallFunc(Name('isinstance'), [Name('other'), Name('RegexValidator')], None, None), Compare(Getattr(Getattr(Name('self'), 'regex'), 'pattern'), [('==', Getattr(Getattr(Name('other'), 'regex'), 'pattern'))]), Compare(Getattr(Getattr(Name('self'), 'regex'), 'flags'), [('==', Getattr(Getattr(Name('other'), 'regex'), 'flags'))]), Compare(Getattr(Name('self'), 'message'), [('==', Getattr(Name('other'), 'message'))]), Compare(Getattr(Name('self'), 'code'), [('==', Getattr(Name('other'), 'code'))]), Compare(Getattr(Name('self'), 'inverse_match'), [('==', Getattr(Name('other'), 'inverse_match'))])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'makedirs'), [Getattr(Name('self'), '_dir'), Const(448)], None, None))]))
Module(None, Stmt([Import([('memcache', None)])]))
@ register . filter ( is_safe = False )
Module(None, Stmt([Assign([AssName('lists', 'OP_ASSIGN')], Name('_iterlists'))]))
Module(None, Stmt([Function(None, 'modelform_factory', ['model', 'form', 'fields', 'exclude', 'formfield_callback', 'widgets', 'localized_fields', 'labels', 'help_texts', 'error_messages'], [Name('ModelForm'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
except KeyError :
Module(None, Stmt([From('yaml', [('CSafeLoader', 'SafeLoader')], 0)]))
Module(None, Stmt([Return(CallFunc(Name('force_str'), [Mod((Const('<%s: %s (%s)>'), Tuple([Getattr(Getattr(Name('self'), '__class__'), '__name__'), Getattr(Name('self'), 'name'), Getattr(Name('self'), 'content_type')])))], None, None))]))
except KeyError :
Module(None, Stmt([With(CallFunc(Name('open'), [Name('filename'), Const('wb')], None, None), AssName('outfile', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([From('base', [('CommandError', None)], 1)]))
Module(None, Stmt([From('django.utils.six.moves', [('cPickle', 'pickle')], 0)]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Getattr(Name('s'), 'decode'), [Const('utf-8')], None, None))]))
Module(None, Stmt([Assign([AssName('msgs', 'OP_ASSIGN')], CallFunc(Getattr(Name('msgs'), 'replace'), [Const('charset=CHARSET'), Const('charset=UTF-8')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid_choice')]), Keyword('code', Const('invalid_choice')), Keyword('params', Dict([(Const('value'), Name('val'))]))], None, None), None, None)]))
else :
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Return(Name('palette'))]))
Module(None, Stmt([Assign([AssName('parser', 'OP_ASSIGN')], CallFunc(Name('OptionParser'), [Keyword('prog', Name('prog_name')), Keyword('usage', CallFunc(Getattr(Name('self'), 'usage'), [Name('subcommand')], None, None)), Keyword('version', CallFunc(Getattr(Name('self'), 'get_version'), [], None, None))], None, None))]))
else :
Module(None, Stmt([Function(None, '__init__', ['self', 'template_string', 'origin'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'field', 'OP_ASSIGN')], Name('field'))]))
except ValueError :
Module(None, Stmt([Assign([AssName('plural_form_line', 'OP_ASSIGN')], CallFunc(Name('force_str'), [CallFunc(Getattr(Name('m'), 'group'), [Const('value')], None, None)], None, None))]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None)], 0)]))
Module(None, Stmt([Class('InterBoundaryIter', [Getattr(Name('six'), 'Iterator')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('readline'), 'parse_and_bind'), [Const('tab:complete')], None, None))]))
Module(None, Stmt([For(AssName('chunk', 'OP_ASSIGN'), CallFunc(Getattr(Name('content'), 'chunks'), [], None, None), Stmt([Pass()]), None)]))
@ wraps ( view_func , assigned = available_attrs ( view_func ) )
Module(None, Stmt([Assign([AssTuple([AssName('module_path', 'OP_ASSIGN'), AssName('class_name', 'OP_ASSIGN')])], CallFunc(Getattr(Name('dotted_path'), 'rsplit'), [Const('.'), Const(1)], None, None))]))
Module(None, Stmt([Subscript(Name('cc'), 'OP_DELETE', [Const('public')])]))
Module(None, Stmt([Function(None, 'to_locale', ['language', 'to_lower'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'max_expr', 'OP_ASSIGN')], Name('max_expr'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('code_list'), 'append'), [Subscript(Name('opt_dict'), 'OP_APPLY', [Name('o')])], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('number_format'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('resolver', 'OP_ASSIGN')], CallFunc(Name('get_resolver'), [Name('urlconf')], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('!=', Const(3))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([AssName('filters', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const(''), 'join'), [Name('rendered_widgets')], None, None))]))
Module(None, Stmt([Assign([AssName('ext', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(Name('self'), 'splitext'), [Name('guessed_filename')], None, None), 'OP_APPLY', [Const(1)]))]))
Module(None, Stmt([For(AssName('index', 'OP_ASSIGN'), CallFunc(Name('range'), [CallFunc(Name('len'), [Name('hextets')], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('root', 'OP_ASSIGN')], CallFunc(Name('max'), [Name('roots')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const("Key '%s' not found"), Name('key')))], None, None), None, None)]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Import([('random', None)])]))
Module(None, Stmt([If([(Not(Name('dklen')), Stmt([Pass()]))], None)]))
sign = '-' if offset < 0 else '+'
Module(None, Stmt([If([(Compare(Name('_default'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('form'), 'save_m2m'), [], None, None))]))
Module(None, Stmt([Function(None, '__mod__', ['self', 'rhs'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('symlink_path', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('tmpdir'), Const('symlink')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('field_output'), 'append'), [Const('PRIMARY KEY')], None, None))]))
Module(None, Stmt([Import([('ssl', None)])]))
Module(None, Stmt([Assign([AssTuple([AssName('sign', 'OP_ASSIGN'), AssName('digittuple', 'OP_ASSIGN'), AssName('exponent', 'OP_ASSIGN')])], CallFunc(Getattr(Name('value'), 'as_tuple'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('is_ignored'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'normpath'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('dirpath'), Name('dirname')], None, None)], None, None), Name('norm_patterns')], None, None), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Return(Name('self'))]))
Module(None, Stmt([Discard(Yield(Name('line')))]))
Module(None, Stmt([If([(And([Compare(Name('serializers'), [('is', Name('None'))]), Not(Name('_serializers'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('datetime', None)])]))
Module(None, Stmt([Return(Name('f'))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'is_bound'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('lib2to3', [('fixer_base', None)], 0)]))
except TypeError :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Getattr(Name('pending_references'), 'setdefault'), [Name('refto'), List(())], None, None), 'extend'), [Name('refs')], None, None))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Assign([AssName('bmatch', 'OP_ASSIGN')], CallFunc(Getattr(Name('block_re'), 'match'), [Getattr(Name('t'), 'contents')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'rmdir'), [Name('tmpdir')], None, None))]))
Module(None, Stmt([If([(And([Compare(Name('i'), [('==', Const(0))]), Not(CallFunc(Name('is_writable'), [CallFunc(Name('npath'), [Add((Name('base_path'), Const('.mo')))], None, None)], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('e'), Name('CommandError')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('initial')])], Getattr(Getattr(Name('self'), 'parent_instance'), 'pk'))]))
Module(None, Stmt([Return(Name('current'))]))
Module(None, Stmt([Function(None, '__init__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__nonzero__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('mem_args', 'OP_ASSIGN')], Slice(Name('args'), 'OP_APPLY', None, Name('num_args')))]))
field_params [ 'max_digits' ] = row [ 4 ] if row [ 4 ] is not None else 10
Module(None, Stmt([Assign([AssName('content', 'OP_ASSIGN')], CallFunc(Getattr(Name('content'), 'encode'), [Const('utf-8')], None, None))]))
else :
try :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('CheckboxInput'), Name('self')], None, None), '__init__'), [Name('attrs')], None, None))]))
Module(None, Stmt([Assign([AssName('memoryview', 'OP_ASSIGN')], Name('memoryview'))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('ChoiceField'), Name('self')], None, None), '__deepcopy__'), [Name('memo')], None, None))]))
Module(None, Stmt([Assign([AssName('exc_info', 'OP_ASSIGN')], Getattr(Name('record'), 'exc_info'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('stream'), 'unget'), [Slice(Name('chunk'), 'OP_APPLY', Name('next'), None)], None, None))]))
Module(None, Stmt([Function(None, 'H', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('formset'), 'is_valid'), [], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('using_sysrandom', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssName('curr', 'OP_ASSIGN')], Subscript(Name('cwords'), 'OP_APPLY', [Sub((Name('cword'), Const(1)))]))]))
Module(None, Stmt([Assign([AssName('plen', 'OP_ASSIGN')], Add((CallFunc(Name('len'), [Name('provided')], None, None), Const(1))))]))
Module(None, Stmt([If([(Compare(Getattr(Getattr(Name('self'), 'paginator'), 'count'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('value'), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate'), [Name('value')], None, None))]))
Module(None, Stmt([If([(Name('extra_attrs'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'asvar', 'OP_ASSIGN')], Name('asvar'))]))
Module(None, Stmt([Assign([AssName('num_entries', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('filelist')], None, None))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], Slice(Name('subject'), 'OP_APPLY', Name('p'), Name('i')))]))
Module(None, Stmt([Assign([AssName('comment', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('input_type', 'OP_ASSIGN')], Const('radio'))]))
Module(None, Stmt([Return(Or([Name('nodelist_true_output'), CallFunc(Getattr(Getattr(Name('self'), 'nodelist_true'), 'render'), [Name('context')], None, None)]))]))
Module(None, Stmt([For(AssTuple([AssName('opname', 'OP_ASSIGN'), AssName('opfunc', 'OP_ASSIGN')]), Subscript(Name('convert'), 'OP_APPLY', [Name('root')]), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('SlugField'), Name('self')], None, None), 'clean'), [Name('value')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('Unknown model in excludes: %s'), Name('exclude')))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('published'), CallFunc(Name('rfc3339_date'), [Subscript(Name('item'), 'OP_APPLY', [Const('pubdate')])], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('full_statement', 'OP_ASSIGN')], List([Mod((Const('CREATE TABLE %s ('), CallFunc(Name('qn'), [Name('tablename')], None, None)))]))]))
Module(None, Stmt([Function(None, 'write', ['self', 'val'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('iri'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], Tuple([Const('Template'), Const('Context'), Const('RequestContext'), Const('compile_string')]))]))
Module(None, Stmt([Return(Getattr(Name('self'), 'DSTDIFF'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('s'), 'encode'), [Name('encoding'), Name('errors')], None, None))]))
Module(None, Stmt([Return(Name('True'))]))
try :
Module(None, Stmt([Assign([AssName('needs_multipart_form', 'OP_ASSIGN')], Name('True'))]))
else :
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Getattr(Name('self'), 'object_list'), Name('list')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'complain', ['self', 'wargs', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('data'), 'get'), [Name('name'), Name('None')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Subscript(Getattr(Name('self'), 'blocks'), 'OP_APPLY', [Name('name')]), 'pop'), [], None, None))]))
Module(None, Stmt([Assign([AssName('offset', 'OP_ASSIGN')], UnarySub(Name('offset')))]))
Module(None, Stmt([Assign([AssName('model', 'OP_ASSIGN')], CallFunc(Getattr(Name('app_config'), 'get_model'), [Name('model_label')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'month_none_value', 'OP_ASSIGN')], Getattr(Name('self'), 'none_value'))]))
Module(None, Stmt([Assign([Subscript(Name('url_fields'), 'OP_ASSIGN', [Const(2)])], Const(''))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Assign([AssName('blocks', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Getattr(Name('n'), 'name'), Name('n')]), [GenExprFor(AssName('n', 'OP_ASSIGN'), CallFunc(Getattr(Getattr(Name('compiled_parent'), 'nodelist'), 'get_nodes_by_type'), [Name('BlockNode')], None, None), [])]))], None, None))]))
Module(None, Stmt([Assign([AssName('id_', 'OP_ASSIGN')], Or([CallFunc(Getattr(Getattr(Getattr(Getattr(Name('self'), 'field'), 'widget'), 'attrs'), 'get'), [Const('id')], None, None), Getattr(Name('self'), 'auto_id')]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('rfcdate', 'OP_ASSIGN')], CallFunc(Name('formatdate'), [Name('epoch_seconds')], None, None))]))
Module(None, Stmt([If([(Not(Slice(Name('chunk'), 'OP_APPLY', None, UnarySub(Name('rollback')))), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('autoreload'), 'main'), [Getattr(Name('self'), 'inner_run'), Name('None'), Name('options')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'cc', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'send_messages', ['self', 'email_messages'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Or([Compare(Name('value'), [('==', Name('k'))]), Compare(Name('text_value'), [('==', CallFunc(Name('force_text'), [Name('k')], None, None))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('result'), 'key', 'OP_ASSIGN')], Name('key'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'data'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Function(None, 'dec', ['func'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('timesince'), [Name('value')], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Name('new_name'), 'find'), [Const('__')], None, None), [('>=', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__copy__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('path'))]))
else :
Module(None, Stmt([Assign([AssName('message_context', 'OP_ASSIGN')], CallFunc(Getattr(Name('message_context'), 'strip'), [Const('"')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Could not find common ancestor of %s'), Name('migration_names')))], None, None), None, None)]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Getattr(Name('connection'), 'introspection'), 'table_name_converter'), [Getattr(Getattr(Name('model'), '_meta'), 'db_table')], None, None), [('in', Name('table_names'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('x', 'OP_ASSIGN'), CallFunc(Getattr(Name('arg'), 'split'), [Const(':')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'data', 'OP_ASSIGN')], Name('obj'))]))
Module(None, Stmt([Return(Getattr(Subscript(Getattr(Name('self'), 'forms'), 'OP_APPLY', [Const(0)]), 'media'))]))
Module(None, Stmt([Return(Compare(Getattr(Name('self'), 'id'), [('in', Getattr(Name('settings'), 'SILENCED_SYSTEM_CHECKS'))]))]))
Module(None, Stmt([Assign([AssName('internal_use_only', 'OP_ASSIGN')], Name('False'))]))
@ cached_property
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Mod((CallFunc(Name('ugettext'), [Const('%s PB')], None, None), CallFunc(Name('filesize_number_format'), [Div((Name('bytes'), Name('PB')))], None, None))))]))
Module(None, Stmt([Function(None, 'A', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'attachments'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('INITIAL_FORM_COUNT', 'OP_ASSIGN')], Const('INITIAL_FORMS'))]))
Module(None, Stmt([Assign([AssAttr(Name('UnlockFileEx'), 'argtypes', 'OP_ASSIGN')], List([Name('HANDLE'), Name('DWORD'), Name('DWORD'), Name('DWORD'), Name('LPOVERLAPPED')]))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('args')], None, None), [('>', Const(4))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('new_context'))]))
Module(None, Stmt([Function(None, 'get_cookie_signer', ['salt'], [Const('django.core.signing.get_cookie_signer')], 0, None, Stmt([Pass()]))]))
try :
except ( KeyError , IndexError , AttributeError ) :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_lock', 'OP_ASSIGN')], CallFunc(Getattr(Name('_locks'), 'setdefault'), [Name('name'), CallFunc(Name('RWLock'), [], None, None)], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'max_digits', 'OP_ASSIGN'), AssAttr(Name('self'), 'decimal_places', 'OP_ASSIGN')])], Tuple([Name('max_digits'), Name('decimal_places')]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'func', 'OP_ASSIGN')], Name('func'))]))
Module(None, Stmt([Raise(Name('value'), None, None)]))
Module(None, Stmt([If([(And([Name('exclude'), Compare(Getattr(Name('f'), 'name'), [('in', Name('exclude'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Const('id'), [('in', Getattr(Name('self'), 'attrs'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('chunks', 'OP_ASSIGN')], Tuple([Tuple([Mul((Mul((Mul((Const(60), Const(60))), Const(24))), Const(365))), CallFunc(Name('ungettext_lazy'), [Const('%d year'), Const('%d years')], None, None)]), Tuple([Mul((Mul((Mul((Const(60), Const(60))), Const(24))), Const(30))), CallFunc(Name('ungettext_lazy'), [Const('%d month'), Const('%d months')], None, None)]), Tuple([Mul((Mul((Mul((Const(60), Const(60))), Const(24))), Const(7))), CallFunc(Name('ungettext_lazy'), [Const('%d week'), Const('%d weeks')], None, None)]), Tuple([Mul((Mul((Const(60), Const(60))), Const(24))), CallFunc(Name('ungettext_lazy'), [Const('%d day'), Const('%d days')], None, None)]), Tuple([Mul((Const(60), Const(60))), CallFunc(Name('ungettext_lazy'), [Const('%d hour'), Const('%d hours')], None, None)]), Tuple([Const(60), CallFunc(Name('ungettext_lazy'), [Const('%d minute'), Const('%d minutes')], None, None)])]))]))
Module(None, Stmt([Class('FileSystemStorage', [Name('Storage')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('logger'), 'level', 'OP_ASSIGN')], Getattr(Name('logging'), 'NOTSET'))]))
Module(None, Stmt([For(AssName('app_config', 'OP_ASSIGN'), CallFunc(Getattr(Name('apps'), 'get_app_configs'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([From('datetime', [('datetime', None)], 0)]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([If([(Name('priority'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('_supported', 'OP_ASSIGN')], CallFunc(Name('OrderedDict'), [Getattr(Name('settings'), 'LANGUAGES')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('SuspiciousFileOperation'), [Mod((Const("Attempted access to '%s' denied."), Name('name')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssTuple([AssName('the_path', 'OP_ASSIGN'), AssName('info', 'OP_ASSIGN')])], CallFunc(Name('urlretrieve'), [Name('url'), CallFunc(Getattr(Name('path'), 'join'), [Name('tempdir'), Name('filename')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('digest', 'OP_ASSIGN')], Getattr(Name('hashlib'), 'sha256'))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'%s' tag takes at least 2 arguments and the second last argument must be 'as'"), Name('function_name')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('resolver', 'OP_ASSIGN')], CallFunc(Getattr(Name('urlresolvers'), 'RegexURLResolver'), [Const('^/'), Name('urlconf')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_cull_frequency'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('op'), 'id', 'OP_ASSIGN')], Name('key'))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'connection')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Getattr(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'features'), 'needs_datetime_string_cast'), Not(CallFunc(Name('isinstance'), [Name('expires'), Name('datetime')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('exclude', 'OP_ASSIGN')], CallFunc(Getattr(Name('form'), '_get_validation_exclusions'), [], None, None))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Function(None, 'model_installed', ['model'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_cache', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('django', None)])]))
Module(None, Stmt([Assign([AssName('help_text', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([AugAssign(Name('guessed_filename'), '+=', Name('ext'))]))
Module(None, Stmt([AugAssign(Name('ignore_patterns'), '+=', List([Const('CVS'), Const('.*'), Const('*~'), Const('*.pyc')]))]))
Module(None, Stmt([From('django.http.cookie', [('SimpleCookie', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'endDocument'), [], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('e'), Const('django_template_source')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('datetime', None)])]))
Module(None, Stmt([Assign([AssName('hidden_widget', 'OP_ASSIGN')], Name('HiddenInput'))]))
Module(None, Stmt([If([(Compare(Name('source'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'style'), 'HTTP_SUCCESS'), [Name('msg')], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('app_name', 'OP_ASSIGN'), AssName('namespace_list', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('pattern'), 'app_dict'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.db', [('connections', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([Assign([Subscript(Name('memo'), 'OP_ASSIGN', [CallFunc(Name('id'), [Name('self')], None, None)])], Name('result'))]))
Module(None, Stmt([Class('BaseHandler', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Class('Storage', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('initial_value', 'OP_ASSIGN')], CallFunc(Name('initial_value'), [], None, None))]))
Module(None, Stmt([Function(None, 'add_metaclass', ['metaclass'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_lib', 'OP_ASSIGN')], Name('library'))]))
Module(None, Stmt([Return(Name('_wrapped_view'))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Name('method'), [Name('self')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('path'), 'exists'), [Name('new_path')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('RFC1123_DATE', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Mod((Const('^\\w{3}, %s %s %s %s GMT$'), Tuple([Name('__D'), Name('__M'), Name('__Y'), Name('__T')])))], None, None))]))
else :
Module(None, Stmt([Assign([AssName('start', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([If([(Compare(Name('ch'), [('!=', Const('\\'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_default_manager'), Const('get_by_natural_key')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Unable to set target handler %r: %s'), Tuple([Subscript(Name('config'), 'OP_APPLY', [Const('target')]), Name('e')])))], None, None), None, None)]))
Module(None, Stmt([Assign([Subscript(Name('_format_cache'), 'OP_ASSIGN', [Name('cache_key')])], Name('val'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '__prepare_class__'), [], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of BaseLoader must provide a load_template_source() method')], None, None), None, None)]))
Module(None, Stmt([Assign([AssTuple([AssName('scheme', 'OP_ASSIGN'), AssName('netloc', 'OP_ASSIGN'), AssName('path', 'OP_ASSIGN'), AssName('query', 'OP_ASSIGN'), AssName('fragment', 'OP_ASSIGN')])], CallFunc(Name('urlsplit'), [Name('url')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('opts', 'OP_ASSIGN'), AssAttr(Name('new_class'), '_meta', 'OP_ASSIGN')], CallFunc(Name('ModelFormOptions'), [CallFunc(Name('getattr'), [Name('new_class'), Const('Meta'), Name('None')], None, None)], None, None))]))
Module(None, Stmt([From('logging.config', [('dictConfig', None)], 0)]))
Module(None, Stmt([Assign([AssName('oldvalue', 'OP_ASSIGN')], Subscript(Name('root'), 'OP_APPLY', [Name('RESULT')]))]))
Module(None, Stmt([Assign([AssName('nodes', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssAttr(Name('response'), 'content', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([From('django.db', [('connections', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Name('line')], None, None))]))
Module(None, Stmt([Import([('time', None)])]))
Module(None, Stmt([Return(Name('msg'))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('timezone'), Const('localize')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('EntitiesForbidden'), Name('self')], None, None), '__init__'), [], None, None))]))
Module(None, Stmt([Return(Getattr(Getattr(Name('p'), 'image'), 'size'))]))
Module(None, Stmt([Raise(CallFunc(Name('ExternalReferenceForbidden'), [Name('context'), Name('base'), Name('sysid'), Name('pubid')], None, None), None, None)]))
Module(None, Stmt([If([(Name('invalid_var_format_string'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('ch'), [('==', Const('+'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.core', [('signing', None)], 0)]))
Module(None, Stmt([Function(None, 'validate', ['self', 'app_config', 'display_num_errors'], [Name('None'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('CommandParser'), Name('self')], None, None), 'error'), [Name('message')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'field_name', 'OP_ASSIGN')], Name('field_name'))]))
Module(None, Stmt([With(Getattr(Name('self'), 'mutex'), None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('suffix', 'OP_ASSIGN')], Subscript(Name('d'), 'OP_APPLY', [Const('suffix')]))]))
Module(None, Stmt([Assign([AssName('content_type', 'OP_ASSIGN')], CallFunc(Getattr(Name('META'), 'get'), [Const('HTTP_CONTENT_TYPE'), CallFunc(Getattr(Name('META'), 'get'), [Const('CONTENT_TYPE'), Const('')], None, None)], None, None))]))
Module(None, Stmt([Discard(Yield(Tuple([Name('key'), Subscript(Name('self'), 'OP_APPLY', [Name('key')])])))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'use_tz', 'OP_ASSIGN')], Name('use_tz'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'mod', 'OP_ASSIGN')], Name('old_mod'))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of Storage must provide a modified_time() method')], None, None), None, None)]))
Module(None, Stmt([Return(Compare(CallFunc(Name('list'), [Name('self')], None, None), [('==', Name('other'))]))]))
Module(None, Stmt([Assign([AssName('basedir', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'dirname'), [Name('potfile')], None, None), Name('locale'), Const('LC_MESSAGES')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--no-location'), Keyword('action', Const('store_true')), Keyword('dest', Const('no_location')), Keyword('default', Name('False')), Keyword('help', Const("Don't write '#: filename:line' lines."))], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('field'), 'rel'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('options'), 'OP_ASSIGN', [CallFunc(Getattr(Name('k'), 'lower'), [], None, None)])], Name('v'))]))
elif isinstance ( value , datetime . time ) :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_size', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_get_size_from_underlying_file'), [], None, None))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], Tuple([Const('BaseFormSet'), Const('formset_factory'), Const('all_valid')]))]))
Module(None, Stmt([If([(Compare(Name('i'), [('>=', CallFunc(Name('len'), [Name('subject')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__getinitargs__', ['self'], [], 0, None, Stmt([Pass()]))]))
elif user_settings [ key ] != default_settings [ key ] :
Module(None, Stmt([Assign([AssTuple([AssName('name', 'OP_ASSIGN'), AssName('ext', 'OP_ASSIGN')])], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'splitext'), [Name('name')], None, None))]))
Module(None, Stmt([Return(Name('output'))]))
Module(None, Stmt([Function(None, 'get_nodes_by_type', ['self', 'nodetype'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.six.moves', [('_dummy_thread', 'thread')], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'length', 'OP_ASSIGN')], Name('length'))]))
Module(None, Stmt([Assign([AssName('__slots__', 'OP_ASSIGN')], Const('hashvalue'))]))
Module(None, Stmt([While(And([Compare(Name('i'), [('<', CallFunc(Name('len'), [Name('subject')], None, None))]), Compare(Subscript(Name('subject'), 'OP_APPLY', [Name('i')]), [('in', Tuple([Const(' '), Const('\t')]))])]), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_html_output'), [Keyword('normal_row', Const('<p%(html_class_attr)s>%(label)s %(field)s%(help_text)s</p>')), Keyword('error_row', Const('%s')), Keyword('row_ender', Const('</p>')), Keyword('help_text_html', Const(' <span class="helptext">%s</span>')), Keyword('errors_on_separate_row', Name('True'))], None, None))]))
Module(None, Stmt([Function(None, 'autocomplete', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'file'), 'close'), [], None, None))]))
Module(None, Stmt([If([(Compare(Name('character'), [('!=', Const('.'))]), Stmt([Pass()]))], None)]))
sign = '-' if seconds < 0 else '+'
Module(None, Stmt([Function(None, 'dictsort', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Assign([Subscript(Name('wsgi_opts'), 'OP_ASSIGN', [Const('bindAddress')])], Subscript(Name('options'), 'OP_APPLY', [Const('socket')]))]))
Module(None, Stmt([Assign([AssName('create_models', 'OP_ASSIGN')], CallFunc(Name('set'), [CallFunc(Getattr(Name('itertools'), 'chain'), [], CallFunc(Getattr(Name('manifest'), 'values'), [], None, None), None)], None, None))]))
Module(None, Stmt([If([(And([Getattr(Getattr(Name('self'), 'field'), 'required'), CallFunc(Name('hasattr'), [Getattr(Name('self'), 'form'), Const('required_css_class')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Name('normalize'), [Name('p_pattern')], None, None))]))
Module(None, Stmt([For(AssName('attr', 'OP_ASSIGN'), Getattr(Name('self'), 'child_nodelists'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Getattr(Name('token'), 'split_contents'), [], None, None))]))
except StandardError as e :
Module(None, Stmt([Function(None, 'update', ['self', 'other_dict'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('content', 'OP_ASSIGN')], CallFunc(Getattr(Name('template'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'file'), '__exit__'), [Name('exc'), Name('value'), Name('tb')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('build_request_repr'), [Name('self')], None, None))]))
Module(None, Stmt([From('django.template.base', [('TemplateDoesNotExist', None)], 0)]))
Module(None, Stmt([Assign([AssName('sublist_item', 'OP_ASSIGN')], Name('next_item'))]))
else :
Module(None, Stmt([Function(None, 'inner', ['check'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'token', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'to_field'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'lower', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('pid', 'OP_ASSIGN')], CallFunc(Getattr(Name('os'), 'getpid'), [], None, None))]))
Module(None, Stmt([Assign([AssName('offset', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('date'), 'tzinfo'), 'utcoffset'), [Name('date')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('stream'), 'close'), [], None, None))]))
Module(None, Stmt([Class('Group', [Name('list')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils.translation', [('ugettext', None), ('ungettext_lazy', None)], 0)]))
try :
Module(None, Stmt([From('django.utils.encoding', [('force_text', None), ('filepath_to_uri', None)], 0)]))
Module(None, Stmt([If([(Compare(Getattr(Getattr(Name('os'), 'path'), 'sep'), [('in', Name('fixture_name'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('PREV', 'OP_ASSIGN'), AssName('NEXT', 'OP_ASSIGN'), AssName('KEY', 'OP_ASSIGN'), AssName('RESULT', 'OP_ASSIGN')])], Tuple([Const(0), Const(1), Const(2), Const(3)]))]))
Module(None, Stmt([Assign([AssName('renderer', 'OP_ASSIGN')], Name('None'))]))
@ property
Module(None, Stmt([Assign([AssName('verbosity', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('verbosity')], None, None))]))
Module(None, Stmt([Assign([AssName('answer', 'OP_ASSIGN')], Const('n'))]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], List([Const('File')]))]))
Module(None, Stmt([Assign([AssName('neg', 'OP_ASSIGN')], Const(1))]))
Module(None, Stmt([If([(Name('quote_double_quotes'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Compare(Getattr(Getattr(Name('self'), 'data'), 'minute'), [('==', Const(0))]), Compare(Getattr(Getattr(Name('self'), 'data'), 'hour'), [('==', Const(12))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('construct_instance_exclude'), 'append'), [Name('name')], None, None))]))
Module(None, Stmt([Return(Name('default'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'data'), 'isoformat'), [], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('BadSignature'), [Mod((Const('No "%s" found in value'), Getattr(Name('self'), 'sep')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], Tuple(()))]))
Module(None, Stmt([Assign([AssTuple([AssName('resolved_args', 'OP_ASSIGN'), AssName('resolved_kwargs', 'OP_ASSIGN')])], CallFunc(Getattr(Name('self'), 'get_resolved_arguments'), [Name('context')], None, None))]))
Module(None, Stmt([If([(And([Compare(Getattr(Name('self'), 'fixture_count'), [('==', Const(0))]), Getattr(Name('self'), 'hide_empty')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'pk_field', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('pk_field'), Name('False')], None, None))]))
Module(None, Stmt([If([(Compare(Name('timeout'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('-'), 'join'), [List([Name('template_name'), CallFunc(Getattr(CallFunc(Getattr(Name('hashlib'), 'sha1'), [CallFunc(Name('force_bytes'), [CallFunc(Getattr(Const('|'), 'join'), [Name('template_dirs')], None, None)], None, None)], None, None), 'hexdigest'), [], None, None)])], None, None))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'connection'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([For(AssName('pattern', 'OP_ASSIGN'), CallFunc(Name('reversed'), [Getattr(Name('self'), 'url_patterns')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'clean', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('response'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('request_middleware'), 'append'), [Getattr(Name('mw_instance'), 'process_request')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('updates'), 'update'), [CallFunc(Name('processor'), [Name('request')], None, None)], None, None))]))
Module(None, Stmt([For(AssName('error', 'OP_ASSIGN'), CallFunc(Getattr(Name('self'), 'as_data'), [], None, None), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Return(CallFunc(Getattr(Name('connection'), 'send_messages'), [Name('messages')], None, None))]))
except ValueError :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'extend_nodelist'), [Name('nodelist'), Name('var_node'), Name('token')], None, None))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_errors', 'OP_ASSIGN')], CallFunc(Name('ErrorDict'), [], None, None))]))
Module(None, Stmt([Function(None, 'make_template_fragment_key', ['fragment_name', 'vary_on'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Getattr(Name('base'), 'DeserializationError'), [Mod((Const("Invalid model identifier: '%s'"), Name('model_identifier')))], None, None), None, None)]))
Module(None, Stmt([Assign([Subscript(Name('hextets'), 'OP_ASSIGN', [Name('index')])], Const('0'))]))
except ImportError :
Module(None, Stmt([Function(None, '__setattr__', ['self', 'name', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('pos'), [('>=', Name('last'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(Name('regex_match')), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Function(None, 'get_form_error', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
@ register . tag
Module(None, Stmt([Class('NullBooleanField', [Name('BooleanField')], None, Stmt([Pass()]), None)]))
self . password = settings . EMAIL_HOST_PASSWORD if password is None else password
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], Tuple([Name('template'), CallFunc(Name('make_origin'), [Name('display_name'), Name('loader'), Name('name'), Name('dirs')], None, None)]))]))
Module(None, Stmt([Assign([AssTuple([AssName('name', 'OP_ASSIGN'), AssName('val', 'OP_ASSIGN')])], CallFunc(Name('forbid_multi_line_headers'), [Name('name'), Name('val'), Const('ascii')], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('i_item', 'OP_ASSIGN'), AssName('i_args', 'OP_ASSIGN')]), CallFunc(Name('zip'), [Name('inner_result'), Name('inner_args')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('model_list'), 'append'), [Name('model')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Getattr(Name('self'), 'data'), 'minute'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], Name('compressed'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'class_name', 'OP_ASSIGN')], Name('class_name'))]))
Module(None, Stmt([Discard(CallFunc(Name('call_command'), [Const('createsuperuser'), Keyword('interactive', Name('True')), Keyword('database', Subscript(Name('options'), 'OP_APPLY', [Const('database')]))], None, None))]))
Module(None, Stmt([Function(None, 'add_root_elements', ['self', 'handler'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([AugAssign(Name('loaded_objects_in_fixture'), '+=', Const(1))]))
elif self . reason_phrase is None :
Module(None, Stmt([While(Name('True'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'dumps', ['obj', 'key', 'salt', 'serializer', 'compress'], [Name('None'), Const('django.core.signing'), Name('JSONSerializer'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(CallFunc(Name('len'), [Getattr(Name('self'), 'backout')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'get_resolver', ['urlconf'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Unable to set formatter %r: %s'), Tuple([Name('formatter'), Name('e')])))], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Name('val'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('schemes'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'empty_label', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([If([(Name('file_'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('var_obj', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('Variable'), [Name('constant')], None, None), 'resolve'), [Dict(())], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('bound_func'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Subscript(Name('attrs'), 'OP_DELETE', [Name('attr')])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('model_dependencies'), 'append'), [Tuple([Name('model'), Name('deps')])], None, None))]))
Module(None, Stmt([AugAssign(Name('key'), '+=', Name('item'))]))
Module(None, Stmt([Assign([AssName('command', 'OP_ASSIGN')], CallFunc(Name('load_command_class'), [Name('app_name'), Name('name')], None, None))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'name', 'sysid', 'pubid'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'handle_charref', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('new_class'), 'media', 'OP_ASSIGN')], CallFunc(Name('media_property'), [Name('new_class')], None, None))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '_current'), 'OP_ASSIGN', [Getattr(Name('field'), 'name')])], Name('value'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('conditions_nodelists'), 'append'), [Tuple([Name('condition'), Name('nodelist')])], None, None))]))
Module(None, Stmt([Function(None, 'bound_data', ['self', 'data', 'initial'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_itervalues', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(Yield(Name('meta_line')))]))
Module(None, Stmt([Function(None, 'handle', ['self', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'item_attributes', ['self', 'item'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('importer', 'OP_ASSIGN')], Name('__import__'))]))
Module(None, Stmt([Return(CallFunc(Name('ugettext'), [Name('message')], None, None))]))
elif isinstance ( value , datetime . date ) :
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Name('format_string'), 'format'), [], Name('args_safe'), Name('kwargs_safe'))], None, None))]))
Module(None, Stmt([If([(And([Name('label_suffix'), Name('contents'), Compare(Subscript(Name('contents'), 'OP_APPLY', [UnarySub(Const(1))]), [('not in', CallFunc(Name('_'), [Const(':?.!')], None, None))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('styles', 'OP_ASSIGN')], CallFunc(Getattr(Name('instructions'), 'split'), [Const(',')], None, None))]))
else :
Module(None, Stmt([If([(Name('data'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'make_writeable'), [Name('new_path')], None, None))]))
try :
Module(None, Stmt([Return(CallFunc(Name('force_text'), [Getattr(Name('settings'), 'FORCE_SCRIPT_NAME')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('template', 'OP_ASSIGN'), AssName('origin', 'OP_ASSIGN')])], CallFunc(Getattr(Name('self'), 'find_template'), [Name('template_name'), Name('template_dirs')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'name', 'regex', 'next'], [Name('None')], 0, None, Stmt([Pass()]))]))
except ( ValueError , TypeError ) :
Module(None, Stmt([Function(None, 'm2m_convert', ['n'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY2'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('internal_use_only', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssName('new_second_item', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('potfiles', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Compare(Name('timeout'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
except LookupError :
Module(None, Stmt([Assign([AssName('DELETION_FIELD_NAME', 'OP_ASSIGN')], Const('DELETE'))]))
Module(None, Stmt([Assign([AssName('validate_comma_separated_integer_list', 'OP_ASSIGN')], CallFunc(Name('RegexValidator'), [Name('comma_separated_int_list_re'), CallFunc(Name('_'), [Const('Enter only digits separated by commas.')], None, None), Const('invalid')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('getattr'), [Name('_prefixes'), Const('value'), Const('/')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('CommandParser'), Name('self')], None, None), '__init__'), [], None, Name('kwargs')))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--no-obsolete'), Keyword('action', Const('store_true')), Keyword('dest', Const('no_obsolete')), Keyword('default', Name('False')), Keyword('help', Const('Remove obsolete message strings.'))], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('addr'), Getattr(Name('six'), 'string_types')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'configure_logger'), [Name('name'), Subscript(Name('loggers'), 'OP_APPLY', [Name('name')]), Name('True')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('Module_six_moves_urllib_request'), Getattr(Name('attr'), 'name'), Name('attr')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("%s already exists, overlaying a project or app into an existing directory won't replace conflicting files"), Name('new_path')))], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Subscript(Name('args'), 'OP_APPLY', [UnarySub(Const(3))]), [('==', Const('as'))]), Stmt([Pass()]))], None)]))
elif basetype == 'message' and subtype == 'rfc822' :
Module(None, Stmt([Function(None, '_find_boundary', ['self', 'data', 'eof'], [Name('False')], 0, None, Stmt([Pass()]))]))
except ValueError :
elif options [ 'all' ] :
Module(None, Stmt([Assign([AssName('host_validation_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^([a-z0-9.-]+|\\[[a-f0-9]*:[a-f0-9:]+\\])(:\\d+)?$')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('name', 'OP_ASSIGN'), AssTuple([AssName('value', 'OP_ASSIGN'), AssName('params', 'OP_ASSIGN')])])], CallFunc(Name('_parse_header'), [Name('line')], None, None))]))
Module(None, Stmt([Function(None, 'inlineformset_factory', ['parent_model', 'model', 'form', 'formset', 'fk_name', 'fields', 'exclude', 'extra', 'can_order', 'can_delete', 'max_num', 'formfield_callback', 'widgets', 'validate_max', 'localized_fields', 'labels', 'help_texts', 'error_messages', 'min_num', 'validate_min'], [Name('ModelForm'), Name('BaseInlineFormSet'), Name('None'), Name('None'), Name('None'), Const(3), Name('False'), Name('True'), Name('None'), Name('None'), Name('None'), Name('False'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('stream_or_string', 'OP_ASSIGN')], CallFunc(Getattr(Name('stream_or_string'), 'read'), [], None, None))]))
Module(None, Stmt([Assign([AssName('request_middleware', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('options'), 'get'), [Const('list_tags')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('new_migration', 'OP_ASSIGN')], CallFunc(Name('subclass'), [Mod((Const('%04i_merge'), Add((Name('biggest_number'), Const(1))))), Name('app_label')], None, None))]))
Module(None, Stmt([If([(Compare(Name('model'), [('in', Name('created_models'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('i', 'OP_ASSIGN'), CallFunc(Name('range'), [CallFunc(Name('len'), [Name('result')], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('exc_info', 'OP_ASSIGN')], CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('AttributeError'), [Mod((Const("'%s' object has no attribute 'ordered_forms'"), Getattr(Getattr(Name('self'), '__class__'), '__name__')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'year_none_value', 'OP_ASSIGN')], Getattr(Name('self'), 'none_value'))]))
except ImportError :
Module(None, Stmt([Return(Getattr(Name('settings'), 'TEMPLATE_STRING_IF_INVALID'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('attachment'), 'set_payload'), [Name('content')], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--settings')], None, None))]))
Module(None, Stmt([Assign([AssName('encoding', 'OP_ASSIGN')], Or([Getattr(Name('self'), 'encoding'), Getattr(Name('settings'), 'DEFAULT_CHARSET')]))]))
Module(None, Stmt([Return(Compare(CallFunc(Getattr(Name('header_query'), 'lower'), [], None, None), [('in', Name('existing_headers'))]))]))
try :
Module(None, Stmt([Return(Const('0'))]))
Module(None, Stmt([Assign([AssName('base_path', 'OP_ASSIGN')], CallFunc(Name('abspathu'), [Name('base')], None, None))]))
Module(None, Stmt([Function(None, 'load_template_source', ['self', 'template_name', 'template_dirs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('middleware'), Const('process_response')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Subscript(Name('g'), 'OP_APPLY', [Const(0)]), [('==', Const('"'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('out'), 'getvalue'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_current', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('usage'), 'append'), [Mod((Const('    %s'), Name('name')))], None, None))]))
Module(None, Stmt([Assign([AssName('cursor', 'OP_ASSIGN')], CallFunc(Getattr(Name('connection'), 'cursor'), [], None, None))]))
Module(None, Stmt([Function(None, 'ifnotequal', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'remove'), [Name('fname')], None, None))]))
Module(None, Stmt([Assign([AssName('queryset', 'OP_ASSIGN')], CallFunc(Name('property'), [Name('_get_queryset'), Name('_set_queryset')], None, None))]))
Module(None, Stmt([Assign([AssName('opts', 'OP_ASSIGN')], Getattr(Name('model'), '_meta'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'template_dirs', 'OP_ASSIGN')], Name('template_dirs'))]))
Module(None, Stmt([From('django.utils.xmlutils', [('SimplerXMLGenerator', None)], 0)]))
Module(None, Stmt([Assign([AssName('default_error_messages', 'OP_ASSIGN')], Dict([(Const('invalid'), CallFunc(Name('_'), [Const('Enter a valid date.')], None, None))]))]))
Module(None, Stmt([Return(Slice(Name('chunk'), 'OP_APPLY', None, UnarySub(Name('rollback'))))]))
Module(None, Stmt([Assign([AssTuple([AssName('_', 'OP_ASSIGN'), AssName('file_ext', 'OP_ASSIGN')])], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'splitext'), [Getattr(Name('self'), 'file')], None, None))]))
@ register ( Tags . compatibility )
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Assign([AssName('imported_objects', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([If([(Compare(Name('prefix'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('get_format_lazy', 'OP_ASSIGN')], CallFunc(Name('lazy'), [Name('get_format'), Getattr(Name('six'), 'text_type'), Name('list'), Name('tuple')], None, None))]))
Module(None, Stmt([Return(Name('upload'))]))
Module(None, Stmt([Function(None, '_get_name', ['self'], [], 0, None, Stmt([Pass()]))]))
except Exception as e :
Module(None, Stmt([From('django.utils.translation', [('get_language', None)], 0)]))
Module(None, Stmt([Assign([AssName('SINGLE_BRACE_END', 'OP_ASSIGN')], Const('}'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('    - %s\n'), CallFunc(Getattr(Name('operation'), 'describe'), [], None, None)))], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '__class__'), [ListComp(Tuple([Name('key'), CallFunc(Getattr(Name('copy'), 'deepcopy'), [Name('value'), Name('memo')], None, None)]), [ListCompFor(AssTuple([AssName('key', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')]), CallFunc(Getattr(Name('self'), 'items'), [], None, None), [])])], None, None))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([From('django.utils.six.moves.urllib.parse', [('quote', None), ('quote_plus', None), ('unquote', None), ('unquote_plus', None), ('urlparse', None), ('urlencode', 'original_urlencode')], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('singular'), 'append'), [Name('contents')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('InMemoryUploadedFile'), Name('self')], None, None), '__init__'), [Name('file'), Name('name'), Name('content_type'), Name('size'), Name('charset'), Name('content_type_extra')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '__offset', 'OP_ASSIGN')], Name('offset'))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('t')], None, None), [('>', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('regex'), Getattr(Name('six'), 'string_types')], None, None), Stmt([Pass()]))], None)]))
except IOError as e :
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], List([Const('file_move_safe')]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [CallFunc(Getattr(Name('self'), 'path'), [Name('name')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--database'), Keyword('action', Const('store')), Keyword('dest', Const('database')), Keyword('default', Name('DEFAULT_DB_ALIAS')), Keyword('help', Const('Nominates a database to introspect. Defaults to using the "default" database.'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('\n'), 'join'), [Name('output')], None, None))]))
Module(None, Stmt([Class('DjangoRuntimeWarning', [Name('RuntimeWarning')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([With(CallFunc(Getattr(Getattr(Name('self'), '_lock'), 'writer'), [], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('getattr'), [Name('func'), Const('needs_autoescape'), Name('False')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'parent_widget'), 'render'), [], Name('args'), None))]))
Module(None, Stmt([Assign([AssName('func', 'OP_ASSIGN')], CallFunc(Name('TemplateLoader'), [], Name('args'), None))]))
Module(None, Stmt([Assign([AssName('pluralmatch', 'OP_ASSIGN')], CallFunc(Getattr(Name('plural_re'), 'match'), [Getattr(Name('t'), 'contents')], None, None))]))
Module(None, Stmt([Function(None, 'handle_entityref', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('context'), 'OP_ASSIGN', [Subscript(Getattr(Name('self'), 'loopvars'), 'OP_APPLY', [Const(0)])])], Name('item'))]))
Module(None, Stmt([Assign([AssName('kw', 'OP_ASSIGN')], CallFunc(Getattr(Name('match'), 'groupdict'), [], None, None))]))
Module(None, Stmt([Assign([AssName('ZERO', 'OP_ASSIGN')], CallFunc(Name('timedelta'), [Const(0)], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('func'), Const('__name__')], None, None)), Stmt([Pass()]))], None)]))
@ property
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'create_table'), [Name('db'), Getattr(Name('cache'), '_table')], None, None))]))
Module(None, Stmt([Assign([AssName('item_date', 'OP_ASSIGN')], CallFunc(Getattr(Name('item'), 'get'), [Name('date_key')], None, None))]))
@ stringfilter
elif var_arg :
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Function(None, '__eq__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'time', ['value', 'arg'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('softspace', 'OP_ASSIGN')], CallFunc(Name('property'), [Lambda(['self'], [], 0, Getattr(Getattr(Name('self'), 'file'), 'softspace'))], None, None))]))
Module(None, Stmt([Assign([AssName('pk_value', 'OP_ASSIGN')], Getattr(Subscript(CallFunc(Getattr(Name('self'), 'get_queryset'), [], None, None), 'OP_APPLY', [Name('index')]), 'pk'))]))
Module(None, Stmt([From('django.template.base', [('Node', None), ('NodeList', None), ('Template', None), ('Context', None), ('Library', None), ('TemplateSyntaxError', None), ('VariableDoesNotExist', None), ('InvalidTemplateLibrary', None), ('BLOCK_TAG_START', None), ('BLOCK_TAG_END', None), ('VARIABLE_TAG_START', None), ('VARIABLE_TAG_END', None), ('SINGLE_BRACE_START', None), ('SINGLE_BRACE_END', None), ('COMMENT_TAG_START', None), ('COMMENT_TAG_END', None), ('VARIABLE_ATTRIBUTE_SEPARATOR', None), ('get_library', None), ('token_kwargs', None), ('kwarg_re', None), ('render_value_in_context', None)], 0)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('self'), Name('nodetype')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('saved_locale', 'OP_ASSIGN')], CallFunc(Getattr(Name('translation'), 'get_language'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Name('bytes')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('subject', 'OP_ASSIGN')], Getattr(Name('self'), 'subject'))]))
Module(None, Stmt([If([(And([Name('colors'), Compare(Subscript(Name('colors'), 'OP_APPLY', [UnarySub(Const(1))]), [('in', Name('color_names'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('sep'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'get_backend_timeout', ['self', 'timeout'], [Name('DEFAULT_TIMEOUT')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Prints the DROP TABLE SQL statements for the given app name(s).'))]))
Module(None, Stmt([Assign([AssName('silent', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('apps'), 'get_app_config'), [Name('app_label')], None, None))]))
Module(None, Stmt([Assign([AssName('sql_statements', 'OP_ASSIGN')], CallFunc(Getattr(Name('executor'), 'collect_sql'), [Name('plan')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('value'), 'decode'), [Name('charset')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('get_template'), [Name('template_name'), Name('dirs')], None, None))]))
Module(None, Stmt([From('django.db.migrations.executor', [('MigrationExecutor', None)], 0)]))
Module(None, Stmt([Assign([AssName('unhandled_params', 'OP_ASSIGN')], CallFunc(Name('list'), [Name('params')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateDoesNotExist'), [Name('error_msg')], None, None), None, None)]))
Module(None, Stmt([For(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('type_'), '__dict__'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('pk_value', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '_headers'), 'OP_ASSIGN', [CallFunc(Getattr(Name('header'), 'lower'), [], None, None)])], Tuple([Name('header'), Name('value')]))]))
Module(None, Stmt([If([(And([Compare(Const('\\'), [('in', Name('encoded'))]), Not(CallFunc(Getattr(Name('encoded'), 'startswith'), [Const('"')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--template'), Keyword('help', Const('The path or URL to load the template from.'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'nodelist'), 'render'), [Name('new_context')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'startElement'), [Const('django-objects'), Dict([(Const('version'), Const('1.0'))])], None, None))]))
Module(None, Stmt([Assign([AssName('block', 'OP_ASSIGN')], Name('self'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'mode', 'bufsize', 'suffix', 'prefix', 'dir'], [Const('w+b'), UnarySub(Const(1)), Const(''), Const(''), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('categories', 'OP_ASSIGN')], ListComp(CallFunc(Name('force_text'), [Name('c')], None, None), [ListCompFor(AssName('c', 'OP_ASSIGN'), Name('categories'), [])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('link'), Const(''), Dict([(Const('rel'), Const('self')), (Const('href'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('feed_url')]))])], None, None))]))
Module(None, Stmt([For(AssName('hextet', 'OP_ASSIGN'), CallFunc(Getattr(Name('ip_str'), 'split'), [Const(':')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'limit_choices_to'), [], None, None))]))
Module(None, Stmt([From('wsgiref', [('simple_server', None)], 0)]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], List(()))]))
except ( ValueError , KeyError ) :
Module(None, Stmt([Assign([AssName('leave_locale_alone', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('deps', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('apps'), 'get_model'), [Name('dep')], None, None), [ListCompFor(AssName('dep', 'OP_ASSIGN'), Name('deps'), [])]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'serialization_formats', 'OP_ASSIGN')], CallFunc(Getattr(Name('serializers'), 'get_public_serializer_formats'), [], None, None))]))
except KeyError :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'setFeature'), [Getattr(Name('handler'), 'feature_external_pes'), Name('False')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('response'), 'streaming_content', 'OP_ASSIGN')], List(()))]))
self . settings_exception = exc
Module(None, Stmt([Assign([AssAttr(Name('self'), 'verbosity', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('verbosity')], None, None))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('other'), Name('BaseContext')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('guid_attrs'), 'OP_ASSIGN', [Const('isPermaLink')])], CallFunc(Getattr(CallFunc(Name('str'), [Subscript(Name('item'), 'OP_APPLY', [Const('unique_id_is_permalink')])], None, None), 'lower'), [], None, None))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([If([(Compare(Name('parse_until'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
elif not isinstance ( value , ConvertingTuple ) and isinstance ( value , tuple ) :
@ deconstructible
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('message')], None, None))]))
Module(None, Stmt([Assign([AssName('child_nodelists', 'OP_ASSIGN')], Tuple([Const('nodelist_true'), Const('nodelist_false')]))]))
Module(None, Stmt([Function(None, 'load_command_class', ['app_name', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('NOCOLOR_PALETTE', 'OP_ASSIGN')], Const('nocolor'))]))
Module(None, Stmt([Assign([AssName('unique_id', 'OP_ASSIGN')], CallFunc(Name('get_tag_uri'), [Subscript(Name('item'), 'OP_APPLY', [Const('link')]), Subscript(Name('item'), 'OP_APPLY', [Const('pubdate')])], None, None))]))
try :
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([If([(Compare(Name('invalid_var_format_string'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('status_code', 'OP_ASSIGN')], Const(500))]))
Module(None, Stmt([Function(None, 'get_quantifier', ['ch', 'input_iter'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('RendererMixin'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('DateTimeField'), Name('self')], None, None), 'to_python'), [Name('value')], None, None))]))
Module(None, Stmt([From('django.db', [('connections', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'verbatim'), Compare(Name('block_content'), [('==', Getattr(Name('self'), 'verbatim'))])]), Stmt([Pass()]))], None)]))
except pickle . PickleError :
Module(None, Stmt([Return(Getattr(Getattr(Name('self'), 'data'), 'month'))]))
Module(None, Stmt([Assign([AssAttr(Name('cls'), '__unicode__', 'OP_ASSIGN')], Getattr(Name('cls'), '__text_cast'))]))
Module(None, Stmt([Raise(CallFunc(Name('AttributeError'), [Const("Unable to determine the file's size.")], None, None), None, None)]))
Module(None, Stmt([AugAssign(Name('int_part_gd'), '+=', Name('thousand_sep'))]))
Module(None, Stmt([For(AssTuple([AssName('func', 'OP_ASSIGN'), AssName('args', 'OP_ASSIGN')]), Getattr(Name('self'), 'filters'), Stmt([Pass()]), None)]))
Module(None, Stmt([Class('VariableNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], Getattr(Name('self'), 'var'))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('app_labels')], None, None), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], Getattr(CallFunc(Name('getattr'), [Name('func'), Const('_decorated_function'), Name('func')], None, None), '__name__'))]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([If([(And([Compare(Name('day_of_year'), [('<=', Sub((Const(8), Name('jan1_weekday'))))]), Compare(Name('jan1_weekday'), [('>', Const(4))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Not(Compare(Name('self'), [('==', Name('other'))])))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid_choice')]), Keyword('code', Const('invalid_choice'))], None, None), None, None)]))
@ register . tag
Module(None, Stmt([If([(Getattr(Name('self'), 'empty'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('csrf_token', 'OP_ASSIGN')], CallFunc(Getattr(Name('context'), 'get'), [Const('csrf_token'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssName('m', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'DOT_PATTERN'), 'match'), [Name('rest')], None, None))]))
Module(None, Stmt([For(AssName('val', 'OP_ASSIGN'), Name('value'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('other_dict'))]))
Module(None, Stmt([Assign([AssName('media', 'OP_ASSIGN')], CallFunc(Name('property'), [Name('_get_media')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('fastcgi_help'), [], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('output', 'OP_ASSIGN'), AssName('errors', 'OP_ASSIGN'), AssName('status', 'OP_ASSIGN')])], CallFunc(Name('popen_wrapper'), [Name('args')], None, None))]))
Module(None, Stmt([From('django.test.signals', [('setting_changed', None)], 0)]))
except ( ValueError , TypeError ) :
Module(None, Stmt([Assign([Subscript(Name('data'), 'OP_ASSIGN', [Getattr(Name('field'), 'name')])], Name('value'))]))
Module(None, Stmt([Assign([AssName('template', 'OP_ASSIGN')], Getattr(Name('self'), 'template_with_initial'))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([From('django.db.migrations.state', [('ProjectState', None)], 0)]))
Module(None, Stmt([If([(Name('keys'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('Tags', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('all_files', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('SafeText'), Name('self')], None, None), '__add__'), [Name('rhs')], None, None))]))
Module(None, Stmt([From('django.forms.fields', [('Field', None), ('FileField', None)], 0)]))
Module(None, Stmt([Assign([AssName('template_dir', 'OP_ASSIGN')], CallFunc(Getattr(Name('template_dir'), 'decode'), [Name('fs_encoding')], None, None))]))
Module(None, Stmt([If([(Or([CallFunc(Name('pk_is_not_editable'), [Name('pk')], None, None), Compare(Getattr(Name('pk'), 'name'), [('not in', Getattr(Name('form'), 'fields'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'style', 'OP_ASSIGN')], CallFunc(Name('color_style'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('questioner'), 'ask_merge'), [Name('app_label')], None, None), Stmt([Pass()]))], None)]))
@ python_2_unicode_compatible
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('self'), 'has_header'), [Const('Content-Encoding')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([With(CallFunc(Getattr(Name('io'), 'open'), [Name('potfile'), Const('w'), Keyword('encoding', Const('utf-8'))], None, None), AssName('fp', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Name('dictionary')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('_MovedItems'), Getattr(Name('move'), 'name'), Name('move')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('prefix', 'OP_ASSIGN'), AssName('rest', 'OP_ASSIGN')])], CallFunc(Getattr(Name('self'), 'split_leading_dir'), [Name('path')], None, None))]))
Module(None, Stmt([Assign([AssName('failures', 'OP_ASSIGN')], CallFunc(Getattr(Name('test_runner'), 'run_tests'), [Name('test_labels')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('template', 'OP_ASSIGN'), AssName('origin', 'OP_ASSIGN')])], CallFunc(Name('find_template'), [Name('template_name'), Name('dirs')], None, None))]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None), ('RemovedInDjango20Warning', None)], 0)]))
else :
Module(None, Stmt([Slice(Name('bits'), 'OP_DELETE', None, Const(1))]))
Module(None, Stmt([Assign([AssName('upto', 'OP_ASSIGN')], Name('end'))]))
except ( ValueError , TypeError ) :
Module(None, Stmt([For(AssName('f', 'OP_ASSIGN'), Name('fields'), Stmt([Pass()]), None)]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('fh'), 'write'), [CallFunc(Getattr(Name('writer'), 'as_string'), [], None, None)], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('content'), Const('chunks')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_resolve_name', ['name', 'package', 'level'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('regex', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Getattr(Name('self'), '_regex')], None, None))]))
Module(None, Stmt([With(Getattr(Name('self'), '_lock'), None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('response'), 'OP_ASSIGN', [Const('Last-Modified')])], CallFunc(Name('http_date'), [], None, None))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Function(None, 'create_parser', ['self', 'prog_name', 'subcommand'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('base64', None)])]))
Module(None, Stmt([Assign([AssName('I18N_MODIFIED', 'OP_ASSIGN')], Const(2))]))
else :
Module(None, Stmt([Return(Mod((Const('<%s: %s>'), Tuple([Getattr(Getattr(Name('self'), '__class__'), '__name__'), Or([Name('self'), Const('None')])]))))]))
Module(None, Stmt([Function(None, 'add_fields', ['self', 'form', 'index'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Assign([AssName('current', 'OP_ASSIGN')], Subscript(Name('current'), 'OP_APPLY', [CallFunc(Name('int'), [Name('bit')], None, None)]))]))
Module(None, Stmt([Assign([AssName('_CacheInfo', 'OP_ASSIGN')], CallFunc(Name('namedtuple'), [Const('CacheInfo'), List([Const('hits'), Const('misses'), Const('maxsize'), Const('currsize')])], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('func'), [], Getattr(Name('self'), '__args'), Getattr(Name('self'), '__kw')))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'prog_name', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'basename'), [Subscript(Getattr(Name('self'), 'argv'), 'OP_APPLY', [Const(0)])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [Mod((Const(' # %s'), Name('line')))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'tokens'), 'insert'), [Const(0), Name('token')], None, None))]))
Module(None, Stmt([Assert(Compare(Name('mimetype'), [('is not', Name('None'))]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('MultipleHiddenInput'), Name('self')], None, None), '__init__'), [Name('attrs')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'permitted_methods', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Class('CacheKeyWarning', [Name('DjangoRuntimeWarning')], None, Stmt([Pass()]), None)]))
elif action == "unapply_start" :
Module(None, Stmt([With(CallFunc(Getattr(Name('transaction'), 'atomic'), [Keyword('using', Getattr(Name('connection'), 'alias')), Keyword('savepoint', Getattr(Getattr(Name('connection'), 'features'), 'can_rollback_ddl'))], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'feed', 'OP_ASSIGN')], Dict([(Const('title'), CallFunc(Name('to_unicode'), [Name('title')], None, None)), (Const('link'), CallFunc(Name('iri_to_uri'), [Name('link')], None, None)), (Const('description'), CallFunc(Name('to_unicode'), [Name('description')], None, None)), (Const('language'), CallFunc(Name('to_unicode'), [Name('language')], None, None)), (Const('author_email'), CallFunc(Name('to_unicode'), [Name('author_email')], None, None)), (Const('author_name'), CallFunc(Name('to_unicode'), [Name('author_name')], None, None)), (Const('author_link'), CallFunc(Name('iri_to_uri'), [Name('author_link')], None, None)), (Const('subtitle'), CallFunc(Name('to_unicode'), [Name('subtitle')], None, None)), (Const('categories'), Or([Name('categories'), Tuple(())])), (Const('feed_url'), CallFunc(Name('iri_to_uri'), [Name('feed_url')], None, None)), (Const('feed_copyright'), CallFunc(Name('to_unicode'), [Name('feed_copyright')], None, None)), (Const('id'), Or([Name('feed_guid'), Name('link')])), (Const('ttl'), Name('ttl'))]))]))
Module(None, Stmt([Class('MovedModule', [Name('_LazyDescr')], None, Stmt([Pass()]), None)]))
except OSError as e :
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'connector'), [('==', Name('conn_type'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('num_sent', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([From('django.utils.functional', [('lazy', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'content_type_extra', 'OP_ASSIGN')], Name('content_type_extra'))]))
Module(None, Stmt([If([(Compare(Name('f'), [('==', Const('__pycache__'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('file', 'OP_ASSIGN')], CallFunc(Getattr(Name('tempfile'), 'NamedTemporaryFile'), [Keyword('suffix', Const('.upload')), Keyword('dir', Getattr(Name('settings'), 'FILE_UPLOAD_TEMP_DIR'))], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('text'), 'endswith'), [Name('truncate')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('response'), 'OP_ASSIGN', [Const('Expires')])], CallFunc(Name('http_date'), [Add((CallFunc(Getattr(Name('time'), 'time'), [], None, None), Name('cache_timeout')))], None, None))]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None), ('CommandError', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'negate', 'OP_ASSIGN')], Name('negate'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'buffer', 'OP_ASSIGN')], CallFunc(Getattr(Name('sio'), 'read'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'cleaned_data', 'OP_ASSIGN')], Name('cleaned_data'))]))
Module(None, Stmt([If([(Compare(Getattr(Name('app_config'), 'models_module'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('regexes', 'OP_ASSIGN')], Getattr(Name('self'), 'regexes'))]))
except ImportError :
Module(None, Stmt([Return(Subscript(Name('LANG_INFO'), 'OP_APPLY', [Name('generic_lang_code')]))]))
Module(None, Stmt([Function(None, 'regroup', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('path'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('app_config', 'OP_ASSIGN'), CallFunc(Getattr(Name('apps'), 'get_app_configs'), [], None, None), Stmt([Pass()]), None)]))
@ cached_property
Module(None, Stmt([Class('EmailBackend', [Name('BaseEmailBackend')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '_raw_value', ['self', 'fieldname'], [], 0, None, Stmt([Pass()]))]))
@ decorator
Module(None, Stmt([Function(None, 'address_string', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(CallFunc(Name('force_text'), [Name('value')], None, None), 'translate'), [Name('_js_escapes')], None, None)], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('cookiedict'), 'OP_ASSIGN', [Name('key')])], Getattr(CallFunc(Getattr(Name('c'), 'get'), [Name('key')], None, None), 'value'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Add((CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_LABEL'), [Const('  Unapply all migrations: ')], None, None), Mod((Const('%s'), Tuple([Subscript(Subscript(Name('targets'), 'OP_APPLY', [Const(0)]), 'OP_APPLY', [Const(0)])])))))], None, None))]))
Module(None, Stmt([Assign([AssName('open_tags', 'OP_ASSIGN')], List(()))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_cache'), 'disconnect_all'), [], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('termios'), 'tcsetattr'), [Name('fd'), Getattr(Name('termios'), 'TCSANOW'), Name('attr_list')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('mod_name', 'OP_ASSIGN'), AssName('func_name', 'OP_ASSIGN')])], CallFunc(Name('get_mod_func'), [Name('lookup_view')], None, None))]))
except ( ValueError , TypeError ) :
Module(None, Stmt([Class('Input', [Name('Widget')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('LockFileEx', 'OP_ASSIGN')], Getattr(Getattr(Name('windll'), 'kernel32'), 'LockFileEx'))]))
except KeyError :
Module(None, Stmt([If([(Name('handlers'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'messages', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('sys'), 'modules'), 'OP_ASSIGN', [Add((Name('__name__'), Const('.moves.urllib_error')))]), Subscript(Getattr(Name('sys'), 'modules'), 'OP_ASSIGN', [Add((Name('__name__'), Const('.moves.urllib.error')))])], CallFunc(Name('Module_six_moves_urllib_error'), [Add((Name('__name__'), Const('.moves.urllib.error')))], None, None))]))
Module(None, Stmt([Assign([AssName('code', 'OP_ASSIGN')], Const('limit_value'))]))
Module(None, Stmt([If([(Compare(Name('value'), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('dirs', 'OP_ASSIGN')], List([Name('basedir')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'options'), 'update'), [Dict([(Const('use_decimal'), Name('False'))])], None, None))]))
Module(None, Stmt([Class('SafeText', [Getattr(Name('six'), 'text_type'), Name('SafeData')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], Subscript(CallFunc(Name('list'), [Name('error')], None, None), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Assign([AssName('mail', 'OP_ASSIGN')], CallFunc(Name('EmailMultiAlternatives'), [Mod((Const('%s%s'), Tuple([Getattr(Name('settings'), 'EMAIL_SUBJECT_PREFIX'), Name('subject')]))), Name('message'), Getattr(Name('settings'), 'SERVER_EMAIL'), ListComp(Subscript(Name('a'), 'OP_APPLY', [Const(1)]), [ListCompFor(AssName('a', 'OP_ASSIGN'), Getattr(Name('settings'), 'ADMINS'), [])]), Keyword('connection', Name('connection'))], None, None))]))
Module(None, Stmt([Assign([AssName('prefix_length', 'OP_ASSIGN')], Add((CallFunc(Name('len'), [Name('template_dir')], None, None), Const(1))))]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('strm')])], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('stream')], None, None))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Function(None, 'assertRaisesRegex', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('parse_until'), Stmt([Pass()]))], None)]))
except AttributeError :
Module(None, Stmt([Import([('datetime', None)])]))
elif ch in "*?+{" :
Module(None, Stmt([If([(Not(Name('value')), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('path', 'OP_ASSIGN'), CallFunc(Name('gen_filenames'), [Keyword('only_new', Name('True'))], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssName('filename', 'OP_ASSIGN'), Name('filelist'), Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Unable to configure formatter %r: %s'), Tuple([Name('name'), Name('e')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssTuple([AssName('value', 'OP_ASSIGN'), AssName('decimals', 'OP_ASSIGN')])], CallFunc(Getattr(Name('value'), 'split'), [Name('decimal_separator'), Const(1)], None, None))]))
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], CallFunc(Name('get_template'), [Name('template_name'), Name('dirs')], None, None))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('filelist', 'OP_ASSIGN')], CallFunc(Getattr(Name('random'), 'sample'), [Name('filelist'), CallFunc(Name('int'), [Div((Name('num_entries'), Getattr(Name('self'), '_cull_frequency')))], None, None)], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('may be implemented in a future release')], None, None), None, None)]))
Module(None, Stmt([Function(None, 'compress', ['self', 'data_list'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([While(And([Compare(Const('\n'), [('not in', Getattr(Name('self'), 'buffer'))]), Or([Compare(Name('size'), [('is', Name('None'))]), Compare(CallFunc(Name('len'), [Getattr(Name('self'), 'buffer')], None, None), [('<', Name('size'))])])]), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('temp_lib', 'OP_ASSIGN')], CallFunc(Name('Library'), [], None, None))]))
Module(None, Stmt([Class('CacheHandler', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('max_num', 'OP_ASSIGN')], Const(1))]))
Module(None, Stmt([Function(None, '__nonzero__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'signature', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--merge'), Keyword('action', Const('store_true')), Keyword('dest', Const('merge')), Keyword('default', Name('False')), Keyword('help', Const('Enable fixing of migration conflicts.'))], None, None))]))
Module(None, Stmt([Return(Add((Name('value'), Name('arg'))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('errors'), 'extend'), [CallFunc(Name('_check_test_runner'), [], None, Name('kwargs'))], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([For(AssName('header', 'OP_ASSIGN'), CallFunc(Getattr(Name('cc_delim_re'), 'split'), [Subscript(Name('response'), 'OP_APPLY', [Const('Vary')])], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Assign([Subscript(Name('msg'), 'OP_ASSIGN', [Const('Subject')])], Getattr(Name('self'), 'subject'))]))
Module(None, Stmt([Discard(Yield(Tuple([Getattr(Name('tok'), 'name'), Name('toktext')])))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'cache_choices', 'OP_ASSIGN')], Name('cache_choices'))]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], List([Const('SimpleCookie'), Const('parse_cookie'), Const('HttpRequest'), Const('QueryDict'), Const('RawPostDataException'), Const('UnreadablePostError'), Const('build_request_repr'), Const('HttpResponse'), Const('StreamingHttpResponse'), Const('HttpResponseRedirect'), Const('HttpResponsePermanentRedirect'), Const('HttpResponseNotModified'), Const('HttpResponseBadRequest'), Const('HttpResponseForbidden'), Const('HttpResponseNotFound'), Const('HttpResponseNotAllowed'), Const('HttpResponseGone'), Const('HttpResponseServerError'), Const('Http404'), Const('BadHeaderError'), Const('fix_location_header'), Const('JsonResponse'), Const('conditional_content_removal')]))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([If([(Name('can_fail'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('get_language_bidi', 'OP_ASSIGN')], Lambda((), (), 0, Compare(Getattr(Name('settings'), 'LANGUAGE_CODE'), [('in', Getattr(Name('settings'), 'LANGUAGES_BIDI'))])))]))
Module(None, Stmt([Assign([AssName('is_localized', 'OP_ASSIGN')], Name('False'))]))
try :
Module(None, Stmt([If([(And([Name('widgets'), Compare(Getattr(Name('f'), 'name'), [('in', Name('widgets'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('is_aware'), [Name('date')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('<', Const(4))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Not(Getattr(Name('f'), 'blank')), Not(Getattr(Name('form_field'), 'required')), Compare(Name('field_value'), [('in', Getattr(Name('form_field'), 'empty_values'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Assign([AssName('results', 'OP_ASSIGN')], Tuple([List(()), List(())]))]))
Module(None, Stmt([Class('MemoryFileUploadHandler', [Name('FileUploadHandler')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('decorated', 'OP_ASSIGN')], CallFunc(Name('Node'), [Getattr(Name('syms'), 'decorated'), List([Name('decorator'), Name('klass')]), Keyword('prefix', Getattr(Name('node'), 'prefix'))], None, None))]))
Module(None, Stmt([For(AssName('shell', 'OP_ASSIGN'), Name('available_shells'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__dir__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'now', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.six.moves', [('socketserver', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('opfunc'), '__doc__', 'OP_ASSIGN')], Getattr(CallFunc(Name('getattr'), [Name('int'), Name('opname')], None, None), '__doc__'))]))
Module(None, Stmt([For(AssName('app_label', 'OP_ASSIGN'), Name('app_labels'), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssName('tablename', 'OP_ASSIGN'), Name('tablenames'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('node_class'), [Name('takes_context'), Name('args'), Name('kwargs')], None, None))]))
Module(None, Stmt([Continue()]))
try :
Module(None, Stmt([Function(None, 'get_many', ['self', 'keys', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('field_value'), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'addQuickElement'), [Const('None')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('logger'), 'warning'), [Const('Not Found: %s'), Getattr(Name('request'), 'path'), Keyword('extra', Dict([(Const('status_code'), Const(404)), (Const('request'), Name('request'))]))], None, None))]))
Module(None, Stmt([If([(Compare(Name('filter_name'), [('in', Getattr(Name('self'), 'filters'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('dict'), '__setitem__'), [Name('self'), Name('key'), CallFunc(Getattr(Name('http_cookies'), 'Morsel'), [], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('values', 'OP_ASSIGN')], CallFunc(Name('reversed'), [Name('values')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("AppCommand cannot handle app '%s' in legacy mode because it doesn't have a models module."), Getattr(Name('app_config'), 'label')))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('template_source_loaders'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('parser'), Const('_namedCycleNodes')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.http.response', [('HttpResponse', None), ('StreamingHttpResponse', None), ('HttpResponseRedirect', None), ('HttpResponsePermanentRedirect', None), ('HttpResponseNotModified', None), ('HttpResponseBadRequest', None), ('HttpResponseForbidden', None), ('HttpResponseNotFound', None), ('HttpResponseNotAllowed', None), ('HttpResponseGone', None), ('HttpResponseServerError', None), ('Http404', None), ('BadHeaderError', None), ('JsonResponse', None)], 0)]))
Module(None, Stmt([Assign([AssName('nesting', 'OP_ASSIGN')], Const(0))]))
try :
else :
Module(None, Stmt([Function(None, '__init__', ['self', 'data', 'files', 'auto_id', 'prefix', 'initial', 'error_class'], [Name('None'), Name('None'), Const('id_%s'), Name('None'), Name('None'), Name('ErrorList')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('new_name', 'OP_ASSIGN')], CallFunc(Getattr(Name('col_name'), 'lower'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'expression'), 'resolve'), [Name('context'), Name('True')], None, None))]))
Module(None, Stmt([Assign([AssName('filters', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'get'), [Const('filters'), Name('None')], None, None))]))
try :
Module(None, Stmt([Function(None, 'static', ['request'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Mod((CallFunc(Getattr(Name('self'), '__cast'), [], None, None), Name('rhs'))))]))
Module(None, Stmt([Assign([AssName('DEBUG', 'OP_ASSIGN')], Const(10))]))
Module(None, Stmt([Assign([AssName('use_base_manager', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('use_base_manager')], None, None))]))
Module(None, Stmt([Return(Name('error_dict'))]))
Module(None, Stmt([From('django.utils.text', [('normalize_newlines', None)], 0)]))
Module(None, Stmt([Assign([AssName('kwarg_format', 'OP_ASSIGN')], And([Name('match'), CallFunc(Getattr(Name('match'), 'group'), [Const(1)], None, None)]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_input_data', 'OP_ASSIGN')], Name('input_data'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'render_value', 'OP_ASSIGN')], Name('render_value'))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Const('1'))]))
Module(None, Stmt([Function(None, 'do_filter', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'USE_TZ'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('choice_input_class', 'OP_ASSIGN')], Name('CheckboxChoiceInput'))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([If([(And([Not(Getattr(Name('settings'), 'DEBUG')), Not(Getattr(Name('settings'), 'ALLOWED_HOSTS'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Raise(CallFunc(Name('PageNotAnInteger'), [Const('That page number is not an integer')], None, None), None, None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'stream_or_string', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), '_is_rendered')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Getattr(Name('filter_func'), '_decorated_function'), Name('attr'), Name('value')], None, None))]))
@ register . filter ( is_safe = True )
Module(None, Stmt([From('io', [('StringIO', None)], 0)]))
except GeneratorExit :
Module(None, Stmt([Assign([AssName('unique_check', 'OP_ASSIGN')], ListComp(Name('field'), [ListCompFor(AssName('field', 'OP_ASSIGN'), Name('unique_check'), [ListCompIf(Compare(Name('field'), [('!=', Getattr(Getattr(Name('self'), 'fk'), 'name'))]))])]))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('auto_id', 'OP_ASSIGN')], Getattr(Getattr(Name('self'), 'form'), 'auto_id'))]))
Module(None, Stmt([Function(None, 'tzname', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('e'), 'args', 'OP_ASSIGN')], Tuple([Mod((Const("Problem installing fixture '%s': %s"), Tuple([Name('fixture_file'), Name('e')])))]))]))
Module(None, Stmt([For(AssName('var', 'OP_ASSIGN'), Getattr(Name('self'), 'vars'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('v'), Tuple([Name('list'), Name('tuple')])], None, None), Stmt([Pass()]))], None)]))
elif closing_tag :
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], CallFunc(Name('_set_response_etag'), [Name('response')], None, None))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'ending', 'OP_ASSIGN')], Name('ending'))]))
Module(None, Stmt([Discard(Getattr(Name('settings'), 'INSTALLED_APPS'))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('force_text'), [Name('val')], None, None), [('not in', Name('pks'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('prefix', 'OP_ASSIGN')], CallFunc(Name('get_script_prefix'), [], None, None))]))
Module(None, Stmt([Assign([AssName('app_list_value', 'OP_ASSIGN')], CallFunc(Getattr(Name('app_list'), 'setdefault'), [Name('app_config'), List(())], None, None))]))
Module(None, Stmt([For(AssName('model', 'OP_ASSIGN'), CallFunc(Name('sort_dependencies'), [CallFunc(Getattr(Name('app_list'), 'items'), [], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('sub', 'OP_ASSIGN')], Add((Subscript(Name('mapping'), 'OP_APPLY', [Subscript(Name('version'), 'OP_APPLY', [Const(3)])]), CallFunc(Name('str'), [Subscript(Name('version'), 'OP_APPLY', [Const(4)])], None, None))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('msg'), 'attach'), [Name('body_msg')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('call_command'), [Const('migrate')], None, Name('options')))]))
Module(None, Stmt([Function(None, 'reloader_thread', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'filters', 'OP_ASSIGN')], Name('filters'))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
utc = pytz . utc if pytz else UTC ( )
elif bytes < PB :
else :
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('s'), Const(36)], None, None))]))
else :
Module(None, Stmt([Function(None, 'get_json_data', ['self', 'escape_html'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssTuple([AssName('key', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')]), Name('data'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'has_next', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('se', 'OP_ASSIGN')], CallFunc(Name('open'), [Name('err_log'), Const('a+'), Name('buffering')], None, None))]))
Module(None, Stmt([Function(None, 'file_complete', ['self', 'file_size'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_stream', 'OP_ASSIGN')], Name('stream'))]))
Module(None, Stmt([Return(Name('wrapper'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stream'), 'write'), [Mod((Const('%s\n'), Name('msg_data')))], None, None))]))
Module(None, Stmt([Assign([AssName('command', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(Getattr(Name('token'), 'contents'), 'split'), [], None, None), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('timezone'), 'tzname'), [Name('None')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('yaml'), 'dump'), [Getattr(Name('self'), 'objects'), Getattr(Name('self'), 'stream'), Keyword('Dumper', Name('DjangoSafeDumper'))], None, Getattr(Name('self'), 'options')))]))
elif int ( timeout ) == 0 :
Module(None, Stmt([Assign([AssName('bottom', 'OP_ASSIGN')], Mul((Sub((Name('number'), Const(1))), Getattr(Name('self'), 'per_page'))))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_base_set'), [Const('add'), Name('key'), Name('value'), Name('timeout')], None, None))]))
Module(None, Stmt([Assign([AssName('kwargs', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Name('k'), Subscript(Name('config'), 'OP_APPLY', [Name('k')])]), [GenExprFor(AssName('k', 'OP_ASSIGN'), Name('config'), [GenExprIf(CallFunc(Name('valid_ident'), [Name('k')], None, None))])]))], None, None))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'allow_multiple_selected')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Name('getattr'), [Name('f'), Const('editable'), Name('False')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('MinValueValidator', [Name('BaseValidator')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils.text', [('Truncator', None), ('wrap', None), ('phone2numeric', None)], 0)]))
Module(None, Stmt([Assign([AssName('truncate_text', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'add_truncation_text'), [Const(''), Name('truncate')], None, None))]))
Module(None, Stmt([AssName('Trans', 'OP_DELETE')]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Command'), Name('self')], None, None), '__init__'), [], None, None))]))
Module(None, Stmt([Function(None, 'smart_bytes', ['s', 'encoding', 'strings_only', 'errors'], [Const('utf-8'), Name('False'), Const('strict')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_get_num_pages', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(2))]), Stmt([Pass()]))], None)]))
result = middleware . process_exception ( request , e )
Module(None, Stmt([Return(Name('s'))]))
Module(None, Stmt([Assign([AssTuple([AssName('count', 'OP_ASSIGN'), AssName('ch', 'OP_ASSIGN')])], CallFunc(Name('get_quantifier'), [Name('ch'), Name('pattern_iter')], None, None))]))
except ( ValueError , TypeError ) :
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('copying plural forms: %s\n'), Name('plural_form_line')))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('fp'), 'write'), [Name('msgs')], None, None))]))
Module(None, Stmt([Function(None, 'decr_version', ['self', 'key', 'delta', 'version'], [Const(1), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'configure', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([If([(Not(Name('value')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('parser', 'OP_ASSIGN')], Getattr(Name('self'), '_parser'))]))
Module(None, Stmt([Assign([AssName('doublecolon_start', 'OP_ASSIGN')], Name('index'))]))
Module(None, Stmt([If([(Name('lib'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'npgettext_lazy', ['context', 'singular', 'plural', 'number'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('kw', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Name('k'), CallFunc(Name('int'), [Name('v')], None, None)]), [GenExprFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('six'), 'iteritems'), [Name('kw')], None, None), [GenExprIf(Compare(Name('v'), [('is not', Name('None'))]))])]))], None, None))]))
Module(None, Stmt([For(AssName('cmatch', 'OP_ASSIGN'), Name('cmatches'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'formset_factory', ['form', 'formset', 'extra', 'can_order', 'can_delete', 'max_num', 'validate_max', 'min_num', 'validate_min'], [Name('BaseFormSet'), Const(1), Name('False'), Name('False'), Name('None'), Name('False'), Name('None'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('generic_lang_code', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(Name('lang_code'), 'split'), [Const('-')], None, None), 'OP_APPLY', [Const(0)]))]))
elif msg :
Module(None, Stmt([Return(Name('obj'))]))
except ( IndexError , TypeError , ValueError ) :
Module(None, Stmt([Assign([AssName('sample', 'OP_ASSIGN')], CallFunc(Getattr(Name('f'), 'read'), [Const(4)], None, None))]))
Module(None, Stmt([Assign([Slice(Name('stats'), 'OP_ASSIGN', None, None)], List([Const(0), Const(0)]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Mod((Name('error_row'), CallFunc(Name('force_text'), [Name('bf_errors')], None, None)))], None, None))]))
Module(None, Stmt([If([(Or([CallFunc(Getattr(Name('filename'), 'endswith'), [Const('.pyc')], None, None), CallFunc(Getattr(Name('filename'), 'endswith'), [Const('.pyo')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('arg', 'OP_ASSIGN'), Name('args'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'samefile'), [Name('src'), Name('dst')], None, None))]))
Module(None, Stmt([If([(Name('m'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'isfile'), [Name('init_path')], None, None)), Stmt([Pass()]))], None)]))
except ( LookupError , TypeError ) :
Module(None, Stmt([Assign([AssName('found', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('cull_frequency', 'OP_ASSIGN')], CallFunc(Getattr(Name('params'), 'get'), [Const('cull_frequency'), CallFunc(Getattr(Name('options'), 'get'), [Const('CULL_FREQUENCY'), Const(3)], None, None)], None, None))]))
elif self . nodelist_false :
Module(None, Stmt([From('django.utils.encoding', [('force_str', None)], 0)]))
Module(None, Stmt([Return(Compare(Tuple([Getattr(Name('p1'), 'scheme'), Getattr(Name('p1'), 'hostname'), Getattr(Name('p1'), 'port')]), [('==', Tuple([Getattr(Name('p2'), 'scheme'), Getattr(Name('p2'), 'hostname'), Getattr(Name('p2'), 'port')]))]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), '_headers'), 'values'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'startDocument'), [], None, None))]))
else :
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Name('list'), [CallFunc(Getattr(Name('token'), 'split_contents'), [], None, None)], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('"%s" is not a valid port number or address:port pair.'), Subscript(Name('options'), 'OP_APPLY', [Const('addrport')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('model_fields', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('Model'), '_meta'), 'get_all_field_names'), [], None, None))]))
Module(None, Stmt([Return(GenExpr(GenExprInner(CallFunc(Name('ord'), [Name('byte')], None, None), [GenExprFor(AssName('byte', 'OP_ASSIGN'), Name('buf'), [])])))]))
Module(None, Stmt([Assign([AssName('token', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'next_token'), [], None, None))]))
Module(None, Stmt([Function(None, '__len__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Const('.'), [('in', Name('str_number'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([If([(And([Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('>=', Const(2))]), Compare(Subscript(Name('bits'), 'OP_APPLY', [UnarySub(Const(2))]), [('==', Const('as'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'value_from_datadict', ['self', 'data', 'files', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Subscript(Name('value'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_archive'), 'list'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Raise(CallFunc(Name('InvalidTemplateLibrary'), [Mod((Const("Template library %s does not have a variable named 'register'"), Name('taglib_module')))], None, None), None, None)]))
try :
Module(None, Stmt([If([(And([CallFunc(Name('isinstance'), [Name('current'), Name('BaseContext')], None, None), CallFunc(Name('getattr'), [CallFunc(Name('type'), [Name('current')], None, None), Name('bit')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('plist', 'OP_ASSIGN')], CallFunc(Name('_parse_header_params'), [Add((Const(';'), Name('line')))], None, None))]))
Module(None, Stmt([Function(None, 'render', ['self', 'name', 'value', 'attrs', 'choices'], [Name('None'), Name('None'), Name('None'), Tuple(())], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Name('getattr'), [Name('self'), Const('error_dict')], None, None))]))
finally :
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('m2m_data', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('fields', 'OP_ASSIGN')], Tuple([CallFunc(Name('DateField'), [Keyword('input_formats', Name('input_date_formats')), Keyword('error_messages', Dict([(Const('invalid'), Subscript(Name('errors'), 'OP_APPLY', [Const('invalid_date')]))])), Keyword('localize', Name('localize'))], None, None), CallFunc(Name('TimeField'), [Keyword('input_formats', Name('input_time_formats')), Keyword('error_messages', Dict([(Const('invalid'), Subscript(Name('errors'), 'OP_APPLY', [Const('invalid_time')]))])), Keyword('localize', Name('localize'))], None, None)]))]))
Module(None, Stmt([Assign([AssName('initial', 'OP_ASSIGN')], CallFunc(Name('bool'), [Name('initial')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('table_output'), 'append'), [CallFunc(Getattr(Const(' '), 'join'), [Name('field_output')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'tag', ['self', 'name', 'compile_function'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None), ('CommandError', None)], 0)]))
else :
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('Module_six_moves_urllib_response'), Getattr(Name('attr'), 'name'), Name('attr')], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), 'empty_value'))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('Subclasses of AppCommand must providea handle_app_config() method.')], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_regex_dict', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([If([(Compare(Name('DEFAULT_CACHE_ALIAS'), [('not in', Getattr(Name('settings'), 'CACHES'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('Model', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_get_model_from_node'), [Name('node'), Const('model')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('value'), Const('_meta')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const('This file is not accessible via a URL.')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('representative', 'OP_ASSIGN')], CallFunc(Getattr(Name('ESCAPE_MAPPINGS'), 'get'), [Name('ch'), Name('ch')], None, None))]))
Module(None, Stmt([Function(None, 'import_by_path', ['dotted_path', 'error_prefix'], [Const('')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('num_args', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Assign([AssName('confirm', 'OP_ASSIGN')], CallFunc(Name('input'), [Const('Please enter either "yes" or "no": ')], None, None))]))
except Exception as e :
Module(None, Stmt([Assign([AssName('link', 'OP_ASSIGN')], List([Name('last'), Name('root'), Name('key'), Name('result')]))]))
Module(None, Stmt([Assign([AssName('sorted_issues', 'OP_ASSIGN')], List([Tuple([Name('criticals'), Const('CRITICALS')]), Tuple([Name('errors'), Const('ERRORS')]), Tuple([Name('warnings'), Const('WARNINGS')]), Tuple([Name('infos'), Const('INFOS')]), Tuple([Name('debugs'), Const('DEBUGS')])]))]))
Module(None, Stmt([Assign([AssName('left', 'OP_ASSIGN')], CallFunc(Getattr(Name('t'), 'led'), [Name('left'), Name('self')], None, None))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Getattr(Name('arg'), 'split'), [Const(',')], None, None))]))
Module(None, Stmt([If([(Not(Or([Getattr(Name('self'), 'data'), Getattr(Name('self'), 'files')])), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_open', ['self', 'name', 'mode'], [Const('rb')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('len'), [Getattr(Name('self'), 'items')], None, None))]))
Module(None, Stmt([Assign([AssName('cache_suffix', 'OP_ASSIGN')], Const('.djcache'))]))
Module(None, Stmt([Return(Dict([(Const('MEDIA_URL'), Getattr(Name('settings'), 'MEDIA_URL'))]))]))
field_desc = '%s = %s%s' % (  att_name ,   '' if '.' in field_type else 'models.' ,  field_type ,  )
Module(None, Stmt([Assign([AssName('pickled', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), '_cache'), 'OP_APPLY', [Name('key')]))]))
Module(None, Stmt([Function(None, 'u', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'configurator'), 'convert'), [Name('value')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'render_value')), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([From('django.utils', [('autoreload', None)], 0)]))
Module(None, Stmt([If([(Compare(Const('version'), [('not in', Name('config'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('LockFileEx'), 'argtypes', 'OP_ASSIGN')], List([Name('HANDLE'), Name('DWORD'), Name('DWORD'), Name('DWORD'), Name('DWORD'), Name('LPOVERLAPPED')]))]))
Module(None, Stmt([From('django.core.cache', [('caches', None)], 0)]))
Module(None, Stmt([Assign([AssName('app_models', 'OP_ASSIGN')], CallFunc(Getattr(Name('router'), 'get_migratable_models'), [Name('app_config'), Getattr(Name('connection'), 'alias'), Keyword('include_auto_created', Name('True'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'getsize'), [CallFunc(Getattr(Name('self'), 'path'), [Name('name')], None, None)], None, None))]))
except Exception as e :
Module(None, Stmt([Assign([AssName('exp', 'OP_ASSIGN')], CallFunc(Getattr(Name('datetime'), 'utcfromtimestamp'), [Name('timeout')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'empty_form'), 'is_multipart'), [], None, None))]))
Module(None, Stmt([Function(None, 'get_template_sources', ['self', 'template_name', 'template_dirs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Raise(CallFunc(Name('ImportError'), [Mod((Const("Could not import '%s'. The path must be fully qualified."), Name('lookup_view')))], None, None), None, None)]))
Module(None, Stmt([Return(CallFunc(Name('bytes'), [CallFunc(Getattr(Name('value'), 'encode'), [Getattr(Name('self'), '_charset')], None, None)], None, None))]))
Module(None, Stmt([From('itertools', [('chain', None)], 0)]))
Module(None, Stmt([Assign([AssName('trailing_empty_content_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('(?:<p>(?:&nbsp;|\\s|<br \\/>)*?</p>\\s*)+\\Z')], None, None))]))
Module(None, Stmt([Function(None, 'iterkeys', ['d', 'kw'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(List(()))]))
Module(None, Stmt([Function(None, 'all_locale_paths', (), (), 0, None, Stmt([Pass()]))]))
except ImportError :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'unget'), [Slice(Name('chunk'), 'OP_APPLY', Name('remaining'), None)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'mod', 'OP_ASSIGN')], Name('old'))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('data'), Tuple([Name('MultiValueDict'), Name('MergeDict')])], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'iterlists', ['d', 'kw'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'visible_fields', ['self'], [], 0, None, Stmt([Pass()]))]))
elif ch == '$' :
Module(None, Stmt([If([(Or([CallFunc(Getattr(Name('dirname'), 'startswith'), [Const('.')], None, None), Compare(Name('dirname'), [('==', Const('__pycache__'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_handle_m2m_field_node', ['self', 'node', 'field'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'instance', 'OP_ASSIGN')], CallFunc(Name('construct_instance'), [Name('self'), Getattr(Name('self'), 'instance'), Getattr(Name('opts'), 'fields'), Name('construct_instance_exclude')], None, None))]))
else :
Module(None, Stmt([If([(Subscript(Name('options'), 'OP_APPLY', [Const('outlog')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'tagname', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'tag'), [], None, None))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Name('force_str'), [Name('key')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('StopIteration'), [], None, None), None, None)]))
try :
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_reverse_with_prefix'), [Name('lookup_view'), Const('')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'text', 'OP_ASSIGN')], Name('text'))]))
finally :
Module(None, Stmt([Class('BaseForm', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'path', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(Name('TemplateDoesNotExist'), None, None)]))
Module(None, Stmt([Assign([AssTuple([AssName('app_name', 'OP_ASSIGN'), AssName('target', 'OP_ASSIGN')])], Tuple([CallFunc(Getattr(Name('options'), 'pop'), [Const('name')], None, None), CallFunc(Getattr(Name('options'), 'pop'), [Const('directory')], None, None)]))]))
Module(None, Stmt([Assign([AssName('current_version', 'OP_ASSIGN')], Getattr(Name('sys'), 'version_info'))]))
Module(None, Stmt([For(AssName('subnode', 'OP_ASSIGN'), Name('node'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'msgattrib_options', 'OP_ASSIGN')], Add((Slice(Getattr(Name('self'), 'msgattrib_options'), 'OP_APPLY', None, None), List([Const('--no-wrap')]))))]))
Module(None, Stmt([Discard(Yield(Name('choice')))]))
Module(None, Stmt([Assign([AssName('attrs', 'OP_ASSIGN')], Dict([(Const('model'), CallFunc(Name('smart_text'), [Getattr(Name('obj'), '_meta')], None, None))]))]))
try :
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Return(Name('media'))]))
Module(None, Stmt([Return(CallFunc(Name('EscapeBytes'), [Name('s')], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('host_validation_re'), 'match'), [Name('host')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('number', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'validate_number'), [Name('number')], None, None))]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('copy', None)])]))
Module(None, Stmt([Discard(Yield(Name('widget')))]))
Module(None, Stmt([From('django.utils.dateformat', [('format', None), ('time_format', None)], 0)]))
Module(None, Stmt([From('django.utils', [('baseconv', None)], 0)]))
else :
Module(None, Stmt([Function(None, '__delattr__', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
try :
elif i < list_length - 1 :
Module(None, Stmt([Function(None, 'indexbytes', ['buf', 'i'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'flush', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('token_kwargs'), [Name('remaining_bits'), Name('parser'), Keyword('support_legacy', Name('False'))], None, None))]))
Module(None, Stmt([Class('TemporaryUploadedFile', [Name('UploadedFile')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('arg_vals'), 'append'), [CallFunc(Getattr(Name('arg'), 'resolve'), [Name('context')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('repr_attr', 'OP_ASSIGN')], Getattr(Name('self'), '_setupfunc'))]))
Module(None, Stmt([Assign([AssName('language_code_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^[a-z]{1,8}(?:-[a-z0-9]{1,8})*$'), Getattr(Name('re'), 'IGNORECASE')], None, None))]))
Module(None, Stmt([From('django.db', [('connections', None), ('transaction', None)], 0)]))
Module(None, Stmt([From('django.core.management.commands.check', [('Command', 'CheckCommand')], 0)]))
Module(None, Stmt([AugAssign(Name('weight'), '+=', Const(2))]))
except ValidationError :
Module(None, Stmt([Assign([AssTuple([AssName('loader', 'OP_ASSIGN'), AssName('args', 'OP_ASSIGN')])], Tuple([Subscript(Name('loader'), 'OP_APPLY', [Const(0)]), Slice(Name('loader'), 'OP_APPLY', Const(1), None)]))]))
Module(None, Stmt([Function(None, 'get_templatetags_modules', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'is_multipart', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('match'), 'group'), [Const(0)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'add_root_elements'), [Name('handler')], None, None))]))
Module(None, Stmt([If([(Compare(Name('used_name'), [('!=', Name('guessed_filename'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('obj_pk', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('obj'), Getattr(Getattr(Name('field'), 'rel'), 'field_name')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('parser'), '__loaded_blocks', 'OP_ASSIGN')], List([Name('block_name')]))]))
Module(None, Stmt([If([(Not(Name('config_string')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([From('django.utils.encoding', [('python_2_unicode_compatible', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'old_method_name', 'OP_ASSIGN')], Name('old_method_name'))]))
Module(None, Stmt([For(AssName('exclude', 'OP_ASSIGN'), Name('excludes'), Stmt([Pass()]), None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('keys', 'OP_ASSIGN')], Name('_iterkeys'))]))
Module(None, Stmt([Assign([AssName('tpl', 'OP_ASSIGN')], Const("EntitiesForbidden(name='{}', system_id={!r}, public_id={!r})"))]))
Module(None, Stmt([Assign([AssName('location', 'OP_ASSIGN')], CallFunc(Getattr(Name('params'), 'pop'), [Const('LOCATION'), Const('')], None, None))]))
Module(None, Stmt([Assign([AssName('input_formats', 'OP_ASSIGN')], CallFunc(Getattr(Name('formats'), 'get_format_lazy'), [Const('DATE_INPUT_FORMATS')], None, None))]))
Module(None, Stmt([Function(None, 'mark_safe', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('input_type', 'OP_ASSIGN')], Const('number'))]))
Module(None, Stmt([Assign([AssName('TemplateLoader', 'OP_ASSIGN')], CallFunc(Name('import_string'), [Name('loader')], None, None))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'file'), 'write'), [Name('raw_data')], None, None))]))
Module(None, Stmt([Class('ImproperlyConfigured', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('filter_expr', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'compile_filter'), [Mod((Const('var|%s'), Name('rest')))], None, None))]))
Module(None, Stmt([Assign([AssName('changes', 'OP_ASSIGN')], CallFunc(Getattr(Name('autodetector'), 'arrange_for_graph'), [Name('changes'), Getattr(Name('loader'), 'graph')], None, None))]))
Module(None, Stmt([Assign([AssName('block_name', 'OP_ASSIGN')], Subscript(Name('bits'), 'OP_APPLY', [Const(1)]))]))
Module(None, Stmt([Assign([AssName('fk', 'OP_ASSIGN')], Subscript(Name('fks_to_parent'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('migration'), 'merged_operations', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('buffer_types', 'OP_ASSIGN')], Tuple([Name('bytes'), Name('bytearray'), Name('memoryview')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stream'), 'write'), [Const(' ')], None, None))]))
Module(None, Stmt([Assign([AssName('format', 'OP_ASSIGN')], CallFunc(Getattr(Name('color_settings'), 'get'), [Name('role'), Dict(())], None, None))]))
try :
Module(None, Stmt([Function(None, 'write', ['self', 'msg', 'style_func', 'ending'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
except ImportError :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'value', 'OP_ASSIGN')], Name('value'))]))
Module(None, Stmt([If([(Or([Not(Getattr(Name('self'), 'use_natural_primary_keys')), Not(CallFunc(Name('hasattr'), [Name('obj'), Const('natural_key')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('size'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Const(''), 'join'), [CallFunc(Name('_generator'), [], None, None)], None, None))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Assign([AssName('pos', 'OP_ASSIGN'), AssName('last', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Assign([AssName('decimals', 'OP_ASSIGN')], CallFunc(Name('abs'), [Name('exponent')], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('messages'), Name('ValidationError')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('EmailBackend'), Name('self')], None, None), '__init__'), [Keyword('fail_silently', Name('fail_silently'))], None, None))]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'position'), '-=', CallFunc(Name('len'), [Name('bytes')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('Rendering %s template files with filenames: %s\n'), Tuple([Name('app_or_project'), CallFunc(Getattr(Const(', '), 'join'), [Name('extra_files')], None, None)])))], None, None))]))
Module(None, Stmt([From('django.template.base', [('Lexer', None), ('Parser', None), ('tag_re', None), ('NodeList', None), ('VariableNode', None), ('TemplateSyntaxError', None)], 0)]))
Module(None, Stmt([Assign([AssName('default_validators', 'OP_ASSIGN')], List([Getattr(Name('validators'), 'validate_slug')]))]))
Module(None, Stmt([Function(None, 'get_language_from_path', ['path', 'strict'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'deactivate'), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([Subscript(Name('final_attrs'), 'OP_ASSIGN', [Const('checked')])], Const('checked'))]))
Module(None, Stmt([Function(None, 'label_from_instance', ['self', 'obj'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'func', 'name'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('status'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
except Exception as e :
Module(None, Stmt([If([(Name('locales'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('attachment'))]))
Module(None, Stmt([From('PIL', [('Image', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_regex', 'OP_ASSIGN')], Name('regex'))]))
else :
Module(None, Stmt([Assign([Subscript(Name('definition'), 'OP_ASSIGN', [Const('fg')])], Name('fg'))]))
Module(None, Stmt([If([(Compare(Const('.'), [('in', Subscript(Name('hextets'), 'OP_APPLY', [UnarySub(Const(1))]))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'attrs'), 'get'), [Const('id'), Const('')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('tuple'), '__getitem__'), [Name('self'), Name('key')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'cmd', 'kwargs'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), '_is_rendered')), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([AssName('kw', 'OP_ASSIGN')], List([Getattr(Name('d'), 'year'), Getattr(Name('d'), 'month'), Getattr(Name('d'), 'day')]))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'%s' tag with name '%s' appears more than once"), Tuple([Subscript(Name('bits'), 'OP_APPLY', [Const(0)]), Name('block_name')])))], None, None), None, None)]))
Module(None, Stmt([Class('dummy', [], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('author'), Subscript(Name('item'), 'OP_APPLY', [Const('author_email')])], None, None))]))
Module(None, Stmt([For(AssName('f', 'OP_ASSIGN'), Add((Add((Getattr(Name('opts'), 'concrete_fields'), Getattr(Name('opts'), 'virtual_fields'))), Getattr(Name('opts'), 'many_to_many'))), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Name('msg'), Name('RemovedInDjango19Warning'), Keyword('stacklevel', Const(2))], None, None))]))
Module(None, Stmt([For(AssName('path', 'OP_ASSIGN'), Name('collect'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [Mod((Const('# %s'), CallFunc(Getattr(Const(' | '), 'join'), [Subscript(Name('lineno_comment_map'), 'OP_APPLY', [Name('comment_lineno_cache')])], None, None)))], None, None))]))
from django . core . exceptions import ImproperlyConfigured , DjangoRuntimeWarning
Module(None, Stmt([Assign([AssName('kwarg_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('(?:(\\w+)=)?(.+)')], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_archive'), 'printdir'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Class('HttpResponsePermanentRedirect', [Name('HttpResponseRedirectBase')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Name('escaped'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], CallFunc(Name('_'), [Const('Enter a valid value.')], None, None))]))
Module(None, Stmt([Assign([AssName('table_names', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('connection'), 'introspection'), 'table_names'), [Name('cursor')], None, None))]))
Module(None, Stmt([Assign([AssName('base36', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('nodelist_empty', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'parse'), [Tuple([Const('endfor')])], None, None))]))
Module(None, Stmt([Class('BaseCache', [Name('object')], None, Stmt([Pass()]), None)]))
except StopIteration :
Module(None, Stmt([If([(And([CallFunc(Name('hasattr'), [Name('response'), Const('render')], None, None), CallFunc(Name('callable'), [Getattr(Name('response'), 'render')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Or([Getattr(Name('options'), 'traceback'), Not(CallFunc(Name('isinstance'), [Name('e'), Name('CommandError')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'input_formats', 'OP_ASSIGN')], Name('input_formats'))]))
Module(None, Stmt([Assign([AssName('params', 'OP_ASSIGN')], Dict([(Const('limit_value'), Getattr(Name('self'), 'limit_value')), (Const('show_value'), Name('cleaned'))]))]))
Module(None, Stmt([Assign([AssTuple([AssName('constant_arg', 'OP_ASSIGN'), AssName('var_arg', 'OP_ASSIGN')])], CallFunc(Getattr(Name('match'), 'group'), [Const('constant_arg'), Const('var_arg')], None, None))]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], Const("\nYou have installed Django's auth system, and don't have any superusers defined.\nWould you like to create one now? (yes/no): "))]))
Module(None, Stmt([Return(CallFunc(Name('_generate_cache_key'), [Name('request'), Getattr(Name('request'), 'method'), Name('headerlist'), Name('key_prefix')], None, None))]))
Module(None, Stmt([Assign([AssName('tt', 'OP_ASSIGN')], Tuple([Getattr(Name('dt'), 'year'), Getattr(Name('dt'), 'month'), Getattr(Name('dt'), 'day'), Getattr(Name('dt'), 'hour'), Getattr(Name('dt'), 'minute'), Getattr(Name('dt'), 'second'), CallFunc(Getattr(Name('dt'), 'weekday'), [], None, None), Const(0), Const(0)]))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'cc'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'dict', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('bool'), [Getattr(Name('self'), 'changed_data')], None, None))]))
Module(None, Stmt([Assign([AssName('_standard_context_processors', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('raw_query_string', 'OP_ASSIGN')], CallFunc(Name('get_bytes_from_wsgi'), [Getattr(Name('self'), 'environ'), Const('QUERY_STRING'), Const('')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('dict'), 'get'), [Name('self'), Name('key'), Name('default')], None, None))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('title', 'OP_ASSIGN')], Subscript(Name('plan_node'), 'OP_APPLY', [Const(1)]))]))
Module(None, Stmt([Return(CallFunc(Name('any'), [GenExpr(GenExprInner(CallFunc(Getattr(Name('form'), 'has_changed'), [], None, None), [GenExprFor(AssName('form', 'OP_ASSIGN'), Name('self'), [])]))], None, None))]))
Module(None, Stmt([Return(Name('default'))]))
except LookupError :
Module(None, Stmt([Function(None, 'i', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Tuple([Name('TYPE'), Name('outdict'), Name('stream')]))]))
Module(None, Stmt([Return(CallFunc(Name('update_wrapper'), [Name('wrapper'), Name('user_function')], None, None))]))
Module(None, Stmt([Assign([AssName('connection', 'OP_ASSIGN')], Subscript(Name('connections'), 'OP_APPLY', [CallFunc(Getattr(Name('options'), 'get'), [Const('database'), Name('DEFAULT_DB_ALIAS')], None, None)]))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('calendar'), 'isleap'), [Getattr(Getattr(Name('self'), 'data'), 'year')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('RAW', 'OP_ASSIGN')], Const('raw'))]))
Module(None, Stmt([For(AssTuple([AssName('name', 'OP_ASSIGN'), AssName('field', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('self'), 'fields'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'fdel', ['instance', 'name'], [Getattr(Name('fdel'), '__name__')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('module', 'OP_ASSIGN')], CallFunc(Name('import_module'), [Mod((Const('%s.management.commands.%s'), Tuple([Name('app_name'), Name('name')])))], None, None))]))
try :
Module(None, Stmt([From('django.core.serializers.base', [('SerializerDoesNotExist', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Name('_load_serializers'), [], None, None))]))
Module(None, Stmt([Subscript(Name('cc'), 'OP_DELETE', [Const('private')])]))
Module(None, Stmt([For(AssName('form', 'OP_ASSIGN'), Getattr(Name('self'), 'extra_forms'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Getattr(Name('self'), 'cleaned_data'))]))
Module(None, Stmt([Return(ListComp(CallFunc(Getattr(Name('widget'), 'value_from_datadict'), [Name('data'), Name('files'), Add((Name('name'), Mod((Const('_%s'), Name('i')))))], None, None), [ListCompFor(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('widget', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Getattr(Name('self'), 'widgets')], None, None), [])]))]))
Module(None, Stmt([Assign([AssName('chunk', 'OP_ASSIGN')], CallFunc(Getattr(Const(''), 'join'), [Name('chunks')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'isdir'), [Name('app_dir')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'bcc', 'OP_ASSIGN')], CallFunc(Name('list'), [Name('bcc')], None, None))]))
except Exception :
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([For(AssName('ip', 'OP_ASSIGN'), Tuple([Getattr(Name('self'), '_ipython'), Getattr(Name('self'), '_ipython_pre_100'), Getattr(Name('self'), '_ipython_pre_011')]), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Subscript(Getattr(Name('e'), 'args'), 'OP_APPLY', [Const(0)]), 'startswith'), [Const('Error -5')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'appendlist', ['self', 'key', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_key'), [Name('key')], None, None))]))
@ property
Module(None, Stmt([Assign([AssName('MONTHS', 'OP_ASSIGN')], CallFunc(Getattr(Const('jan feb mar apr may jun jul aug sep oct nov dec'), 'split'), [], None, None))]))
Module(None, Stmt([If([(Compare(Name('cached'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Creates the tables needed to use the SQL cache backend.'))]))
Module(None, Stmt([Return(Compare(CallFunc(Getattr(Name('self'), '__cast'), [], None, None), [('<', Name('other'))]))]))
Module(None, Stmt([AugAssign(Name('cache_key'), '+=', Mod((Const('.%s'), CallFunc(Name('getattr'), [Name('request'), Const('LANGUAGE_CODE'), CallFunc(Name('get_language'), [], None, None)], None, None))))]))
Module(None, Stmt([Assign([AssName('m', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'match'), [Name('naiveip_re'), Subscript(Name('options'), 'OP_APPLY', [Const('addrport')])], None, None))]))
Module(None, Stmt([Class('RegroupNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Name('only_new'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(List(()))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_cached_loaders'))]))
Module(None, Stmt([Return(Name('False'))]))
except OSError :
elif self . _delegate_text :
Module(None, Stmt([From('email.mime.text', [('MIMEText', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const('Could not find variable at start of %s.'), Name('token')))], None, None), None, None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Getattr(Name('self'), 'regex'), Getattr(Name('six'), 'string_types')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'urlunquote_plus', ['quoted_url'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(Getattr(Name('self'), 'errors'))]))
except StandardError as e :
Module(None, Stmt([Function(None, '__init__', ['self', 'input_date_formats', 'input_time_formats', 'args', 'kwargs'], [Name('None'), Name('None')], 12, None, Stmt([Pass()]))]))
except AttributeError :
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('t')], None, None), [('==', Const(2))]), Stmt([Pass()]))], None)]))
else :
try :
try :
Module(None, Stmt([Function(None, 'deactivate', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'translate', 'OP_ASSIGN')], Name('False'))]))
elif item_type == FILE :
Module(None, Stmt([If([(Compare(Name('f'), [('==', Const('__pycache__'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'dry_run')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('lines'), 'OP_ASSIGN', [Name('i')])], Mod((Add((Add((Const('%0'), Name('width'))), Const('d. %s'))), Tuple([Add((Name('i'), Const(1))), CallFunc(Name('escape'), [Name('line')], None, None)]))))]))
Module(None, Stmt([Function(None, 'add_item_elements', ['self', 'handler', 'item'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('collections', None)])]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'body', 'OP_ASSIGN')], Name('body'))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('literal_match'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('command'), 'execute'), [], Name('args'), Name('defaults')))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('IPAddressField has been deprecated. Use GenericIPAddressField instead.'), Name('RemovedInDjango19Warning')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('year_val', 'OP_ASSIGN'), AssName('month_val', 'OP_ASSIGN'), AssName('day_val', 'OP_ASSIGN')])], ListComp(CallFunc(Name('int'), [Name('v')], None, None), [ListCompFor(AssName('v', 'OP_ASSIGN'), CallFunc(Getattr(Name('match'), 'groups'), [], None, None), [])]))]))
Module(None, Stmt([Assign([AssName('tempdir', 'OP_ASSIGN')], CallFunc(Getattr(Name('tempfile'), 'mkdtemp'), [Keyword('prefix', Name('prefix')), Keyword('suffix', Const('_extract'))], None, None))]))
Module(None, Stmt([Function(None, 'add_js', ['self', 'data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('interactive', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('interactive')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('ext_list'), 'extend'), [CallFunc(Getattr(CallFunc(Getattr(Name('ext'), 'replace'), [Const(' '), Const('')], None, None), 'split'), [Const(',')], None, None)], None, None))]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Name('__proxy__'), [Name('args'), Name('kw')], None, None))]))
id = "(%s) " % self . id if self . id else ""
Module(None, Stmt([If([(Not(CallFunc(Name('table_name_filter'), [Name('table_name')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('AttributeError'), [Mod((Const('This %s instance has no `content` attribute. Use `streaming_content` instead.'), Getattr(Getattr(Name('self'), '__class__'), '__name__')))], None, None), None, None)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('<', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Name('bytes_to_text'), [Name('key'), Getattr(Name('self'), 'encoding')], None, None))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Global(['invalid_var_format_string'])]))
else :
Module(None, Stmt([Assign([AssTuple([AssName('ch', 'OP_ASSIGN'), AssName('escaped', 'OP_ASSIGN')])], CallFunc(Name('next'), [Name('pattern_iter')], None, None))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(Name('zlib'), 'decompress'), [Name('data')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'auto_id', 'OP_ASSIGN')], Name('auto_id'))]))
Module(None, Stmt([Function(None, 'common_logger_config', ['self', 'logger', 'config', 'incremental'], [Name('False')], 0, None, Stmt([Pass()]))]))
rel_to = "self" if relations [ i ] [ 1 ] == table_name else table2model ( relations [ i ] [ 1 ] )
Module(None, Stmt([Class('BaseMemcachedCache', [CallFunc(Getattr(Name('six'), 'with_metaclass'), [Name('BaseMemcachedCacheMethods'), Name('BaseCache')], None, None)], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('e'), Const('django_template_source')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'delete_many', ['self', 'keys', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('duplicate'), 'render_context', 'OP_ASSIGN')], CallFunc(Name('copy'), [Getattr(Name('self'), 'render_context')], None, None))]))
Module(None, Stmt([From('django.utils.safestring', [('mark_safe', None)], 0)]))
Module(None, Stmt([Discard(Yield(Const('')))]))
Module(None, Stmt([Assign([AssName('existing', 'OP_ASSIGN')], CallFunc(Name('list'), [Getattr(Getattr(Name('root'), 'manager'), 'loggerDict')], None, None))]))
Module(None, Stmt([Class('Info', [Name('CheckMessage')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('e'), 'args', 'OP_ASSIGN')], Tuple([Mod((Const('Problem installing fixtures: %s'), Name('e')))]))]))
Module(None, Stmt([Assign([AssName('__hash__', 'OP_ASSIGN')], CallFunc(Name('new_method_proxy'), [Name('hash')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'input_type', 'OP_ASSIGN')], CallFunc(Getattr(Name('attrs'), 'pop'), [Const('type'), Getattr(Name('self'), 'input_type')], None, None))]))
else :
Module(None, Stmt([Function(None, 'read', ['self', 'size'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('self'), 'is_url'), [Name('template')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('MultiWidget'), Name('self')], None, None), '__deepcopy__'), [Name('memo')], None, None))]))
Module(None, Stmt([Function(None, 'truncatechars', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('arg'), 'resolve'), [Name('context')], None, None), [ListCompFor(AssName('arg', 'OP_ASSIGN'), Getattr(Name('self'), 'args'), [])]))]))
Module(None, Stmt([If([(Name('args'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('_active'), 'value', 'OP_ASSIGN')], CallFunc(Getattr(Name('gettext_module'), 'NullTranslations'), [], None, None))]))
try :
Module(None, Stmt([Discard(Yield(Const('year')))]))
Module(None, Stmt([If([(Name('output'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('language_code'), [('not in', Getattr(Name('self'), '_app_dict'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('MovedAttribute', [Name('_LazyDescr')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'file'), 'seek'), [Const(0)], None, None))]))
Module(None, Stmt([Assign([AssName('id_', 'OP_ASSIGN')], Mod((Const('id_%s'), Name('name'))))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], Getattr(Name('self'), '_leftover'))]))
Module(None, Stmt([Return(CallFunc(Name('_HashedSeq'), [Name('key')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('make_middleware_decorator'), [Name('middleware_class')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_name'), [Name('name'), Name('app_or_project')], None, None))]))
Module(None, Stmt([Assign([AssName('cls', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('forms', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('self'), '_construct_form'), [Name('i')], None, None), [ListCompFor(AssName('i', 'OP_ASSIGN'), CallFunc(Name('xrange'), [CallFunc(Getattr(Name('self'), 'total_form_count'), [], None, None)], None, None), [])]))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [Mod((Const(' _(%s) '), Name('cmatch')))], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('value'), 'strftime'), [Name('format')], None, None))]))
else :
Module(None, Stmt([If([(Compare(Name('mimetype'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Getattr(Name('form'), '_meta'), 'fields'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'select_template', ['template_name_list', 'dirs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Compare(Subscript(CallFunc(Getattr(Name('ip_str'), 'split'), [Const(':')], None, None), 'OP_APPLY', [UnarySub(Const(1))]), [('==', Name('hextet'))])), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('self'), '_read_started'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY2'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Assign([AssName('pot_path', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('path'), Mod((Const('%s.pot'), CallFunc(Name('str'), [Getattr(Name('self'), 'domain')], None, None)))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Subscript(Name('html'), 'OP_APPLY', [Name('field')])], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_stream', 'OP_ASSIGN')], CallFunc(Name('BytesIO'), [Getattr(Name('self'), '_body')], None, None))]))
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], CallFunc(Name('middleware_method'), [Name('request')], None, None))]))
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], CallFunc(Getattr(Name('middleware'), 'process_template_response'), [Name('request'), Name('response')], None, None))]))
Module(None, Stmt([Function(None, 'end_object', ['self', 'obj'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Class('Promise', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Exec(Tuple([CallFunc(Name('compile'), [CallFunc(Getattr(Name('handle'), 'read'), [], None, None), Name('pythonrc'), Const('exec')], None, None), Name('imported_objects')]), None, None)]))
Module(None, Stmt([Assign([AssName('expires', 'OP_ASSIGN')], CallFunc(Getattr(Name('timezone'), 'make_naive'), [Name('expires'), Getattr(Name('timezone'), 'utc')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_to_tuple', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Const('\n'), 'join'), [Name('output')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('cc_delim_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('\\s*,\\s*')], None, None))]))
Module(None, Stmt([Assign([AssName('var_name', 'OP_ASSIGN')], Subscript(Name('bits'), 'OP_APPLY', [Const(5)]))]))
elif cmatches :
except AttributeError :
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'filter'), [Name('name'), Name('func')], None, Name('flags')))]))
except NoReverseMatch :
else :
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'filter_expression'), 'resolve'), [Name('context')], None, None))]))
Module(None, Stmt([Function(None, '__bool__', ['self'], [], 0, None, Stmt([Pass()]))]))
except TemplateDoesNotExist :
Module(None, Stmt([Function(None, 'get_git_changeset', (), (), 0, None, Stmt([Pass()]))]))
elif child . nodeType == child . ELEMENT_NODE :
Module(None, Stmt([For(AssName('node', 'OP_ASSIGN'), CallFunc(Getattr(Name('graph'), 'leaf_nodes'), [Name('app_name')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('values', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('parser'), 'compile_filter'), [Name('arg')], None, None), [ListCompFor(AssName('arg', 'OP_ASSIGN'), Slice(Name('args'), 'OP_APPLY', Const(1), UnarySub(Const(2))), [])]))]))
Module(None, Stmt([From('django.core.mail.message', [('sanitize_address', None)], 0)]))
Module(None, Stmt([Function(None, 'salted_hmac', ['key_salt', 'value', 'secret'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([AugAssign(Subscript(Getattr(Name('self'), 'attrs'), 'OP_APPLY', [Const('id')]), '+=', Mod((Const('_%d'), Getattr(Name('self'), 'index'))))]))
unique = "UNIQUE " if f . unique else ""
Module(None, Stmt([Class('MergeDict', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([From('django.core.management.base', [('AppCommand', None)], 0)]))
Module(None, Stmt([Assign([AssName('buffering', 'OP_ASSIGN')], CallFunc(Name('int'), [Getattr(Name('six'), 'PY3')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('DjangoUnicodeDecodeError'), [Name('s')], Getattr(Name('e'), 'args'), None), None, None)]))
Module(None, Stmt([Assign([AssName('content', 'OP_ASSIGN')], CallFunc(Getattr(Name('f'), 'read'), [], None, None))]))
Module(None, Stmt([Function(None, 'next_token', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('e'), 'errno'), [('!=', Getattr(Name('errno'), 'EEXIST'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'append'), [CallFunc(Name('Group'), [Tuple([Mod((Const('%%(%s)s'), Name('param'))), Name('param')])], None, None)], None, None))]))
Module(None, Stmt([From('django.utils.timezone', [('template_localtime', None)], 0)]))
Module(None, Stmt([Assign([AssName('description', 'OP_ASSIGN')], Mod((Const("The '%s' function"), Getattr(Name('receiver'), '__name__'))))]))
Module(None, Stmt([Assign([AssName('new_ip', 'OP_ASSIGN')], CallFunc(Getattr(Subscript(Name('hextet'), 'OP_APPLY', [Const(0)]), 'split'), [Const(':')], None, None))]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None)], 0)]))
@ property
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'dict'), 'OP_ASSIGN', [Name('item')])], Name('None'))]))
Module(None, Stmt([Return(Compare(Name('ret'), [('==', Const(0))]))]))
Module(None, Stmt([From('django.utils.html', [('strip_spaces_between_tags', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('django'), 'setup'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('skipped'), 'append'), [Tuple([Name('model'), Name('deps')])], None, None))]))
Module(None, Stmt([Assign([AssName('escaped', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'base_fields'), 'OP_ASSIGN', [Name('MAX_NUM_FORM_COUNT')])], CallFunc(Name('IntegerField'), [Keyword('required', Name('False')), Keyword('widget', Name('HiddenInput'))], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'rjust', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'source', 'OP_ASSIGN')], Name('source'))]))
Module(None, Stmt([Discard(Tuple([CallFunc(Getattr(Name('parser'), 'add_option'), [Const('--pythonpath'), Keyword('help', Const('A directory to add to the Python path, e.g. "/home/djangoprojects/myproject".'))], None, None)]))]))
Module(None, Stmt([Class('TokenParser', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [Name('UnreadablePostError'), CallFunc(Name('UnreadablePostError'), [], Getattr(Name('e'), 'args'), None), Subscript(CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), 'OP_APPLY', [Const(2)])], None, None))]))
Module(None, Stmt([If([(Compare(Name('_locs_'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_new_instance'), [Getattr(Name('self'), 'children'), Getattr(Name('self'), 'connector'), Getattr(Name('self'), 'negated')], None, None))]))
else :
Module(None, Stmt([Return(Subscript(Name('key'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Assign([AssName('attrs', 'OP_ASSIGN')], CallFunc(Name('dict'), [Getattr(Name('self'), 'attrs')], None, Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Name('make_key'), [Name('args'), Name('kwds'), Name('typed')], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('package'), Const('rindex')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Getattr(Name('self'), 'stdout'), 'ending', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Return(Name('dec'))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('self'), '_has_expired'), [Name('key')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('six'), 'iteritems'), [Name('kwargs')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('func'))]))
Module(None, Stmt([Assign([AssName('model', 'OP_ASSIGN')], Getattr(Name('self'), 'obj'))]))
try :
Module(None, Stmt([Assign([AssName('translation', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_new_gnu_trans'), [Name('localedir')], None, None))]))
Module(None, Stmt([Assign([AssName('absolute_http_url_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^https?://'), Getattr(Name('re'), 'I')], None, None))]))
Module(None, Stmt([If([(Compare(Name('tzinfo'), [('==', Const('Z'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('model', 'OP_ASSIGN'), AssName('deps', 'OP_ASSIGN')])], CallFunc(Getattr(Name('model_dependencies'), 'pop'), [], None, None))]))
@ lru_cache . lru_cache ( maxsize = 1000 )
tag_exists = registry . tag_exists
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('A {% csrf_token %} was used in a template, but the context did not provide the value.  This is usually caused by not using RequestContext.')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_fname', 'OP_ASSIGN')], Name('None'))]))
try :
Module(None, Stmt([Assign([AssName('duplicate', 'OP_ASSIGN')], CallFunc(Name('copy'), [CallFunc(Name('super'), [Name('BaseContext'), Name('self')], None, None)], None, None))]))
Module(None, Stmt([Return(Tuple([Name('list_'), Name('False')]))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Return(Name('patterns'))]))
Module(None, Stmt([Raise(None, None, None)]))
if not value or '@' not in value :
else :
try :
except smtplib . SMTPException :
Module(None, Stmt([Assign([AssName('neg', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Function(None, 'parts', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_cache'), 'flush_all'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('QueryDict'), Name('self')], None, None), 'clear'), [], None, None))]))
Module(None, Stmt([Return(Mod((Const('%s%s'), Tuple([Name('text'), Name('truncate')]))))]))
Module(None, Stmt([Break()]))
except NotImplementedError :
Module(None, Stmt([Return(CallFunc(Getattr(Name('_trans'), 'get_language_from_request'), [Name('request'), Name('check_path')], None, None))]))
except ImportError :
Module(None, Stmt([AugAssign(Name('_cached_filenames'), '+=', Name('new_filenames'))]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Raise(Name('ValueError'), None, None)]))
@ stringfilter
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([Assign([AssName('confirm', 'OP_ASSIGN')], CallFunc(Name('input'), [Name('msg')], None, None))]))
elif safe_input :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'message_context', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([If([(Compare(Name('value'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Subscript(Name('options'), 'OP_APPLY', [Const('umask')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('self'))]))
Module(None, Stmt([Return(Name('no'))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('count', 'OP_ASSIGN')], FloorDiv((Name('since'), Name('seconds'))))]))
Module(None, Stmt([Return(CallFunc(Name('list'), [CallFunc(Name('urlsplit'), [Name('url')], None, None)], None, None))]))
Module(None, Stmt([AugAssign(Name('i'), '+=', Const(1))]))
Module(None, Stmt([Assign([AssName('chunk', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_read_limited'), [Sub((Name('size'), CallFunc(Name('len'), [Getattr(Name('self'), 'buffer')], None, None)))], None, None))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('KeyError'), [Mod((Const('Unknown language code %s and %s.'), Tuple([Name('lang_code'), Name('generic_lang_code')])))], None, None), None, None)]))
Module(None, Stmt([Return(Subscript(CallFunc(Getattr(Name('self'), 'loader'), [Getattr(Name('self'), 'loadname'), Getattr(Name('self'), 'dirs')], None, None), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Function(None, 'streaming_content', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Name('validate_ipv4_address'), [Name('hextet')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('ch', 'OP_ASSIGN'), AssName('escaped', 'OP_ASSIGN')])], CallFunc(Name('next'), [Name('pattern_iter')], None, None))]))
@ register . filter ( is_safe = True , needs_autoescape = True )
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Assign([AssName('truncate_len', 'OP_ASSIGN')], Name('length'))]))
Module(None, Stmt([Assign([AssName('db', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('database')], None, None))]))
Module(None, Stmt([Function(None, 'as_p', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('opfunc'), '__name__', 'OP_ASSIGN')], Name('opname'))]))
Module(None, Stmt([Return(Mul((Getattr(Name('self'), 'number'), Getattr(Getattr(Name('self'), 'paginator'), 'per_page'))))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_cached_loaders', 'OP_ASSIGN')], Name('cached_loaders'))]))
Module(None, Stmt([While(CallFunc(Getattr(Name('self'), 'exists'), [Name('name')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Import([('glob', None)])]))
hint = "\n\tHINT: %s" % self . hint if self . hint else ''
Module(None, Stmt([Assign([AssTuple([AssName('int_part', 'OP_ASSIGN'), AssName('dec_part', 'OP_ASSIGN')])], Tuple([Name('str_number'), Const('')]))]))
Module(None, Stmt([Function(None, '_add_installed_apps_translations', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Name('errors_on_separate_row'), Name('bf_errors')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('confirm', 'OP_ASSIGN')], CallFunc(Name('input'), [Mod((Const("You have requested a flush of the database. This will IRREVERSIBLY DESTROY all data currently in the %r database, and return each table to an empty state. Are you sure you want to do this?     Type 'yes' to continue, or 'no' to cancel: "), Subscript(Getattr(Name('connection'), 'settings_dict'), 'OP_APPLY', [Const('NAME')])))], None, None))]))
Module(None, Stmt([Function(None, 'eval', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('name', 'OP_ASSIGN'), CallFunc(Name('sorted'), [Subscript(Name('commands_dict'), 'OP_APPLY', [Name('app')])], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'nud', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('type'), [Name('result')], None, None), [('in', Tuple([Name('ConvertingDict'), Name('ConvertingList'), Name('ConvertingTuple')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('name', 'OP_ASSIGN'), Slice(Name('bits'), 'OP_APPLY', Const(1), UnarySub(Const(2))), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(Yield(Name('self')))]))
Module(None, Stmt([Assign([AssName('template', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'template'), 'resolve'), [Name('context')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Textarea'), Name('self')], None, None), '__init__'), [Name('default_attrs')], None, None))]))
Module(None, Stmt([Assign([AssName('timestamp', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('baseconv'), 'base62'), 'decode'), [Name('timestamp')], None, None))]))
parts = 2 if version [ 2 ] == 0 else 3
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_post'), 'appendlist'), [Name('field_name'), CallFunc(Name('force_text'), [Name('data'), Name('encoding'), Keyword('errors', Const('replace'))], None, None)], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), 'parent_instance'))]))
Module(None, Stmt([Assign([AssName('number_equal', 'OP_ASSIGN')], CallFunc(Name('len'), [ListComp(Name('current_number'), [ListCompFor(AssName('current_number', 'OP_ASSIGN'), Getattr(Name('self'), '_unget_history'), [ListCompIf(Compare(Name('current_number'), [('==', Name('num_bytes'))]))])])], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([If([(CallFunc(Name('constant_time_compare'), [Name('sig'), CallFunc(Getattr(Name('self'), 'signature'), [Name('value')], None, None)], None, None), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([From('subprocess', [('PIPE', None), ('Popen', None)], 0)]))
Module(None, Stmt([While(Name('True'), Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils.translation', [('trans_real', 'trans')], 0)]))
Module(None, Stmt([Function(None, 'convert', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Const('Flush cancelled.\n')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('write'), [Name('end')], None, None))]))
Module(None, Stmt([Assign([AssName('RE_DATE', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('(\\d{4})-(\\d\\d?)-(\\d\\d?)$')], None, None))]))
else :
Module(None, Stmt([Return(Getattr(Name('self'), 'html_name'))]))
Module(None, Stmt([Assign([AssName('module', 'OP_ASSIGN')], CallFunc(Getattr(Name('importlib'), 'import_module'), [Name('serializer_module')], None, None))]))
Module(None, Stmt([Assign([AssName('errors', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('df'), 'format'), [Name('format_string')], None, None))]))
Module(None, Stmt([Function(None, 'run', ['self', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('root'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('obj_pk', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_meta'), 'pk'), 'to_python'), [CallFunc(Getattr(Name('n'), 'getAttribute'), [Const('pk')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('filenames'), 'append'), [Name('filename')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('_serializers'), 'OP_ASSIGN', [Name('format')])], Name('module'))]))
Module(None, Stmt([Function(None, 'wrapper', ['args'], [], 4, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'clear'), [], None, None))]))
elif template_tuple is None :
Module(None, Stmt([If([(Not(Name('candidate')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('BASE64_ALPHABET', 'OP_ASSIGN')], Add((Name('BASE62_ALPHABET'), Const('-_'))))]))
Module(None, Stmt([Function(None, 'u', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'h', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('help_texts'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('elt'), Getattr(Name('six'), 'string_types')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('selected_choices'), 'remove'), [Name('option_value')], None, None))]))
Module(None, Stmt([Import([('tempfile', None)])]))
else :
Module(None, Stmt([AugAssign(Name('msg_count'), '+=', Const(1))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'validators', 'OP_ASSIGN')], Add((Getattr(Name('self'), 'default_validators'), Name('validators'))))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Function(None, 'check_programs', ['programs'], [], 4, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('mem_args'), [('in', Name('cache'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('ImproperlyConfigured'), [Const('The SECURE_PROXY_SSL_HEADER setting must be a tuple containing two values.')], None, None), None, None)]))
Module(None, Stmt([Return(Compare(CallFunc(Getattr(Name('self'), 'flatten'), [], None, None), [('==', CallFunc(Getattr(Name('other'), 'flatten'), [], None, None))]))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Assign([AssName('params', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(CallFunc(Name('bytes'), [Name('s')], None, None))]))
from django . core . exceptions import ValidationError
Module(None, Stmt([Class('HttpResponseNotFound', [Name('HttpResponse')], None, Stmt([Pass()]), None)]))
try :
Module(None, Stmt([Assign([AssName('leave_locale_alone', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Return(Mod((Const('%s:%s'), Tuple([CallFunc(Getattr(Name('self'), 'g'), [], None, None), CallFunc(Getattr(Name('self'), 'i'), [], None, None)]))))]))
Module(None, Stmt([Assign([AssTuple([AssName('extra', 'OP_ASSIGN'), AssName('resolver', 'OP_ASSIGN')])], Subscript(Getattr(Name('resolver'), 'namespace_dict'), 'OP_APPLY', [Name('ns')]))]))
Module(None, Stmt([If([(And([Compare(Const('::'), [('not in', Name('ip_str'))]), Compare(CallFunc(Getattr(Name('ip_str'), 'count'), [Const(':')], None, None), [('!=', Const(7))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('DictWrapper', [Name('dict')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssName('arg', 'OP_ASSIGN'), Slice(Name('argv'), 'OP_APPLY', Const(2), None), Stmt([Pass()]), None)]))
__author__ = "Benjamin Peterson <benjamin@python.org>"
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([AugAssign(Name('mtime'), '-=', Getattr(Name('stat'), 'st_ctime'))]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'active_writers'), '+=', Const(1))]))
Module(None, Stmt([Class('DebugNodeList', [Name('NodeList')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('result'), 'key', 'OP_ASSIGN')], Name('key'))]))
Module(None, Stmt([Function(None, '__getattr__', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('field_notes', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of NoArgsCommand must provide a handle_noargs() method')], None, None), None, None)]))
Module(None, Stmt([With(CallFunc(Getattr(Name('io'), 'open'), [Name('fd'), Const('wb')], None, None), AssName('f', 'OP_ASSIGN'), Stmt([Pass()]))]))
else :
Module(None, Stmt([If([(Name('ns_pattern'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('param', 'OP_ASSIGN')], CallFunc(Getattr(Const(''), 'join'), [Name('name')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('compile_func'), '__doc__', 'OP_ASSIGN')], Getattr(Name('func'), '__doc__'))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('<', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
else :
Module(None, Stmt([Raise(CallFunc(Name('NoReverseMatch'), [Mod((Const("Reverse for '%s' with arguments '%s' and keyword arguments '%s' not found. %d pattern(s) tried: %s"), Tuple([Name('lookup_view_s'), Name('args'), Name('kwargs'), CallFunc(Name('len'), [Name('patterns')], None, None), Name('patterns')])))], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'parent_instance'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Name('EmailInput'))]))
Module(None, Stmt([Class('DebugNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('xml.sax', [('handler', None)], 0)]))
try :
Module(None, Stmt([Assign([AssName('file_name', 'OP_ASSIGN')], CallFunc(Getattr(Name('disposition'), 'get'), [Const('filename')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('link'), Const(''), Dict([(Const('rel'), Const('enclosure')), (Const('href'), Getattr(Subscript(Name('item'), 'OP_APPLY', [Const('enclosure')]), 'url')), (Const('length'), Getattr(Subscript(Name('item'), 'OP_APPLY', [Const('enclosure')]), 'length')), (Const('type'), Getattr(Subscript(Name('item'), 'OP_APPLY', [Const('enclosure')]), 'mime_type'))])], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Mod((Const('%s %s'), CallFunc(Name('tuple'), [Name('value')], None, None))))]))
Module(None, Stmt([AugAssign(Name('result'), '+=', Add((Const(':'), Name('ipv4_address'))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_set'), [Name('key'), Name('pickled'), Name('timeout')], None, None))]))
except SystemExit :
else :
elif disable_existing :
Module(None, Stmt([Assign([Subscript(Name('loop_dict'), 'OP_ASSIGN', [Const('revcounter')])], Sub((Name('len_values'), Name('i'))))]))
try :
Module(None, Stmt([Discard(Yield(Name('data')))]))
Module(None, Stmt([If([(Compare(Name('formfield_callback'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('field', 'OP_ASSIGN')], Getattr(Name('f'), 'name'))]))
except InvalidTemplateLibrary as e :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('get_resolver'), 'cache_clear'), [], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('ConvertingTuple'), [Name('value')], None, None))]))
Module(None, Stmt([Function(None, 'delete_many', ['self', 'keys', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'SETTINGS_MODULE'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_check_test_runner', ['app_configs', 'kwargs'], [Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'configure_root', ['self', 'config', 'incremental'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('UnrecognizedArchiveFormat'), [Const('File object not a recognized archive format.')], None, None), None, None)]))
try :
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'environ'), 'get'), [Const('wsgi.url_scheme')], None, None))]))
Module(None, Stmt([Function(None, 'csrf_token', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Getattr(Name('s'), 'replace'), [Const("'"), Const("\\'")], None, None))]))
except Exception :
Module(None, Stmt([If([(CallFunc(Name('is_aware'), [Name('value')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('code', 'OP_ASSIGN')], Const('max_value'))]))
Module(None, Stmt([Assign([AssName('package_path', 'OP_ASSIGN')], Getattr(Name('package'), '__path__'))]))
Module(None, Stmt([Assign([AssName('attrs', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('CharField'), Name('self')], None, None), 'widget_attrs'), [Name('widget')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('DecimalField'), Name('self')], None, None), 'validate'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('cache_timeout', 'OP_ASSIGN')], Getattr(Name('settings'), 'CACHE_MIDDLEWARE_SECONDS'))]))
Module(None, Stmt([Class('FilterExpression', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'as_text', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('day_field', 'OP_ASSIGN')], Const('%s_day'))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Function(None, 'close', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('__', 'OP_ASSIGN'), Name('iterator'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('self'), Const('_ordering')], None, None)), Stmt([Pass()]))], None)]))
elif ns not in app_list :
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Getattr(Name('form'), '_meta'), 'widgets'), 'get'), [Getattr(Getattr(Name('self'), '_pk_field'), 'name'), Name('HiddenInput')], None, None))]))
Module(None, Stmt([Function(None, 'D', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('import_string'), [Name('key_func')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--pythonpath')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('django.utils.unittest will be removed in Django 1.9.'), Name('RemovedInDjango19Warning'), Keyword('stacklevel', Const(2))], None, None))]))
Module(None, Stmt([If([(Name('missing_fields'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('attrvalue', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'unescape'), [Name('attrvalue')], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Name('ip_str'), 'count'), [Const(':')], None, None), [('>', Const(7))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('language'), 'lower'), [], None, None))]))
finally :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('dirnames'), 'remove'), [Name('dirname')], None, None))]))
Module(None, Stmt([Assign([AssName('days', 'OP_ASSIGN')], Tuple([Const('Mon'), Const('Tue'), Const('Wed'), Const('Thu'), Const('Fri'), Const('Sat'), Const('Sun')]))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('directory')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('HttpRequest', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'serialize_headers', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('exclude', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('exclude')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('words'), 'OP_ASSIGN', [Name('i')])], CallFunc(Name('mark_safe'), [Name('word')], None, None))]))
else :
Module(None, Stmt([Assign([AssName('kw', 'OP_ASSIGN')], CallFunc(Getattr(Name('match'), 'groupdict'), [], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'isdir'), [Name('migrations_directory')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('duplicate'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Name('output')], None, None))]))
Module(None, Stmt([Function(None, 'find_fixtures', ['self', 'fixture_label'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Function(None, 'callback', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('nodelist'), 'get_nodes_by_type'), [Name('ExtendsNode')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('index', 'OP_ASSIGN')], CallFunc(Getattr(Name('data'), 'find'), [Getattr(Name('self'), '_boundary')], None, None))]))
Module(None, Stmt([From('os', [('path', None)], 0)]))
Module(None, Stmt([Assign([AssName('fixture_files_in_dir', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'active_writers'), '+=', Const(1))]))
Module(None, Stmt([Return(Name('select_html'))]))
Module(None, Stmt([If([(Name('output'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_chunk_size', 'OP_ASSIGN')], CallFunc(Name('min'), [Add((List([Sub((Power((Const(2), Const(31))), Const(4)))]), Name('possible_sizes')))], None, None))]))
Module(None, Stmt([Class('FileInput', [Name('Input')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'queryset'), 'filter'), [], None, Dict([(Name('key'), Name('pk'))])))]))
@ streaming_content . setter
Module(None, Stmt([Assign([AssName('root', 'OP_ASSIGN')], Subscript(Name('nonlocal_root'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Assign([AssName('M', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'get'), [Name('key'), CallFunc(Name('Morsel'), [], None, None)], None, None))]))
msg = (  "WSGI application '%(app_path)s' could not be loaded; "  "Error importing module: '%(exception)s'" % ( {  'app_path' : app_path ,  'exception' : e ,  } )  )
Module(None, Stmt([Import([('time', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('all_locales'), 'extend'), [CallFunc(Name('map'), [Getattr(Getattr(Name('os'), 'path'), 'basename'), Name('locale_dirs')], None, None)], None, None))]))
Module(None, Stmt([Return(Tuple([CallFunc(Getattr(Subscript(Name('t'), 'OP_APPLY', [Const(0)]), 'lower'), [], None, None), Name('True')]))]))
Module(None, Stmt([Assign([AssName('transfer_encoding', 'OP_ASSIGN')], CallFunc(Getattr(Subscript(Name('transfer_encoding'), 'OP_APPLY', [Const(0)]), 'strip'), [], None, None))]))
Module(None, Stmt([Assign([AssName('__str__', 'OP_ASSIGN')], CallFunc(Name('new_method_proxy'), [Name('str')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('field_value', 'OP_ASSIGN')], Subscript(Name('value'), 'OP_APPLY', [Name('i')]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'content', 'name'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('app_template_dirs', 'OP_ASSIGN')], CallFunc(Name('calculate_app_template_dirs'), [], None, None))]))
Module(None, Stmt([Assign([AssName('digits', 'OP_ASSIGN')], Const('0123456789abcdefghijklmnopqrstuvwxyz'))]))
Module(None, Stmt([Assign([AssName('sites', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('incremental', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'pop'), [Const('incremental'), Name('False')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('defaults', 'OP_ASSIGN')], CallFunc(Name('dict'), [CallFunc(Getattr(Name('defaults'), '_get_kwargs'), [], None, None)], None, Name('options')))]))
Module(None, Stmt([Assign([AssName('moves', 'OP_ASSIGN'), Subscript(Getattr(Name('sys'), 'modules'), 'OP_ASSIGN', [Add((Name('__name__'), Const('.moves')))])], CallFunc(Name('_MovedItems'), [Add((Name('__name__'), Const('.moves')))], None, None))]))
Module(None, Stmt([Function(None, '__new__', ['cls', 'name', 'this_bases', 'd'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'compression_formats'), 'OP_ASSIGN', [Const('bz2')])], Tuple([Getattr(Name('bz2'), 'BZ2File'), Const('r')]))]))
Module(None, Stmt([From('django.core.management.base', [('AppCommand', None)], 0)]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Getattr(Name('token'), 'split_contents'), [], None, None))]))
Module(None, Stmt([If([(Name('extra_params'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('e', 'OP_ASSIGN')], CallFunc(Name('TemplateSyntaxError'), [Name('msg')], None, None))]))
Module(None, Stmt([If([(Name('origin'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('data'))]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('self'), Const('_body')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__setitem__', ['self', 'name', 'val'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('body_msg', 'OP_ASSIGN')], Name('msg'))]))
Module(None, Stmt([Function(None, 'eval', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Add((Add((CallFunc(Getattr(Name('self'), 'serialize_headers'), [], None, None), Const('\r\n\r\n'))), Getattr(Name('self'), 'content'))))]))
Module(None, Stmt([If([(Compare(Name('kwargs'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_key'), [Name('key')], None, None))]))
Module(None, Stmt([Assign([AssName('DJANGO_COLORS', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'environ'), 'get'), [Const('DJANGO_COLORS'), Const('')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'update'), [Name('updates')], None, None))]))
try :
Module(None, Stmt([Function(None, 'cut', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'now', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('end_text_pos', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--ipv6'), Const('-6'), Keyword('action', Const('store_true')), Keyword('dest', Const('use_ipv6')), Keyword('default', Name('False')), Keyword('help', Const('Tells Django to use an IPv6 address.'))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('logger'), 'disabled', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Function(None, 'template_localtime', ['value', 'use_tz'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('s'), 'close'), [], None, None))]))
Module(None, Stmt([Assign([AssName('threading', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('use_threading')], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Function(None, 'add_handlers', ['self', 'logger', 'handlers'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('glob', None)])]))
Module(None, Stmt([If([(Getattr(Name('self'), '_options'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('app_config'), 'models_module'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('errors', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(Name('x'))]))
Module(None, Stmt([Assign([AssName('USE_INOTIFY', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'streaming_content', 'OP_ASSIGN')], Name('streaming_content'))]))
Module(None, Stmt([If([(Compare(Name('response'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], Add((Name('sign'), Name('hhmm'))))]))
Module(None, Stmt([Assign([AssName('lineno_comment_map', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assert(Compare(Name('content'), [('is not', Name('None'))]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('notifier'), 'stop'), [], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Class('LoaderOrigin', [Name('Origin')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'encoding', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
try :
else :
Module(None, Stmt([Function(None, 'default_if_none', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'GET', 'OP_ASSIGN')], CallFunc(Name('QueryDict'), [Keyword('mutable', Name('True'))], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('boundary'), Getattr(Name('six'), 'text_type')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Name('bool'), [Name('data')], None, None))]))
@ property
Module(None, Stmt([From('django.utils.six.moves.urllib.parse', [('urlsplit', None), ('urlunsplit', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Name('b64_encode'), [CallFunc(Getattr(CallFunc(Name('salted_hmac'), [Name('salt'), Name('value'), Name('key')], None, None), 'digest'), [], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'resolve', ['self', 'path'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('connection'), 'client'), 'runshell'), [], None, None))]))
Module(None, Stmt([Function(None, 'debug', ['request'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssName('status_code', 'OP_ASSIGN')], Const(400))]))
Module(None, Stmt([Assign([AssName('connection', 'OP_ASSIGN')], Or([Name('connection'), CallFunc(Name('get_connection'), [Keyword('username', Name('auth_user')), Keyword('password', Name('auth_password')), Keyword('fail_silently', Name('fail_silently'))], None, None)]))]))
Module(None, Stmt([Assign([AssName('selected_html', 'OP_ASSIGN')], CallFunc(Name('mark_safe'), [Const(' selected="selected"')], None, None))]))
Module(None, Stmt([Return(Name('Operator'))]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'USE_THOUSAND_SEPARATOR'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('get_supported_language_variant'), [Name('lang_code'), Keyword('strict', Name('strict'))], None, None))]))
Module(None, Stmt([Assign([AssName('media', 'OP_ASSIGN')], CallFunc(Name('Media'), [], None, None))]))
Module(None, Stmt([Function(None, 'walk_to_end', ['ch', 'input_iter'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Discard(CallFunc(Name('import_module'), [Name('templatetag_module')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('args'), Keyword('metavar', Getattr(Name('self'), 'label')), Keyword('nargs', Const('+'))], None, None))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Assign([AssName('input_formats', 'OP_ASSIGN')], CallFunc(Getattr(Name('formats'), 'get_format_lazy'), [Const('DATETIME_INPUT_FORMATS')], None, None))]))
elif message_context [ 0 ] == "'" :
Module(None, Stmt([Return(CallFunc(Name('list'), [CallFunc(Getattr(Name('self'), 'itervalues'), [], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('g', 'OP_ASSIGN')], CallFunc(Getattr(Name('generator'), 'BytesGenerator'), [Name('fp'), Keyword('mangle_from_', Name('False'))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--no-default-ignore'), Keyword('action', Const('store_false')), Keyword('dest', Const('use_default_ignore_patterns')), Keyword('default', Name('True')), Keyword('help', Const("Don't ignore the common glob-style patterns 'CVS', '.*', '*~' and '*.pyc'."))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('escape'), [Name('value')], None, None))]))
except InvalidOperation :
Module(None, Stmt([Function(None, 'set', ['self', 'key', 'value', 'timeout', 'version'], [Name('DEFAULT_TIMEOUT'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('BaseMemcachedCacheMethods', [Name('RenameMethodsBase')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'DSTOFFSET', 'OP_ASSIGN')], Getattr(Name('self'), 'STDOFFSET'))]))
Module(None, Stmt([AugAssign(Subscript(Name('counters'), 'OP_APPLY', [Name('i')]), '+=', Name('chunk_length'))]))
Module(None, Stmt([Raise(CallFunc(Name('ImproperlyConfigured'), [Mod((Const("Error importing template source loader %s - can't pass arguments to function-based loader."), Name('loader')))], None, None), None, None)]))
Module(None, Stmt([From('django.utils.formats', [('get_format', None)], 0)]))
Module(None, Stmt([Function(None, 'set', ['self', 'key', 'value', 'timeout', 'version'], [Name('DEFAULT_TIMEOUT'), Name('None')], 0, None, Stmt([Pass()]))]))
@ property
Module(None, Stmt([Function(None, '__init__', ['self', 'attrs', 'choices'], [Name('None'), Tuple(())], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('self'))]))
elif self . verbosity > 0 :
Module(None, Stmt([If([(Compare(Name('i'), [('>', Getattr(Name('sys'), 'maxint'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Function(None, 'write_migration_files', ['self', 'changes'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('m'), 'group'), [Const(1)], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Subscript(Subscript(Getattr(Name('self'), 'dicts'), 'OP_APPLY', [UnarySub(Const(1))]), 'OP_APPLY', [Name('key')]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Mod((CallFunc(Name('ungettext'), [Const('Please submit %d or more forms.'), Const('Please submit %d or more forms.'), Getattr(Name('self'), 'min_num')], None, None), Getattr(Name('self'), 'min_num'))), Keyword('code', Const('too_few_forms'))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('now', 'OP_ASSIGN')], CallFunc(Getattr(Name('timezone'), 'now'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'flush'), [], None, None))]))
Module(None, Stmt([From('django.dispatch', [('receiver', None)], 0)]))
except KeyError :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Command'), Name('self')], None, None), 'add_arguments'), [Name('parser')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('resolve_variable() is deprecated. Use django.template.Variable(path).resolve(context) instead'), Name('RemovedInDjango20Warning'), Keyword('stacklevel', Const(2))], None, None))]))
Module(None, Stmt([AugAssign(Subscript(Name('attr_list'), 'OP_APPLY', [Const(3)]), '|=', Getattr(Name('termios'), 'ECHO'))]))
Module(None, Stmt([Assign([AssTuple([AssName('uclass', 'OP_ASSIGN'), AssName('lookup', 'OP_ASSIGN'), AssName('field', 'OP_ASSIGN'), AssName('unique_for', 'OP_ASSIGN')])], Name('date_check'))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_encoding'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
warnings . warn (  "Need {0} values to unpack in for loop; got {1}. "  "This will raise an exception in Django 2.0."  . format ( num_loopvars , len_item ) ,  RemovedInDjango20Warning )
Module(None, Stmt([Function(None, 'add_item', ['self', 'title', 'link', 'description', 'author_email', 'author_name', 'author_link', 'pubdate', 'comments', 'unique_id', 'unique_id_is_permalink', 'enclosure', 'categories', 'item_copyright', 'ttl', 'updateddate', 'kwargs'], [Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Tuple(()), Name('None'), Name('None'), Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('use_grouping', 'OP_ASSIGN')], Or([Name('use_grouping'), Name('force_grouping')]))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('cleaned_line'), 'endswith'), [Const(';')], None, None), Stmt([Pass()]))], None)]))
except ( ValueError , TypeError ) :
Module(None, Stmt([AugAssign(Name('field_desc'), '+=', CallFunc(Getattr(Const(', '), 'join'), [ListComp(Mod((Const('%s=%s'), Tuple([Name('k'), CallFunc(Name('strip_prefix'), [CallFunc(Name('repr'), [Name('v')], None, None)], None, None)]))), [ListCompFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('extra_params'), 'items'), [], None, None), [])])], None, None))]))
Module(None, Stmt([Assign([AssName('connection', 'OP_ASSIGN')], Subscript(Name('connections'), 'OP_APPLY', [Getattr(Name('self'), 'using')]))]))
Module(None, Stmt([Assign([AssName('filename', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'basename'), [Name('path')], None, None))]))
Module(None, Stmt([If([(Name('lang_code'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('validate_email', 'OP_ASSIGN')], CallFunc(Name('EmailValidator'), [], None, None))]))
Module(None, Stmt([Assign([AssName('max_width', 'OP_ASSIGN')], CallFunc(Name('int'), [CallFunc(Getattr(Getattr(Name('self'), 'max_width'), 'resolve'), [Name('context')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('tags', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('tags'), Name('None')], None, None))]))
Module(None, Stmt([Return(Name('s'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'close'), [], None, None))]))
Module(None, Stmt([Return(Subscript(Getattr(Getattr(Name('self'), 'management_form'), 'cleaned_data'), 'OP_APPLY', [Name('INITIAL_FORM_COUNT')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'alternatives'), 'append'), [Tuple([Name('content'), Name('mimetype')])], None, None))]))
Module(None, Stmt([Function(None, 'templatetag', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('p', 'OP_ASSIGN')], CallFunc(Name('Popen'), [Name('args'), Keyword('shell', Name('False')), Keyword('stdout', Name('PIPE')), Keyword('stderr', Name('PIPE')), Keyword('close_fds', Compare(Getattr(Name('os'), 'name'), [('!=', Const('nt'))])), Keyword('universal_newlines', Name('True'))], None, None))]))
Module(None, Stmt([Class('TemplateIfParser', [Name('IfParser')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('value_converters', 'OP_ASSIGN')], Dict([(Const('ext'), Const('ext_convert')), (Const('cfg'), Const('cfg_convert'))]))]))
Module(None, Stmt([Function(None, 'load_label', ['self', 'fixture_label'], [], 0, None, Stmt([Pass()]))]))
except Exception as e :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'prefix', 'OP_ASSIGN')], Name('prefix'))]))
Module(None, Stmt([Assign([AssName('CONTEXT_SEPARATOR', 'OP_ASSIGN')], Const('\x04'))]))
Module(None, Stmt([Assign([AssName('initial', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'widget'), 'decompress'), [Name('initial')], None, None))]))
Module(None, Stmt([Return(Name('default'))]))
Module(None, Stmt([Discard(CallFunc(Name('activate'), [Getattr(Name('self'), 'language')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'offset'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('p'), 'image'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('v', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('datetime'), 'datetime'), 'strptime'), [CallFunc(Name('force_str'), [Name('value')], None, None), Name('input_format')], None, None))]))
Module(None, Stmt([Function(None, 'end_serialization', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__nonzero__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('Error'), Name('self')], None, None), '__init__'), [Name('ERROR')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('linebreaks', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('linebreaks'), Getattr(Name('six'), 'text_type')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('getattr'), [Getattr(Name('self'), '_out'), Name('name')], None, None))]))
Module(None, Stmt([Function(None, 'L', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('self'), '_isdst'), [Name('dt')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'pk_field'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('queryset', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('objects'), 'using'), [Name('using')], None, None), 'order_by'), [Getattr(Getattr(Getattr(Name('model'), '_meta'), 'pk'), 'name')], None, None))]))
Module(None, Stmt([Assign([AssName('app_dir', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Getattr(Name('app_config'), 'path'), Const('fixtures')], None, None))]))
Module(None, Stmt([Assign([AssName('chunk', 'OP_ASSIGN')], CallFunc(Getattr(Name('stream'), 'read'), [Name('max_header_size')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Const("relative imports require the 'package' argument")], None, None), None, None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('zipfile'), 'ZipFile'), 'read'), [Name('self'), Subscript(CallFunc(Getattr(Name('self'), 'namelist'), [], None, None), 'OP_APPLY', [Const(0)])], None, None))]))
Module(None, Stmt([Assign([AssName('query_string', 'OP_ASSIGN')], CallFunc(Getattr(Name('query_string'), 'decode'), [], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'request', 'dict_', 'processors', 'current_app', 'use_l10n', 'use_tz'], [Name('None'), Name('None'), Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('migration', 'OP_ASSIGN')], CallFunc(Getattr(Name('loader'), 'get_migration'), [Name('app_label'), Name('migration_name')], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'chmod'), [Name('full_path'), Getattr(Name('self'), 'file_permissions_mode')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'name', 'value', 'base', 'sysid', 'pubid', 'notation_name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('used_column_names'), 'append'), [Name('att_name')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_info', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('translation'), '_info'), 'copy'), [], None, None))]))
Module(None, Stmt([Function(None, '_itervalues', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'decorator_from_middleware', ['middleware_class'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Name('cls')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [Mod((Const(' gettext(%r) '), Name('g')))], None, None))]))
Module(None, Stmt([Assign([AssName('match', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('_html_parser'), 'endendtag'), 'search'), [Name('rawdata'), Add((Name('i'), Const(1)))], None, None))]))
Module(None, Stmt([Raise(None, None, None)]))
try :
Module(None, Stmt([If([(Getattr(Name('self'), 'to_field_name'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('val'), [('==', List(()))]), Stmt([Pass()]))], None)]))
attrs = { 'id' : id_ } if id_ else { }
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], CallFunc(Name('middleware_method'), [Name('request'), Name('response')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'content_type_extra', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Return(Name('filelist'))]))
Module(None, Stmt([Assign([AssName('problem_fields', 'OP_ASSIGN')], ListComp(Name('field'), [ListCompFor(AssName('model', 'OP_ASSIGN'), CallFunc(Getattr(Name('apps'), 'get_models'), [], None, Name('kwargs')), [ListCompIf(Or([Compare(Name('app_configs'), [('is', Name('None'))]), Compare(Getattr(Getattr(Name('model'), '_meta'), 'app_config'), [('in', Name('app_configs'))])]))]), ListCompFor(AssName('field', 'OP_ASSIGN'), Getattr(Getattr(Name('model'), '_meta'), 'local_fields'), [ListCompIf(And([CallFunc(Name('isinstance'), [Name('field'), Getattr(Name('models'), 'BooleanField')], None, None), Not(CallFunc(Getattr(Name('field'), 'has_default'), [], None, None))]))])]))]))
Module(None, Stmt([Assign([AssName('limit_choices_to', 'OP_ASSIGN')], CallFunc(Name('limit_choices_to'), [], None, None))]))
try :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'dry_run', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('dry_run'), Name('False')], None, None))]))
return ( len ( self . queryset ) +  ( 1 if self . field . empty_label is not None else 0 ) )
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], List([CallFunc(Name('format_html'), [Const('<select{0}>'), CallFunc(Name('flatatt'), [Name('final_attrs')], None, None)], None, None)]))]))
Module(None, Stmt([If([(Name('can_fail'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'become_daemon', ['our_home_dir', 'out_log', 'err_log', 'umask'], [Const('.'), Name('None'), Name('None'), Const(18)], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('sys'), 'modules'), 'OP_ASSIGN', [Add((Name('__name__'), Const('.moves.urllib_robotparser')))]), Subscript(Getattr(Name('sys'), 'modules'), 'OP_ASSIGN', [Add((Name('__name__'), Const('.moves.urllib.robotparser')))])], CallFunc(Name('Module_six_moves_urllib_robotparser'), [Add((Name('__name__'), Const('.moves.urllib.robotparser')))], None, None))]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], Mod((Const('_%d'), Name('num_args'))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'skip_past'), [Const('endcomment')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'end_object'), [Name('obj')], None, None))]))
Module(None, Stmt([Assign([AssName('filesize_number_format', 'OP_ASSIGN')], Lambda(['value'], [], 0, CallFunc(Getattr(Name('formats'), 'number_format'), [CallFunc(Name('round'), [Name('value'), Const(1)], None, None), Const(1)], None, None)))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'saved_forms'), 'append'), [Name('form')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'keyOrder'), 'append'), [Name('key')], None, None))]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None)], 0)]))
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('line', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Name('lines')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'content', 'args', 'kwargs'], [Const('')], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('offset'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('unicode_value'), Getattr(Name('six'), 'text_type')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('field', 'OP_ASSIGN'), Name('unique_check'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'dictvalue', ['t'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('guessed_filename', 'OP_ASSIGN')], Or([CallFunc(Getattr(Name('params'), 'get'), [Const('filename')], None, None), Name('used_name')]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '__name', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], Tuple([Const('Media'), Const('MediaDefiningClass'), Const('Widget'), Const('TextInput'), Const('EmailInput'), Const('URLInput'), Const('NumberInput'), Const('PasswordInput'), Const('HiddenInput'), Const('MultipleHiddenInput'), Const('ClearableFileInput'), Const('FileInput'), Const('DateInput'), Const('DateTimeInput'), Const('TimeInput'), Const('Textarea'), Const('CheckboxInput'), Const('Select'), Const('NullBooleanSelect'), Const('SelectMultiple'), Const('RadioSelect'), Const('CheckboxSelectMultiple'), Const('MultiWidget'), Const('SplitDateTimeWidget'), Const('SplitHiddenDateTimeWidget')]))]))
Module(None, Stmt([Function(None, 'words', ['self', 'num', 'truncate', 'html'], [Name('None'), Name('False')], 0, None, Stmt([Pass()]))]))
except KeyError :
Module(None, Stmt([If([(Not(CallFunc(Name('check_for_language'), [Name('lang')], None, None)), Stmt([Pass()]))], None)]))
self . stdout . write ( '\n' . join ( sorted ( registry . tags_available ( ) ) ) )
Module(None, Stmt([Function(None, 'f', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('models'), 'Model'), 'save_base'), [Getattr(Name('self'), 'object'), Keyword('using', Name('using')), Keyword('raw', Name('True'))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'subject', 'OP_ASSIGN')], Name('subject'))]))
Module(None, Stmt([From('django.db', [('models', None)], 0)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Function(None, '_coerce', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('node'), Name('TextNode')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('wrapper', 'OP_ASSIGN')], CallFunc(Name('warn_about_renamed_method'), [Name('class_name')], Name('renamed_method'), None))]))
Module(None, Stmt([If([(Name('args'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('field_notes'), 'append'), [Const("Field renamed because it started with '_'.")], None, None))]))
Module(None, Stmt([Global(['_translations'])]))
Module(None, Stmt([Function(None, 'partition', ['predicate', 'values'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('tables'), 'append'), [CallFunc(Getattr(Getattr(Name('connection'), 'introspection'), 'table_name_converter'), [Getattr(Getattr(Name('model'), '_meta'), 'db_table')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('operations'), 'extend'), [Getattr(Name('smigration'), 'operations')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'file'), '__enter__'), [], None, None))]))
Module(None, Stmt([Import([('imp', None)])]))
Module(None, Stmt([If([(Compare(Name('num_loopvars'), [('!=', Name('len_item'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'can_write'), 'release'), [], None, None))]))
Module(None, Stmt([Class('BaseArchive', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('ContentNotRenderedError'), [Const('The response content must be rendered before it can be iterated over.')], None, None), None, None)]))
Module(None, Stmt([Function(None, 'make_naive', ['value', 'timezone'], [], 0, None, Stmt([Pass()]))]))
elif self . _meta . exclude and field in self . _meta . exclude :
Module(None, Stmt([From('django.utils.six.moves', [('cPickle', 'pickle')], 0)]))
Module(None, Stmt([Assign([AssName('_func_closure', 'OP_ASSIGN')], Const('__closure__'))]))
Module(None, Stmt([Assign([AssName('idx', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(Name('m'), 'groups'), [], None, None), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'first', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'expression'), [Name('bp')], None, None))]))
except IndexError :
Module(None, Stmt([Function(None, '__eq__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('  Applying %s...'), Name('migration'))), Keyword('ending', Const(''))], None, None))]))
@ property
Module(None, Stmt([For(AssName('path', 'OP_ASSIGN'), Name('paths'), Stmt([Pass()]), None)]))
except Exception as e :
Module(None, Stmt([Assign([AssName('func', 'OP_ASSIGN')], Name('TemplateLoader'))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Add((CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_HEADING'), [Mod((Const("Full migrations file '%s':"), Getattr(Name('writer'), 'filename')))], None, None), Const('\n')))], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('max_length')]), Keyword('code', Const('max_length')), Keyword('params', Name('params'))], None, None), None, None)]))
elif size < len ( self . buffer ) :
Module(None, Stmt([Return(Mod((Const('<%s: %r>'), Tuple([Getattr(Getattr(Name('self'), '__class__'), '__name__'), Getattr(Name('self'), 'var')]))))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(Name('self'), 'get_connection'), [Name('fail_silently')], None, None), 'send_messages'), [List([Name('self')])], None, None))]))
register_to . _registry = before_import_registry
Module(None, Stmt([If([(And([Not(Name('_cached_filenames')), Getattr(Name('settings'), 'USE_I18N')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('model_dependencies'), 'reverse'), [], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('kwargs'), 'items'), [], None, None), Stmt([Pass()]), None)]))
try :
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('x')], None, None), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'request', 'OP_ASSIGN')], Name('request'))]))
Module(None, Stmt([Function(None, 'readline', ['self', 'size'], [Name('None')], 0, None, Stmt([Pass()]))]))
except IndexError :
Module(None, Stmt([Function(None, '_samefile', ['src', 'dst'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('context_match', 'OP_ASSIGN')], CallFunc(Getattr(Name('context_re'), 'match'), [CallFunc(Getattr(Name('bmatch'), 'group'), [Const(1)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('allow_multiple_selected', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([Subscript(Subscript(Getattr(Name('self'), 'cookies'), 'OP_APPLY', [Name('key')]), 'OP_ASSIGN', [Const('path')])], Name('path'))]))
Module(None, Stmt([Assign([AssTuple([AssName('domain', 'OP_ASSIGN'), AssName('port', 'OP_ASSIGN')])], CallFunc(Name('split_domain_port'), [Name('host')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("Cannot find a migration matching '%s' from app '%s'. Is it in INSTALLED_APPS?"), Tuple([Name('migration_name'), Name('app_label')])))], None, None), None, None)]))
Module(None, Stmt([Class('Formatter', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__eq__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
@ register . filter ( is_safe = True )
Module(None, Stmt([From('django.template.base', [('ContextPopException', None), ('InvalidTemplateLibrary', None), ('TemplateDoesNotExist', None), ('TemplateEncodingError', None), ('TemplateSyntaxError', None), ('VariableDoesNotExist', None)], 0)]))
Module(None, Stmt([Assign([AssName('iteritems', 'OP_ASSIGN')], Name('_iteritems'))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of Storage must provide an accessed_time() method')], None, None), None, None)]))
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Const('formfield_callback must be a function or callable')], None, None), None, None)]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([If([(Or([Compare(Name('ch'), [('!=', Const('?'))]), Name('escaped')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('list')]), Keyword('code', Const('list'))], None, None), None, None)]))
Module(None, Stmt([From('django.test.utils', [('get_runner', None)], 0)]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Discard(CallFunc(Name('delattr'), [Getattr(Name('self'), '_wrapped'), Name('name')], None, None))]))
return '%s%s' % ( self . path , ( '?' + iri_to_uri ( self . META . get ( 'QUERY_STRING' , '' ) ) ) if self . META . get ( 'QUERY_STRING' , '' ) else '' )
try :
Module(None, Stmt([Function(None, 'lock', ['f', 'flags'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('resolver'), 'urlconf_module'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('filename', 'OP_ASSIGN')], Getattr(Name('file'), 'name'))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Assign([AssName('format', 'OP_ASSIGN')], CallFunc(Name('force_str'), [Or([Name('default'), Subscript(CallFunc(Name('get_format'), [Const('DATE_INPUT_FORMATS')], None, None), 'OP_APPLY', [Const(0)])])], None, None))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('context'), 'push'), [], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, 'initial_form_count', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('package_name', 'OP_ASSIGN')], Getattr(Name('package'), '__name__'))]))
Module(None, Stmt([Assign([AssName('namespaces', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssName('filters', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'pop'), [Const('filters'), Name('None')], None, None))]))
Module(None, Stmt([Function(None, 'check_1_7_compatibility', ['kwargs'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('data'), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('scheme', 'OP_ASSIGN')], CallFunc(Getattr(Subscript(CallFunc(Getattr(Name('template'), 'split'), [Const(':'), Const(1)], None, None), 'OP_APPLY', [Const(0)]), 'lower'), [], None, None))]))
Module(None, Stmt([With(CallFunc(Name('open'), [Name('old_file_name'), Const('rb')], None, None), AssName('old_file', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('unicode_value', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('value'), Keyword('strings_only', Name('True'))], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('self'), Const('_post')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('header', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')])], Getattr(Name('settings'), 'SECURE_PROXY_SSL_HEADER'))]))
Module(None, Stmt([Function(None, 'check_1_6_compatibility', ['kwargs'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('timezone'), 'normalize'), [Name('value')], None, None))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Function(None, '_curried', ['moreargs', 'morekwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'data', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('UserModel', 'OP_ASSIGN')], CallFunc(Name('get_user_model'), [], None, None))]))
Module(None, Stmt([Assign([AssName('table2model', 'OP_ASSIGN')], Lambda(['table_name'], [], 0, CallFunc(Getattr(Name('re'), 'sub'), [Const('[^a-zA-Z0-9]'), Const(''), CallFunc(Getattr(Name('table_name'), 'title'), [], None, None)], None, None)))]))
except Exception as e :
Module(None, Stmt([Return(CallFunc(Name('NodeList'), [GenExpr(GenExprInner(Name('node'), [GenExprFor(AssTuple([AssName('_', 'OP_ASSIGN'), AssName('nodelist', 'OP_ASSIGN')]), Getattr(Name('self'), 'conditions_nodelists'), []), GenExprFor(AssName('node', 'OP_ASSIGN'), Name('nodelist'), [])]))], None, None))]))
Module(None, Stmt([Function(None, 'tag', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('potfile', 'OP_ASSIGN'), Name('potfiles'), Stmt([Pass()]), None)]))
Module(None, Stmt([Import([('decimal', None)])]))
Module(None, Stmt([If([(Not(CallFunc(Name('isabs'), [Name('path')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Raise(CallFunc(Getattr(Name('self'), 'error'), [Name('token'), Const('Empty block tag')], None, None), None, None)]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
try :
Module(None, Stmt([Assign([AssName('field_value', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(CallFunc(Name('getInnerText'), [Name('k')], None, None), 'strip'), [], None, None), [ListCompFor(AssName('k', 'OP_ASSIGN'), Name('keys'), [])]))]))
Module(None, Stmt([Assign([AssName('status_code', 'OP_ASSIGN')], Const(410))]))
Module(None, Stmt([For(AssName('f', 'OP_ASSIGN'), Name('post_sql_fields'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'load_middleware', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('_meta', 'OP_ASSIGN')], CallFunc(Name('Options'), [Name('table')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('result'), 'parent', 'OP_ASSIGN')], Name('self'))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('shutdown_message', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('shutdown_message'), Const('')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('_translations'), 'OP_ASSIGN', [Name('language')])], CallFunc(Name('DjangoTranslation'), [Name('language')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('url'), 'endswith'), [Const('/')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Name('_cookie_encodes_correctly'), Name('_cookie_allows_colon_in_names')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_construct_form', ['self', 'i', 'kwargs'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([AugAssign(Name('num_sent'), '+=', Const(1))]))
Module(None, Stmt([Assign([AssName('excludes', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('exclude')], None, None))]))
Module(None, Stmt([Return(Mod((Const('<%s: level=%r, msg=%r, hint=%r, obj=%r, id=%r>'), Tuple([Getattr(Getattr(Name('self'), '__class__'), '__name__'), Getattr(Name('self'), 'level'), Getattr(Name('self'), 'msg'), Getattr(Name('self'), 'hint'), Getattr(Name('self'), 'obj'), Getattr(Name('self'), 'id')]))))]))
Module(None, Stmt([Return(Name('default'))]))
Module(None, Stmt([Return(Const("[Didn't have permission to include file]"))]))
Module(None, Stmt([If([(Compare(Name('defaults'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Not(Name('old_method')), Name('new_method')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('BaseCache'), '__init__'), [Name('self'), Name('params')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [CallFunc(Name('format_html'), [Const('<optgroup label="{0}">'), CallFunc(Name('force_text'), [Name('option_value')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Return(Name('output'))]))
Module(None, Stmt([For(AssName('digit', 'OP_ASSIGN'), CallFunc(Name('str'), [Name('number')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Subscript(Name('options'), 'OP_APPLY', [Const('plain')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('resolved_kwargs', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Name('k'), CallFunc(Getattr(Name('v'), 'resolve'), [Name('context')], None, None)]), [GenExprFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('self'), 'kwargs'), 'items'), [], None, None), [])]))], None, None))]))
Module(None, Stmt([Function(None, 'decompress', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('attachment'), 'add_header'), [Const('Content-Disposition'), Const('attachment'), Keyword('filename', Name('filename'))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('resolved_path'), 'append'), [Name('ns')], None, None))]))
try :
Module(None, Stmt([If([(Compare(Name('key'), [('in', Name('d'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('description', 'OP_ASSIGN')], Mod((Const("An instance of the '%s' class"), Getattr(Getattr(Name('receiver'), '__class__'), '__name__'))))]))
Module(None, Stmt([Assign([AssName('prefix', 'OP_ASSIGN')], Getattr(Name('settings'), 'STATIC_URL'))]))
Module(None, Stmt([Return(Name('initial_forms'))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'%s' received multiple values for keyword argument '%s'"), Tuple([Name('name'), Name('param')])))], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Name('value'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], Mod((Const('[%s] %s\n'), Tuple([CallFunc(Getattr(Name('self'), 'log_date_time_string'), [], None, None), Mod((Name('format'), Name('args')))]))))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Return(Name('plist'))]))
else :
Module(None, Stmt([Assign([AssName('lookup_view_s', 'OP_ASSIGN')], Name('lookup_view'))]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'get_available_name'), [Name('name')], None, None))]))
Module(None, Stmt([Import([('threading', None)])]))
Module(None, Stmt([Assign([AssName('r', 'OP_ASSIGN')], Add((Slice(Name('r'), 'OP_APPLY', None, UnarySub(Const(6))), Const('Z'))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Command'), Name('self')], None, None), 'add_arguments'), [Name('parser')], None, None))]))
Module(None, Stmt([From('__future__', [('absolute_import', None)], 0)]))
except KeyError :
Module(None, Stmt([If([(Compare(Name('len_values'), [('<', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('default_validators', 'OP_ASSIGN')], List([Getattr(Name('validators'), 'validate_email')]))]))
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('char', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Name('text')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('key'), [('not in', Name('default_settings'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'empty_value', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('empty_value'), List(())], None, None))]))
Module(None, Stmt([Assign([AssName('block_content', 'OP_ASSIGN')], CallFunc(Getattr(Slice(Name('token_string'), 'OP_APPLY', Const(2), UnarySub(Const(2))), 'strip'), [], None, None))]))
Module(None, Stmt([If([(Compare(Name('truncate_len'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
else :
else :
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Return(Name('sites'))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('request'), Const('session')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('pattern'), Const('_callback_str')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.forms.utils', [('flatatt', None), ('ErrorDict', None), ('ErrorList', None)], 0)]))
Module(None, Stmt([Assign([AssName('total_forms', 'OP_ASSIGN')], Getattr(Name('self'), 'max_num'))]))
Module(None, Stmt([If([(Compare(Name('language_code'), [('not in', Getattr(Name('self'), '_namespace_dict'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('i'), [('<', Power((Const(36), Name('factor'))))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('sent'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Getattr(Name('self'), 'field'), 'choice_cache'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Name('Node'), [Name('children'), Name('connector'), Name('negated')], None, None))]))
else :
Module(None, Stmt([Class('UTC', [Name('tzinfo')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Return(CallFunc(Name('EscapeText'), [Name('s')], None, None))]))
Module(None, Stmt([If([(Compare(Name('attr'), [('in', Name('obj_dict'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('year', 'OP_ASSIGN')], Add((Name('year'), Name('off'))))]))
Module(None, Stmt([Import([('copy', None)])]))
else :
Module(None, Stmt([Function(None, 'add_post_render_callback', ['self', 'callback'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('get_function_globals', 'OP_ASSIGN')], CallFunc(Getattr(Name('operator'), 'attrgetter'), [Name('_func_globals')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('e'), 'errno'), [('==', Getattr(Name('errno'), 'EEXIST'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([AugAssign(Subscript(Name('stats'), 'OP_APPLY', [Name('MISSES')]), '+=', Const(1))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('__str__', 'OP_ASSIGN')], Name('serialize'))]))
Module(None, Stmt([Return(Tuple([List([Name('first_item')]), Name('True')]))]))
Module(None, Stmt([Function(None, 'render', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('args'), Keyword('metavar', Const('app_label[.ModelName]')), Keyword('nargs', Const('*')), Keyword('help', Const('Restricts dumped data to the specified app_label or app_label.ModelName.'))], None, None))]))
Module(None, Stmt([Function(None, 'g', ['self'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Discard(Yield(CallFunc(Name('parse_boundary_stream'), [Name('sub_stream'), Const(1024)], None, None)))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Getattr(Name('self'), 'setlistdefault'), [Name('key')], None, None), 'extend'), [Name('value_list')], None, None))]))
Module(None, Stmt([Function(None, 'tag_function', ['self', 'func'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_changed_data'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const("This backend doesn't support absolute paths.")], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'upload_handlers', 'OP_ASSIGN')], CallFunc(Name('ImmutableList'), [Getattr(Name('self'), 'upload_handlers'), Keyword('warning', Const('You cannot alter upload handlers after the upload has been processed.'))], None, None))]))
try :
Module(None, Stmt([If([(Compare(Name('field'), [('not in', Getattr(Name('self'), 'fields'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Assign([AssName('truncate', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('truncate')], None, None))]))
Module(None, Stmt([If([(Compare(Name('content_length'), [('<', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('TemplateCommand', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'choice_value', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Subscript(Name('choice'), 'OP_APPLY', [Const(0)])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('tried_modules'), 'append'), [Name('taglib_module')], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('SortedDict'), Name('self')], None, None), 'pop'), [Name('k')], Name('args'), None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_archive'), 'close'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('g'), 'flatten'), [Name('self'), Keyword('unixfrom', Name('unixfrom'))], None, None))]))
Module(None, Stmt([Return(Compare(CallFunc(Name('len'), [Name('value')], None, None), [('==', CallFunc(Name('int'), [Name('arg')], None, None))]))]))
@ stringfilter
Module(None, Stmt([Assign([AssName('_translations', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssName('date_data', 'OP_ASSIGN')], Tuple([Getattr(Name('date'), 'year'), Getattr(Name('date'), 'month'), Getattr(Name('date'), 'day')]))]))
Module(None, Stmt([Return(Name('s'))]))
Module(None, Stmt([Return(CallFunc(Name('SafeBytes'), [Name('data')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('_trans'), 'templatize'), [Name('src'), Name('origin')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'command_stack', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'title', ['value'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssName('__M', 'OP_ASSIGN')], Const('(?P<mon>\\w{3})'))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Name('activate'), [Getattr(Name('self'), 'old_language')], None, None))]))
Module(None, Stmt([From('django.core.management.sql', [('sql_flush', None)], 0)]))
Module(None, Stmt([For(AssName('f', 'OP_ASSIGN'), Name('filters'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'clean', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid')]), Keyword('code', Const('invalid'))], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'm2m_data', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('shell', 'OP_ASSIGN')], CallFunc(Name('IPShell'), [Keyword('argv', List(()))], None, None))]))
Module(None, Stmt([If([(And([Not(CallFunc(Name('hasattr'), [Name('c'), Const('__call__')], None, None)), CallFunc(Name('hasattr'), [Name('types'), Const('ClassType')], None, None), Compare(CallFunc(Name('type'), [Name('c')], None, None), [('!=', Getattr(Name('types'), 'ClassType'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('Media', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'startDocument'), [], None, None))]))
Module(None, Stmt([Function(None, 'render', ['self', 'name', 'value', 'attrs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('time', None)])]))
Module(None, Stmt([Assign([AssName('other_dict', 'OP_ASSIGN')], Subscript(Name('args'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Assign([AssName('daemonize', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Return(Add((CallFunc(Getattr(Name('self'), 'save_existing_objects'), [Name('commit')], None, None), CallFunc(Getattr(Name('self'), 'save_new_objects'), [Name('commit')], None, None))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--no-wrap'), Keyword('action', Const('store_true')), Keyword('dest', Const('no_wrap')), Keyword('default', Name('False')), Keyword('help', Const("Don't break long message lines into several lines."))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('ContentFile'), Name('self')], None, None), '__init__'), [CallFunc(Name('stream_class'), [Name('content')], None, None), Keyword('name', Name('name'))], None, None))]))
except KeyError :
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('obj'), Getattr(Name('datetime'), 'datetime')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Add((Name('name'), Const('_id'))))]))
Module(None, Stmt([Function(None, 'as_table', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('new_ip', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('f'), 'save_form_data'), [Name('instance'), Subscript(Name('cleaned_data'), 'OP_APPLY', [Getattr(Name('f'), 'name')])], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'min_value'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('Widget', [CallFunc(Getattr(Name('six'), 'with_metaclass'), [Name('MediaDefiningClass')], None, None)], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('TYPE', 'OP_ASSIGN')], Name('FILE'))]))
Module(None, Stmt([Class('BaseConfigurator', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Name('extend'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('response'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('s'))]))
Module(None, Stmt([Assign([AssName('use_grouping', 'OP_ASSIGN')], And([Getattr(Name('settings'), 'USE_L10N'), Getattr(Name('settings'), 'USE_THOUSAND_SEPARATOR')]))]))
Module(None, Stmt([Subscript(Getattr(Name('self'), '_expire_info'), 'OP_DELETE', [Name('key')])]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], Subscript(Name('args'), 'OP_APPLY', [Const(1)]))]))
Module(None, Stmt([For(AssName('table_name', 'OP_ASSIGN'), CallFunc(Getattr(Getattr(Name('connection'), 'introspection'), 'table_names'), [Name('cursor')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('content_length', 'OP_ASSIGN')], CallFunc(Name('int'), [CallFunc(Getattr(Name('META'), 'get'), [Const('HTTP_CONTENT_LENGTH'), CallFunc(Getattr(Name('META'), 'get'), [Const('CONTENT_LENGTH'), Const(0)], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('data'), 'OP_ASSIGN', [Getattr(Name('f'), 'name')])], CallFunc(Getattr(Name('f'), 'value_from_object'), [Name('instance')], None, None))]))
except SkipFile :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('title'), Subscript(Name('item'), 'OP_APPLY', [Const('title')])], None, None))]))
Module(None, Stmt([If([(Compare(Name('input_val'), [('in', Name('special_floats'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__setattr__', ['self', 'name', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Const("'regroup' tag takes five arguments")], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('next_item', 'OP_ASSIGN')], Subscript(Name('list_'), 'OP_APPLY', [Add((Name('i'), Const(1)))]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('object_data'), 'update'), [Name('initial')], None, None))]))
Module(None, Stmt([If([(Name('target_app_labels_only'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'endElement'), [Const('author')], None, None))]))
Module(None, Stmt([Function(None, 'patch_vary_headers', ['response', 'newheaders'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'process', ['self', 'command', 'domain'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None)], 0)]))
Module(None, Stmt([From('django.db.migrations.executor', [('MigrationExecutor', None)], 0)]))
Module(None, Stmt([Assign([AssName('style', 'OP_ASSIGN')], CallFunc(Name('color_style'), [], None, None))]))
Module(None, Stmt([If([(Not(Name('filename')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('fname', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_key_to_file'), [Name('key'), Name('version')], None, None))]))
Module(None, Stmt([Assign([AssName('priority', 'OP_ASSIGN')], Const(1.0))]))
Module(None, Stmt([If([(Compare(Subscript(Name('item'), 'OP_APPLY', [Const('description')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
@ register . tag
elif self . verbosity > 0 :
Module(None, Stmt([Function(None, '_assert_mutable', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('do_ntranslate'), [Name('singular'), Name('plural'), Name('number'), Const('ngettext')], None, None))]))
Module(None, Stmt([Assign([AssName('app_configs', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'pubid', 'OP_ASSIGN')], Name('pubid'))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('tzinfo'), '__init__'), [Name('self')], None, None))]))
Module(None, Stmt([Function(None, 'inner_run', ['self', 'args', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('match', 'OP_ASSIGN'), CallFunc(Getattr(Subscript(Name('regexes'), 'OP_APPLY', [Name('state')]), 'finditer'), [Name('text'), Name('start')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'pop', ['self', 'idx'], [UnarySub(Const(1))], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssTuple([AssName('lineno', 'OP_ASSIGN'), AssName('line', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [CallFunc(Getattr(Name('content'), 'splitlines'), [Name('True')], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('host'))]))
Module(None, Stmt([Function(None, 'setlistdefault', ['self', 'key', 'default_list'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('domains', 'OP_ASSIGN')], Tuple([Const('djangojs'), Const('django')]))]))
Module(None, Stmt([Assign([AssName('stamp', 'OP_ASSIGN')], CallFunc(Getattr(Name('time'), 'mktime'), [Name('tt')], None, None))]))
Module(None, Stmt([For(AssName('d', 'OP_ASSIGN'), Getattr(Name('self'), 'dicts'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('timestamp', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Getattr(Name('datetime'), 'datetime'), 'now'), [], None, None), 'strftime'), [Const('%Y%m%d-%H%M%S')], None, None))]))
Module(None, Stmt([Assign([AssName('related', 'OP_ASSIGN')], CallFunc(Getattr(Name('related'), 'natural_key'), [], None, None))]))
Module(None, Stmt([If([(Compare(Name('second_item'), [('==', List(()))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Getattr(Name('self'), 'using')]), 'close'), [], None, None))]))
try :
Module(None, Stmt([For(AssName('processor', 'OP_ASSIGN'), Add((CallFunc(Name('get_standard_processors'), [], None, None), Name('processors'))), Stmt([Pass()]), None)]))
Module(None, Stmt([AugAssign(Subscript(Name('attrs'), 'OP_APPLY', [Const('class')]), '+=', Add((Const(' '), Getattr(Getattr(Name('self'), 'form'), 'required_css_class'))))]))
elif self . _delegate_text :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('ComboField'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([AugAssign(Subscript(Name('stats'), 'OP_APPLY', [Name('MISSES')]), '+=', Const(1))]))
Module(None, Stmt([Assign([Subscript(Name('loop_dict'), 'OP_ASSIGN', [Const('counter0')])], Name('i'))]))
Module(None, Stmt([Class('CheckMessage', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__add__', ['self', 'rhs'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'symlinks', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('symlinks')], None, None))]))
Module(None, Stmt([Return(Name('val'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('\n'), 'join'), [Name('output')], None, None))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Assign([AssName('plat', 'OP_ASSIGN')], Getattr(Name('sys'), 'platform'))]))
else :
Module(None, Stmt([Assign([AssName('byte2int', 'OP_ASSIGN')], CallFunc(Getattr(Name('operator'), 'itemgetter'), [Const(0)], None, None))]))
Module(None, Stmt([Assign([AssName('test_runner', 'OP_ASSIGN')], CallFunc(Name('TestRunner'), [], None, Name('options')))]))
Module(None, Stmt([Class('Template', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('value'), 'upper'), [], None, None))]))
Module(None, Stmt([Assign([AssName('token', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'next_token'), [], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('refto', 'OP_ASSIGN'), AssName('refs', 'OP_ASSIGN')]), CallFunc(Getattr(Name('references'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('mw_instance'), Const('process_view')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('RemovedInDjango20Warning', [Name('PendingDeprecationWarning')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('result'), 'parent', 'OP_ASSIGN')], Name('self'))]))
Module(None, Stmt([Assign([Subscript(Name('directory_created'), 'OP_ASSIGN', [Name('app_label')])], Name('True'))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'filters'), 'OP_ASSIGN', [Name('name')])], Name('filter_func'))]))
Module(None, Stmt([Assign([AssName('host', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'META'), 'OP_APPLY', [Const('HTTP_X_FORWARDED_HOST')]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'cdata_tag', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Function(None, 'total_ordering', ['cls'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'waiting_readers', 'OP_ASSIGN')], Const(0))]))
try :
Module(None, Stmt([Function(None, 'bound_func', ['args2', 'kwargs2'], [], 12, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([Subscript(Name('definition'), 'OP_ASSIGN', [Const('bg')])], Subscript(Name('colors'), 'OP_APPLY', [UnarySub(Const(1))]))]))
Module(None, Stmt([Assign([AssName('id_', 'OP_ASSIGN')], CallFunc(Getattr(Name('final_attrs'), 'get'), [Const('id'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssName('result_args', 'OP_ASSIGN')], List([List(())]))]))
Module(None, Stmt([Assign([AssName('best_doublecolon_len', 'OP_ASSIGN')], Name('doublecolon_len'))]))
Module(None, Stmt([For(AssName('app_name', 'OP_ASSIGN'), Name('app_names'), Stmt([Pass()]), None)]))
Module(None, Stmt([Class('RawPostDataException', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'available_attrs', ['fn'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('ChoiceField'), Name('self')], None, None), '__init__'), [Keyword('required', Name('required')), Keyword('widget', Name('widget')), Keyword('label', Name('label')), Keyword('initial', Name('initial')), Keyword('help_text', Name('help_text'))], Name('args'), Name('kwargs')))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('stream_or_string'), Getattr(Name('six'), 'string_types')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('checks', 'OP_ASSIGN')], ListComp(Name('check'), [ListCompFor(AssName('check', 'OP_ASSIGN'), Getattr(Name('self'), 'registered_checks'), [ListCompIf(And([CallFunc(Name('hasattr'), [Name('check'), Const('tags')], None, None), Bitand([CallFunc(Name('set'), [Getattr(Name('check'), 'tags')], None, None), CallFunc(Name('set'), [Name('tags')], None, None)])]))])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'command_stack'), 'append'), [Tuple([Name('command'), Getattr(Name('token'), 'source')])], None, None))]))
except KeyError :
Module(None, Stmt([From('django.utils.six.moves.urllib.parse', [('urljoin', None)], 0)]))
Module(None, Stmt([If([(Getattr(Getattr(Name('field'), 'widget'), 'needs_multipart_form'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('getattr'), [Name('self'), Const('_client'), Name('None')], None, None), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'queryset', 'OP_ASSIGN')], Getattr(Name('field'), 'queryset'))]))
Module(None, Stmt([If([(Compare(Name('code'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'render', ['self', 'name', 'value', 'attrs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('handler', 'OP_ASSIGN'), Getattr(Name('self'), '_upload_handlers'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('cache_key', 'OP_ASSIGN')], CallFunc(Name('_generate_cache_header_key'), [Name('key_prefix'), Name('request')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('environ'), 'get'), [CallFunc(Name('str'), [Name('key')], None, None), CallFunc(Name('str'), [Name('default')], None, None)], None, None))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('cls'), '__dispatch'), 'OP_ASSIGN', [Name('resultclass')])], Dict(()))]))
Module(None, Stmt([While(Name('True'), Stmt([Pass()]), None)]))
@ register . tag
Module(None, Stmt([Assign([AssAttr(Name('self'), 'second', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('choices'), 'insert'), [Const(0), Name('none_value')], None, None))]))
Module(None, Stmt([From('pprint', [('pformat', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'add_error'), [Name('name'), Name('e')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('usage'), 'append'), [CallFunc(Getattr(Name('style'), 'NOTICE'), [Mod((Const('[%s]'), Name('app')))], None, None)], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Getattr(Name('self'), 'message'), Keyword('code', Getattr(Name('self'), 'code'))], None, None), None, None)]))
Module(None, Stmt([Class('Serializer', [Name('PythonSerializer')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('data'))]))
Module(None, Stmt([Assign([AssName('initial_value', 'OP_ASSIGN')], CallFunc(Getattr(Name('field'), 'to_python'), [CallFunc(Getattr(Name('hidden_widget'), 'value_from_datadict'), [Getattr(Name('self'), 'data'), Getattr(Name('self'), 'files'), Name('initial_prefixed_name')], None, None)], None, None))]))
Module(None, Stmt([From('django.utils.datastructures', [('MultiValueDict', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("App '%s' does not have migrations (so squashmigrations on it makes no sense)"), Name('app_label')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('val', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('Header'), [Name('val'), Name('encoding')], None, None), 'encode'), [], None, None))]))
Module(None, Stmt([From('django.utils.six.moves', [('map', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Getattr(Const(' '), 'join'), [Name('words')], None, None))]))
Module(None, Stmt([Assign([AssName('id_', 'OP_ASSIGN')], Or([CallFunc(Getattr(Getattr(Name('widget'), 'attrs'), 'get'), [Const('id')], None, None), Getattr(Name('self'), 'auto_id')]))]))
Module(None, Stmt([Assign([AssName('LOCK_SH', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Class('SortedDict', [Name('dict')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Class('MultiValueDict', [Name('dict')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__get__', ['self', 'instance', 'type'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('callback', 'OP_ASSIGN')], Lambda(['response'], [], 0, CallFunc(Getattr(Name('middleware'), 'process_response'), [Name('request'), Name('response')], None, None)))]))
Module(None, Stmt([Assign([AssName('lbp', 'OP_ASSIGN')], Const(0))]))
try :
Module(None, Stmt([If([(Compare(Name('arg'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Const('  Creating tables...\n')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('SerializerDoesNotExist'), [Name('format')], None, None), None, None)]))
Module(None, Stmt([Function(None, '_has_changed', ['self', 'initial', 'data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('field_desc'), 'endswith'), [Const('(')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('default_error_messages', 'OP_ASSIGN')], Dict([(Const('invalid'), CallFunc(Name('_'), [Const('Enter a list of values.')], None, None)), (Const('incomplete'), CallFunc(Name('_'), [Const('Enter a complete value.')], None, None))]))]))
Module(None, Stmt([From('django.utils.dates', [('MONTHS', None), ('MONTHS_3', None), ('MONTHS_ALT', None), ('MONTHS_AP', None), ('WEEKDAYS', None), ('WEEKDAYS_ABBR', None)], 0)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'connection_reset'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core.files.utils', [('FileProxyMixin', None)], 0)]))
Module(None, Stmt([Assign([AssName('retval', 'OP_ASSIGN')], Name('self'))]))
Module(None, Stmt([If([(Compare(Const('__str__'), [('not in', Getattr(Name('klass'), '__dict__'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Function(None, 'decr', ['self', 'key', 'delta', 'version'], [Const(1), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'load_template_source', ['self', 'template_name', 'template_dirs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('statements', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('connection'), 'ops'), 'sql_flush'), [Name('style'), Name('tables'), Name('seqs'), Name('allow_cascade')], None, None))]))
except AttributeError :
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Assign([AssName('register', 'OP_ASSIGN')], CallFunc(Name('Library'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('BaseInlineFormSet'), Name('self')], None, None), 'get_unique_error_message'), [Name('unique_check')], None, None))]))
Module(None, Stmt([AugAssign(Name('forms_valid'), '&=', CallFunc(Getattr(Name('form'), 'is_valid'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('category'), Const(''), Dict([(Const('term'), Name('cat'))])], None, None))]))
Module(None, Stmt([Assign([AssName('month_field', 'OP_ASSIGN')], Const('%s_month'))]))
Module(None, Stmt([From('django.utils.module_loading', [('import_string', None)], 0)]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Assign([AssAttr(Name('e'), 'django_template_source', 'OP_ASSIGN')], Getattr(Name('node'), 'source'))]))
Module(None, Stmt([Assign([AssName('qs', 'OP_ASSIGN')], CallFunc(Getattr(Name('queryset'), 'none'), [], None, None))]))
class CacheEntry ( object ) :
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('timezone'), Const('normalize')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('sites', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '_regex_dict'), 'OP_ASSIGN', [Name('language_code')])], Name('compiled_regex'))]))
Module(None, Stmt([Function(None, 'apply_response_fixes', ['self', 'request', 'response'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_wrapped', 'OP_ASSIGN')], CallFunc(CallFunc(Name('get_storage_class'), [], None, None), [], None, None))]))
Module(None, Stmt([Assign([AssName('style', 'OP_ASSIGN')], CallFunc(Name('no_style'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('msg'), 'attach'), [CallFunc(Getattr(Name('self'), '_create_mime_attachment'), [], Name('alternative'), None)], None, None))]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], List([Const('SelectDateWidget')]))]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'choice_input_class'), [Getattr(Name('self'), 'name'), Getattr(Name('self'), 'value'), CallFunc(Getattr(Getattr(Name('self'), 'attrs'), 'copy'), [], None, None), Name('choice'), Name('idx')], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('key', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')]), CallFunc(Getattr(Name('other_dict'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('tried'), 'append'), [List([Name('pattern')])], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('Subclasses must implement this method.')], None, None), None, None)]))
Module(None, Stmt([Function(None, 'list', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('tag_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Mod((Const('(%s.*?%s|%s.*?%s|%s.*?%s)'), Tuple([CallFunc(Getattr(Name('re'), 'escape'), [Name('BLOCK_TAG_START')], None, None), CallFunc(Getattr(Name('re'), 'escape'), [Name('BLOCK_TAG_END')], None, None), CallFunc(Getattr(Name('re'), 'escape'), [Name('VARIABLE_TAG_START')], None, None), CallFunc(Getattr(Name('re'), 'escape'), [Name('VARIABLE_TAG_END')], None, None), CallFunc(Getattr(Name('re'), 'escape'), [Name('COMMENT_TAG_START')], None, None), CallFunc(Getattr(Name('re'), 'escape'), [Name('COMMENT_TAG_END')], None, None)])))], None, None))]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'wordcount', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'get_cache', ['backend', 'kwargs'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('COMMENT_TAG_END', 'OP_ASSIGN')], Const('#}'))]))
@ register ( Tags . models )
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('normalize_newlines'), [Name('value')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'clean'), [], None, None))]))
Module(None, Stmt([Function(None, '_parse_header', ['line'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Compare(Name('exp'), [('is not', Name('None'))]), Compare(Name('exp'), [('<', CallFunc(Getattr(Name('time'), 'time'), [], None, None))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_checkLevel', ['level'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('singular'), 'append'), [Mod((Const('%%(%s)s'), Getattr(Name('t'), 'contents')))], None, None))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('field_notes'), 'append'), [Const('This field type is a guess.')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'simplefilter'), [Const('default'), Name('RemovedInNextVersionWarning')], None, None))]))
Module(None, Stmt([AssName('attr', 'OP_DELETE')]))
Module(None, Stmt([Function(None, 'set_many', ['self', 'data', 'timeout', 'version'], [Name('DEFAULT_TIMEOUT'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('palette', 'OP_ASSIGN')], CallFunc(Getattr(Subscript(Name('PALETTES'), 'OP_APPLY', [Name('NOCOLOR_PALETTE')]), 'copy'), [], None, None))]))
Module(None, Stmt([Return(Name('message'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const(''), 'join'), [Name('words')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'style', 'OP_ASSIGN')], CallFunc(Name('no_style'), [], None, None))]))
Module(None, Stmt([From('django.utils.datastructures', [('MultiValueDict', None)], 0)]))
Module(None, Stmt([If([(Or([Name('self_closing'), Compare(Name('tagname'), [('in', Name('html4_singlets'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'USE_TZ'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Getattr(Name('self'), 'error'), [Name('token'), Const('Empty variable tag')], None, None), None, None)]))
Module(None, Stmt([If([(And([Getattr(Name('settings'), 'USE_ETAGS'), Not(CallFunc(Getattr(Name('response'), 'has_header'), [Const('ETag')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Global(['_supported'])]))
migration . ancestry = loader . graph . forwards_plan ( ( app_label , migration_name ) )
try :
Module(None, Stmt([Function(None, '__init__', ['self', 'data', 'files', 'auto_id', 'prefix', 'initial', 'error_class', 'label_suffix', 'empty_permitted'], [Name('None'), Name('None'), Const('id_%s'), Name('None'), Name('None'), Name('ErrorList'), Name('None'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('min_num'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(ListComp(Subscript(Getattr(Name('self'), 'forms'), 'OP_APPLY', [Name('i')]), [ListCompFor(AssName('i', 'OP_ASSIGN'), Getattr(Name('self'), '_deleted_form_indexes'), [])]))]))
Module(None, Stmt([If([(Name('match'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('obj'), Const('_meta')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'dirpath', 'file_name', 'locale_dir'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('urlconf'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('BlockNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('unpacked_vars', 'OP_ASSIGN')], CallFunc(Name('dict'), [CallFunc(Name('zip'), [Getattr(Name('self'), 'loopvars'), Name('item')], None, None)], None, None))]))
except Exception :
Module(None, Stmt([From('django.template.smartif', [('IfParser', None), ('Literal', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('%r is not a valid %s name. Please %s.'), Tuple([Name('name'), Name('app_or_project'), Name('message')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('RUN_RELOADER', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('content', 'OP_ASSIGN')], CallFunc(Name('force_bytes'), [Name('content')], None, None))]))
Module(None, Stmt([Assign([AssName('state', 'OP_ASSIGN')], Getattr(Name('self'), 'state'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_handler_class', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([If([(And([CallFunc(Name('hasattr'), [Name('rel_model'), Const('natural_key')], None, None), Compare(Name('rel_model'), [('!=', Name('model'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'verbatim', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('sys'), 'modules'), 'OP_ASSIGN', [Add((Name('__name__'), Const('.moves.urllib_request')))]), Subscript(Getattr(Name('sys'), 'modules'), 'OP_ASSIGN', [Add((Name('__name__'), Const('.moves.urllib.request')))])], CallFunc(Name('Module_six_moves_urllib_request'), [Add((Name('__name__'), Const('.moves.urllib.request')))], None, None))]))
if os . path . isdir ( entry ) :
Module(None, Stmt([Return(CallFunc(Name('isinstance'), [Name('obj'), Name('_PROTECTED_TYPES')], None, None))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'use_natural_foreign_keys'), CallFunc(Name('hasattr'), [Getattr(Getattr(Name('field'), 'rel'), 'to'), Const('natural_key')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('plan_node'), [('in', Getattr(Name('loader'), 'applied_migrations'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('BM_compatible', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('new_ip'), 'append'), [Const('0000')], None, None))]))
Module(None, Stmt([AugAssign(Name('options'), '+=', ListComp(Tuple([Getattr(Name('app_config'), 'label'), Const(0)]), [ListCompFor(AssName('app_config', 'OP_ASSIGN'), Name('app_configs'), [])]))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'use_argparse')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([CallFunc(Name('hasattr'), [Getattr(Name('self'), 'file'), Const('tell')], None, None), CallFunc(Name('hasattr'), [Getattr(Name('self'), 'file'), Const('seek')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'request'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('format', 'OP_ASSIGN')], CallFunc(Name('force_str'), [Or([Name('default'), Subscript(CallFunc(Name('get_format'), [Const('DATETIME_INPUT_FORMATS')], None, None), 'OP_APPLY', [Const(0)])])], None, None))]))
Module(None, Stmt([Function(None, '_delete', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'handle', ['self', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([From('IPython', [('start_ipython', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('errors'), 'append'), [Subscript(Getattr(Name('field'), 'error_messages'), 'OP_APPLY', [Const('incomplete')])], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'target_var', 'OP_ASSIGN')], Name('target_var'))]))
else :
Module(None, Stmt([Return(Mod((Const('%s %s %s'), Tuple([CallFunc(Getattr(CallFunc(Name('_'), [Const(', ')], None, None), 'join'), [GenExpr(GenExprInner(CallFunc(Name('force_text'), [Name('i')], None, None), [GenExprFor(AssName('i', 'OP_ASSIGN'), Slice(Name('list_'), 'OP_APPLY', None, UnarySub(Const(1))), [])]))], None, None), CallFunc(Name('force_text'), [Name('last_word')], None, None), CallFunc(Name('force_text'), [Subscript(Name('list_'), 'OP_APPLY', [UnarySub(Const(1))])], None, None)]))))]))
Module(None, Stmt([Function(None, 'path', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('IfNode'), [Name('conditions_nodelists')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('any'), [GenExpr(GenExprInner(Compare(CallFunc(Name('len'), [Name('x')], None, None), [('<', Const(4))]), [GenExprFor(AssName('x', 'OP_ASSIGN'), CallFunc(Getattr(Name('ip_str'), 'split'), [Const(':')], None, None), [])]))], None, None), Stmt([Pass()]))], None)]))
except ValueError :
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Assign([AssName('choice_input_class', 'OP_ASSIGN')], Name('None'))]))
else :
Module(None, Stmt([If([(And([Getattr(Getattr(Name('self'), 'field'), 'required'), CallFunc(Name('hasattr'), [Getattr(Name('self'), 'form'), Const('required_css_class')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('smart_text'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'deactivate', 'OP_ASSIGN')], Name('deactivate'))]))
Module(None, Stmt([Function(None, 'make_bytes', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('__bytes__', 'OP_ASSIGN')], CallFunc(Name('new_method_proxy'), [Name('bytes')], None, None))]))
Module(None, Stmt([Assign([AssName('simple_url_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^https?://\\[?\\w'), Getattr(Name('re'), 'IGNORECASE')], None, None))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('delta', 'OP_ASSIGN')], Sub((Const(2000), Name('year'))))]))
Module(None, Stmt([Assign([AssName('reason_phrase', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('newline', 'OP_ASSIGN')], CallFunc(Name('unicode'), [Const('\n')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_get_scheme'), [], None, None))]))
Module(None, Stmt([From('django.utils.html', [('conditional_escape', None), ('escapejs', None), ('escape', None), ('urlize', '_urlize'), ('linebreaks', None), ('strip_tags', None), ('avoid_wrapping', None), ('remove_tags', None)], 0)]))
Module(None, Stmt([Function(None, 'S', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('Archive', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('current_timezone', 'OP_ASSIGN')], CallFunc(Getattr(Name('timezone'), 'get_current_timezone'), [], None, None))]))
Module(None, Stmt([For(AssName('finder', 'OP_ASSIGN'), Getattr(Name('sys'), 'meta_path'), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([If([(Not(Name('dklen')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('errno', None)])]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('content_type'), 'startswith'), [Const('multipart/')], None, None)), Stmt([Pass()]))], None)]))
elif ':' not in middle and simple_email_re . match ( middle ) :
Module(None, Stmt([Assign([AssTuple([AssName('hour', 'OP_ASSIGN'), AssName('minute', 'OP_ASSIGN')])], CallFunc(Name('divmod'), [Name('timezone'), Const(60)], None, None))]))
@ total_ordering
Module(None, Stmt([Assign([AssName('EscapeString', 'OP_ASSIGN')], Name('EscapeText'))]))
Module(None, Stmt([Assign([AssName('field', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('field'), 'rel'), 'get_related_field'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_current', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([If([(Name('years'), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('app_config', 'OP_ASSIGN'), CallFunc(Getattr(Name('apps'), 'get_app_configs'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'removetags', ['value', 'tags'], [], 0, None, Stmt([Pass()]))]))
@ total_ordering
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_SUCCESS'), [Const(' OK')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], CallFunc(Name('ValidationError'), [Name('message')], None, None))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Assign([AssName('timeout', 'OP_ASSIGN')], UnarySub(Const(1)))]))
Module(None, Stmt([Function(None, '__eq__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('tables', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('connection'), 'introspection'), 'table_names'), [Name('cursor')], None, None))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'first')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([For(AssName('migration', 'OP_ASSIGN'), Name('migrations_to_squash'), Stmt([Pass()]), None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_create_attachments'), [Name('msg')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'stream', 'OP_ASSIGN')], Name('stream_or_string'))]))
Module(None, Stmt([Printnl([CallFunc(Getattr(Const(' '), 'join'), [CallFunc(Name('sorted'), [CallFunc(Name('filter'), [Lambda(['x'], [], 0, CallFunc(Getattr(Name('x'), 'startswith'), [Name('curr')], None, None)), Name('subcommands')], None, None)], None, None)], None, None)], None)]))
else :
Module(None, Stmt([Class('EscapeBytes', [Name('bytes'), Name('EscapeData')], None, Stmt([Pass()]), None)]))
except smtplib . SMTPException :
Module(None, Stmt([Import([('codecs', None)])]))
except OSError :
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'use_l10n', 'OP_ASSIGN')], Name('use_l10n'))]))
Module(None, Stmt([Assign([AssName('hour', 'OP_ASSIGN')], CallFunc(Name('int'), [CallFunc(Getattr(Name('m'), 'group'), [Const('hour')], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Name('key'), [('in', Name('d'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('primary_keys', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Class('InvalidCacheBackendError', [Name('ImproperlyConfigured')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Tuple([Getattr(Name('self'), '_post'), Getattr(Name('self'), '_files')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('link'), Subscript(Name('item'), 'OP_APPLY', [Const('link')])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--all'), Const('-a'), Keyword('action', Const('store_true')), Keyword('dest', Const('all')), Keyword('default', Name('False')), Keyword('help', Const('Updates the message files for all existing locales.'))], None, None))]))
Module(None, Stmt([For(AssName('loc', 'OP_ASSIGN'), Name('locales'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('constant_string', 'OP_ASSIGN')], CallFunc(Getattr(Name('constant_string'), 'replace'), [Const('\n'), Const('')], None, None))]))
Module(None, Stmt([If([(Compare(Name('doublecolon_len'), [('>', Name('best_doublecolon_len'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('timeout', 'OP_ASSIGN')], Getattr(Name('self'), 'default_timeout'))]))
Module(None, Stmt([Assign([AssName('week_number', 'OP_ASSIGN')], FloorDiv((Name('j'), Const(7))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--database'), Keyword('default', Name('DEFAULT_DB_ALIAS')), Keyword('help', Const('Nominates a database to print the SQL for. Defaults to the "default" database.'))], None, None))]))
Module(None, Stmt([Assign([AssName('NON_FIELD_ERRORS', 'OP_ASSIGN')], Const('__all__'))]))
Module(None, Stmt([Assign([AssName('errors', 'OP_ASSIGN')], Const('strict'))]))
Module(None, Stmt([Return(CallFunc(Name('bool'), [Getattr(Name('self'), 'children')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('_html_parser'), 'HTMLParser'), '__init__'), [Name('self')], None, None))]))
Module(None, Stmt([For(AssName('app_config', 'OP_ASSIGN'), CallFunc(Getattr(Name('apps'), 'get_app_configs'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'render_option', ['self', 'selected_choices', 'option_value', 'option_label'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(List(()))]))
Module(None, Stmt([Assign([AssAttr(Name('EventHandler'), 'modified_code', 'OP_ASSIGN')], Name('FILE_MODIFIED'))]))
Module(None, Stmt([Class('FileUploadHandler', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None)], 0)]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Assign([AssTuple([AssName('value', 'OP_ASSIGN'), AssName('sig', 'OP_ASSIGN')])], CallFunc(Getattr(Name('signed_value'), 'rsplit'), [Getattr(Name('self'), 'sep'), Const(1)], None, None))]))
Module(None, Stmt([AugAssign(Name('level'), '+=', Const(1))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([For(AssName('func', 'OP_ASSIGN'), Getattr(Name('self'), 'response_fixes'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Subscript(Name('subject'), 'OP_APPLY', [Name('i')]), [('in', Tuple([Const('"'), Const("'")]))]), Stmt([Pass()]))], None)]))
elif self . name and os . path . exists ( self . name ) :
Module(None, Stmt([Assign([AssAttr(Name('obj'), 'pk', 'OP_ASSIGN')], Getattr(CallFunc(Getattr(CallFunc(Getattr(Getattr(Name('Model'), '_default_manager'), 'db_manager'), [Name('db')], None, None), 'get_by_natural_key'), [], Name('natural_key'), None), 'pk'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('enclosure'), Const(''), Dict([(Const('url'), Getattr(Subscript(Name('item'), 'OP_APPLY', [Const('enclosure')]), 'url')), (Const('length'), Getattr(Subscript(Name('item'), 'OP_APPLY', [Const('enclosure')]), 'length')), (Const('type'), Getattr(Subscript(Name('item'), 'OP_APPLY', [Const('enclosure')]), 'mime_type'))])], None, None))]))
Module(None, Stmt([Assign([AssName('origin', 'OP_ASSIGN')], CallFunc(Name('make_origin'), [Name('display_name'), Getattr(Name('self'), 'load_template_source'), Name('template_name'), Name('template_dirs')], None, None))]))
Module(None, Stmt([Assign([AssName('sep', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('sep'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_client', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), '_lib'), 'Client'), [Getattr(Name('self'), '_servers'), Keyword('pickleProtocol', Getattr(Name('pickle'), 'HIGHEST_PROTOCOL'))], None, None))]))
Module(None, Stmt([Assign([AssName('rawdata', 'OP_ASSIGN')], Getattr(Name('self'), 'rawdata'))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Function(None, '_check_middleware_classes', ['app_configs', 'kwargs'], [Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'get_system_encoding', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('os'), 'name'), [('==', Const('nt'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('The %s file has a BOM (Byte Order Mark). Django only supports .po files encoded in UTF-8 and without any BOM.'), Name('po_path')))], None, None), None, None)]))
Module(None, Stmt([If([(Name('value'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('model'), Const('natural_key')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'nodelist', 'parent_name', 'template_dirs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core.files', [('uploadhandler', None)], 0)]))
Module(None, Stmt([Return(Name('response'))]))
Module(None, Stmt([Function(None, 'deactivate', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Name('update_wrapper'), [Name('_dec'), Name('decorator'), Keyword('assigned', CallFunc(Name('available_attrs'), [Name('decorator')], None, None))], None, None))]))
Module(None, Stmt([Assign([AssName('fields', 'OP_ASSIGN')], Tuple([CallFunc(Getattr(Name('models'), 'CharField'), [Keyword('name', Const('cache_key')), Keyword('max_length', Const(255)), Keyword('unique', Name('True')), Keyword('primary_key', Name('True'))], None, None), CallFunc(Getattr(Name('models'), 'TextField'), [Keyword('name', Const('value'))], None, None), CallFunc(Getattr(Name('models'), 'DateTimeField'), [Keyword('name', Const('expires')), Keyword('db_index', Name('True'))], None, None)]))]))
raise self . exception
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_post', 'OP_ASSIGN')], CallFunc(Name('QueryDict'), [Const('')], None, None))]))
Module(None, Stmt([If([(Not(Compare(CallFunc(Name('len'), [Name('empty_label')], None, None), [('==', Const(3))])), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'vars', 'OP_ASSIGN')], Name('variables'))]))
Module(None, Stmt([Assign([AssName('tmp', 'OP_ASSIGN')], CallFunc(Getattr(Name('url'), 'rstrip'), [Const('/')], None, None))]))
Module(None, Stmt([From('django.core.management.sql', [('sql_indexes', None)], 0)]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'endElement'), [Const('channel')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('obj'), CallFunc(Getattr(Getattr(Name('self'), 'fk'), 'get_attname'), [], None, None), CallFunc(Name('getattr'), [Name('pk_value'), Const('pk'), Name('pk_value')], None, None)], None, None))]))
try :
Module(None, Stmt([Assign([AssName('newretval', 'OP_ASSIGN')], CallFunc(Name('post_callback'), [Name('retval')], None, None))]))
Module(None, Stmt([Function(None, 'non_form_errors', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('contents', 'OP_ASSIGN')], CallFunc(Name('format_html'), [Const('<label{0}>{1}</label>'), Name('attrs'), Name('contents')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'filter_expr'), 'resolve'), [Name('context')], None, None))]))
Module(None, Stmt([From('django.forms.forms', [('*', None)], 0)]))
Module(None, Stmt([If([(Or([Not(CallFunc(Getattr(Name('self'), 'is_valid'), [], None, None)), Not(Getattr(Name('self'), 'can_delete'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('self'), Const('_body')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('messages', [('CheckMessage', None), ('Debug', None), ('Info', None), ('Warning', None), ('Error', None), ('Critical', None), ('DEBUG', None), ('INFO', None), ('WARNING', None), ('ERROR', None), ('CRITICAL', None)], 1)]))
Module(None, Stmt([Return(CallFunc(Name('Signer'), [Add((Const('django.http.cookies'), Name('key'))), Keyword('salt', Name('salt'))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('StringOrigin'), Name('self')], None, None), '__init__'), [Name('UNKNOWN_SOURCE')], None, None))]))
Module(None, Stmt([Function(None, 'is_valid', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('months'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('parse_until', 'OP_ASSIGN')], List(()))]))
try :
Module(None, Stmt([Assign([AssName('year_field', 'OP_ASSIGN')], Const('%s_year'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'localize', 'OP_ASSIGN')], Name('localize'))]))
Module(None, Stmt([From('django.core.management', [('call_command', None)], 0)]))
Module(None, Stmt([Assign([AssName('widget_value', 'OP_ASSIGN')], Subscript(Name('value'), 'OP_APPLY', [Name('i')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--nothreading'), Keyword('action', Const('store_false')), Keyword('dest', Const('use_threading')), Keyword('default', Name('True')), Keyword('help', Const('Tells Django to NOT use threading.'))], None, None))]))
Module(None, Stmt([Function(None, '__contains__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('_cookie_encodes_correctly', 'OP_ASSIGN')], Compare(CallFunc(Getattr(CallFunc(Getattr(Name('http_cookies'), 'SimpleCookie'), [], None, None), 'value_encode'), [Const(';')], None, None), [('==', Tuple([Const(';'), Const('"\\073"')]))]))]))
Module(None, Stmt([With(CallFunc(Name('open'), [Name('path'), Const('a')], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([AssName('attr', 'OP_DELETE')]))
Module(None, Stmt([Class('BoundaryIter', [Getattr(Name('six'), 'Iterator')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'render', ['self', 'name', 'value', 'attrs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Const(':'), 'join'), [Name('hextets')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('trim_whitespace_re'), 'sub'), [Const(' '), CallFunc(Getattr(Name('s'), 'strip'), [], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('runfastcgi'), [Name('args')], None, None))]))
Module(None, Stmt([Assign([AssName('block_context', 'OP_ASSIGN')], Subscript(Getattr(Name('context'), 'render_context'), 'OP_APPLY', [Name('BLOCK_CONTEXT_KEY')]))]))
Module(None, Stmt([Assign([AssName('is_templatized', 'OP_ASSIGN')], Name('True'))]))
charset = msg . get_charset ( ) . get_output_charset ( ) if msg . get_charset ( ) else 'utf-8'
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('link'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('link')])], None, None))]))
Module(None, Stmt([For(AssName('loader', 'OP_ASSIGN'), Getattr(Name('self'), 'loaders'), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssName('d', 'OP_ASSIGN'), Name('object_list'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('values', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Name('key'), CallFunc(Getattr(Name('val'), 'resolve'), [Name('context')], None, None)]), [GenExprFor(AssTuple([AssName('key', 'OP_ASSIGN'), AssName('val', 'OP_ASSIGN')]), CallFunc(Getattr(Name('six'), 'iteritems'), [Getattr(Name('self'), 'extra_context')], None, None), [])]))], None, None))]))
Module(None, Stmt([Discard(Yield(Name('node')))]))
except ( ssl . SSLError , smtplib . SMTPServerDisconnected ) :
Module(None, Stmt([If([(Compare(Name('value'), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('args'), Keyword('nargs', Const('*'))], None, None))]))
Module(None, Stmt([If([(Name('autoescape'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('parser', 'OP_ASSIGN')], CallFunc(Name('MultiPartParser'), [Name('META'), Name('post_data'), Getattr(Name('self'), 'upload_handlers'), Getattr(Name('self'), 'encoding')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'new_file'), [Name('field_name'), Name('file_name'), Name('content_type'), Name('content_length'), Name('charset'), Name('content_type_extra')], None, None))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Assign([AssName('streaming', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Class('Critical', [Name('CheckMessage')], None, Stmt([Pass()]), None)]))
except ( TypeError , ValueError ) :
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('sys'), 'platform'), 'startswith'), [Const('java')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('num'), [('>', Getattr(Name('self'), '_max_entries'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('fname', 'OP_ASSIGN')], Mod((Const('%s-%s.log'), Tuple([Name('timestamp'), CallFunc(Name('abs'), [CallFunc(Name('id'), [Name('self')], None, None)], None, None)]))))]))
else :
Module(None, Stmt([Assign([AssName('ip_str', 'OP_ASSIGN')], CallFunc(Name('_explode_shorthand_ip_string'), [Name('ip_str')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('_js_escapes'), 'update'), [GenExpr(GenExprInner(Tuple([CallFunc(Name('ord'), [Mod((Const('%c'), Name('z')))], None, None), Mod((Const('\\u%04X'), Name('z')))]), [GenExprFor(AssName('z', 'OP_ASSIGN'), CallFunc(Name('range'), [Const(32)], None, None), [])]))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('top_errors'), 'extend'), [ListComp(Mod((CallFunc(Name('_'), [Const('(Hidden field %(name)s) %(error)s')], None, None), Dict([(Const('name'), Name('name')), (Const('error'), CallFunc(Name('force_text'), [Name('e')], None, None))]))), [ListCompFor(AssName('e', 'OP_ASSIGN'), Name('bf_errors'), [])])], None, None))]))
else :
Module(None, Stmt([If([(Compare(Name('transfer_encoding'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('io', [('BytesIO', None)], 0)]))
Module(None, Stmt([Assign([AssName('MB', 'OP_ASSIGN')], LeftShift((Const(1), Const(20))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('QueryDict'), Name('self')], None, None), 'setlist'), [Name('key'), Name('list_')], None, None))]))
Module(None, Stmt([Assign([AssName('field_type', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('connection'), 'introspection'), 'get_field_type'), [Subscript(Name('row'), 'OP_APPLY', [Const(1)]), Name('row')], None, None))]))
data_value = data if data is not None else ''
elif dirname == 'locale' :
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, 'do_with', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__deepcopy__', ['self', 'memo'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], Tuple([Const('ModelForm'), Const('BaseModelForm'), Const('model_to_dict'), Const('fields_for_model'), Const('save_instance'), Const('ModelChoiceField'), Const('ModelMultipleChoiceField'), Const('ALL_FIELDS'), Const('BaseModelFormSet'), Const('modelformset_factory'), Const('BaseInlineFormSet'), Const('inlineformset_factory')]))]))
Module(None, Stmt([Function(None, 'utcoffset', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('MIN_NUM_FORM_COUNT', 'OP_ASSIGN')], Const('MIN_NUM_FORMS'))]))
Module(None, Stmt([Function(None, '_make_decorator', ['m_args', 'm_kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('TemplateEncodingError', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('block'), 'nodelist'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('archive'), 'extract'), [Name('to_path')], None, None))]))
Module(None, Stmt([If([(Not(Name('only_initial')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__enter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core.files.uploadhandler', [('StopUpload', None), ('SkipFile', None), ('StopFutureHandlers', None)], 0)]))
Module(None, Stmt([From('django.core.cache.backends.base', [('BaseCache', None), ('DEFAULT_TIMEOUT', None)], 0)]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
else :
Module(None, Stmt([Subscript(Name('_serializers'), 'OP_DELETE', [Name('format')])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [CallFunc(Name('blankout'), [Getattr(Name('t'), 'contents'), Const('X')], None, None)], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('LoaderOrigin'), Name('self')], None, None), '__init__'), [Name('display_name')], None, None))]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'style'), 'HTTP_NOT_MODIFIED'), [Name('msg')], None, None))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'chdir'), [Name('our_home_dir')], None, None))]))
@ property
except Exception :
Module(None, Stmt([Discard(CallFunc(Name('import_module'), [Mod((Const('%s.%s'), Tuple([Getattr(Name('app_config'), 'name'), Name('module_to_search')])))], None, None))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Return(Compare(Name('data_set'), [('!=', Name('initial_set'))]))]))
Module(None, Stmt([Assign([AssName('upload', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('ClearableFileInput'), Name('self')], None, None), 'value_from_datadict'), [Name('data'), Name('files'), Name('name')], None, None))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('converter'), [Name('suffix')], None, None))]))
Module(None, Stmt([Assign([AssName('offset', 'OP_ASSIGN')], Add((Name('offset'), CallFunc(Name('len'), [Getattr(Name('self'), '__starttag_text')], None, None))))]))
Module(None, Stmt([Raise(Name('ContextPopException'), None, None)]))
Module(None, Stmt([Function(None, 'as_tuple', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('LocaleRegexProvider'), '__init__'), [Name('self'), Name('regex')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('context'), 'update'), [Name('unpacked_vars')], None, None))]))
try :
Module(None, Stmt([Function(None, 'remove_potfiles', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('buffer_', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('final_attrs', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'build_attrs'), [Name('attrs'), Keyword('name', Name('name'))], None, None))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('io'), 'open'), [Name('pofile'), Const('w'), Keyword('encoding', Const('utf-8'))], None, None), AssName('fp', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('want_unicode', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(CallFunc(Name('force_text'), [Name('s')], None, None), 'strip'), [], None, None), 'replace'), [Const(' '), Const('_')], None, None))]))
Module(None, Stmt([If([(Compare(Name('value'), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'migration_progress_callback', ['self', 'action', 'migration', 'fake'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], CallFunc(Name('_'), [Const('Enter a valid email address.')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('handler'), Const('file')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.http', [('QueryDict', None)], 0)]))
except smtplib . SMTPException :
Module(None, Stmt([Assign([AssName('defaults', 'OP_ASSIGN')], Dict([(Const('data'), Name('data')), (Const('files'), Name('files')), (Const('auto_id'), Name('auto_id')), (Const('prefix'), Name('prefix'))]))]))
except IndexError :
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], Name('self'))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Import([('time', None)])]))
Module(None, Stmt([Import([('random', None)])]))
Module(None, Stmt([Assign([Subscript(Name('url_fields'), 'OP_ASSIGN', [Const(0)])], Const('http'))]))
Module(None, Stmt([Return(Not(CallFunc(Name('module_has_submodule'), [Name('package'), Name('module')], None, None)))]))
Module(None, Stmt([Assign([AssName('end_index', 'OP_ASSIGN')], Name('None'))]))
return val if isinstance ( val , bytes ) else val . encode ( encoding )
except ( TypeError , AttributeError , KeyError , ValueError ) :
Module(None, Stmt([Assign([AssName('sequence', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'compile_filter'), [Subscript(Name('bits'), 'OP_APPLY', [Add((Name('in_index'), Const(1)))])], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('copy'), 'deepcopy'), [Getattr(Name('self'), '_wrapped'), Name('memo')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, '_get_timezone_name', ['timezone'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Subscript(Name('commands_dict'), 'OP_APPLY', [Name('app')]), 'append'), [Name('name')], None, None))]))
Module(None, Stmt([If([(Not(Name('file_name')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('substitutions'), 'OP_ASSIGN', [Const('clear_template')])], Mod((Getattr(Name('self'), 'template_with_clear'), Name('substitutions'))))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('format_module_path'), Getattr(Name('six'), 'string_types')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'configurator'), 'convert'), [Name('value')], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('app_label', 'OP_ASSIGN'), AssName('migration_names', 'OP_ASSIGN')]), CallFunc(Getattr(Name('conflicts'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Tuple([CallFunc(Name('QueryDict'), [Const(''), Keyword('encoding', Getattr(Name('self'), '_encoding'))], None, None), CallFunc(Name('MultiValueDict'), [], None, None)]))]))
Module(None, Stmt([Function(None, '_helper', ['list_', 'tabs'], [Const(1)], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('file_'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Const('You can only use --pks option with one model')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('arg', 'OP_ASSIGN')], Getattr(Name('settings'), 'TIME_FORMAT'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'kwargs', 'OP_ASSIGN')], Name('kwargs'))]))
Module(None, Stmt([Assign([AssAttr(Name('block'), 'context', 'OP_ASSIGN')], Name('context'))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], Getattr(Name('self'), 'html_name'))]))
Module(None, Stmt([Assign([AssName('oldroot', 'OP_ASSIGN')], Name('root'))]))
Module(None, Stmt([Assign([AssName('inner', 'OP_ASSIGN')], CallFunc(Name('NonCapture'), [Slice(Name('result'), 'OP_APPLY', Name('start'), None)], None, None))]))
except KeyError :
Module(None, Stmt([Assign([AssName('converter', 'OP_ASSIGN')], Getattr(Getattr(Name('connection'), 'introspection'), 'table_name_converter'))]))
Module(None, Stmt([Function(None, 'handle_field', ['self', 'obj', 'field'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('__len__', 'OP_ASSIGN')], CallFunc(Name('new_method_proxy'), [Name('len')], None, None))]))
Module(None, Stmt([AugAssign(Name('int_part_gd'), '+=', Name('digit'))]))
Module(None, Stmt([Assign([AssName('option', 'OP_ASSIGN')], CallFunc(Getattr(Name('remaining_bits'), 'pop'), [Const(0)], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('settings'), 'is_overridden'), [Const('MIDDLEWARE_CLASSES')], None, None)), Stmt([Pass()]))], None)]))
@ register . filter ( is_safe = True )
Module(None, Stmt([From('django.utils.xmlutils', [('SimplerXMLGenerator', None)], 0)]))
Module(None, Stmt([Assign([AssName('options', 'OP_ASSIGN')], List([Tuple([Const('--help'), Name('None')])]))]))
Module(None, Stmt([Function(None, 'runfastcgi', ['argset', 'kwargs'], [List(())], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('accept_lang'), [('==', Const('*'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('ext', 'OP_ASSIGN')], CallFunc(Getattr(Name('mimetypes'), 'guess_extension'), [Name('content_type')], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('SortedDict'), Name('self')], None, None), '__delitem__'), [Name('key')], None, None))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('field_name', 'OP_ASSIGN')], CallFunc(Getattr(Name('field_node'), 'getAttribute'), [Const('name')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'regex', 'OP_ASSIGN')], Name('regex'))]))
Module(None, Stmt([Assign([AssName('timeout', 'OP_ASSIGN')], Const(300))]))
Module(None, Stmt([Assign([AssName('as_form', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([Subscript(Name('cache'), 'OP_ASSIGN', [Name('mem_args')])], Name('result'))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Getattr(Name('six'), 'text_type'), [CallFunc(Name('bytes'), [Name('s')], None, None), Name('encoding'), Name('errors')], None, None))]))
Module(None, Stmt([AugAssign(Name('i'), '+=', Const(1))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
raise CommandError ( "%r conflicts with the name of an existing "  "Python module and cannot be used as an app "  "name. Please try another name." % app_name )
Module(None, Stmt([Assign([AssAttr(Name('result'), 'fields', 'OP_ASSIGN')], CallFunc(Name('tuple'), [ListComp(CallFunc(Getattr(Name('x'), '__deepcopy__'), [Name('memo')], None, None), [ListCompFor(AssName('x', 'OP_ASSIGN'), Getattr(Name('self'), 'fields'), [])])], None, None))]))
Module(None, Stmt([Function(None, 'abspathu', ['path'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('orig', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Getattr(Name('self'), 'parent_instance'), Getattr(Name('self'), 'to_field')], None, None))]))
else :
Module(None, Stmt([Assign([AssName('count', 'OP_ASSIGN')], CallFunc(Getattr(Name('itertools'), 'count'), [Const(1)], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of FileUploadHandler must provide a file_complete() method')], None, None), None, None)]))
Module(None, Stmt([Function(None, '__html__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'body'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'file'), 'seek'), [Name('pos')], None, None))]))
Module(None, Stmt([From('functools', [('update_wrapper', None)], 0)]))
Module(None, Stmt([Class('LazyStream', [Getattr(Name('six'), 'Iterator')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('statements'), 'append'), [CallFunc(Getattr(Const(' '), 'join'), [Name('statement')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('_moved_attributes', 'OP_ASSIGN')], List([CallFunc(Name('MovedAttribute'), [Const('cStringIO'), Const('cStringIO'), Const('io'), Const('StringIO')], None, None), CallFunc(Name('MovedAttribute'), [Const('filter'), Const('itertools'), Const('builtins'), Const('ifilter'), Const('filter')], None, None), CallFunc(Name('MovedAttribute'), [Const('filterfalse'), Const('itertools'), Const('itertools'), Const('ifilterfalse'), Const('filterfalse')], None, None), CallFunc(Name('MovedAttribute'), [Const('input'), Const('__builtin__'), Const('builtins'), Const('raw_input'), Const('input')], None, None), CallFunc(Name('MovedAttribute'), [Const('map'), Const('itertools'), Const('builtins'), Const('imap'), Const('map')], None, None), CallFunc(Name('MovedAttribute'), [Const('range'), Const('__builtin__'), Const('builtins'), Const('xrange'), Const('range')], None, None), CallFunc(Name('MovedAttribute'), [Const('reload_module'), Const('__builtin__'), Const('imp'), Const('reload')], None, None), CallFunc(Name('MovedAttribute'), [Const('reduce'), Const('__builtin__'), Const('functools')], None, None), CallFunc(Name('MovedAttribute'), [Const('StringIO'), Const('StringIO'), Const('io')], None, None), CallFunc(Name('MovedAttribute'), [Const('UserString'), Const('UserString'), Const('collections')], None, None), CallFunc(Name('MovedAttribute'), [Const('xrange'), Const('__builtin__'), Const('builtins'), Const('xrange'), Const('range')], None, None), CallFunc(Name('MovedAttribute'), [Const('zip'), Const('itertools'), Const('builtins'), Const('izip'), Const('zip')], None, None), CallFunc(Name('MovedAttribute'), [Const('zip_longest'), Const('itertools'), Const('itertools'), Const('izip_longest'), Const('zip_longest')], None, None), CallFunc(Name('MovedModule'), [Const('builtins'), Const('__builtin__')], None, None), CallFunc(Name('MovedModule'), [Const('configparser'), Const('ConfigParser')], None, None), CallFunc(Name('MovedModule'), [Const('copyreg'), Const('copy_reg')], None, None), CallFunc(Name('MovedModule'), [Const('dbm_gnu'), Const('gdbm'), Const('dbm.gnu')], None, None), CallFunc(Name('MovedModule'), [Const('http_cookiejar'), Const('cookielib'), Const('http.cookiejar')], None, None), CallFunc(Name('MovedModule'), [Const('http_cookies'), Const('Cookie'), Const('http.cookies')], None, None), CallFunc(Name('MovedModule'), [Const('html_entities'), Const('htmlentitydefs'), Const('html.entities')], None, None), CallFunc(Name('MovedModule'), [Const('html_parser'), Const('HTMLParser'), Const('html.parser')], None, None), CallFunc(Name('MovedModule'), [Const('http_client'), Const('httplib'), Const('http.client')], None, None), CallFunc(Name('MovedModule'), [Const('email_mime_multipart'), Const('email.MIMEMultipart'), Const('email.mime.multipart')], None, None), CallFunc(Name('MovedModule'), [Const('email_mime_text'), Const('email.MIMEText'), Const('email.mime.text')], None, None), CallFunc(Name('MovedModule'), [Const('email_mime_base'), Const('email.MIMEBase'), Const('email.mime.base')], None, None), CallFunc(Name('MovedModule'), [Const('BaseHTTPServer'), Const('BaseHTTPServer'), Const('http.server')], None, None), CallFunc(Name('MovedModule'), [Const('CGIHTTPServer'), Const('CGIHTTPServer'), Const('http.server')], None, None), CallFunc(Name('MovedModule'), [Const('SimpleHTTPServer'), Const('SimpleHTTPServer'), Const('http.server')], None, None), CallFunc(Name('MovedModule'), [Const('cPickle'), Const('cPickle'), Const('pickle')], None, None), CallFunc(Name('MovedModule'), [Const('queue'), Const('Queue')], None, None), CallFunc(Name('MovedModule'), [Const('reprlib'), Const('repr')], None, None), CallFunc(Name('MovedModule'), [Const('socketserver'), Const('SocketServer')], None, None), CallFunc(Name('MovedModule'), [Const('_thread'), Const('thread'), Const('_thread')], None, None), CallFunc(Name('MovedModule'), [Const('tkinter'), Const('Tkinter')], None, None), CallFunc(Name('MovedModule'), [Const('tkinter_dialog'), Const('Dialog'), Const('tkinter.dialog')], None, None), CallFunc(Name('MovedModule'), [Const('tkinter_filedialog'), Const('FileDialog'), Const('tkinter.filedialog')], None, None), CallFunc(Name('MovedModule'), [Const('tkinter_scrolledtext'), Const('ScrolledText'), Const('tkinter.scrolledtext')], None, None), CallFunc(Name('MovedModule'), [Const('tkinter_simpledialog'), Const('SimpleDialog'), Const('tkinter.simpledialog')], None, None), CallFunc(Name('MovedModule'), [Const('tkinter_tix'), Const('Tix'), Const('tkinter.tix')], None, None), CallFunc(Name('MovedModule'), [Const('tkinter_ttk'), Const('ttk'), Const('tkinter.ttk')], None, None), CallFunc(Name('MovedModule'), [Const('tkinter_constants'), Const('Tkconstants'), Const('tkinter.constants')], None, None), CallFunc(Name('MovedModule'), [Const('tkinter_dnd'), Const('Tkdnd'), Const('tkinter.dnd')], None, None), CallFunc(Name('MovedModule'), [Const('tkinter_colorchooser'), Const('tkColorChooser'), Const('tkinter.colorchooser')], None, None), CallFunc(Name('MovedModule'), [Const('tkinter_commondialog'), Const('tkCommonDialog'), Const('tkinter.commondialog')], None, None), CallFunc(Name('MovedModule'), [Const('tkinter_tkfiledialog'), Const('tkFileDialog'), Const('tkinter.filedialog')], None, None), CallFunc(Name('MovedModule'), [Const('tkinter_font'), Const('tkFont'), Const('tkinter.font')], None, None), CallFunc(Name('MovedModule'), [Const('tkinter_messagebox'), Const('tkMessageBox'), Const('tkinter.messagebox')], None, None), CallFunc(Name('MovedModule'), [Const('tkinter_tksimpledialog'), Const('tkSimpleDialog'), Const('tkinter.simpledialog')], None, None), CallFunc(Name('MovedModule'), [Const('urllib_parse'), Add((Name('__name__'), Const('.moves.urllib_parse'))), Const('urllib.parse')], None, None), CallFunc(Name('MovedModule'), [Const('urllib_error'), Add((Name('__name__'), Const('.moves.urllib_error'))), Const('urllib.error')], None, None), CallFunc(Name('MovedModule'), [Const('urllib'), Add((Name('__name__'), Const('.moves.urllib'))), Add((Name('__name__'), Const('.moves.urllib')))], None, None), CallFunc(Name('MovedModule'), [Const('urllib_robotparser'), Const('robotparser'), Const('urllib.robotparser')], None, None), CallFunc(Name('MovedModule'), [Const('xmlrpc_client'), Const('xmlrpclib'), Const('xmlrpc.client')], None, None), CallFunc(Name('MovedModule'), [Const('xmlrpc_server'), Const('xmlrpclib'), Const('xmlrpc.server')], None, None), CallFunc(Name('MovedModule'), [Const('winreg'), Const('_winreg')], None, None)]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'file', 'name', 'content_type', 'size', 'charset', 'content_type_extra'], [Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('self'), 'to_python'), [Name('value')], None, None), 'strip'), [], None, None))]))
name = self . timezone . tzname ( self . data ) if self . timezone else None
Module(None, Stmt([Assign([AssAttr(Name('self'), '_closable_objects', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'start_object', ['self', 'obj'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('field'), 'serialize'), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Return(Name('val'))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'domain'), [('not in', Tuple([Const('django'), Const('djangojs')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'activated', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([Subscript(Name('self'), 'OP_ASSIGN', [Name('key')])], Name('result'))]))
Module(None, Stmt([Function(None, 'new_method_proxy', ['func'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('StopIteration'), [], None, None), None, None)]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'DEBUG'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('nodelist', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'parse'), [Tuple([Const('endif')])], None, None))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'stream'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([AssName('app_template_dirs', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'key', 'sep', 'salt'], [Name('None'), Const(':'), Name('None')], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([From('importlib', [('import_module', None)], 0)]))
Module(None, Stmt([Assign([AssName('best_doublecolon_start', 'OP_ASSIGN')], UnarySub(Const(1)))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('new_file'), 'write'), [Name('content')], None, None))]))
return original_urlencode (  [ ( force_str ( k ) ,  [ force_str ( i ) for i in v ] if isinstance ( v , ( list , tuple ) ) else force_str ( v ) )  for k , v in query ] ,  doseq )
except ( ValueError , self . queryset . model . DoesNotExist ) :
try :
Module(None, Stmt([If([(Compare(Name('old_attr'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('content', 'OP_ASSIGN')], Const(''))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('BaseTemporalField'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const("Key '%s' not found"), Name('key')))], None, None), None, None)]))
@ lru_cache . lru_cache ( maxsize = 1000 )
Module(None, Stmt([Assign([AssName('utcdate', 'OP_ASSIGN')], CallFunc(Getattr(Name('time'), 'strftime'), [Const('%Y%m%d%H%M%S'), CallFunc(Getattr(Name('time'), 'gmtime'), [Name('timeval')], None, None)], None, None))]))
Module(None, Stmt([Return(Name('decorating_function'))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('options'), 'get'), [Const('no_wrap')], None, None), Stmt([Pass()]))], None)]))
except Exception :
Module(None, Stmt([If([(Compare(Name('filter_name'), [('in', Tuple([Const('escape'), Const('safe')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('option_value'), [('in', Name('selected_choices'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'umask'), [Name('umask')], None, None))]))
Module(None, Stmt([If([(Compare(Name('CONTEXT_SEPARATOR'), [('in', Name('result'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('fget'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('self'), Const('_fqdn')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('wm'), 'add_watch'), [Name('path'), Name('mask')], None, None))]))
Module(None, Stmt([Function(None, 'url', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'new_file', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_parse_header_params', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('ORDERING_FIELD_NAME', 'OP_ASSIGN')], Const('ORDER'))]))
else :
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_open'), [Name('name'), Name('mode')], None, None))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Class('RssFeed', [Name('SyndicationFeed')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('ImproperlyConfigured'), [Mod((Const('Could not write to directory: %s'), Getattr(Name('self'), 'file_path')))], None, None), None, None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'name', 'content_type', 'size', 'charset', 'content_type_extra'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'value'), 'resolve'), [Name('context'), Keyword('ignore_failures', Name('True'))], None, None))]))
Module(None, Stmt([Class('StopFutureHandlers', [Name('UploadFileException')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'nodelist', 'OP_ASSIGN')], Name('nodelist'))]))
Module(None, Stmt([Function(None, 'end_object', ['self', 'obj'], [], 0, None, Stmt([Pass()]))]))
except ( ValueError , TypeError ) :
Module(None, Stmt([Function(None, 'tzname', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('token', 'OP_ASSIGN')], CallFunc(Name('Token'), [Name('TOKEN_VAR'), CallFunc(Getattr(Slice(Name('token_string'), 'OP_APPLY', Const(2), UnarySub(Const(2))), 'strip'), [], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('method', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('method')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'literal', 'OP_ASSIGN')], CallFunc(Name('float'), [Name('var')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('zbuf'), 'getvalue'), [], None, None))]))
elif isinstance ( o , datetime . date ) :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('dictConfigClass'), [Name('config')], None, None), 'configure'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('Page'), [], Name('args'), Name('kwargs')))]))
try :
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], CallFunc(Name('trim_whitespace'), [Name('message')], None, None))]))
Module(None, Stmt([Assign([AssName('connection', 'OP_ASSIGN')], Subscript(Name('connections'), 'OP_APPLY', [Name('db')]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('copy'), 'deepcopy'), [Getattr(Name('self'), '_wrapped'), Name('memo')], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('fixture_file', 'OP_ASSIGN'), AssName('fixture_dir', 'OP_ASSIGN'), AssName('fixture_name', 'OP_ASSIGN')]), CallFunc(Getattr(Name('self'), 'find_fixtures'), [Name('fixture_label')], None, None), Stmt([Pass()]), None)]))
except ImportError as e :
Module(None, Stmt([Assign([AssName('choices', 'OP_ASSIGN')], CallFunc(Name('list'), [CallFunc(Getattr(Name('six'), 'iteritems'), [Getattr(Name('self'), 'months')], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Name('message'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('st', 'OP_ASSIGN')], CallFunc(Getattr(Name('os'), 'stat'), [Name('src')], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('s'), Name('Exception')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('register', 'OP_ASSIGN')], CallFunc(Name('Library'), [], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('lexer_class', 'OP_ASSIGN'), AssName('parser_class', 'OP_ASSIGN')])], Tuple([Name('Lexer'), Name('Parser')]))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('type'), [Name('s')], None, None), [('==', Name('bytes'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('localpart', 'OP_ASSIGN')], CallFunc(Name('str'), [CallFunc(Name('Header'), [Name('localpart'), Name('encoding')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'value_from_datadict', ['self', 'data', 'files', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('STATUS_OK', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'variable_name', 'OP_ASSIGN')], Name('variable_name'))]))
Module(None, Stmt([Function(None, 'restart_with_reloader', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('var'), Getattr(Name('six'), 'string_types')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(CallFunc(Name('type'), [Name('form')], None, None), [Name('class_name'), Tuple([Name('form')]), Name('form_class_attrs')], None, None))]))
Module(None, Stmt([If([(Name('use_grouping'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Tuple([Const(1), Name('ch2')]))]))
Module(None, Stmt([Assign([AssName('middleware', 'OP_ASSIGN')], CallFunc(Name('middleware_class'), [], Name('m_args'), Name('m_kwargs')))]))
Module(None, Stmt([Raise(CallFunc(Name('AttributeError'), [Name('attr')], None, None), None, None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('message'), Name('ValidationError')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], CallFunc(Name('widget'), [], None, None))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Function(None, 'compile_messages', ['self', 'locations'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('sublist_item'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('kwargs', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Name('k'), Subscript(Name('config'), 'OP_APPLY', [Name('k')])]), [GenExprFor(AssName('k', 'OP_ASSIGN'), Name('config'), [GenExprIf(CallFunc(Name('valid_ident'), [Name('k')], None, None))])]))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('any'), [GenExpr(GenExprInner(CallFunc(Name('ignore'), [Name('pattern')], None, None), [GenExprFor(AssName('pattern', 'OP_ASSIGN'), Name('ignore_patterns'), [])]))], None, None))]))
Module(None, Stmt([Assign([AssName('constant_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('_\\(((?:".*?")|(?:\'.*?\'))\\)')], None, None))]))
else :
Module(None, Stmt([Assign([AssName('res', 'OP_ASSIGN')], Subscript(Name('to_digits'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Assign([AssName('netloc', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('netloc'), 'encode'), [Const('idna')], None, None), 'decode'), [Const('ascii')], None, None))]))
Module(None, Stmt([Function(None, 'exit_command', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'localize'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('threading'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('sio', 'OP_ASSIGN')], CallFunc(Name('BytesIO'), [Getattr(Name('self'), 'buffer')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'file_name', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('find_command'), [Name('program')], None, None), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Const(''), 'join'), [Name('base36')], None, None))]))
Module(None, Stmt([If([(Compare(Name('app_name'), [('not in', Getattr(Name('loader'), 'migrated_apps'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('executor', 'OP_ASSIGN')], CallFunc(Name('MigrationExecutor'), [Subscript(Name('connections'), 'OP_APPLY', [Name('DEFAULT_DB_ALIAS')])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('HTMLParser'), '__init__'), [Name('self')], None, None))]))
Module(None, Stmt([Function(None, 'handle', ['self', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('filename', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(Name('tmp'), 'split'), [Const('/')], None, None), 'OP_APPLY', [UnarySub(Const(1))]))]))
Module(None, Stmt([Function(None, 'streaming_content', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_ipython_pre_100', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Creates a Django project directory structure for the given project name in the current directory or optionally in the given directory.'))]))
Module(None, Stmt([If([(Compare(Name('prefix'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'time_format', ['value', 'format_string'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_HEADING'), [Const('Will squash the following migrations:')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'registered_checks', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'lru_cache', ['maxsize', 'typed'], [Const(100), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('itertools', [('chain', None)], 0)]))
Module(None, Stmt([Function(None, 'get_unique_error_message', ['self', 'unique_check'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('clean_data'), 'append'), [CallFunc(Getattr(Name('field'), 'clean'), [Name('field_value')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('last_row', 'OP_ASSIGN')], Mod((Name('normal_row'), Dict([(Const('errors'), Const('')), (Const('label'), Const('')), (Const('field'), Const('')), (Const('help_text'), Const('')), (Const('html_class_attr'), Name('html_class_attr'))]))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Command'), Name('self')], None, None), 'add_arguments'), [Name('parser')], None, None))]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], Tuple([Const('MultiPartParser'), Const('MultiPartParserError'), Const('InputStreamExhausted')]))]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Getattr(Name('self'), 'options'), 'get'), [Const('indent'), Name('None')], None, None), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Add((Add((CallFunc(Getattr(Slice(Name('language'), 'OP_APPLY', None, Name('p')), 'lower'), [], None, None), Const('_'))), CallFunc(Getattr(Slice(Name('language'), 'OP_APPLY', Add((Name('p'), Const(1))), None), 'lower'), [], None, None))))]))
Module(None, Stmt([Assign([AssName('timeout', 'OP_ASSIGN')], UnarySub(Const(1)))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const('"filter %s" is not permitted.  Use the "autoescape" tag instead.'), Name('filter_name')))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'curry', ['_curried_func', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Name('datetime'), 'datetime'), [Getattr(Name('value'), 'year'), Getattr(Name('value'), 'month'), Getattr(Name('value'), 'day')], None, None))]))
Module(None, Stmt([Assert(Not(CallFunc(Name('isinstance'), [Name('cc'), Getattr(Name('six'), 'string_types')], None, None)), Const('"cc" argument must be a list or tuple'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'config', 'OP_ASSIGN')], CallFunc(Name('ConvertingDict'), [Name('config')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('singular_suffix', 'OP_ASSIGN'), AssName('plural_suffix', 'OP_ASSIGN')])], Slice(Name('bits'), 'OP_APPLY', None, Const(2)))]))
Module(None, Stmt([Assign([AssName('mail', 'OP_ASSIGN')], CallFunc(Name('EmailMultiAlternatives'), [Mod((Const('%s%s'), Tuple([Getattr(Name('settings'), 'EMAIL_SUBJECT_PREFIX'), Name('subject')]))), Name('message'), Getattr(Name('settings'), 'SERVER_EMAIL'), ListComp(Subscript(Name('a'), 'OP_APPLY', [Const(1)]), [ListCompFor(AssName('a', 'OP_ASSIGN'), Getattr(Name('settings'), 'MANAGERS'), [])]), Keyword('connection', Name('connection'))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('new_class'), 'base_fields', 'OP_ASSIGN')], Name('fields'))]))
Module(None, Stmt([Function(None, 'modelformset_factory', ['model', 'form', 'formfield_callback', 'formset', 'extra', 'can_delete', 'can_order', 'max_num', 'fields', 'exclude', 'widgets', 'validate_max', 'localized_fields', 'labels', 'help_texts', 'error_messages', 'min_num', 'validate_min'], [Name('ModelForm'), Name('None'), Name('BaseModelFormSet'), Const(1), Name('False'), Name('False'), Name('None'), Name('None'), Name('None'), Name('None'), Name('False'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('False')], 0, None, Stmt([Pass()]))]))
except ( LookupError , TypeError ) :
Module(None, Stmt([Assign([AssName('handle_app', 'OP_ASSIGN')], Getattr(Name('self'), 'handle_app'))]))
Module(None, Stmt([Function(None, 'handle_app_config', ['self', 'app_config', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_get_count', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('BaseRunserverCommand', 'OP_ASSIGN')], Name('Command'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_non_form_errors', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'error_class'), [Getattr(Name('e'), 'error_list')], None, None))]))
Module(None, Stmt([Assign([AssName('msgs', 'OP_ASSIGN')], CallFunc(Getattr(Const('\n'), 'join'), [CallFunc(Name('dropwhile'), [Name('len'), CallFunc(Getattr(Name('msgs'), 'split'), [Const('\n')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], Or([Name('data'), List(())]))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([From('django.forms.utils', [('ErrorList', None)], 0)]))
Module(None, Stmt([For(AssName('item', 'OP_ASSIGN'), Name('elt'), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Getattr(Getattr(Name('self'), '_css'), 'setdefault'), [Name('medium'), List(())], None, None), 'append'), [Name('path')], None, None))]))
Module(None, Stmt([Assign([AssName('new_value', 'OP_ASSIGN')], Add((Name('value'), Name('delta'))))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'obj', 'OP_ASSIGN')], Name('obj'))]))
Module(None, Stmt([Return(Name('obj'))]))
Module(None, Stmt([Function(None, '_post_clean', ['self'], [], 0, None, Stmt([Pass()]))]))
file_ , _ , _ = imp . find_module ( module_name , [ entry ] )
try :
else :
Module(None, Stmt([Function(None, 'make_key', ['self', 'key', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
try :
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Unable to convert %r at %r'), Tuple([Name('value'), Name('rest')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('mixed_subtype', 'OP_ASSIGN')], Const('mixed'))]))
Module(None, Stmt([If([(Compare(Name('value'), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('django.utils.importlib will be removed in Django 1.9.'), Name('RemovedInDjango19Warning'), Keyword('stacklevel', Const(2))], None, None))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'use_natural_foreign_keys'), CallFunc(Name('hasattr'), [Getattr(Getattr(Name('field'), 'rel'), 'to'), Const('natural_key')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('value'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('bit', 'OP_ASSIGN')], Name('node'))]))
Module(None, Stmt([If([(Compare(Name('i'), [('<', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'queryset', 'cache_choices', 'required', 'widget', 'label', 'initial', 'help_text', 'args', 'kwargs'], [Name('None'), Name('True'), Name('None'), Name('None'), Name('None'), Const('')], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('requires_system_checks', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('obj'), 'save'), [Keyword('using', Getattr(Name('self'), 'using'))], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('InvalidCacheBackendError'), [Mod((Const("Could not find config for '%s' in settings.CACHES"), Name('alias')))], None, None), None, None)]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('default'))]))
Module(None, Stmt([If([(And([Not(Getattr(Getattr(Name('model'), '_meta'), 'proxy')), CallFunc(Getattr(Name('router'), 'allow_migrate'), [Name('using'), Name('model')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('context'), 'OP_ASSIGN', [Getattr(Name('self'), 'variable_name')])], Name('value'))]))
Module(None, Stmt([If([(Compare(Name('expires'), [('<', Name('now'))]), Stmt([Pass()]))], None)]))
except TypeError :
except AttributeError :
Module(None, Stmt([Return(Name('FormSet'))]))
Module(None, Stmt([Function(None, 'translate_token', ['self', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'create_table'), [Name('db'), Name('tablename')], None, None))]))
Module(None, Stmt([Function(None, 'show_migration_list', ['self', 'connection', 'app_names'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'get_template_sources', ['self', 'template_name', 'template_dirs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('parent'))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(Getattr(Name('datetime'), 'datetime'), 'strptime'), [CallFunc(Name('force_str'), [Name('value')], None, None), Name('format')], None, None), 'time'), [], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('find_command'), [Getattr(Name('self'), 'program')], None, None), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], Slice(CallFunc(Getattr(Name('token'), 'split_contents'), [], None, None), 'OP_APPLY', Const(1), None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'args_check'), [Name('filter_name'), Name('filter_func'), Name('args')], None, None))]))
else :
Module(None, Stmt([Return(Name('saved_instances'))]))
Module(None, Stmt([Function(None, '__getstate__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('handler', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'get_handler'), [], Name('args'), Name('options')))]))
Module(None, Stmt([Discard(Yield(CallFunc(Name('safe_join'), [Name('template_dir'), Name('template_name')], None, None)))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("More than one migration matches '%s' in app '%s'. Please be more specific."), Tuple([Name('migration_name'), Name('app_label')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('use_natural_primary_keys', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('use_natural_primary_keys')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('logging_config_func'), [Name('logging_settings')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'month_none_value', 'OP_ASSIGN')], Tuple([Const(0), Subscript(Name('empty_label'), 'OP_APPLY', [Const(1)])]))]))
Module(None, Stmt([AugAssign(Name('factor'), '-=', Const(1))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('six'), 'text_type'), [Name('s'), Name('encoding'), Const('replace')], None, None))]))
Module(None, Stmt([If([(And([Compare(Name('number'), [('==', Const(1))]), Getattr(Name('self'), 'allow_empty_first_page')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('nodelist_empty'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'alternatives', 'OP_ASSIGN')], Or([Name('alternatives'), List(())]))]))
Module(None, Stmt([Assign([AssName('register_to', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'get'), [Const('register_to')], None, None))]))
Module(None, Stmt([Function(None, 'sanitize_separators', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(Yield(CallFunc(Name('safe_join'), [Name('template_dir'), Name('template_name')], None, None)))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'%s' is not a valid tag library: %s"), Tuple([Name('taglib'), Name('e')])))], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Name('name'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(Yield(Mod((Const('%s\n'), Slice(Name('line'), 'OP_APPLY', None, Sub((Name('space'), Const(1))))))))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('label', 'OP_ASSIGN')], CallFunc(Name('conditional_escape'), [CallFunc(Name('force_text'), [Getattr(Name('bf'), 'label')], None, None)], None, None))]))
Module(None, Stmt([For(AssName('c', 'OP_ASSIGN'), CallFunc(Getattr(Getattr(Name('response'), 'cookies'), 'values'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('code_list'), 'append'), [Subscript(Name('foreground'), 'OP_APPLY', [Name('v')])], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'nodelist', 'OP_ASSIGN')], Name('nodelist'))]))
Module(None, Stmt([If([(Compare(Name('row'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'style', 'OP_ASSIGN')], CallFunc(Name('color_style'), [], None, None))]))
Module(None, Stmt([Assign([AssName('_supported', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Class('URLInput', [Name('TextInput')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Class('Literal', [Name('TokenBase')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('usage', 'OP_ASSIGN')], CallFunc(Name('sorted'), [CallFunc(Getattr(CallFunc(Name('get_commands'), [], None, None), 'keys'), [], None, None)], None, None))]))
Module(None, Stmt([Class('LocalTimezone', [Name('ReferenceLocalTimezone')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('secret'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'delete', ['self', 'key', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('out'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '__dict__'), 'update'), [Name('state')], None, None))]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const('MultiValueDict.update() takes either a MultiValueDict or dictionary')], None, None), None, None)]))
Module(None, Stmt([Return(Name('context'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('comment_notes'), 'extend'), [Name('field_notes')], None, None))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'invoked_for_django')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('id_for_label'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('parser'))]))
Module(None, Stmt([AugAssign(Name('msg'), '+=', Mod((Const('\n%s:\n%s\n'), Tuple([Name('group_name'), Name('formatted')]))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('field_notes'), 'append'), [Const('Field renamed because of name conflict.')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('memoize wrapper is deprecated and will be removed in Django 1.9. Use django.utils.lru_cache instead.'), Name('RemovedInDjango19Warning'), Keyword('stacklevel', Const(2))], None, None))]))
Module(None, Stmt([If([(Name('sequence_sql'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'var'), 'resolve'), [Name('context')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('cls'), '__new__'), [Name('cls')], Name('args'), None))]))
Module(None, Stmt([Assign([AssName('path', 'OP_ASSIGN')], CallFunc(Name('str'), [Name('path')], None, None))]))
@ classmethod
Module(None, Stmt([Assign([Subscript(Name('oldroot'), 'OP_ASSIGN', [Name('RESULT')])], Name('result'))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'required'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('list'), [CallFunc(Name('chain'), [], Name('errors'), None)], None, None))]))
Module(None, Stmt([Assign([AssName('meta', 'OP_ASSIGN')], Const('<could not parse>'))]))
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Const('end must be None or a string')], None, None), None, None)]))
Module(None, Stmt([For(AssName('f', 'OP_ASSIGN'), Add((Getattr(Name('opts'), 'many_to_many'), Getattr(Name('opts'), 'virtual_fields'))), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('opts', 'OP_ASSIGN')], Getattr(Name('instance'), '_meta'))]))
Module(None, Stmt([Function(None, 'setlist', ['self', 'key', 'list_'], [], 0, None, Stmt([Pass()]))]))
except KeyError :
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const('Could not parse some characters: %s|%s|%s'), Tuple([Slice(Name('token'), 'OP_APPLY', None, Name('upto')), Slice(Name('token'), 'OP_APPLY', Name('upto'), Name('start')), Slice(Name('token'), 'OP_APPLY', Name('start'), None)])))], None, None), None, None)]))
Module(None, Stmt([Import([('copy', None)])]))
Module(None, Stmt([From('django.utils.encoding', [('smart_text', None), ('force_text', None), ('python_2_unicode_compatible', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'context_data', 'OP_ASSIGN')], Name('context'))]))
Module(None, Stmt([Assign([AssName('rv', 'OP_ASSIGN')], Subscript(Getattr(Name('logging'), '_levelNames'), 'OP_APPLY', [Name('level')]))]))
Module(None, Stmt([Assign([AssName('missing_args_message', 'OP_ASSIGN')], Mod((Const('Enter at least one %s.'), Name('label'))))]))
Module(None, Stmt([Function(None, 'items', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), Getattr(Name('self'), 'choices'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('locale'), 'lower'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('getattr'), [Name('_active'), Const('value'), CallFunc(Name('get_default_timezone'), [], None, None)], None, None))]))
Module(None, Stmt([From('django.forms.forms', [('DeclarativeFieldsMetaclass', None), ('BaseForm', None)], 0)]))
Module(None, Stmt([Assign([AssName('length', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('arg')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([For(AssName('attr', 'OP_ASSIGN'), Tuple([Const('expects_localtime'), Const('is_safe'), Const('needs_autoescape')]), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_html_output'), [Keyword('normal_row', Const('<li%(html_class_attr)s>%(errors)s%(label)s %(field)s%(help_text)s</li>')), Keyword('error_row', Const('<li>%s</li>')), Keyword('row_ender', Const('</li>')), Keyword('help_text_html', Const(' <span class="helptext">%s</span>')), Keyword('errors_on_separate_row', Name('False'))], None, None))]))
Module(None, Stmt([Return(And([Or([Not(Getattr(Name('url_info'), 'netloc')), Compare(Getattr(Name('url_info'), 'netloc'), [('==', Name('host'))])]), Or([Not(Getattr(Name('url_info'), 'scheme')), Compare(Getattr(Name('url_info'), 'scheme'), [('in', List([Const('http'), Const('https')]))])])]))]))
Module(None, Stmt([Assign([AssName('biggest_number', 'OP_ASSIGN')], CallFunc(Name('max'), [ListComp(Name('x'), [ListCompFor(AssName('x', 'OP_ASSIGN'), Name('numbers'), [ListCompIf(Compare(Name('x'), [('is not', Name('None'))]))])])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_option'), [Const('-v'), Const('--verbosity'), Keyword('action', Const('store')), Keyword('dest', Const('verbosity')), Keyword('default', Const('1')), Keyword('type', Const('choice')), Keyword('choices', List([Const('0'), Const('1'), Const('2'), Const('3')])), Keyword('help', Const('Verbosity level; 0=minimal output, 1=normal output, 2=verbose output, 3=very verbose output'))], None, None))]))
Module(None, Stmt([Class('OVERLAPPED', [Name('Structure')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('final_attrs', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'build_attrs'), [Name('attrs'), Keyword('type', Const('checkbox')), Keyword('name', Name('name'))], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('test_runner_class'), Const('option_list')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('content_disposition'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--noinput'), Keyword('action', Const('store_false')), Keyword('dest', Const('interactive')), Keyword('default', Name('True')), Keyword('help', Const('Tells Django to NOT prompt the user for input of any kind.'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('min'), [Subscript(Getattr(Getattr(Name('self'), 'management_form'), 'cleaned_data'), 'OP_APPLY', [Name('TOTAL_FORM_COUNT')]), Getattr(Name('self'), 'absolute_max')], None, None))]))
Module(None, Stmt([Assign([AssName('TOKEN_VAR', 'OP_ASSIGN')], Const(1))]))
Module(None, Stmt([Assign([AssName('ignore', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'pop'), [Const('ignorenonexistent'), Name('False')], None, None))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('hashlib'), 'sha1'), [Add((Name('key_salt'), Name('secret')))], None, None), 'digest'), [], None, None))]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Name('mark_safe'), [Name('new_obj')], None, None))]))
Module(None, Stmt([Function(None, 'gettext', ['message'], [], 0, None, Stmt([Pass()]))]))
except AttributeError :
try :
Module(None, Stmt([Assign([AssName('INDEX_PATTERN', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^\\[\\s*(\\w+)\\s*\\]\\s*')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('getattr'), [Name('settings'), Name('format_type')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const('%r received an invalid token: %r'), Tuple([Subscript(Name('bits'), 'OP_APPLY', [Const(0)]), Subscript(Name('remaining_bits'), 'OP_APPLY', [Const(0)])])))], None, None), None, None)]))
Module(None, Stmt([Function(None, '_isdst', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'unlink'), [Name('pot_path')], None, None))]))
Module(None, Stmt([Assign([AssName('iteritems', 'OP_ASSIGN')], Name('_iteritems'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('t'), 'render'), [CallFunc(Name('Context'), [Name('dictionary')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'inclusion_tag', ['self', 'file_name', 'context_class', 'takes_context', 'name'], [Name('Context'), Name('False'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('alter_sql'), 'extend'), [ListComp(Add((Const('-- '), Name('sql'))), [ListCompFor(AssName('sql', 'OP_ASSIGN'), CallFunc(Getattr(Getattr(Name('connection'), 'creation'), 'sql_for_pending_references'), [Name('model'), Name('style'), Name('pending_references')], None, None), [])])], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, 'ungettext', ['singular', 'plural', 'number'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('label', 'OP_ASSIGN')], Const(''))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'paths_to_remove'), 'append'), [Name('tempdir')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Name('errors')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), '_post', 'OP_ASSIGN'), AssAttr(Name('self'), '_files', 'OP_ASSIGN')])], Tuple([CallFunc(Name('QueryDict'), [Getattr(Name('self'), 'body'), Keyword('encoding', Getattr(Name('self'), '_encoding'))], None, None), CallFunc(Name('MultiValueDict'), [], None, None)]))]))
Module(None, Stmt([Assign([AssName('sent', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_send'), [Name('message')], None, None))]))
Module(None, Stmt([Return(Lambda(['x'], [], 0, Name('x')))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([From('django.db.models.fields.related', [('RelatedObject', None)], 0)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Name('c'), [], None, Name('kwargs')))]))
else :
except UnicodeDecodeError :
Module(None, Stmt([If([(Getattr(Getattr(Getattr(Getattr(Name('field'), 'rel'), 'through'), '_meta'), 'auto_created'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('version', 'OP_ASSIGN')], Getattr(Name('self'), 'version'))]))
Module(None, Stmt([If([(Compare(Name('delta'), [('<', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('flat'))]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Name('hextet'), 'count'), [Const('.')], None, None), [('==', Const(3))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('code_list'), 'append'), [Subscript(Name('background'), 'OP_APPLY', [Name('v')])], None, None))]))
Module(None, Stmt([Global(['_mtimes', '_win'])]))
Module(None, Stmt([From('django.utils', [('archive', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [CallFunc(Getattr(Name('self'), 'render_option'), [Name('selected_choices'), Name('option_value'), Name('option_label')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'localize_input', ['value', 'default'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Subscript(Name('t'), 'OP_APPLY', [Const(1)]), [('is', Name('True'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([AssName('cookie_value', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'COOKIES'), 'OP_APPLY', [Name('key')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('sys'), 'stderr'), 'close'), [], None, None))]))
Module(None, Stmt([Assign([AssName('data_set', 'OP_ASSIGN')], CallFunc(Name('set'), [GenExpr(GenExprInner(CallFunc(Name('force_text'), [Name('value')], None, None), [GenExprFor(AssName('value', 'OP_ASSIGN'), Name('data'), [])]))], None, None))]))
Module(None, Stmt([Return(Subscript(Getattr(Name('_time'), 'tzname'), 'OP_APPLY', [CallFunc(Getattr(Name('self'), '_isdst'), [Name('dt')], None, None)]))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Name('func'), [], Name('args'), None))]))
Module(None, Stmt([From('django.forms.utils', [('flatatt', None), ('to_current_timezone', None)], 0)]))
Module(None, Stmt([If([(Getattr(Name('command'), 'use_argparse'), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([If([(And([Name('strings_only'), CallFunc(Name('is_protected_type'), [Name('s')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('change'), [('==', Name('FILE_MODIFIED'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('nodelist', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'create_nodelist'), [], None, None))]))
Module(None, Stmt([If([(Or([Not(Getattr(Name('f'), 'editable')), CallFunc(Name('isinstance'), [Name('f'), Getattr(Name('models'), 'AutoField')], None, None), Compare(Getattr(Name('f'), 'name'), [('not in', Name('cleaned_data'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('locale', None)])]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('stream_created', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'open'), [], None, None))]))
Module(None, Stmt([Assign([AssName('content_length', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'number', 'OP_ASSIGN')], Name('number'))]))
Module(None, Stmt([Return(CallFunc(Name('do_ifequal'), [Name('parser'), Name('token'), Name('False')], None, None))]))
Module(None, Stmt([Assign([AssName('new_filenames', 'OP_ASSIGN')], ListComp(Getattr(Name('filename'), '__file__'), [ListCompFor(AssName('filename', 'OP_ASSIGN'), Name('new_modules'), [ListCompIf(CallFunc(Name('hasattr'), [Name('filename'), Const('__file__')], None, None))])]))]))
Module(None, Stmt([If([(Name('close'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('ch2', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([If([(Compare(Const('%(truncated_text)s'), [('in', Name('truncate'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_archive'), 'list'), [], None, None))]))
Module(None, Stmt([If([(Compare(Const('.'), [('in', Name('exclude'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('content_length', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('factory', 'OP_ASSIGN')], Name('klass'))]))
Module(None, Stmt([Assign([Subscript(Name('context'), 'OP_ASSIGN', [Getattr(Name('self'), 'var_name')])], Name('obj'))]))
else :
Module(None, Stmt([Function(None, 'add_root_elements', ['self', 'handler'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.encoding', [('python_2_unicode_compatible', None)], 0)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'data', 'func', 'prefix'], [], 0, None, Stmt([Pass()]))]))
except VariableDoesNotExist :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const("Loading '%s' fixtures..."), Name('fixture_name')))], None, None))]))
Module(None, Stmt([Function(None, 'parse_bits', ['parser', 'bits', 'params', 'varargs', 'varkw', 'defaults', 'takes_context', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.six.moves', [('copyreg', None)], 0)]))
Module(None, Stmt([Assign([AssName('dlen', 'OP_ASSIGN')], CallFunc(Name('len'), [Or([Name('defaults'), List(())])], None, None))]))
Module(None, Stmt([Function(None, '__copy__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('DummyCache', [Name('BaseCache')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'html_initial_name', 'OP_ASSIGN')], CallFunc(Getattr(Name('form'), 'add_initial_prefix'), [Name('name')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('path'), 'isdir'), [Name('expanded_template')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('data'))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Return(Tuple([Getattr(Name('copyreg'), '_reconstructor'), Tuple([Getattr(Name('self'), '__class__'), Name('object'), Name('None')]), CallFunc(Getattr(Name('self'), '__getstate__'), [], None, None)]))]))
Module(None, Stmt([Assign([AssName('models', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))]))
Module(None, Stmt([Assign([AssName('MAXSIZE', 'OP_ASSIGN')], Getattr(Name('sys'), 'maxsize'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('block_context'), 'add_blocks'), [Name('blocks')], None, None))]))
Module(None, Stmt([From('importlib', [('import_module', None)], 0)]))
Module(None, Stmt([Assign([AssName('default_error_messages', 'OP_ASSIGN')], Dict([(Const('list'), CallFunc(Name('_'), [Const('Enter a list of values.')], None, None)), (Const('invalid_choice'), CallFunc(Name('_'), [Const('Select a valid choice. %(value)s is not one of the available choices.')], None, None)), (Const('invalid_pk_value'), CallFunc(Name('_'), [Const('"%(pk)s" is not a valid value for a primary key.')], None, None))]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('attachment'), Name('MIMEBase')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('factory', 'OP_ASSIGN')], Subscript(Name('config'), 'OP_APPLY', [Const('()')]))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'base_fields'), 'OP_ASSIGN', [Name('INITIAL_FORM_COUNT')])], CallFunc(Name('IntegerField'), [Keyword('widget', Name('HiddenInput'))], None, None))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('message'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(Name('data'), 'encode'), [Getattr(Name('fp'), 'encoding'), Name('errors')], None, None))]))
Module(None, Stmt([Assign([AssName('form', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'forms'), 'OP_APPLY', [Name('i')]))]))
Module(None, Stmt([Assign([AssName('initial_prefixed_name', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'add_initial_prefix'), [Name('name')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Const('Performing system checks...\n\n')], None, None))]))
@ python_2_unicode_compatible
Module(None, Stmt([Function(None, 'check_for_language', ['lang_code'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'get_unique_error_message', ['self', 'unique_check'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssName('model_dependencies', 'OP_ASSIGN')], Name('skipped'))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('', [('Warning', None), ('register', None), ('Tags', None)], 2)]))
Module(None, Stmt([Assign([AssName('timeout', 'OP_ASSIGN')], Getattr(Name('self'), 'default_timeout'))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('QueryDict'), Name('self')], None, None), 'popitem'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--database'), Keyword('default', Name('DEFAULT_DB_ALIAS')), Keyword('help', Const('Nominates a database to print the SQL for. Defaults to the "default" database.'))], None, None))]))
from django . core . exceptions import ImproperlyConfigured
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('TypedChoiceField'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([Subscript(Name('daemon_kwargs'), 'OP_ASSIGN', [Const('err_log')])], Subscript(Name('options'), 'OP_APPLY', [Const('errlog')]))]))
Module(None, Stmt([If([(And([Compare(Name('name'), [('is', Name('None'))]), Compare(Name('compile_function'), [('is', Name('None'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('db', 'OP_ASSIGN')], CallFunc(Getattr(Name('router'), 'db_for_write'), [Getattr(Name('self'), 'cache_model_class')], None, None))]))
else :
try :
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('resolver', 'OP_ASSIGN')], CallFunc(Name('get_ns_resolver'), [Name('ns_pattern'), Name('resolver')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Name('re'), 'sub'), [Const('[-\\s]+'), Const('-'), Name('value')], None, None)], None, None))]))
Module(None, Stmt([For(AssName('line', 'OP_ASSIGN'), CallFunc(Getattr(Name('content'), 'split'), [Const('\n')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Mod((Const('Reversing by dotted path is deprecated (%s).'), Name('original_lookup'))), Name('RemovedInDjango20Warning'), Keyword('stacklevel', Const(3))], None, None))]))
try :
Module(None, Stmt([Assign([AssName('pos', 'OP_ASSIGN')], CallFunc(Getattr(Name('m'), 'end'), [Const(0)], None, None))]))
try :
try :
Module(None, Stmt([Assign([AssName('_iterlists', 'OP_ASSIGN')], Const('iterlists'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'stream', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'pop'), [Const('stream'), CallFunc(Getattr(Name('six'), 'StringIO'), [], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'handle_fk_field', ['self', 'obj', 'field'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'deactivate', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('key_func'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('SlugField', [Name('CharField')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("Cannot find a migration matching '%s' from app '%s'."), Tuple([Name('migration_name'), Name('app_label')])))], None, None), None, None)]))
else :
Module(None, Stmt([Function(None, 'resolve', ['self', 'context', 'ignore_failures'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('f'), 'write'), [CallFunc(Getattr(Name('zlib'), 'compress'), [CallFunc(Getattr(Name('pickle'), 'dumps'), [Name('value')], None, None), UnarySub(Const(1))], None, None)], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("App '%s' has migrations. Only the sqlmigrate and sqlflush commands can be used when an app has migrations."), Getattr(Name('app_config'), 'label')))], None, None), None, None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('data'), 'get'), [Name('name'), Name('None')], None, None))]))
Module(None, Stmt([Function(None, 'parse_http_date_safe', ['date'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'regex', 'urlconf_name', 'default_kwargs', 'app_name', 'namespace'], [Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('nm', 'OP_ASSIGN'), AssName('addr', 'OP_ASSIGN')])], Name('addr'))]))
Module(None, Stmt([From('django.template.loader', [('BaseLoader', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('name'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('author_name')])], None, None))]))
Module(None, Stmt([Assign([AssName('__nonzero__', 'OP_ASSIGN')], CallFunc(Name('new_method_proxy'), [Name('bool')], None, None))]))
Module(None, Stmt([Return(Name('view_func'))]))
Module(None, Stmt([Assign([AssName('FILE_INPUT_CONTRADICTION', 'OP_ASSIGN')], CallFunc(Name('object'), [], None, None))]))
Module(None, Stmt([Assign([Subscript(Subscript(Getattr(Name('self'), 'cookies'), 'OP_APPLY', [Name('key')]), 'OP_ASSIGN', [Const('secure')])], Name('True'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'stream_or_string', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('socket', None)])]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('cls'), [Getattr(Name('date'), 'year'), Getattr(Name('date'), 'month'), Getattr(Name('date'), 'day'), Getattr(Name('time'), 'hour'), Getattr(Name('time'), 'minute'), Getattr(Name('time'), 'second'), Getattr(Name('time'), 'microsecond'), Getattr(Name('time'), 'tzinfo')], None, None))]))
Module(None, Stmt([Assign([AssName('renderer', 'OP_ASSIGN')], Name('CheckboxFieldRenderer'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('IncludeNode'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
elif char in 'dj' :
Module(None, Stmt([Assign([AssName('base64', 'OP_ASSIGN')], CallFunc(Name('BaseConverter'), [Name('BASE64_ALPHABET'), Keyword('sign', Const('$'))], None, None))]))
Module(None, Stmt([If([(Not(Name('digest')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('flags', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'base_url'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('sql_files', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('path'), Getattr(Name('six'), 'string_types')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('empty', 'OP_ASSIGN')], CallFunc(Name('object'), [], None, None))]))
Module(None, Stmt([Assign([AssName('ext', 'OP_ASSIGN')], Slice(Name('ext'), 'OP_APPLY', None, Const(255)))]))
Module(None, Stmt([Assign([AssName('nodelist', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('self'), Name('attr'), Name('None')], None, None))]))
Module(None, Stmt([Class('ChunkIter', [Getattr(Name('six'), 'Iterator')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Name('level'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Name('add_move'), [CallFunc(Name('MovedModule'), [Const('_dummy_thread'), Const('dummy_thread')], None, None)], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_client'))]))
Module(None, Stmt([Function(None, '__eq__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'indent'), [Const(2)], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Getattr(Name('datetime'), 'date')], None, None), Stmt([Pass()]))], None)]))
except IOError as e :
elif isinstance ( value , six . string_types ) :
Module(None, Stmt([Import([('errno', None)])]))
Module(None, Stmt([Assign([AssName('path_info', 'OP_ASSIGN')], CallFunc(Name('get_path_info'), [Name('environ')], None, None))]))
Module(None, Stmt([If([(And([Not(CallFunc(Name('callable'), [Name('original_lookup')], None, None)), CallFunc(Name('callable'), [Name('lookup_view')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'multiple_chunks', ['self', 'chunk_size'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Assign([AssName('clean', 'OP_ASSIGN')], Lambda(['self', 'x'], [], 0, Name('x')))]))
raise ValueError ( "@python_2_unicode_compatible cannot be applied "  "to %s because it doesn't define __str__()." %  klass . __name__ )
Module(None, Stmt([Assign([AssName('app_configs', 'OP_ASSIGN')], List([Name('app_config')]))]))
Module(None, Stmt([If([(Subscript(Name('row'), 'OP_APPLY', [Const(6)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'close', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('data'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
try :
except SuspiciousOperation as e :
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([If([(Name('USE_INOTIFY'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('related_att'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'add_never_cache_headers', ['response'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [Name('UnreadablePostError'), CallFunc(Name('UnreadablePostError'), [], Getattr(Name('e'), 'args'), None), Subscript(CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), 'OP_APPLY', [Const(2)])], None, None))]))
@ HttpResponse . content . setter
Module(None, Stmt([Function(None, 'normalize', ['pattern'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'nud', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Subscript(Name('pieces'), 'OP_APPLY', [UnarySub(Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('object_data', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'var1', 'OP_ASSIGN'), AssAttr(Name('self'), 'var2', 'OP_ASSIGN')])], Tuple([Name('var1'), Name('var2')]))]))
Module(None, Stmt([Assign([AssName('title', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Add((Const('Deprecated. Use "check" command instead. '), Getattr(Name('CheckCommand'), 'help'))))]))
Module(None, Stmt([If([(Name('commit'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('ErrorList'), Name('self')], None, None), '__init__'), [Name('initlist')], None, None))]))
Module(None, Stmt([AugAssign(Name('weight'), '+=', Const(2))]))
Module(None, Stmt([Assign([AssName('absolute_path', 'OP_ASSIGN')], CallFunc(Getattr(Name('path'), 'abspath'), [Name('expanded_template')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('QueryDict'), Name('self')], None, None), '__init__'), [], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('_', 'OP_ASSIGN'), AssName('content_params', 'OP_ASSIGN')])], CallFunc(Getattr(Name('cgi'), 'parse_header'), [CallFunc(Getattr(Name('environ'), 'get'), [Const('CONTENT_TYPE'), Const('')], None, None)], None, None))]))
Module(None, Stmt([AssName('frame', 'OP_DELETE')]))
def get_exception_response ( self , request , resolver , status_code ) :
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('form'), Const('Meta')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('_localtime'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, 'conditional_content_removal', ['request', 'response'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Subscript(Name('dict_'), 'OP_APPLY', [Name('key')]))]))
Module(None, Stmt([Function(None, 'values', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('val', 'OP_ASSIGN')], CallFunc(Name('list'), [Name('val')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'parsed', 'OP_ASSIGN')], Name('parsed'))]))
Module(None, Stmt([If([(Compare(Subscript(Name('options'), 'OP_APPLY', [Const('daemonize')]), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('field_type', 'OP_ASSIGN'), AssName('new_params', 'OP_ASSIGN')])], Name('field_type'))]))
Module(None, Stmt([Assign([AssName('urlconf', 'OP_ASSIGN')], CallFunc(Name('get_urlconf'), [], None, None))]))
Module(None, Stmt([Assign([AssName('get_valid_filename', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('get_valid_filename'), Getattr(Name('six'), 'text_type')], None, None))]))
Module(None, Stmt([Assign([AssName('ip_str', 'OP_ASSIGN')], CallFunc(Name('_sanitize_ipv4_mapping'), [Name('ip_str')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Getattr(Name('six'), 'string_types')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Const("Invalid syntax in widthratio tag. Expecting 'as' keyword")], None, None), None, None)]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Return(Add((CallFunc(Name('format_html_join'), [Const(''), Const(' {0}="{1}"'), CallFunc(Name('sorted'), [CallFunc(Getattr(Name('attrs'), 'items'), [], None, None)], None, None)], None, None), CallFunc(Name('format_html_join'), [Const(''), Const(' {0}'), CallFunc(Name('sorted'), [Name('boolean_attrs')], None, None)], None, None))))]))
Module(None, Stmt([If([(Or([Compare(Getattr(Name('self'), 'selected_fields'), [('is', Name('None'))]), Compare(Getattr(Name('field'), 'attname'), [('in', Getattr(Name('self'), 'selected_fields'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('token'), 'contents'), [('==', Const('empty'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Import([('time', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'add_error'), [Name('None'), Name('errors')], None, None))]))
Module(None, Stmt([If([(Compare(Name('decimal_pos'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(CallFunc(Getattr(Name('ip_str'), 'lower'), [], None, None), 'startswith'), [Const('0000:0000:0000:0000:0000:ffff:')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('substitutions', 'OP_ASSIGN')], Dict([(Const('initial_text'), Getattr(Name('self'), 'initial_text')), (Const('input_text'), Getattr(Name('self'), 'input_text')), (Const('clear_template'), Const('')), (Const('clear_checkbox_label'), Getattr(Name('self'), 'clear_checkbox_label'))]))]))
elif ch == '.' :
Module(None, Stmt([If([(Compare(Name('key_prefix'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('dirs', 'OP_ASSIGN')], ListComp(CallFunc(Name('upath'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'abspath'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'realpath'), [Name('d')], None, None)], None, None)], None, None), [ListCompFor(AssName('d', 'OP_ASSIGN'), Name('dirs'), [])]))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Assign([AssName('queryset', 'OP_ASSIGN')], Getattr(Getattr(Name('self'), 'model'), '_default_manager'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'name', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'data', 'encoder', 'safe', 'kwargs'], [Name('DjangoJSONEncoder'), Name('True')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Name('middleware'), 'process_view'), [Name('request'), Name('view_func'), Name('args'), Name('kwargs')], None, None))]))
Module(None, Stmt([Function(None, 'register', ['self', 'tags'], [], 4, None, Stmt([Pass()]))]))
except UnicodeEncodeError :
Module(None, Stmt([Assign([AssName('r', 'OP_ASSIGN')], CallFunc(Getattr(Name('o'), 'isoformat'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('save'), 'alters_data', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([From('django.utils.timezone', [('is_aware', None), ('utc', None)], 0)]))
Module(None, Stmt([Function(None, 'rss_attributes', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('form', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'forms'), 'OP_APPLY', [Name('i')]))]))
Module(None, Stmt([Class('PageNotAnInteger', [Name('InvalidPage')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('init_path', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('migrations_directory'), Const('__init__.py')], None, None))]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], Name('None'))]))
@ register . filter ( is_safe = True )
Module(None, Stmt([Assign([AssName('_func_code', 'OP_ASSIGN')], Const('func_code'))]))
Module(None, Stmt([Assign([AssName('common_ancestor', 'OP_ASSIGN')], Subscript(Name('level'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Const(' (no migrations)'), Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_FAILURE')], None, None))]))
Module(None, Stmt([Assign([AssName('input_type', 'OP_ASSIGN')], Name('None'))]))
else :
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('requires_system_checks', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Installs the named fixture(s) in the database.'))]))
Module(None, Stmt([Return(CallFunc(Name('urlquote'), [Name('value')], None, Name('kwargs')))]))
Module(None, Stmt([For(AssName('templatetag_module', 'OP_ASSIGN'), Name('templatetags_modules_candidates'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'files', 'OP_ASSIGN')], Or([Name('files'), Dict(())]))]))
Module(None, Stmt([Function(None, 'listdir', ['self', 'path'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'advance_iterator', ['it'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('xml.sax.saxutils', [('XMLGenerator', None)], 0)]))
Module(None, Stmt([Assign([AssName('cache_key', 'OP_ASSIGN')], Mod((Const('views.decorators.cache.cache_page.%s.%s.%s.%s'), Tuple([Name('key_prefix'), Name('method'), CallFunc(Getattr(Name('url'), 'hexdigest'), [], None, None), CallFunc(Getattr(Name('ctx'), 'hexdigest'), [], None, None)]))))]))
Module(None, Stmt([Assign([AssName('TEMPLATE_FRAGMENT_KEY_TEMPLATE', 'OP_ASSIGN')], Const('template.cache.%s.%s'))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Return(Name('statements'))]))
Module(None, Stmt([While(Compare(Mod((Const('%s_%d'), Tuple([Name('new_name'), Name('num')]))), [('in', Name('used_column_names'))]), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('TextInput'), Name('self')], None, None), '__init__'), [Name('attrs')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_SUCCESS'), [Const(' FAKED')], None, None)], None, None))]))
Module(None, Stmt([If([(And([Name('exclude'), Compare(Getattr(Name('f'), 'name'), [('in', Name('exclude'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('StreamingHttpResponse'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('locales', 'OP_ASSIGN')], List([Name('locale')]))]))
Module(None, Stmt([Function(None, 'encode', ['self', 'i'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_cull'), [Name('db'), Name('cursor'), Name('now')], None, None))]))
Module(None, Stmt([Function(None, 'ungettext', ['singular', 'plural', 'number'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'end_serialization'), [], None, None))]))
Module(None, Stmt([If([(Or([Compare(Name('data'), [('is', Name('None'))]), CallFunc(Name('isinstance'), [Name('data'), Name('dict')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'merge'), Name('conflicts')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('dirs'))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Getattr(Name('self'), '_dir'), CallFunc(Getattr(Const(''), 'join'), [List([CallFunc(Getattr(CallFunc(Getattr(Name('hashlib'), 'md5'), [CallFunc(Name('force_bytes'), [Name('key')], None, None)], None, None), 'hexdigest'), [], None, None), Getattr(Name('self'), 'cache_suffix')])], None, None)], None, None))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('base_directory', 'OP_ASSIGN')], Mod((Const('%s_directory'), Name('app_or_project'))))]))
Module(None, Stmt([Assign([AssName('objects_in_fixture', 'OP_ASSIGN')], Const(0))]))
except ValueError :
Module(None, Stmt([If([(Not(Subscript(Name('url_fields'), 'OP_APPLY', [Const(0)])), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('att_name', 'OP_ASSIGN'), AssName('params', 'OP_ASSIGN'), AssName('notes', 'OP_ASSIGN')])], CallFunc(Getattr(Name('self'), 'normalize_col_name'), [Name('column_name'), Name('used_column_names'), Name('is_relation')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('DictWrapper'), Name('self')], None, None), '__getitem__'), [Name('key')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('nodes'), 'append'), [Name('self')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('sys'), 'exit'), [Const(1)], None, None))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('arg', 'OP_ASSIGN')], CallFunc(Name('ugettext'), [Const('yes,no,maybe')], None, None))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Assign([AssName('executor', 'OP_ASSIGN')], CallFunc(Name('MigrationExecutor'), [Name('connection'), Getattr(Name('self'), 'migration_progress_callback')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Getattr(Name('self'), 'field'), 'label'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'save_m2m', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('app_label', 'OP_ASSIGN'), AssName('model_label', 'OP_ASSIGN')])], CallFunc(Getattr(Name('label'), 'split'), [Const('.')], None, None))]))
Module(None, Stmt([Function(None, 'csrf', ['request'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssName('force_unicode', 'OP_ASSIGN')], Name('force_text'))]))
Module(None, Stmt([For(AssName('f', 'OP_ASSIGN'), Name('dirs'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('regex_match', 'OP_ASSIGN')], CallFunc(Getattr(Name('language_code_prefix_re'), 'match'), [Name('path')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'close'), [], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_errors'))]))
@ wraps ( fget )
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Name('kwargs'), 'get'), [Name('k'), Name('v')], None, None), [('!=', Name('v'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('exp', 'OP_ASSIGN')], CallFunc(Getattr(Name('pickle'), 'load'), [Name('f')], None, None))]))
Module(None, Stmt([For(AssName('app_config', 'OP_ASSIGN'), CallFunc(Getattr(Name('apps'), 'get_app_configs'), [], None, None), Stmt([Pass()]), None)]))
full_statement . append ( '    %s%s' % ( line , ',' if i < len ( table_output ) - 1 else '' ) )
Module(None, Stmt([Assign([AssName('target_app_labels_only', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('values', 'OP_ASSIGN')], List(()))]))
except AttributeError :
try :
Module(None, Stmt([From('django.utils.encoding', [('force_str', None)], 0)]))
Module(None, Stmt([Assign([AssName('urlconf', 'OP_ASSIGN')], CallFunc(Name('get_urlconf'), [], None, None))]))
try :
Module(None, Stmt([Function(None, 'handle_data', ['self', 'd'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('template_source_loaders', 'OP_ASSIGN')], CallFunc(Name('tuple'), [Name('loaders')], None, None))]))
Module(None, Stmt([Return(Compare(Name('tag'), [('in', CallFunc(Getattr(Name('self'), 'tags_available'), [], None, None))]))]))
Module(None, Stmt([Assign([AssAttr(Name('_dec'), '__name__', 'OP_ASSIGN')], Mod((Const('method_decorator(%s)'), Getattr(Name('decorator'), '__name__'))))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_callback', 'OP_ASSIGN')], Name('callback'))]))
Module(None, Stmt([Function(None, 'comment', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('link'), 'OP_ASSIGN', [Name('PREV')])], Name('last'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('f'), 'write'), [CallFunc(Getattr(Name('pickle'), 'dumps'), [Name('expiry'), UnarySub(Const(1))], None, None)], None, None))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY2'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('pattern', 'OP_ASSIGN')], CallFunc(Getattr(Name('pattern'), 'lower'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--database'), Keyword('action', Const('store')), Keyword('dest', Const('database')), Keyword('default', Name('DEFAULT_DB_ALIAS')), Keyword('help', Const('Nominates a database onto which to open a shell. Defaults to the "default" database.'))], None, None))]))
Module(None, Stmt([Function(None, '__deepcopy__', ['self', 'memo'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'validate_key', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'N', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Name('expires')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'get_library', ['library_name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('db_module', 'OP_ASSIGN')], Const('django.db'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_changed_data'), 'append'), [Name('name')], None, None))]))
Module(None, Stmt([Assign([AssName('zfile', 'OP_ASSIGN')], CallFunc(Name('GzipFile'), [Keyword('mode', Const('wb')), Keyword('compresslevel', Const(6)), Keyword('fileobj', Name('buf'))], None, None))]))
Module(None, Stmt([Assign([AssName('escaped', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Class('WSGIRequest', [Getattr(Name('http'), 'HttpRequest')], None, Stmt([Pass()]), None)]))
try :
Module(None, Stmt([Assign([AssName('location', 'OP_ASSIGN')], Getattr(Name('settings'), 'MEDIA_ROOT'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'to_field', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('to_field'), Name('None')], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([AugAssign(Name('used'), '+=', Add((Const('.'), Name('frag'))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('boolean_attrs'), 'append'), [Tuple([Name('attr')])], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Const('Invalid arguments provided to simple_tag')], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('plural'), 'append'), [Mod((Const('%%(%s)s'), Getattr(Name('t'), 'contents')))], None, None))]))
Module(None, Stmt([For(AssName('c', 'OP_ASSIGN'), CallFunc(Name('reversed'), [Getattr(Getattr(Name('self'), '__class__'), '__mro__')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], List([Const('CheckMessage'), Const('Debug'), Const('Info'), Const('Warning'), Const('Error'), Const('Critical'), Const('DEBUG'), Const('INFO'), Const('WARNING'), Const('ERROR'), Const('CRITICAL'), Const('register'), Const('run_checks'), Const('tag_exists'), Const('Tags')]))]))
try :
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('atom:link'), Name('None'), Dict([(Const('rel'), Const('self')), (Const('href'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('feed_url')]))])], None, None))]))
Module(None, Stmt([For(AssName('name', 'OP_ASSIGN'), Getattr(Name('self'), 'fields'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'max_length', 'OP_ASSIGN'), AssAttr(Name('self'), 'min_length', 'OP_ASSIGN')])], Tuple([Name('max_length'), Name('min_length')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stream'), 'write'), [Const(',')], None, None))]))
Module(None, Stmt([Assign([AssName('app_config', 'OP_ASSIGN')], CallFunc(Getattr(Name('apps'), 'get_app_config'), [Name('app_label')], None, None))]))
Module(None, Stmt([Function(None, 'get_script_prefix', (), (), 0, None, Stmt([Pass()]))]))
chars = 'abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)'
Module(None, Stmt([Assign([AssName('changes', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Name('app'), List([CallFunc(Name('Migration'), [Const('custom'), Name('app')], None, None)])]), [GenExprFor(AssName('app', 'OP_ASSIGN'), Name('app_labels'), [])]))], None, None))]))
Module(None, Stmt([Assign([AssName('register', 'OP_ASSIGN')], CallFunc(Name('Library'), [], None, None))]))
Module(None, Stmt([Assign([AssName('supports_microseconds', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Return(Add((Mul((Getattr(Name('offset'), 'days'), Const(86400))), Getattr(Name('offset'), 'seconds'))))]))
Module(None, Stmt([For(AssName('name', 'OP_ASSIGN'), Name('formatters'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'parent_widget', 'OP_ASSIGN')], Name('parent_widget'))]))
try :
Module(None, Stmt([Assign([AssName('body_msg', 'OP_ASSIGN')], Name('msg'))]))
Module(None, Stmt([Assign([AssName('db', 'OP_ASSIGN')], CallFunc(Getattr(Name('router'), 'db_for_write'), [Getattr(Name('self'), 'cache_model_class')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'invoked_for_django', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [CallFunc(Name('pformat'), [Getattr(Name('sys'), 'modules')], None, None)], None, None))]))
try :
Module(None, Stmt([Return(CallFunc(Getattr(Name('fp'), 'getvalue'), [], None, None))]))
Module(None, Stmt([Function(None, 'content', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('errors'), 'append'), [CallFunc(Name('Error'), [Mod((Const("%s was connected to the '%s' signal with a lazy reference to the '%s' sender, which has not been installed."), Tuple([Name('description'), Name('name'), CallFunc(Getattr(Const('.'), 'join'), [Name('reference')], None, None)]))), Keyword('obj', Getattr(Name('receiver'), '__module__')), Keyword('hint', Name('None')), Keyword('id', Const('signals.E001'))], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('forms_to_delete', 'OP_ASSIGN')], Getattr(Name('self'), 'deleted_forms'))]))
Module(None, Stmt([Function(None, 'get_random_string', ['length', 'allowed_chars'], [Const(12), Const('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('msvcrt', None)])]))
Module(None, Stmt([Class('Module_six_moves_urllib', [Getattr(Name('types'), 'ModuleType')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('pattern'), 'name'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('base16', 'OP_ASSIGN')], CallFunc(Name('BaseConverter'), [Name('BASE16_ALPHABET')], None, None))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Getattr(Name('token'), 'split_contents'), [], None, None))]))
Module(None, Stmt([Function(None, '_generate_cache_header_key', ['key_prefix', 'request'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('p', 'OP_ASSIGN'), Name('path'), Stmt([Pass()]), None)]))
@ property
Module(None, Stmt([Function(None, 'W', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('num', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(Name('cursor'), 'fetchone'), [], None, None), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Function(None, '__new__', ['cls', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
label_suffix = ( self . field . label_suffix if self . field . label_suffix is not None  else self . form . label_suffix )
Module(None, Stmt([Assign([AssName('priority', 'OP_ASSIGN')], CallFunc(Name('float'), [Name('priority')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid')]), Keyword('code', Const('invalid'))], None, None), None, None)]))
Module(None, Stmt([If([(Name('display_num_errors'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'format', ['self', 'formatstr'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('truncate', 'OP_ASSIGN')], CallFunc(Name('pgettext'), [Const('String to return when truncating text'), Const('%(truncated_text)s...')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Subscript(Getattr(Name('self'), '_errors'), 'OP_APPLY', [Name('field')]), 'extend'), [Name('error_list')], None, None))]))
Module(None, Stmt([Assign([AssName('space', 'OP_ASSIGN')], CallFunc(Name('unicode'), [Const(' ')], None, None))]))
Module(None, Stmt([Discard(Yield(Mod((Const('    %s'), Name('field_desc')))))]))
Module(None, Stmt([From('datetime', [('timedelta', None), ('tzinfo', None)], 0)]))
Module(None, Stmt([Assign([AssTuple([AssName('resolved_args', 'OP_ASSIGN'), AssName('resolved_kwargs', 'OP_ASSIGN')])], CallFunc(Getattr(Name('self'), 'get_resolved_arguments'), [Name('context')], None, None))]))
Module(None, Stmt([For(AssName('form', 'OP_ASSIGN'), Getattr(Name('self'), 'initial_forms'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Name('incremental'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Getattr(Name('self'), 'empty_value'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Mod((Const('* %s'), Name('field')))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'close'), [], None, None))]))
Module(None, Stmt([Return(Name('iri'))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], Const(0))]))
else :
Module(None, Stmt([From('django.db', [('models', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
except LookupError :
Module(None, Stmt([If([(Compare(Name('path'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.core.management.base', [('CommandError', None)], 0)]))
Module(None, Stmt([Function(None, 'dst', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('intrans', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([If([(Not(Name('plan')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_boundary', 'OP_ASSIGN')], Name('boundary'))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('app_name', 'OP_ASSIGN'), Name('app_names'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('initial'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
@ stringfilter
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_is_rendered'))]))
Module(None, Stmt([Assign([Subscript(Name('input_attrs'), 'OP_ASSIGN', [Const('id')])], Mod((Const('%s_%s'), Tuple([Name('id_'), Name('i')]))))]))
@ register . tag
Module(None, Stmt([Discard(CallFunc(Getattr(Name('sys'), 'exit'), [Const(1)], None, None))]))
else :
except Exception as e :
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('limit_choices_to'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__getinitargs__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('collections', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('django'), 'setup'), [], None, None))]))
Module(None, Stmt([Raise(CallFunc(Getattr(Name('self'), 'source_error'), [Name('source'), Name('msg')], None, None), None, None)]))
Module(None, Stmt([Raise(CallFunc(Name('NoReverseMatch'), [Mod((Const("Error importing '%s': %s."), Tuple([Name('lookup_view'), Name('e')])))], None, None), None, None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('tok'), 'startswith'), [Const("'")], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('format_html'), [Const('<ul class="errorlist">{0}</ul>'), CallFunc(Name('format_html_join'), [Const(''), Const('<li>{0}{1}</li>'), GenExpr(GenExprInner(Tuple([Name('k'), CallFunc(Name('force_text'), [Name('v')], None, None)]), [GenExprFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('self'), 'items'), [], None, None), [])]))], None, None)], None, None))]))
Module(None, Stmt([If([(Or([Compare(Getattr(Name('app_config'), 'models_module'), [('is', Name('None'))]), Compare(Name('app_config'), [('in', Name('excluded_apps'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('ret', 'OP_ASSIGN')], CallFunc(Getattr(Name('fcntl'), 'flock'), [CallFunc(Name('_fd'), [Name('f')], None, None), Name('flags')], None, None))]))
Module(None, Stmt([Assign([AssName('exp', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), '_expire_info'), 'get'), [Name('key'), UnarySub(Const(1))], None, None))]))
Module(None, Stmt([Function(None, 'unlock', ['f'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Tuple([List([Name('first_item'), Name('second_item')]), Name('old_style_list')]))]))
Module(None, Stmt([Return(Mod((CallFunc(Name('ugettext'), [Const('Please correct the duplicate data for %(field)s, which must be unique.')], None, None), Dict([(Const('field'), CallFunc(Name('get_text_list'), [Name('unique_check'), CallFunc(Getattr(Name('six'), 'text_type'), [CallFunc(Name('_'), [Const('and')], None, None)], None, None)], None, None))]))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('default_attrs'), 'update'), [Name('attrs')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('error_messages'), 'OP_ASSIGN', [Const('invalid')])], Name('error_message'))]))
Module(None, Stmt([Function(None, 'handle_default_options', ['options'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const("'%s.%s' has no ForeignKey to '%s.%s'."), Tuple([Getattr(Getattr(Name('model'), '_meta'), 'app_label'), Getattr(Getattr(Name('model'), '_meta'), 'object_name'), Getattr(Getattr(Name('parent_model'), '_meta'), 'app_label'), Getattr(Getattr(Name('parent_model'), '_meta'), 'object_name')])))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('new_second_item'), 'extend'), [Name('item')], None, None))]))
Module(None, Stmt([Assign([AssName('full_path', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'path'), [Name('name')], None, None))]))
Module(None, Stmt([AugAssign(Subscript(Name('result'), 'OP_APPLY', [Name('i')]), '+=', Name('piece'))]))
Module(None, Stmt([Assign([AssName('capfirst', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('capfirst'), Getattr(Name('six'), 'text_type')], None, None))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('fields'), 'update'), [Getattr(Name('new_class'), 'declared_fields')], None, None))]))
Module(None, Stmt([Assign([AssName('timeout', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('timeout')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('get_internal_wsgi_application'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('format_locations'), 'append'), [Const('django.conf.locale.%s')], None, None))]))
Module(None, Stmt([Return(Tuple([Name('resolved_args'), Name('resolved_kwargs')]))]))
Module(None, Stmt([Break()]))
try :
@ python_2_unicode_compatible
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Name('datetime'), 'datetime'), [Name('year'), Name('month'), Name('day'), Name('hour'), Name('min'), Name('sec')], None, None))]))
except TypeError :
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'waiting_writers'), [('!=', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([CallFunc(Name('isinstance'), [Name('message'), Name('ValidationError')], None, None), Compare(Getattr(Name('message'), 'code'), [('in', Name('error_messages'))])]), Stmt([Pass()]))], None)]))
try :
@ cached_property
Module(None, Stmt([From('django.utils.ipv6', [('clean_ipv6_address', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('sub_match_dict'), 'update'), [Getattr(Name('sub_match'), 'kwargs')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const(' - %s'), Getattr(Name('migration'), 'name')))], None, None))]))
Module(None, Stmt([For(AssName('type_', 'OP_ASSIGN'), CallFunc(Name('reversed'), [CallFunc(Getattr(Name('resultclass'), 'mro'), [], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'negated', 'OP_ASSIGN')], Not(Getattr(Name('self'), 'negated')))]))
Module(None, Stmt([Function(None, 'timesince', ['d', 'now', 'reversed'], [Name('None'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Mod((Const('%s\n\n%s'), Tuple([Name('usage'), Getattr(Name('self'), 'help')]))))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const('Base36 input too large')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('app', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(Name('app'), 'rpartition'), [Const('.')], None, None), 'OP_APPLY', [UnarySub(Const(1))]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Name('bool')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('url', 'OP_ASSIGN')], CallFunc(Name('urlunsplit'), [Tuple([Name('scheme'), Name('netloc'), Name('path'), Name('query'), Name('fragment')])], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('No migrations present for: %s'), CallFunc(Getattr(Const(', '), 'join'), [Name('invalid_apps')], None, None)))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('use_null_fallback', 'OP_ASSIGN')], Name('False'))]))
from django . core . exceptions import ValidationError
Module(None, Stmt([Assign([AssName('QuerySetPaginator', 'OP_ASSIGN')], Name('Paginator'))]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('w', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'choice_input_class'), [Getattr(Name('self'), 'name'), Getattr(Name('self'), 'value'), CallFunc(Getattr(Getattr(Name('self'), 'attrs'), 'copy'), [], None, None), Name('choice'), Name('i')], None, None))]))
Module(None, Stmt([Assign([AssName('msgs', 'OP_ASSIGN')], CallFunc(Getattr(Name('msgs'), 'decode'), [Const('utf-8')], None, None))]))
Module(None, Stmt([Assign([AssName('last', 'OP_ASSIGN')], Subscript(Name('root'), 'OP_APPLY', [Name('PREV')]))]))
Module(None, Stmt([For(AssName('character', 'OP_ASSIGN'), Name('name'), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssTuple([AssName('field', 'OP_ASSIGN'), AssName('error_list', 'OP_ASSIGN')]), CallFunc(Getattr(Name('error'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('arg', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Name('args')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('max_width', 'OP_ASSIGN')], CallFunc(Name('min'), [Or([And([CallFunc(Getattr(Name('line'), 'endswith'), [Const('\n')], None, None), Add((Name('width'), Const(1)))]), Name('width')]), Name('width')], None, None))]))
Module(None, Stmt([If([(And([CallFunc(Name('getattr'), [Name('func'), Const('is_safe'), Name('False')], None, None), CallFunc(Name('isinstance'), [Name('obj'), Name('SafeData')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_get_scheme', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Getattr(Name('token'), 'split_contents'), [], None, None))]))
Module(None, Stmt([Function(None, 'popen_wrapper', ['args', 'os_err_exc_type'], [Name('CommandError')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('message', 'OP_ASSIGN'), Name('messages'), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([If([(CallFunc(Getattr(Name('path'), 'isfile'), [Name('path_to_remove')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('string_types', 'OP_ASSIGN')], Tuple([Name('basestring')]))]))
Module(None, Stmt([Return(Name('path'))]))
Module(None, Stmt([From('django.utils.encoding', [('python_2_unicode_compatible', None), ('force_str', None)], 0)]))
Module(None, Stmt([Assign([AssName('concrete_model', 'OP_ASSIGN')], Getattr(Getattr(Name('obj'), '_meta'), 'concrete_model'))]))
except self . LibraryValueNotFoundException :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'characters'), [CallFunc(Getattr(Name('field'), 'value_to_string'), [Name('obj')], None, None)], None, None))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None), ('CommandError', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'objects', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Class('InputStreamExhausted', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('curs'), 'execute'), [CallFunc(Getattr(Const('\n'), 'join'), [Name('full_statement')], None, None)], None, None))]))
else :
Module(None, Stmt([Raise(CallFunc(Getattr(Name('self'), 'error'), [Name('token'), Mod((Const("Invalid block tag: '%s', expected %s"), Tuple([Name('command'), CallFunc(Name('get_text_list'), [ListComp(Mod((Const("'%s'"), Name('p'))), [ListCompFor(AssName('p', 'OP_ASSIGN'), Name('parse_until'), [])])], None, None)])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_object_dict', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Getattr(Name('o'), 'pk'), Name('o')]), [GenExprFor(AssName('o', 'OP_ASSIGN'), CallFunc(Getattr(Name('self'), 'get_queryset'), [], None, None), [])]))], None, None))]))
Module(None, Stmt([Function(None, 'decorator_from_middleware_with_args', ['middleware_class'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'obj', 'args'], [], 4, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('token', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'next_token'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('ipv6'), Name('False')], None, None), Stmt([Pass()]))], None)]))
except OSError as e :
Module(None, Stmt([Return(Name('func'))]))
Module(None, Stmt([Function(None, 'dec', ['func'], [], 0, None, Stmt([Pass()]))]))
except OverflowError :
Module(None, Stmt([Return(Name('text'))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('self'), Const('_dimensions_cache')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'tags'), 'OP_ASSIGN', [Getattr(CallFunc(Name('getattr'), [Name('func'), Const('_decorated_function'), Name('func')], None, None), '__name__')])], Name('func'))]))
Module(None, Stmt([Slice(Name('bits'), 'OP_DELETE', None, Const(1))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'items', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(Name('id_'))]))
Module(None, Stmt([Assign([AssName('class_types', 'OP_ASSIGN')], Tuple([Name('type')]))]))
Module(None, Stmt([Assign([AssName('output_transaction', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None)], 0)]))
Module(None, Stmt([Function(None, 'next_page_number', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('host'))]))
Module(None, Stmt([Assign([AssName('Morsel', 'OP_ASSIGN')], Getattr(Name('http_cookies'), 'Morsel'))]))
Module(None, Stmt([Assign([AssName('j', 'OP_ASSIGN')], CallFunc(Getattr(Name('text'), 'find'), [Name('substr'), Name('i')], None, None))]))
Module(None, Stmt([Function(None, 'save', ['self', 'save_m2m', 'using'], [Name('True'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core.cache.backends.base', [('InvalidCacheBackendError', None), ('CacheKeyWarning', None), ('BaseCache', None)], 0)]))
Module(None, Stmt([Assign([AssName('WRAPPING_PUNCTUATION', 'OP_ASSIGN')], List([Tuple([Const('('), Const(')')]), Tuple([Const('<'), Const('>')]), Tuple([Const('['), Const(']')]), Tuple([Const('&lt;'), Const('&gt;')]), Tuple([Const('"'), Const('"')]), Tuple([Const("'"), Const("'")])]))]))
Module(None, Stmt([Assign([AssName('response_headers', 'OP_ASSIGN')], ListComp(Tuple([CallFunc(Name('str'), [Name('k')], None, None), CallFunc(Name('str'), [Name('v')], None, None)]), [ListCompFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('response'), 'items'), [], None, None), [])]))]))
@ stringfilter
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], Getattr(Name('member'), 'name'))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('expires'), Getattr(Name('datetime'), 'datetime')], None, None), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([For(AssName('key_value', 'OP_ASSIGN'), Name('natural'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('field_type', 'OP_ASSIGN')], Mod((Const("ForeignKey('%s'"), Name('rel_to'))))]))
Module(None, Stmt([Assign([AssName('final_attrs', 'OP_ASSIGN')], CallFunc(Name('dict'), [Name('final_attrs'), Keyword('id', Mod((Const('%s_%s'), Tuple([Name('id_'), Name('i')]))))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('WithNode'), [Name('None'), Name('None'), Name('nodelist'), Keyword('extra_context', Name('extra_context'))], None, None))]))
Module(None, Stmt([For(AssName('f', 'OP_ASSIGN'), Getattr(Name('opts'), 'local_fields'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('dc:creator'), Subscript(Name('item'), 'OP_APPLY', [Const('author_name')]), Dict([(Const('xmlns:dc'), Const('http://purl.org/dc/elements/1.1/'))])], None, None))]))
Module(None, Stmt([Function(None, 'get_language_bidi', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('new_context'), 'OP_ASSIGN', [Const('csrf_token')])], Name('csrf_token'))]))
Module(None, Stmt([Assign([Subscript(Name('data'), 'OP_ASSIGN', [Getattr(Name('field'), 'attname')])], Name('None'))]))
Module(None, Stmt([If([(And([Compare(Name('header'), [('==', Const('ACCEPT_LANGUAGE'))]), Name('is_accept_language_redundant')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('skipped', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None), ('CommandError', None)], 0)]))
Module(None, Stmt([If([(Compare(Const(':::'), [('in', Name('ip_str'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('StringIO', 'OP_ASSIGN'), AssName('BytesIO', 'OP_ASSIGN')], Getattr(Name('StringIO'), 'StringIO'))]))
Module(None, Stmt([If([(Compare(Name('bases'), [('==', Tuple([Name('BaseModelForm')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('form'), [('in', Name('forms_to_delete'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([AssName('table', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'ops'), 'quote_name'), [Getattr(Name('self'), '_table')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'content_type', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('value')], None, None))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'username'), Getattr(Name('self'), 'password')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('loader_name', 'OP_ASSIGN'), Getattr(Name('settings'), 'TEMPLATE_LOADERS'), Stmt([Pass()]), None)]))
Module(None, Stmt([While(And([Compare(Name('i'), [('<', CallFunc(Name('len'), [Name('subject')], None, None))]), Compare(Subscript(Name('subject'), 'OP_APPLY', [Name('i')]), [('in', Tuple([Const(' '), Const('\t')]))])]), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('lazy_number'), [Name('npgettext'), Getattr(Name('six'), 'text_type'), Keyword('context', Name('context')), Keyword('singular', Name('singular')), Keyword('plural', Name('plural')), Keyword('number', Name('number'))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Getattr(Name('self'), 'config'), 'configurator', 'OP_ASSIGN')], Name('self'))]))
Module(None, Stmt([Assign([AssName('nodelist_loop', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'parse'), [Tuple([Const('empty'), Const('endfor')])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('potfiles'), 'append'), [Name('potfile')], None, None))]))
Module(None, Stmt([Function(None, 'literals', ['choices', 'prefix', 'suffix'], [Const(''), Const('')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_set_choices', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'text', 'subtype', 'charset'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'max_value', 'min_value', 'args', 'kwargs'], [Name('None'), Name('None')], 12, None, Stmt([Pass()]))]))
except NameError :
Module(None, Stmt([Return(CallFunc(Getattr(Const(''), 'join'), [GenExpr(GenExprInner(CallFunc(Getattr(Name('char2number'), 'get'), [Name('c'), Name('c')], None, None), [GenExprFor(AssName('c', 'OP_ASSIGN'), CallFunc(Getattr(Name('phone'), 'lower'), [], None, None), [])]))], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, 'get_default_timezone', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Compare(Name('i'), [('<', CallFunc(Getattr(Name('self'), 'initial_form_count'), [], None, None))]), Compare(Const('instance'), [('not in', Name('kwargs'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('timezone'), Const('normalize')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([With(CallFunc(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'cursor'), [], None, None), AssName('cursor', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('opt', 'OP_ASSIGN'), List([Const('fields'), Const('exclude'), Const('localized_fields')]), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([If([(Compare(Name('weight'), [('>=', Const(6))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('label', 'OP_ASSIGN'), Name('labels'), Stmt([Pass()]), None)]))
Module(None, Stmt([Class('VerbatimNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('forms', 'OP_ASSIGN')], CallFunc(Getattr(Const(' '), 'join'), [GenExpr(GenExprInner(CallFunc(Getattr(Name('form'), 'as_p'), [], None, None), [GenExprFor(AssName('form', 'OP_ASSIGN'), Name('self'), [])]))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'tokens', 'OP_ASSIGN')], Name('mapped_tokens'))]))
Module(None, Stmt([Assign([AssName('viewname', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'compile_filter'), [Subscript(Name('bits'), 'OP_APPLY', [Const(1)])], None, None))]))
Module(None, Stmt([Import([('copy', None)])]))
Module(None, Stmt([Assign([Subscript(Name('m2m_data'), 'OP_ASSIGN', [Getattr(Name('field'), 'name')])], ListComp(CallFunc(Name('m2m_convert'), [Name('pk')], None, None), [ListCompFor(AssName('pk', 'OP_ASSIGN'), Name('field_value'), [])]))]))
Module(None, Stmt([For(AssName('node', 'OP_ASSIGN'), Name('nodelist'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__deepcopy__', ['self', 'memo'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('child', 'OP_ASSIGN'), Getattr(Name('node'), 'childNodes'), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssTuple([AssName('key', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')]), CallFunc(Getattr(Name('six'), 'iterlists'), [Name('self')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Name('iter'), [Name('patterns')], None, None))]))
Module(None, Stmt([Return(List([CallFunc(Name('Warning'), [Const('MIDDLEWARE_CLASSES is not set.'), Keyword('hint', Const('Django 1.7 changed the global defaults for the MIDDLEWARE_CLASSES. django.contrib.sessions.middleware.SessionMiddleware, django.contrib.auth.middleware.AuthenticationMiddleware, and django.contrib.messages.middleware.MessageMiddleware were removed from the defaults. If your project needs these middleware then you should configure this setting.')), Keyword('obj', Name('None')), Keyword('id', Const('1_7.W001'))], None, None)]))]))
Module(None, Stmt([Assign([AssName('sublist', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Function(None, '_new_gnu_trans', ['self', 'localedir', 'use_null_fallback'], [Name('True')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Compare(Name('i'), [('>=', CallFunc(Getattr(Name('self'), 'initial_form_count'), [], None, None))]), Not(CallFunc(Getattr(Name('form'), 'has_changed'), [], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('deprecation_warning', 'OP_ASSIGN')], Subscript(Name('renamed_method'), 'OP_APPLY', [Const(2)]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'sep', 'OP_ASSIGN')], CallFunc(Name('force_str'), [Name('sep')], None, None))]))
Module(None, Stmt([If([(And([Compare(Const('max-age'), [('in', Name('cc'))]), Compare(Const('max_age'), [('in', Name('kwargs'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'close_caches', ['kwargs'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('index'), Add((Tuple([Name('slice')]), Getattr(Name('six'), 'integer_types')))], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'initial'), Compare(Const('initial'), [('not in', Name('kwargs'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Function(None, 'ngettext', ['singular', 'plural', 'number'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('mapping', 'OP_ASSIGN')], Dict([(Const('alpha'), Const('a')), (Const('beta'), Const('b')), (Const('rc'), Const('c'))]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_request_middleware', 'OP_ASSIGN')], Name('request_middleware'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('comments'), Subscript(Name('item'), 'OP_APPLY', [Const('comments')])], None, None))]))
Module(None, Stmt([Assign([AssName('all_date_checks', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'handle_file_complete'), [Name('old_field_name'), Name('counters')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('parser'), 'UnparsedEntityDeclHandler', 'OP_ASSIGN')], Getattr(Name('self'), 'unparsed_entity_decl'))]))
elif self . argv [ 1 : ] in ( [ '--help' ] , [ '-h' ] ) :
Module(None, Stmt([Function(None, 'media', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Getattr(Name('func'), 'is_usable')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('serializers'), 'OP_ASSIGN', [Name('format')])], Name('module'))]))
Module(None, Stmt([Function(None, 'find_template', ['self', 'name', 'dirs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('dec'), [Name('func')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Getattr(Name('self'), 'var'), Name('Variable')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('qs', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Getattr(Name('self'), 'model'), '_default_manager'), 'get_queryset'), [], None, None))]))
Module(None, Stmt([Return(Getattr(Name('settings'), 'LANGUAGE_CODE'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_payload', 'OP_ASSIGN')], CallFunc(Getattr(Name('payload'), 'decode'), [Const('ascii'), Const('surrogateescape')], None, None))]))
Module(None, Stmt([If([(Name('msgs'), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('name', 'OP_ASSIGN'), Name('MEDIA_TYPES'), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([For(AssTuple([AssName('attr', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')]), CallFunc(Name('list'), [CallFunc(Getattr(Name('attrs'), 'items'), [], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '_add_local_translations', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('token', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'next_token'), [], None, None))]))
Module(None, Stmt([Assign([AssName('message_context', 'OP_ASSIGN')], CallFunc(Getattr(Name('message_context'), 'strip'), [Const("'")], None, None))]))
Module(None, Stmt([Function(None, 'force_bytes', ['s', 'encoding', 'strings_only', 'errors'], [Const('utf-8'), Name('False'), Const('strict')], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([For(AssName('dict_', 'OP_ASSIGN'), Getattr(Name('self'), 'dicts'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('path'), 'exists'), [Name('target_dir')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'add_filters'), [Name('result'), Name('filters')], None, None))]))
Module(None, Stmt([For(AssName('part', 'OP_ASSIGN'), Name('plural'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], List([Const('UploadFileException'), Const('StopUpload'), Const('SkipFile'), Const('FileUploadHandler'), Const('TemporaryFileUploadHandler'), Const('MemoryFileUploadHandler'), Const('load_handler'), Const('StopFutureHandlers')]))]))
else :
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('constant_string', 'OP_ASSIGN')], Mod((Const(' (?:%(i18n_open)s%(strdq)s%(i18n_close)s| %(i18n_open)s%(strsq)s%(i18n_close)s| %(strdq)s| %(strsq)s) '), Dict([(Const('strdq'), Const('"[^"\\\\]*(?:\\\\.[^"\\\\]*)*"')), (Const('strsq'), Const("'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'")), (Const('i18n_open'), CallFunc(Getattr(Name('re'), 'escape'), [Const('_(')], None, None)), (Const('i18n_close'), CallFunc(Getattr(Name('re'), 'escape'), [Const(')')], None, None))]))))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('mw_instance'), Const('process_template_response')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('middle', 'OP_ASSIGN')], Slice(Name('middle'), 'OP_APPLY', CallFunc(Name('len'), [Name('opening')], None, None), None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('widget'), Name('type')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(And([CallFunc(Name('isinstance'), [Name('other'), Getattr(Name('self'), '__class__')], None, None), Compare(Getattr(Name('self'), 'limit_value'), [('==', Getattr(Name('other'), 'limit_value'))]), Compare(Getattr(Name('self'), 'message'), [('==', Getattr(Name('other'), 'message'))]), Compare(Getattr(Name('self'), 'code'), [('==', Getattr(Name('other'), 'code'))])]))]))
Module(None, Stmt([From('datetime', [('date', 'real_date'), ('datetime', 'real_datetime')], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'fixture_object_count', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('Truncator'), [Name('value')], None, None), 'words'), [Name('length'), Keyword('html', Name('True')), Keyword('truncate', Const(' ...'))], None, None))]))
Module(None, Stmt([From('importlib', [('import_module', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Const('  No optimizations possible.')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'id', 'OP_ASSIGN')], Name('id'))]))
Module(None, Stmt([Return(Name('errors'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), '_object_dict'), 'get'), [Name('pk')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'paths_to_remove'), 'append'), [Name('tempdir')], None, None))]))
Module(None, Stmt([Continue()]))
try :
Module(None, Stmt([Return(Getattr(Getattr(Name('self'), 'data'), 'year'))]))
Module(None, Stmt([Assign([AssName('project_name', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(Getattr(Name('settings'), 'SETTINGS_MODULE'), 'split'), [Const('.')], None, None), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Return(Getattr(Name('self'), 's'))]))
except Exception as e :
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('contradiction')]), Keyword('code', Const('contradiction'))], None, None), None, None)]))
try :
Module(None, Stmt([If([(CallFunc(Getattr(Name('path'), 'startswith'), [Tuple([Const('http://'), Const('https://'), Const('/')])], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('args', 'OP_ASSIGN'), AssName('kwargs', 'OP_ASSIGN')])], CallFunc(Name('parse_bits'), [Name('parser'), Name('bits'), Name('params'), Name('varargs'), Name('varkw'), Name('defaults'), Name('takes_context'), Name('name')], None, None))]))
Module(None, Stmt([If([(Compare(Name('_supported'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([If([(Compare(Name('y'), [('==', Name('m')), ('==', Name('d')), ('==', Const('0'))]), Stmt([Pass()]))], None)]))
try :
try :
elif name is not None and compile_function is None :
Module(None, Stmt([Function(None, 'id_for_label', ['self', 'id_'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'interesting', 'OP_ASSIGN')], Getattr(Name('_html_parser'), 'interesting_cdata'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'flags', 'OP_ASSIGN')], Name('flags'))]))
Module(None, Stmt([If([(Compare(Name('level'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'templatize', ['src', 'origin'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('collections', [('OrderedDict', None)], 0)]))
except KeyError :
Module(None, Stmt([Import([('zlib', None)])]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Assign([AssName('current', 'OP_ASSIGN')], Subscript(Name('current'), 'OP_APPLY', [Name('bit')]))]))
Module(None, Stmt([Assign([AssName('current_fields', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Getattr(Name('form'), '_meta'), 'fields', 'OP_ASSIGN')], CallFunc(Name('list'), [Getattr(Getattr(Name('form'), '_meta'), 'fields')], None, None))]))
Module(None, Stmt([Function(None, 'handle', ['self', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.synch', [('RWLock', None)], 0)]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Function(None, 'next_char', ['input_iter'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('_LazyModule'), Name('self')], None, None), '__init__'), [Name('name')], None, None))]))
else :
Module(None, Stmt([If([(Compare(Getattr(Name('os'), 'name'), [('==', Const('nt'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('filename'), 'endswith'), [Const('.mo')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('flup', None)])]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'can_write', 'OP_ASSIGN')], CallFunc(Getattr(Name('threading'), 'Semaphore'), [Const(0)], None, None))]))
Module(None, Stmt([Class('Operator', [Name('TokenBase')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('extra_params', 'OP_ASSIGN')], CallFunc(Name('OrderedDict'), [], None, None))]))
Module(None, Stmt([Assign([AssName('pattern_iter', 'OP_ASSIGN')], CallFunc(Name('next_char'), [CallFunc(Name('iter'), [Name('pattern')], None, None)], None, None))]))
elif bytes < MB :
for entry in os . listdir ( path ) :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'append'), [Tuple([Name('lang'), Name('priority')])], None, None))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'flags'), Not(CallFunc(Name('isinstance'), [Getattr(Name('self'), 'regex'), Getattr(Name('six'), 'string_types')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('HTMLParser', [Getattr(Name('_html_parser'), 'HTMLParser')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'changed_objects'), 'append'), [Tuple([Name('obj'), Getattr(Name('form'), 'changed_data')])], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Name('six'), 'text_type'), [Name('number')], None, None)], None, None))]))
Module(None, Stmt([Import([('types', None)])]))
Module(None, Stmt([Function(None, 'resolve_error_handler', ['self', 'view_type'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([CallFunc(Name('hasattr'), [Name('f'), Const('seek')], None, None), CallFunc(Name('callable'), [Getattr(Name('f'), 'seek')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Not(Getattr(Name('self'), 'use_ssl')), Getattr(Name('self'), 'use_tls')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.core.urlresolvers', [('set_script_prefix', None)], 0)]))
Module(None, Stmt([Assign([AssTuple([AssName('output', 'OP_ASSIGN'), AssName('hidden_fields', 'OP_ASSIGN')])], Tuple([List(()), List(())]))]))
Module(None, Stmt([From('django.core.management.sql', [('sql_custom', None)], 0)]))
Module(None, Stmt([Function(None, 'cleanup_url', ['url'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('self'), '_should_delete_form'), [Name('form')], None, None), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Return(CallFunc(Name('len'), [Getattr(Name('self'), 'object_list')], None, None))]))
Module(None, Stmt([For(AssName('sql', 'OP_ASSIGN'), Name('custom_sql'), Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const("Key '%s' not found"), Name('key')))], None, None), None, None)]))
Module(None, Stmt([From('django.core', [('serializers', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'first', 'OP_ASSIGN')], Name('left'))]))
Module(None, Stmt([Function(None, 'floatformat', ['text', 'arg'], [UnarySub(Const(1))], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('timestamp', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('datetime'), 'datetime'), 'utcfromtimestamp'), [CallFunc(Name('int'), [Name('timestamp')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'learn_cache_key', ['request', 'response', 'cache_timeout', 'key_prefix', 'cache'], [Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('new_permissions', 'OP_ASSIGN')], Bitor([CallFunc(Getattr(Name('stat'), 'S_IMODE'), [Getattr(Name('st'), 'st_mode')], None, None), Getattr(Name('stat'), 'S_IWUSR')]))]))
Module(None, Stmt([Return(Tuple([CallFunc(Name('int'), [Subscript(Name('values'), 'OP_APPLY', [Const(0)])], None, None), Name('ch')]))]))
Module(None, Stmt([Class('SimpleUploadedFile', [Name('InMemoryUploadedFile')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'template_cache', 'OP_ASSIGN')], Dict(()))]))
@ register . filter ( is_safe = True )
Module(None, Stmt([Class('LabelCommand', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('instance'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_close_files'), [], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('field'), 'clean'), [Name('value')], None, None))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'toks'), 'OP_ASSIGN', [Name('groupid')])], Name('tok'))]))
Module(None, Stmt([Function(None, 'eval', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('content', 'OP_ASSIGN')], CallFunc(Name('File'), [Name('content')], None, None))]))
Module(None, Stmt([Return(Mod((Const('ResolverMatch(func=%s, args=%s, kwargs=%s, url_name=%s, app_name=%s, namespaces=%s)'), Tuple([Getattr(Name('self'), '_func_path'), Getattr(Name('self'), 'args'), Getattr(Name('self'), 'kwargs'), Getattr(Name('self'), 'url_name'), Getattr(Name('self'), 'app_name'), Getattr(Name('self'), 'namespaces')]))))]))
Module(None, Stmt([Function(None, 'start_serialization', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([For(AssName('cat', 'OP_ASSIGN'), Subscript(Name('item'), 'OP_APPLY', [Const('categories')]), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('data'), 'get'), [Name('name')], None, None))]))
Module(None, Stmt([If([(Compare(Name('age'), [('>', Name('max_age'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('sys'), 'modules'), 'OP_ASSIGN', [Add((Name('__name__'), Const('.moves.urllib_response')))]), Subscript(Getattr(Name('sys'), 'modules'), 'OP_ASSIGN', [Add((Name('__name__'), Const('.moves.urllib.response')))])], CallFunc(Name('Module_six_moves_urllib_response'), [Add((Name('__name__'), Const('.moves.urllib.response')))], None, None))]))
else :
Module(None, Stmt([Assign([AssName('_encoding', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'makedirs'), [Name('top_dir')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('attrs'), 'update'), [Dict([(Const('maxlength'), CallFunc(Name('str'), [Getattr(Name('self'), 'max_length')], None, None))])], None, None))]))
Module(None, Stmt([Assign([AssName('num', 'OP_ASSIGN')], Const(0))]))
except ValueError :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('rights'), Subscript(Name('item'), 'OP_APPLY', [Const('item_copyright')])], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([If([(And([Compare(Getattr(Name('self'), 'active_readers'), [('==', Const(0))]), Compare(Getattr(Name('self'), 'waiting_writers'), [('!=', Const(0))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('django', None)])]))
Module(None, Stmt([Function(None, 'assertRegex', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('fks_to_parent', 'OP_ASSIGN')], ListComp(Name('f'), [ListCompFor(AssName('f', 'OP_ASSIGN'), Getattr(Name('opts'), 'fields'), [ListCompIf(Compare(Getattr(Name('f'), 'name'), [('==', Name('fk_name'))]))])]))]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('final_attrs', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'build_attrs'), [Name('attrs'), Keyword('name', Name('name'))], None, None))]))
except base . DeserializationError :
try :
Module(None, Stmt([Assign([AssTuple([AssName('fd', 'OP_ASSIGN'), AssName('tmp_path', 'OP_ASSIGN')])], CallFunc(Getattr(Name('tempfile'), 'mkstemp'), [Keyword('dir', Getattr(Name('self'), '_dir'))], None, None))]))
Module(None, Stmt([Function(None, 'from_dict', ['cls', 'file_dict'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('app', 'OP_ASSIGN')], Const('django'))]))
Module(None, Stmt([If([(Compare(Name('space'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('mapped_tokens', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('cache', 'OP_ASSIGN')], Subscript(Name('caches'), 'OP_APPLY', [Name('cache_alias')]))]))
Module(None, Stmt([Function(None, '__new__', ['cls', 'name', 'bases', 'attrs'], [], 0, None, Stmt([Pass()]))]))
except AttributeError :
Module(None, Stmt([With(CallFunc(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'cursor'), [], None, None), AssName('cursor', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('queryset', 'OP_ASSIGN')], CallFunc(Getattr(Name('queryset'), 'filter'), [Keyword('pk__in', Name('primary_keys'))], None, None))]))
Module(None, Stmt([Class('Enclosure', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('default_validators', 'OP_ASSIGN')], List([CallFunc(Getattr(Name('validators'), 'URLValidator'), [], None, None)]))]))
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], Getattr(Name('self'), 'current_token'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Add((CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_LABEL'), [Const('  Target specific migration: ')], None, None), Mod((Const('%s, from %s'), Tuple([Subscript(Subscript(Name('targets'), 'OP_APPLY', [Const(0)]), 'OP_APPLY', [Const(1)]), Subscript(Subscript(Name('targets'), 'OP_APPLY', [Const(0)]), 'OP_APPLY', [Const(0)])])))))], None, None))]))
Module(None, Stmt([Function(None, 'run_from_argv', ['self', 'argv'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'npath', ['path'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('DebugLexer', [Name('Lexer')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Global(['templatetags_modules'])]))
Module(None, Stmt([If([(Compare(Name('since'), [('<=', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('factor', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Return(Compare(Getattr(Name('tt'), 'tm_isdst'), [('>', Const(0))]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--database'), Keyword('default', Name('DEFAULT_DB_ALIAS')), Keyword('help', Const('Nominates a database to print the SQL for. Defaults to the "default" database.'))], None, None))]))
Module(None, Stmt([Assign([AssName('offset', 'OP_ASSIGN')], FloorDiv((Getattr(Name('offset'), 'seconds'), Const(60))))]))
Module(None, Stmt([If([(Compare(Name('value'), [('in', Tuple([Name('True'), Const('True'), Const('1')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'create_token', ['self', 'token_string', 'in_tag'], [], 0, None, Stmt([Pass()]))]))
@ content . setter
Module(None, Stmt([For(AssName('app', 'OP_ASSIGN'), CallFunc(Name('sorted'), [CallFunc(Getattr(Name('commands_dict'), 'keys'), [], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Name('SelectMultiple'))]))
Module(None, Stmt([Function(None, '_proxy_method', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
except KeyError :
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([Assign([AssName('LOCK_SH', 'OP_ASSIGN')], Getattr(Name('fcntl'), 'LOCK_SH'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('CharField'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Return(Name('msg'))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Return(UnarySub(Const(1)))]))
@ register . tag
Module(None, Stmt([Function(None, 'number_format', ['value', 'decimal_pos', 'use_l10n', 'force_grouping'], [Name('None'), Name('None'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Name('_serializers')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('_mtimes'), 'OP_ASSIGN', [Name('filename')])], Name('mtime'))]))
Module(None, Stmt([Function(None, 'strip_entities', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('value'), 'serializable_value'), [Getattr(Name('self'), 'to_field_name')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Getattr(Name('datetime'), 'datetime')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'limit_choices_to', 'OP_ASSIGN')], Name('limit_choices_to'))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('node'), Name('Node')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--extension'), Const('-e'), Keyword('dest', Const('extensions')), Keyword('help', Const('The file extension(s) to examine (default: "html,txt", or "js" if the domain is "djangojs"). Separate multiple extensions with commas, or use -e multiple times.')), Keyword('action', Const('append'))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('    Installing custom SQL for %s.%s model\n'), Tuple([Name('app_name'), Getattr(Getattr(Name('model'), '_meta'), 'object_name')])))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [Mod((Const(' gettext(%r) '), CallFunc(Name('join_tokens'), [Name('singular'), Name('trimmed')], None, None)))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('phone2numeric'), [Name('value')], None, None))]))
else :
Module(None, Stmt([Function(None, 'unescape_string_literal', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('version'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'code_changed', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('BLOCK_CONTEXT_KEY'), [('not in', Getattr(Name('context'), 'render_context'))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([AssName('initial_value', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'initial'), 'get'), [Name('name'), Getattr(Name('field'), 'initial')], None, None))]))
Module(None, Stmt([Return(Name('text'))]))
Module(None, Stmt([If([(Compare(Name('value'), [('is not', Name('result'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('app_configs', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('apps'), 'get_app_config'), [Name('app_label')], None, None), [ListCompFor(AssName('app_label', 'OP_ASSIGN'), Name('app_labels'), [])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--database'), Keyword('default', Name('DEFAULT_DB_ALIAS')), Keyword('help', Const('Nominates a database to print the SQL for. Defaults to the "default" database.'))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_varlist', 'OP_ASSIGN')], Name('varlist'))]))
Module(None, Stmt([Discard(Yield(CallFunc(Name('force_text'), [Name('message')], None, None)))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Getattr(Name('m'), 'group'), [Const(0)], None, None))]))
Module(None, Stmt([Function(None, '__contains__', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_get_regex', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Global(['_standard_context_processors'])]))
Module(None, Stmt([Assign([AssName('_prefixes', 'OP_ASSIGN')], CallFunc(Name('local'), [], None, None))]))
else :
else :
Module(None, Stmt([For(AssName('path', 'OP_ASSIGN'), CallFunc(Name('all_locale_paths'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
except ImportError :
Module(None, Stmt([Function(None, 'validate', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.forms.utils', [('*', None)], 0)]))
Module(None, Stmt([Function(None, 'set_many', ['self', 'data', 'timeout', 'version'], [Name('DEFAULT_TIMEOUT'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([Assign([AssName('factory', 'OP_ASSIGN')], Name('c'))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('match', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwarg_re'), 'match'), [Name('bit')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('sys'), 'stdin'), 'close'), [], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('self'), '_has_expired'), [Name('key')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'subject', 'OP_ASSIGN')], Name('subject'))]))
Module(None, Stmt([From('functools', [('reduce', None)], 0)]))
except TemplateDoesNotExist :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'parent_instance', 'OP_ASSIGN')], Name('parent_instance'))]))
Module(None, Stmt([Return(Name('new_value'))]))
Module(None, Stmt([If([(Compare(Name('as_'), [('!=', Const('as'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('config'), 'OP_ASSIGN', [Const('address')])], CallFunc(Getattr(Name('self'), 'as_tuple'), [Subscript(Name('config'), 'OP_APPLY', [Const('address')])], None, None))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const("%s.process_template_response didn't return an HttpResponse object. It returned None instead."), Getattr(Getattr(Getattr(Name('middleware_method'), '__self__'), '__class__'), '__name__')))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--database'), Keyword('action', Const('store')), Keyword('dest', Const('database')), Keyword('default', Name('DEFAULT_DB_ALIAS')), Keyword('help', Const('Nominates a database onto which the cache tables will be installed. Defaults to the "default" database.'))], None, None))]))
Module(None, Stmt([Assign([AssName('options', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'render_options'), [Name('choices'), List([Name('value')])], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('exctype', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')])], Slice(Name('exc_info'), 'OP_APPLY', None, Const(2)))]))
Module(None, Stmt([From('django.forms.widgets', [('TextInput', None), ('NumberInput', None), ('EmailInput', None), ('URLInput', None), ('HiddenInput', None), ('MultipleHiddenInput', None), ('ClearableFileInput', None), ('CheckboxInput', None), ('Select', None), ('NullBooleanSelect', None), ('SelectMultiple', None), ('DateInput', None), ('DateTimeInput', None), ('TimeInput', None), ('SplitDateTimeWidget', None), ('SplitHiddenDateTimeWidget', None), ('FILE_INPUT_CONTRADICTION', None)], 0)]))
Module(None, Stmt([Function(None, 'tzname', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'no_style', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], Add((List([Const('xgettext'), Const('-d'), Name('domain'), Const('--language=Python'), Const('--keyword=gettext_noop'), Const('--keyword=gettext_lazy'), Const('--keyword=ngettext_lazy:1,2'), Const('--keyword=ugettext_noop'), Const('--keyword=ugettext_lazy'), Const('--keyword=ungettext_lazy:1,2'), Const('--keyword=pgettext:1c,2'), Const('--keyword=npgettext:1c,2,3'), Const('--keyword=pgettext_lazy:1c,2'), Const('--keyword=npgettext_lazy:1c,2,3'), Const('--output=-')]), Getattr(Name('command'), 'xgettext_options'))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('DecimalField'), Name('self')], None, None), '__init__'), [Name('max_value'), Name('min_value')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([AugAssign(Getattr(Name('Tok'), 'num'), '+=', Const(1))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('&'), 'join'), [Name('output')], None, None))]))
Module(None, Stmt([Return(Dict([(Const('csrf_token'), CallFunc(Name('_get_val'), [], None, None))]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'selected_fields', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'pop'), [Const('fields'), Name('None')], None, None))]))
Module(None, Stmt([If([(Name('stream'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('u', 'OP_ASSIGN')], CallFunc(Getattr(Name('dig2'), 'digest'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_iterator', 'OP_ASSIGN')], CallFunc(Name('iter'), [Name('value')], None, None))]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("More than one migration matches '%s' in app '%s'. Please be more specific."), Tuple([Name('migration_name'), Name('app_label')])))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'has_key', ['self', 'key', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'test_database', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('test_database'), Name('False')], None, None))]))
Module(None, Stmt([Import([('warnings', None)])]))
else :
except NameError :
Module(None, Stmt([Assign([AssName('encoding', 'OP_ASSIGN')], Or([Name('encoding'), Getattr(Name('settings'), 'DEFAULT_CHARSET')]))]))
Module(None, Stmt([Function(None, 'force_text', ['s', 'encoding', 'strings_only', 'errors'], [Const('utf-8'), Name('False'), Const('strict')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_lock', 'OP_ASSIGN')], CallFunc(Getattr(Name('threading'), 'RLock'), [], None, None))]))
Module(None, Stmt([Class('SelectDateWidget', [Name('Widget')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([Subscript(Name('formatters'), 'OP_ASSIGN', [Name('name')])], CallFunc(Getattr(Name('self'), 'configure_formatter'), [Subscript(Name('formatters'), 'OP_APPLY', [Name('name')])], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'digits', 'OP_ASSIGN')], Name('digits'))]))
Module(None, Stmt([Return(Mod((Const('%02d'), CallFunc(Getattr(Name('self'), 'G'), [], None, None))))]))
Module(None, Stmt([Assign([AssName('filemsg', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([While(Name('True'), Stmt([Pass()]), None)]))
try :
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'url_name', 'OP_ASSIGN')], Name('url_name'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('  Optimized from %s operations to %s operations.'), Tuple([CallFunc(Name('len'), [Name('operations')], None, None), CallFunc(Name('len'), [Name('new_operations')], None, None)])))], None, None))]))
Module(None, Stmt([Function(None, 'get_unbound_function', ['unbound'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Getattr(Getattr(Name('self'), 'file'), 'closed'))]))
Module(None, Stmt([Class('Command', [Name('AppCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '_generator', (), (), 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'startElement'), [Const('natural'), Dict(())], None, None))]))
Module(None, Stmt([Function(None, 'delete', ['self', 'key', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None)], 0)]))
Module(None, Stmt([Assign([AssName('autoescape', 'OP_ASSIGN')], And([Name('autoescape'), Not(CallFunc(Name('isinstance'), [Name('value'), Name('SafeData')], None, None))]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('json'), 'loads'), [CallFunc(Getattr(Name('data'), 'decode'), [Const('latin-1')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('DIGIT_PATTERN', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^\\d+$')], None, None))]))
Module(None, Stmt([Function(None, '_has_changed', ['self', 'initial', 'data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Subscript(Name('options'), 'OP_APPLY', [Const('app_label')]), Subscript(Name('options'), 'OP_APPLY', [Const('migration_name')])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [CallFunc(Name('blankout'), [Name('part'), Const('P')], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('type'), [Name('result')], None, None), [('in', Tuple([Name('ConvertingDict'), Name('ConvertingList'), Name('ConvertingTuple')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'status_code', 'OP_ASSIGN')], Name('status'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('s'), 'encode'), [Const('latin-1')], None, None))]))
Module(None, Stmt([If([(Compare(Name('initial'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([AssName('get_language', 'OP_ASSIGN')], Lambda((), (), 0, Getattr(Name('settings'), 'LANGUAGE_CODE')))]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
elif ch == '[' :
Module(None, Stmt([If([(Compare(Name('app_list_value'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'error'), [Getattr(Getattr(Name('self'), 'cmd'), 'missing_args_message')], None, None))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Assign([Subscript(Name('app_list'), 'OP_ASSIGN', [Name('app_config')])], Name('None'))]))
Module(None, Stmt([Return(Mod((Const('%06d'), Getattr(Getattr(Name('self'), 'data'), 'microsecond'))))]))
Module(None, Stmt([Assign([AssName('str_number', 'OP_ASSIGN')], Slice(Name('str_number'), 'OP_APPLY', Const(1), None))]))
Module(None, Stmt([Return(CallFunc(Name('bool'), [Name('ret')], None, None))]))
Module(None, Stmt([Assign([AssName('lookup_str', 'OP_ASSIGN')], Add((Add((Getattr(Name('callback'), '__module__'), Const('.'))), Getattr(Name('callback'), '__name__'))))]))
Module(None, Stmt([Return(Name('j'))]))
Module(None, Stmt([If([(Compare(Name('val'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_mark_post_parse_error'), [], None, None))]))
Module(None, Stmt([If([(Name('use_natural_keys'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'pointer', 'OP_ASSIGN')], Name('i'))]))
Module(None, Stmt([AugAssign(Name('nesting'), '-=', Const(1))]))
Module(None, Stmt([Assign([AssName('sorted_items', 'OP_ASSIGN')], CallFunc(Name('sorted'), [CallFunc(Getattr(Name('kwds'), 'items'), [], None, None)], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'fields', 'args', 'kwargs'], [Tuple(())], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('new_args'), 'append'), [Add((Slice(Name('args'), 'OP_APPLY', None, None), Name('i_args')))], None, None))]))
Module(None, Stmt([Assign([AssName('candidate', 'OP_ASSIGN')], CallFunc(Name('str'), [Name('candidate')], None, None))]))
Module(None, Stmt([Function(None, 'ifchanged', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([For(AssName('node', 'OP_ASSIGN'), Getattr(Name('self'), 'nodelist_loop'), Stmt([Pass()]), None)]))
try :
Module(None, Stmt([Assign([Subscript(Name('self'), 'OP_ASSIGN', [Const('Content-Type')])], Name('content_type'))]))
Module(None, Stmt([Return(CallFunc(Name('remove_tags'), [Name('value'), Name('tags')], None, None))]))
Module(None, Stmt([Import([('operator', None)])]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'getlist'), [Name('key')], None, None))]))
else :
Module(None, Stmt([If([(Compare(Name('cache_timeout'), [('<', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'has_error', ['self', 'field', 'code'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Compare(Name('item'), [('in', CallFunc(Name('list'), [Name('self')], None, None))]))]))
html_message = reporter . get_traceback_html ( ) if self . include_html else None
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('field'), 'widget'), 'value_from_datadict'), [Getattr(Name('self'), 'data'), Getattr(Name('self'), 'files'), Name('prefix')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'file', 'OP_ASSIGN')], CallFunc(Name('TemporaryUploadedFile'), [Getattr(Name('self'), 'file_name'), Getattr(Name('self'), 'content_type'), Const(0), Getattr(Name('self'), 'charset'), Getattr(Name('self'), 'content_type_extra')], None, None))]))
Module(None, Stmt([Assign([AssName('comment_lineno_cache', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([If([(Name('primary_keys'), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([For(AssName('pk', 'OP_ASSIGN'), Name('value'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('j'), [('==', UnarySub(Const(1)))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'extra_context', 'OP_ASSIGN')], Or([Name('extra_context'), Dict(())]))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Function(None, 'widget_attrs', ['self', 'widget'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Name('ClearableFileInput'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('data'), 'get'), [Name('name'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssName('location', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('LOCATION'), Const('')], None, None))]))
Module(None, Stmt([If([(Not(Name('data')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'makedirs'), [Name('basedir')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('NoReverseMatch'), [Mod((Const('%s is not a registered namespace'), Name('key')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'object', 'OP_ASSIGN')], Name('obj'))]))
Module(None, Stmt([Class('URLValidator', [Name('RegexValidator')], None, Stmt([Pass()]), None)]))
def __init__ ( self , exception ) :
Module(None, Stmt([Raise(CallFunc(Name('InvalidTemplateLibrary'), [Mod((Const('Template library %s not found, tried %s'), Tuple([Name('library_name'), CallFunc(Getattr(Const(','), 'join'), [Name('tried_modules')], None, None)])))], None, None), None, None)]))
try :
Module(None, Stmt([If([(Getattr(Name('self'), 'is_bound'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'name', 'value', 'attrs', 'choices'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'invalid_block_tag'), [Name('token'), Name('command'), Name('parse_until')], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(CallFunc(Name('getattr'), [Name('t'), Name('translation_function')], None, None), [Name('eol_message')], None, None))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('app_template_dirs'), 'append'), [Name('template_dir')], None, None))]))
Module(None, Stmt([Return(Dict(()))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'timezone'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Tuple([Name('output'), CallFunc(Name('force_text'), [Name('errors'), Name('DEFAULT_LOCALE_ENCODING'), Keyword('strings_only', Name('True'))], None, None), Getattr(Name('p'), 'returncode')]))]))
Module(None, Stmt([If([(Compare(Const('charset'), [('in', Name('content_params'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('var', 'OP_ASSIGN'), AssName('constant', 'OP_ASSIGN')])], CallFunc(Getattr(Name('match'), 'group'), [Const('var'), Const('constant')], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'configure_custom'), [Name('config')], None, None))]))
Module(None, Stmt([Function(None, 'fields_for_model', ['model', 'fields', 'exclude', 'widgets', 'formfield_callback', 'localized_fields', 'labels', 'help_texts', 'error_messages'], [Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'tokenize', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('template_with_clear', 'OP_ASSIGN')], Const('%(clear)s <label for="%(clear_checkbox_id)s">%(clear_checkbox_label)s</label>'))]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'add_arguments'), [Name('parser')], None, None))]))
elif '=' in part :
Module(None, Stmt([Function(None, '_existing_object', ['self', 'pk'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('EmptyPage'), [Const('That page contains no results')], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'verbatim', 'OP_ASSIGN')], Mod((Const('end%s'), Name('block_content'))))]))
Module(None, Stmt([Function(None, 'render', ['self', 'name', 'value', 'attrs', 'choices'], [Name('None'), Tuple(())], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('io', [('BytesIO', None)], 0)]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('DTDForbidden', [Name('DefusedXmlException')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(Name('context_instance')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'is_rendered', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('name_str', 'OP_ASSIGN')], CallFunc(Getattr(Const('; '), 'join'), [GenExpr(GenExprInner(Mod((Const('%s in %s'), Tuple([CallFunc(Getattr(Const(', '), 'join'), [Name('names')], None, None), Name('app')]))), [GenExprFor(AssTuple([AssName('app', 'OP_ASSIGN'), AssName('names', 'OP_ASSIGN')]), CallFunc(Getattr(Name('conflicts'), 'items'), [], None, None), [])]))], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('field_params'), 'OP_ASSIGN', [Const('max_length')])], CallFunc(Name('int'), [Subscript(Name('row'), 'OP_APPLY', [Const(3)])], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('self'), '_has_expired'), [Name('key')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'configurator'), 'convert'), [Name('value')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Name('error_message'), Keyword('code', Const('invalid'))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('BaseMemcachedCache'), Name('self')], None, None), '__init__'), [Name('params')], None, None))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([If([(Or([Compare(Name('latest_date'), [('is', Name('None'))]), Compare(Name('item_date'), [('>', Name('latest_date'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('template_dirs', 'OP_ASSIGN')], Getattr(Name('settings'), 'TEMPLATE_DIRS'))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Add((Const('strftime of dates before 1900 does not handle'), CallFunc(Getattr(Name('illegal_formatting'), 'group'), [Const(0)], None, None)))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('form', 'OP_ASSIGN')], CallFunc(Name('modelform_factory'), [Name('model'), Keyword('form', Name('form')), Keyword('fields', Name('fields')), Keyword('exclude', Name('exclude')), Keyword('formfield_callback', Name('formfield_callback')), Keyword('widgets', Name('widgets')), Keyword('localized_fields', Name('localized_fields')), Keyword('labels', Name('labels')), Keyword('help_texts', Name('help_texts')), Keyword('error_messages', Name('error_messages'))], None, None))]))
Module(None, Stmt([Function(None, 'IE_sanitize', ['self', 'filename'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('match', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'regex'), 'search'), [Name('path')], None, None))]))
Module(None, Stmt([Assign([AssName('sup_cls', 'OP_ASSIGN')], CallFunc(Name('super'), [Name('cls'), Name('self')], None, None))]))
try :
Module(None, Stmt([Assign([AssName('match', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'regex'), 'search'), [Name('path')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('list'), [CallFunc(Name('iter'), [Name('self')], None, None)], None, None))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([If([(Compare(Name('safe'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Discard(CallFunc(Name('set_script_prefix'), [CallFunc(Name('get_script_name'), [Name('environ')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'context', 'OP_ASSIGN')], Name('context'))]))
else :
Module(None, Stmt([For(AssName('handler', 'OP_ASSIGN'), Name('handlers'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'cleaned_data', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('defaults'), 'OP_ASSIGN', [Const('data')])], Getattr(Name('self'), 'data'))]))
try :
Module(None, Stmt([Return(CallFunc(Getattr(Name('t'), 'render'), [Name('context_instance')], None, None))]))
@ register . tag
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'open'), [], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Function(None, 'parse', ['self', 'parse_until'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('dateformat'), 'time_format'), [Name('value'), CallFunc(Name('get_format'), [Or([Name('format'), Const('TIME_FORMAT')]), Keyword('use_l10n', Name('use_l10n'))], None, None)], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of Storage must provide an exists() method')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('naiveip_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^(?: (?P<addr>     (?P<ipv4>\\d{1,3}(?:\\.\\d{1,3}){3}) |         # IPv4 address     (?P<ipv6>\\[[a-fA-F0-9:]+\\]) |               # IPv6 address     (?P<fqdn>[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*) # FQDN ):)?(?P<port>\\d+)$'), Getattr(Name('re'), 'X')], None, None))]))
else :
Module(None, Stmt([If([(Getattr(Name('tok'), 'next'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('lexer_class', 'OP_ASSIGN'), AssName('parser_class', 'OP_ASSIGN')])], Tuple([Name('DebugLexer'), Name('DebugParser')]))]))
Module(None, Stmt([Function(None, 'do_for', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('URLField', [Name('CharField')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')])], Tuple([Name('x'), Name('True')]))]))
except AttributeError :
elif subcommand == 'version' or self . argv [ 1 : ] == [ '--version' ] :
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('get_resolver'), [Name('urlconf')], None, None), 'resolve'), [Name('path')], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'reader_enters'), [], None, None))]))
Module(None, Stmt([Assign([AssName('from_email', 'OP_ASSIGN')], CallFunc(Name('sanitize_address'), [Getattr(Name('email_message'), 'from_email'), Getattr(Name('email_message'), 'encoding')], None, None))]))
Module(None, Stmt([Assign([AssName('proxy', 'OP_ASSIGN')], CallFunc(CallFunc(Name('lazy'), [Lambda(['kwargs'], [], 8, CallFunc(Name('NumberAwareString'), [], None, None)), Name('NumberAwareString')], None, None), [], None, Name('kwargs')))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('fixture_files_in_dir'), 'append'), [Tuple([Name('candidate'), Name('fixture_dir'), Name('fixture_name')])], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('namespace', 'OP_ASSIGN'), AssTuple([AssName('prefix', 'OP_ASSIGN'), AssName('sub_pattern', 'OP_ASSIGN')])]), CallFunc(Getattr(Getattr(Name('pattern'), 'namespace_dict'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('re_camel_case', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('(((?<=[a-z])[A-Z])|([A-Z](?![A-Z]|$)))')], None, None))]))
Module(None, Stmt([Assign([AssName('id_', 'OP_ASSIGN')], Or([CallFunc(Getattr(Getattr(Name('widget'), 'attrs'), 'get'), [Const('id')], None, None), Getattr(Name('self'), 'auto_id')]))]))
return self . input_type == 'hidden' if hasattr ( self , 'input_type' ) else False
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--symlinks'), Const('-s'), Keyword('action', Const('store_true')), Keyword('dest', Const('symlinks')), Keyword('default', Name('False')), Keyword('help', Const('Follows symlinks to directories when examining source code and templates for translation strings.'))], None, None))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('form'), 'errors'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('ZERO'))]))
Module(None, Stmt([Import([('binascii', None)])]))
Module(None, Stmt([Assign([AssName('statements', 'OP_ASSIGN')], CallFunc(Name('sql_indexes'), [Name('app_config'), Getattr(Name('self'), 'style'), Name('connection')], None, None))]))
Module(None, Stmt([Assign([AssName('nodelist', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'parse'), [Tuple([Const('endspaceless')])], None, None))]))
Module(None, Stmt([Function(None, 'add', ['self', 'key', 'value', 'timeout', 'version'], [Name('DEFAULT_TIMEOUT'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'reset', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'enter_command', ['self', 'command', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('KeyError'), [Mod((Const("Your dictionary lacks key '%s'. Please provide it, because it is required to determine whether string is singular or plural."), Name('number')))], None, None), None, None)]))
Module(None, Stmt([Return(Compare(Name('key'), [('in', Subscript(Getattr(Name('self'), 'dicts'), 'OP_APPLY', [UnarySub(Const(1))]))]))]))
Module(None, Stmt([Return(Mod((Getattr(Name('settings'), 'TEMPLATE_STRING_IF_INVALID'), Getattr(Name('self'), 'var'))))]))
Module(None, Stmt([If([(Compare(Subscript(Name('data_list'), 'OP_APPLY', [Const(0)]), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'val_expr', 'max_expr', 'max_width', 'asvar'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'encoding', 'OP_ASSIGN')], Subscript(Name('content_params'), 'OP_APPLY', [Const('charset')]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'load_template'), [Name('template_name'), Name('template_dirs')], None, None))]))
Module(None, Stmt([Return(Sub((CallFunc(Name('timedelta'), [Keyword('seconds', UnarySub(Getattr(Name('time'), 'altzone')))], None, None), CallFunc(Name('timedelta'), [Keyword('seconds', UnarySub(Getattr(Name('time'), 'timezone')))], None, None))))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Const("'now' statement takes one argument")], None, None), None, None)]))
try :
Module(None, Stmt([Function(None, 'update', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'read', ['self', 'size'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY2'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.forms.widgets', [('SelectMultiple', None), ('HiddenInput', None), ('MultipleHiddenInput', None)], 0)]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], Const('use only numbers, letters and underscores'))]))
Module(None, Stmt([Return(Const('rd'))]))
Module(None, Stmt([Function(None, 'center', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Command'), Name('self')], None, None), 'add_arguments'), [Name('parser')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('callable'), [Name('data')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('s'), Tuple([Name('SafeData'), Name('EscapeData')])], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_populated', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'use_ssl'), Getattr(Name('self'), 'use_tls')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'SECURE_PROXY_SSL_HEADER'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'verbosity', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('verbosity')], None, None))]))
Module(None, Stmt([Assign([AssName('foreground', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Subscript(Name('color_names'), 'OP_APPLY', [Name('x')]), Mod((Const('3%s'), Name('x')))]), [GenExprFor(AssName('x', 'OP_ASSIGN'), CallFunc(Name('range'), [Const(8)], None, None), [])]))], None, None))]))
Module(None, Stmt([For(AssName('model', 'OP_ASSIGN'), Name('app_models'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'handle', ['self', 'app_labels', 'options'], [], 12, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'render_context', 'OP_ASSIGN')], CallFunc(Name('RenderContext'), [], None, None))]))
class AppRegistryNotReady ( Exception ) :
Module(None, Stmt([Function(None, 'b', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('ugettext'), [Const('Please correct the duplicate values below.')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Name('middleware'), 'process_request'), [Name('request')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const('Unknown argument for %r tag: %r.'), Tuple([Subscript(Name('bits'), 'OP_APPLY', [Const(0)]), Name('option')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('expires', 'OP_ASSIGN')], CallFunc(Name('typecast_timestamp'), [CallFunc(Name('str'), [Name('expires')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('extend', 'OP_ASSIGN')], Name('complain'))]))
Module(None, Stmt([Assign([AssName('super_set', 'OP_ASSIGN')], Getattr(CallFunc(Name('super'), [Name('SortedDict'), Name('self')], None, None), '__setitem__'))]))
else :
try :
Module(None, Stmt([Return(CallFunc(Getattr(Name('formats'), 'localize_input'), [Name('value'), Or([Getattr(Name('self'), 'format'), Subscript(CallFunc(Getattr(Name('formats'), 'get_format'), [Getattr(Name('self'), 'format_key')], None, None), 'OP_APPLY', [Const(0)])])], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('type'), [Name('result')], None, None), [('in', Tuple([Name('ConvertingDict'), Name('ConvertingList'), Name('ConvertingTuple')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('match', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwarg_re'), 'match'), [Subscript(Name('bits'), 'OP_APPLY', [Const(0)])], None, None))]))
Module(None, Stmt([From('wsgiref.util', [('FileWrapper', None)], 0)]))
Module(None, Stmt([Assign([Subscript(Name('data'), 'OP_ASSIGN', [Getattr(Name('field'), 'attname')])], CallFunc(Getattr(CallFunc(Getattr(Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_meta'), 'get_field'), [Getattr(Getattr(Name('field'), 'rel'), 'field_name')], None, None), 'to_python'), [Name('field_value')], None, None))]))
Module(None, Stmt([Function(None, '__call__', ['self', 'f'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('indent'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('callable', 'OP_ASSIGN')], Name('callable'))]))
try :
@ property
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('not in', Tuple([Const(2), Const(3)]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Subscript(CallFunc(Getattr(Name('self'), '_get_image_dimensions'), [], None, None), 'OP_APPLY', [Const(1)]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('dig1'), 'update'), [Name('u')], None, None))]))
Module(None, Stmt([Return(Name('response'))]))
Module(None, Stmt([Function(None, 'set_signed_cookie', ['self', 'key', 'value', 'salt', 'kwargs'], [Const('')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('i', 'OP_ASSIGN')], CallFunc(Getattr(Name('existing'), 'index'), [Name('name')], None, None))]))
Module(None, Stmt([Assign([AssName('REASON_PHRASES', 'OP_ASSIGN')], Dict([(Const(100), Const('CONTINUE')), (Const(101), Const('SWITCHING PROTOCOLS')), (Const(102), Const('PROCESSING')), (Const(200), Const('OK')), (Const(201), Const('CREATED')), (Const(202), Const('ACCEPTED')), (Const(203), Const('NON-AUTHORITATIVE INFORMATION')), (Const(204), Const('NO CONTENT')), (Const(205), Const('RESET CONTENT')), (Const(206), Const('PARTIAL CONTENT')), (Const(207), Const('MULTI-STATUS')), (Const(208), Const('ALREADY REPORTED')), (Const(226), Const('IM USED')), (Const(300), Const('MULTIPLE CHOICES')), (Const(301), Const('MOVED PERMANENTLY')), (Const(302), Const('FOUND')), (Const(303), Const('SEE OTHER')), (Const(304), Const('NOT MODIFIED')), (Const(305), Const('USE PROXY')), (Const(306), Const('RESERVED')), (Const(307), Const('TEMPORARY REDIRECT')), (Const(308), Const('PERMANENT REDIRECT')), (Const(400), Const('BAD REQUEST')), (Const(401), Const('UNAUTHORIZED')), (Const(402), Const('PAYMENT REQUIRED')), (Const(403), Const('FORBIDDEN')), (Const(404), Const('NOT FOUND')), (Const(405), Const('METHOD NOT ALLOWED')), (Const(406), Const('NOT ACCEPTABLE')), (Const(407), Const('PROXY AUTHENTICATION REQUIRED')), (Const(408), Const('REQUEST TIMEOUT')), (Const(409), Const('CONFLICT')), (Const(410), Const('GONE')), (Const(411), Const('LENGTH REQUIRED')), (Const(412), Const('PRECONDITION FAILED')), (Const(413), Const('REQUEST ENTITY TOO LARGE')), (Const(414), Const('REQUEST-URI TOO LONG')), (Const(415), Const('UNSUPPORTED MEDIA TYPE')), (Const(416), Const('REQUESTED RANGE NOT SATISFIABLE')), (Const(417), Const('EXPECTATION FAILED')), (Const(418), Const("I'M A TEAPOT")), (Const(422), Const('UNPROCESSABLE ENTITY')), (Const(423), Const('LOCKED')), (Const(424), Const('FAILED DEPENDENCY')), (Const(426), Const('UPGRADE REQUIRED')), (Const(428), Const('PRECONDITION REQUIRED')), (Const(429), Const('TOO MANY REQUESTS')), (Const(431), Const('REQUEST HEADER FIELDS TOO LARGE')), (Const(500), Const('INTERNAL SERVER ERROR')), (Const(501), Const('NOT IMPLEMENTED')), (Const(502), Const('BAD GATEWAY')), (Const(503), Const('SERVICE UNAVAILABLE')), (Const(504), Const('GATEWAY TIMEOUT')), (Const(505), Const('HTTP VERSION NOT SUPPORTED')), (Const(506), Const('VARIANT ALSO NEGOTIATES')), (Const(507), Const('INSUFFICIENT STORAGE')), (Const(508), Const('LOOP DETECTED')), (Const(510), Const('NOT EXTENDED')), (Const(511), Const('NETWORK AUTHENTICATION REQUIRED'))]))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('request'), Const('urlconf')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('data'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('Unknown application: %s'), Name('app_label')))], None, None), None, None)]))
Module(None, Stmt([Assign([Subscript(Name('state'), 'OP_ASSIGN', [Const('cookies')])], CallFunc(Name('str'), [Subscript(Name('state'), 'OP_APPLY', [Const('cookies')])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'command_stack'), 'pop'), [], None, None))]))
Module(None, Stmt([If([(Compare(Name('exit_code'), [('!=', Const(3))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('feed_url')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '_cache'), 'OP_ASSIGN', [Name('key')])], Name('value'))]))
from django . core . exceptions import ImproperlyConfigured , ViewDoesNotExist
Module(None, Stmt([If([(Compare(Name('value'), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('TOKEN_BLOCK', 'OP_ASSIGN')], Const(2))]))
Module(None, Stmt([Raise(CallFunc(Name('StopIteration'), [], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('old_handler', 'OP_ASSIGN')], CallFunc(Getattr(Name('signal'), 'signal'), [Getattr(Name('signal'), 'SIGTTOU'), Getattr(Name('signal'), 'SIG_IGN')], None, None))]))
Module(None, Stmt([Subscript(Name('self'), 'OP_DELETE', [Const('content-type')])]))
Module(None, Stmt([Assign([AssName('plural', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'value', 'text'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Subscript(Name('cmd_options'), 'OP_DELETE', [Const('args')])]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('self'), 'valid_value'), [Name('val')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'label', 'OP_ASSIGN')], CallFunc(Name('pretty_name'), [Name('name')], None, None))]))
Module(None, Stmt([Assign([AssName('errors', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('parts', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(Subscript(Getattr(Name('self'), 'forms'), 'OP_APPLY', [Name('index')]))]))
from django . core . exceptions import ImproperlyConfigured
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('TemplateResponse'), Name('self')], None, None), '__init__'), [Name('template'), Name('context'), Name('content_type'), Name('status')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('new_filenames'), 'append'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('dirpath'), Name('filename')], None, None)], None, None))]))
Module(None, Stmt([Return(Not(Getattr(Name('settings'), 'DEBUG')))]))
Module(None, Stmt([Assign([AssName('match', 'OP_ASSIGN')], CallFunc(Getattr(Name('date_re'), 'match'), [Name('value')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('new_context'), '_reset_dicts'), [Name('values')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Return(CallFunc(Name('FirstOfNode'), [ListComp(CallFunc(Getattr(Name('parser'), 'compile_filter'), [Name('bit')], None, None), [ListCompFor(AssName('bit', 'OP_ASSIGN'), Name('bits'), [])])], None, None))]))
Module(None, Stmt([If([(And([Not(CallFunc(Name('hasattr'), [Name('c'), Const('__call__')], None, None)), CallFunc(Name('hasattr'), [Name('types'), Const('ClassType')], None, None), Compare(CallFunc(Name('type'), [Name('c')], None, None), [('!=', Getattr(Name('types'), 'ClassType'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('other'), Name('Promise')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('__setitem__', 'OP_ASSIGN')], Name('complain'))]))
Module(None, Stmt([Function(None, 'render_css', ['self'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssName('httpd_cls', 'OP_ASSIGN')], CallFunc(Name('type'), [CallFunc(Name('str'), [Const('WSGIServer')], None, None), Tuple([Getattr(Name('socketserver'), 'ThreadingMixIn'), Name('WSGIServer')]), Dict(())], None, None))]))
offset_mins = int ( tzinfo [ - 2 : ] ) if len ( tzinfo ) > 3 else 0
Module(None, Stmt([Function(None, 'sync_apps', ['self', 'connection', 'app_labels'], [], 0, None, Stmt([Pass()]))]))
elif cwords [ 0 ] in ( 'dumpdata' , 'sql' , 'sqlall' , 'sqlclear' ,  'sqlcustom' , 'sqlindexes' , 'sqlsequencereset' , 'test' ) :
Module(None, Stmt([Function(None, 'flush', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(ListComp(CallFunc(Name('smart_text'), [Name('val')], None, None), [ListCompFor(AssName('val', 'OP_ASSIGN'), Name('value'), [])]))]))
Module(None, Stmt([Assign([AssName('re_newlines', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('\\r\\n|\\r')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('validate_ipv6_address'), [Name('value')], None, None))]))
except OSError as e :
Module(None, Stmt([If([(Getattr(Name('self'), 'help'), Stmt([Pass()]))], None)]))
@ property
Module(None, Stmt([Discard(CallFunc(Getattr(Name('logging'), '_acquireLock'), [], None, None))]))
Module(None, Stmt([Import([('calendar', None)])]))
Module(None, Stmt([Return(Name('size'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_out', 'OP_ASSIGN')], Name('out'))]))
except socket . error as e :
Module(None, Stmt([Assign([Subscript(Name('libraries'), 'OP_ASSIGN', [Name('library_name')])], Name('lib'))]))
except IndexError :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('bpython'), 'embed'), [], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ImproperlyConfigured'), [Mod((Const('Could not create directory for saving email messages: %s (%s)'), Tuple([Getattr(Name('self'), 'file_path'), Name('err')])))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'handle', ['self', 'args', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Const('media'), [('not in', Name('attrs'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('pgettext_lazy'), [Getattr(Name('self'), 'message_context'), Name('value')], None, None))]))
Module(None, Stmt([Function(None, 'handle', ['self', 'args', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([AugAssign(Name('t'), '-=', Const(1))]))
Module(None, Stmt([For(AssName('obj', 'OP_ASSIGN'), CallFunc(Name('PythonDeserializer'), [Name('objects')], None, Name('options')), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'timeuntil', ['d', 'now'], [Name('None')], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('values'), 'get'), [CallFunc(Getattr(Name('value'), 'lower'), [], None, None), Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('default_error_messages', 'OP_ASSIGN')], Dict([(Const('invalid'), CallFunc(Name('_'), [Const('No file was submitted. Check the encoding type on the form.')], None, None)), (Const('missing'), CallFunc(Name('_'), [Const('No file was submitted.')], None, None)), (Const('empty'), CallFunc(Name('_'), [Const('The submitted file is empty.')], None, None)), (Const('max_length'), CallFunc(Name('ungettext_lazy'), [Const('Ensure this filename has at most %(max)d character (it has %(length)d).'), Const('Ensure this filename has at most %(max)d characters (it has %(length)d).'), Const('max')], None, None)), (Const('contradiction'), CallFunc(Name('_'), [Const('Please either submit a file or check the clear checkbox, not both.')], None, None))]))]))
Module(None, Stmt([Assign([AssName('fd', 'OP_ASSIGN')], Getattr(Name('sys'), 'stdin'))]))
Module(None, Stmt([Assign([AssName('BLOCK_TAG_END', 'OP_ASSIGN')], Const('%}'))]))
Module(None, Stmt([Assign([AssName('plan', 'OP_ASSIGN')], CallFunc(Getattr(Name('executor'), 'migration_plan'), [Name('targets')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Getattr(Getattr(Name('form'), '_meta'), 'fields'), Name('tuple')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('FileInput'), Name('self')], None, None), 'render'), [Name('name'), Name('None'), Keyword('attrs', Name('attrs'))], None, None))]))
Module(None, Stmt([From('io', [('BytesIO', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'%s' tag takes only one argument"), Subscript(Name('bits'), 'OP_APPLY', [Const(0)])))], None, None), None, None)]))
except NotImplementedError :
Module(None, Stmt([If([(Not(Name('buf')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('since', 'OP_ASSIGN')], Add((Mul((Mul((Mul((Getattr(Name('delta'), 'days'), Const(24))), Const(60))), Const(60))), Getattr(Name('delta'), 'seconds'))))]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('self'), Const('_queryset')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('r', 'OP_ASSIGN')], Add((Slice(Name('r'), 'OP_APPLY', None, Const(23)), Slice(Name('r'), 'OP_APPLY', Const(26), None))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Getattr(Name('error_dict'), 'setdefault'), [Name('field'), List(())], None, None), 'extend'), [Name('error_list')], None, None))]))
Module(None, Stmt([Function(None, 'dummy', ['args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'start_object'), [Name('obj')], None, None))]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None), ('CommandError', None)], 0)]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('odds', 'OP_ASSIGN')], CallFunc(Name('sum'), [GenExpr(GenExprInner(Subscript(Name('LUHN_ODD_LOOKUP'), 'OP_APPLY', [CallFunc(Name('int'), [Name('c')], None, None)]), [GenExprFor(AssName('c', 'OP_ASSIGN'), Subscript(Name('candidate'), 'OP_APPLY', [Sliceobj([UnarySub(Const(2)), Const(None), UnarySub(Const(2))])]), [])]))], None, None))]))
Module(None, Stmt([From('django.core.management.base', [('CommandError', None), ('BaseCommand', None)], 0)]))
else :
Module(None, Stmt([Class('HttpResponseNotModified', [Name('HttpResponse')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('select_html', 'OP_ASSIGN')], CallFunc(Getattr(Name('s'), 'render'), [Mod((Name('field'), Name('name'))), Name('val'), Name('local_attrs')], None, None))]))
Module(None, Stmt([Assign([AssName('targets', 'OP_ASSIGN')], List([Tuple([Name('app_label'), Getattr(Name('migration'), 'name')])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_callback_strs'), 'add'), [Name('lookup_str')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('copyright'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('feed_copyright')])], None, None))]))
try :
Module(None, Stmt([For(AssName('filename', 'OP_ASSIGN'), Name('locale_filenames'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('number_value', 'OP_ASSIGN')], Name('rhs'))]))
Module(None, Stmt([If([(Compare(Name('confirm'), [('not in', Tuple([Const('yes'), Const('no')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('format_key', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'name', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([Return(Tuple([Name('list_'), Name('False')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--exclude'), Const('-x'), Keyword('dest', Const('exclude')), Keyword('action', Const('append')), Keyword('default', List(())), Keyword('help', Const('Locales to exclude. Default is none. Can be used multiple times.'))], None, None))]))
Module(None, Stmt([AugAssign(Name('base_url'), '+=', Const('/'))]))
Module(None, Stmt([Return(Name('_default'))]))
else :
Module(None, Stmt([Assign([AssName('password', 'OP_ASSIGN')], CallFunc(Name('force_bytes'), [Name('password')], None, None))]))
Module(None, Stmt([Return(List(()))]))
Module(None, Stmt([Assign([AssName('secret', 'OP_ASSIGN')], CallFunc(Name('force_bytes'), [Name('secret')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'field'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('want_unicode'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'fed'), 'append'), [Mod((Const('&#%s;'), Name('name')))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '__dt', 'OP_ASSIGN')], Name('dt'))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Function(None, '__next__', ['self'], [], 0, None, Stmt([Pass()]))]))
directories . append ( entry )
Module(None, Stmt([If([(Compare(Name('name'), [('in', Getattr(Name('lib'), 'tags'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'divisibleby', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('formataddr'), [Tuple([Name('nm'), Name('addr')])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('zfile'), 'flush'), [], None, None))]))
Module(None, Stmt([If([(Name('reverse'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Subscript(Name('options'), 'OP_APPLY', [Const('daemonize')]), 'lower'), [], None, None), [('in', Tuple([Const('true'), Const('yes'), Const('t')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('pid', 'OP_ASSIGN')], Const(1))]))
Module(None, Stmt([Function(None, 'default', ['self', 'o'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of Tokenparser must provide a top() method')], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('ModelMultipleChoiceField'), Name('self')], None, None), '__init__'), [Name('queryset'), Name('None'), Name('cache_choices'), Name('required'), Name('widget'), Name('label'), Name('initial'), Name('help_text')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([From('django.core.wsgi', [('get_wsgi_application', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('format'), [('not in', Name('_serializers'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('final_output'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('dirs'), 'append'), [Const('')], None, None))]))
except LookupError :
Module(None, Stmt([For(AssName('model', 'OP_ASSIGN'), Name('model_list'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '_format_value', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('CacheClass', [Name('FileBasedCache')], None, Stmt([Pass()]), None)]))
response = self . get_exception_response ( request , resolver , 400 )
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('found', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('found'), Name('frag')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'urlconf_name', 'OP_ASSIGN')], Name('urlconf_name'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'makedirs'), [Getattr(Name('self'), 'default_locale_path')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('self'), 'has_key'), [Name('key'), Name('version')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], CallFunc(Name('select_template'), [Name('file_name')], None, None))]))
Module(None, Stmt([If([(And([Compare(Getattr(Getattr(Name('self'), 'data'), 'minute'), [('==', Const(0))]), Compare(Getattr(Getattr(Name('self'), 'data'), 'hour'), [('==', Const(0))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'base_location', 'OP_ASSIGN')], Name('location'))]))
Module(None, Stmt([If([(Name('inplural'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'use_argparse'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'pgettext', ['context', 'message'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('ipv4_address', 'OP_ASSIGN')], Mod((Const('%d.%d.%d.%d'), Tuple([CallFunc(Name('int'), [Slice(Subscript(Name('hextets'), 'OP_APPLY', [Const(6)]), 'OP_APPLY', Const(0), Const(2)), Const(16)], None, None), CallFunc(Name('int'), [Slice(Subscript(Name('hextets'), 'OP_APPLY', [Const(6)]), 'OP_APPLY', Const(2), Const(4)), Const(16)], None, None), CallFunc(Name('int'), [Slice(Subscript(Name('hextets'), 'OP_APPLY', [Const(7)]), 'OP_APPLY', Const(0), Const(2)), Const(16)], None, None), CallFunc(Name('int'), [Slice(Subscript(Name('hextets'), 'OP_APPLY', [Const(7)]), 'OP_APPLY', Const(2), Const(4)), Const(16)], None, None)]))))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY2'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('os'), 'name'), [('==', Const('posix'))]), Stmt([Pass()]))], None)]))
else :
try :
Module(None, Stmt([From('lib2to3.fixer_util', [('find_indentation', None), ('Name', None), ('syms', None), ('touch_import', None)], 0)]))
Module(None, Stmt([Function(None, '__copy__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'COOKIES', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('RadioChoiceInput'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Name('statement')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('inner'), 'update'), [CallFunc(Getattr(Name('password'), 'translate'), [Getattr(Name('hmac'), 'trans_36')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'as_p', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid')]), Keyword('code', Const('invalid'))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('force_str'), [Name('value')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('RequestContext'), [Getattr(Name('self'), '_request'), Name('context'), Keyword('current_app', Getattr(Name('self'), '_current_app'))], None, None))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'id_for_label'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Subscript(Name('WEEKDAYS_ABBR'), 'OP_APPLY', [CallFunc(Getattr(Getattr(Name('self'), 'data'), 'weekday'), [], None, None)]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'makedirs'), [Name('filename')], None, None))]))
Module(None, Stmt([With(Getattr(Name('self'), 'mutex'), None, Stmt([Pass()]))]))
initial_value = initial if initial is not None else ''
try :
Module(None, Stmt([Assign([AssName('urlquote_plus', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('urlquote_plus'), Getattr(Name('six'), 'text_type')], None, None))]))
@ register . tag
@ register . tag
Module(None, Stmt([Assign([AssName('conditions_nodelists', 'OP_ASSIGN')], List([Tuple([Name('condition'), Name('nodelist')])]))]))
Module(None, Stmt([Assign([AssName('filter_name', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('func'), Const('_filter_name'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'interesting', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Mod((Const('</\\s*%s\\s*>'), CallFunc(Getattr(Name('tag'), 'lower'), [], None, None))), Getattr(Name('re'), 'I')], None, None))]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'verbosity', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('verbosity')], None, None))]))
try :
Module(None, Stmt([Assign([AssName('tok', 'OP_ASSIGN')], Add((Add((Const('"'), Name('guts'))), Const('"'))))]))
Module(None, Stmt([Function(None, '__len__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Return(Name('msgid'))]))
Module(None, Stmt([If([(Compare(Name('arg'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('widget', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Getattr(Name('self'), 'widgets')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'charset', 'OP_ASSIGN')], Name('charset'))]))
Module(None, Stmt([Assign([AssName('number_value', 'OP_ASSIGN')], Subscript(Name('rhs'), 'OP_APPLY', [Name('number')]))]))
Module(None, Stmt([While(Compare(Slice(Name('s'), 'OP_APPLY', None, Const(1)), [('==', Const(';'))]), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'msgmerge_options', 'OP_ASSIGN')], Add((Slice(Getattr(Name('self'), 'msgmerge_options'), 'OP_APPLY', None, None), List([Const('--no-location')]))))]))
Module(None, Stmt([Class('lazy_property', [Name('property')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'configure_logger', ['self', 'name', 'config', 'incremental'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const(' [X] %s'), Name('title')))], None, None))]))
Module(None, Stmt([Function(None, 'with_metaclass', ['meta', 'bases'], [], 4, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Name('exclude'), Compare(Getattr(Name('f'), 'name'), [('in', Name('exclude'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('do_translate'), [Name('message'), Const('gettext')], None, None))]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Assign([AssAttr(Name('new_class'), 'declared_fields', 'OP_ASSIGN')], Name('declared_fields'))]))
Module(None, Stmt([Import([('yaml', None)])]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None), ('CommandError', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_current', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('int'), [CallFunc(Name('str'), [Name('value')], None, None)], None, None))]))
Module(None, Stmt([Return(Tuple([Slice(Name('callback'), 'OP_APPLY', None, Name('dot')), Slice(Name('callback'), 'OP_APPLY', Add((Name('dot'), Const(1))), None)]))]))
Module(None, Stmt([Function(None, 'close', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'tag'), [Name('function_name'), Name('compile_func')], None, None))]))
Module(None, Stmt([Function(None, '_create_attachments', ['self', 'msg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('new_name'), 'endswith'), [Const('_')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY2'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Name('ip'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('emit_pre_migrate_signal'), [Name('create_models'), Getattr(Name('self'), 'verbosity'), Getattr(Name('self'), 'interactive'), Getattr(Name('connection'), 'alias')], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('data'), Name('basestring')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([From('django.db', [('connection', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'content_type', 'OP_ASSIGN')], Name('content_type'))]))
Module(None, Stmt([Discard(CallFunc(Name('walk_to_end'), [Name('ch'), Name('pattern_iter')], None, None))]))
Module(None, Stmt([If([(Not(And([Getattr(Name('bits'), 'scheme'), Getattr(Name('bits'), 'netloc')])), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Return(CallFunc(Name('len'), [CallFunc(Getattr(Name('self'), 'get_queryset'), [], None, None)], None, None))]))
Module(None, Stmt([Return(Compare(Getattr(Name('self'), 'choice_value'), [('in', Getattr(Name('self'), 'value'))]))]))
Module(None, Stmt([Assign([AssName('requires_system_checks', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([If([(And([Compare(Name('role'), [('in', Subscript(Name('PALETTES'), 'OP_APPLY', [Name('NOCOLOR_PALETTE')]))]), Name('definition')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('arg_vals', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Compare(Name('end'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('ugettext_lazy', 'OP_ASSIGN')], CallFunc(Name('lazy'), [Name('ugettext'), Getattr(Name('six'), 'text_type')], None, None))]))
except ( ValueError , OverflowError , InvalidOperation ) :
Module(None, Stmt([Assign([AssName('height', 'OP_ASSIGN')], CallFunc(Name('property'), [Name('_get_height')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('settings'), 'is_overridden'), [Const('MANAGERS')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'token_kwargs', ['bits', 'parser', 'support_legacy'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('\n'), 'join'), [Name('output')], None, None))]))
Module(None, Stmt([If([(Compare(Name('data'), [('in', Tuple([Name('None'), Name('FILE_INPUT_CONTRADICTION')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('\n'), 'join'), [Name('statements')], None, None))]))
Module(None, Stmt([AugAssign(Name('msg'), '+=', Const('\n'))]))
Module(None, Stmt([Assign([AssName('errors', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Name('data_list'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('Debug', [Name('CheckMessage')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([AugAssign(Name('weight'), '+=', Const(1))]))
Module(None, Stmt([Class('TemplateLiteral', [Name('Literal')], None, Stmt([Pass()]), None)]))
except UnicodeEncodeError :
Module(None, Stmt([Return(Add((Name('version'), Name('delta'))))]))
Module(None, Stmt([If([(Compare(Name('_standard_context_processors'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([From('ctypes', [('sizeof', None), ('c_ulong', None), ('c_void_p', None), ('c_int64', None), ('Structure', None), ('Union', None), ('POINTER', None), ('windll', None), ('byref', None)], 0)]))
else :
try :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_rollback', 'OP_ASSIGN')], Add((CallFunc(Name('len'), [Name('boundary')], None, None), Const(6))))]))
Module(None, Stmt([Return(Mod((Const('%s: %s%s%s'), Tuple([Name('obj'), Name('id'), Getattr(Name('self'), 'msg'), Name('hint')]))))]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'active_writers'), '+=', Const(1))]))
Module(None, Stmt([From('django.utils.encoding', [('force_bytes', None), ('force_text', None), ('force_str', None), ('iri_to_uri', None)], 0)]))
Module(None, Stmt([Return(Name('duplicate'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'db_table', 'OP_ASSIGN')], Name('table'))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Class('IfNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('current_fields'), 'sort'), [Keyword('key', Lambda(['x'], [], 0, Getattr(Subscript(Name('x'), 'OP_APPLY', [Const(1)]), 'creation_counter')))], None, None))]))
Module(None, Stmt([Function(None, '_cull', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(Yield(Const("# Also note: You'll have to insert the output of 'django-admin.py sqlcustom [app_label]'")))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'current_token'), [('is not', Name('EndToken'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('key', 'OP_ASSIGN'), Getattr(Name('self'), 'keyOrder'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('new_value', 'OP_ASSIGN')], List(()))]))
@ stringfilter
Module(None, Stmt([Subscript(Getattr(Name('moves'), '__dict__'), 'OP_DELETE', [Name('name')])]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], Slice(CallFunc(Getattr(Name('token'), 'split_contents'), [], None, None), 'OP_APPLY', Const(1), None))]))
Module(None, Stmt([Assign([Subscript(Name('self'), 'OP_ASSIGN', [Const('Allow')])], CallFunc(Getattr(Const(', '), 'join'), [Name('permitted_methods')], None, None))]))
Module(None, Stmt([Assign([AssName('safe_input', 'OP_ASSIGN')], CallFunc(Name('isinstance'), [Name('text'), Name('SafeData')], None, None))]))
Module(None, Stmt([Assign([AssName('PY3', 'OP_ASSIGN')], Compare(Subscript(Getattr(Name('sys'), 'version_info'), 'OP_APPLY', [Const(0)]), [('==', Const(3))]))]))
except ValidationError as e :
Module(None, Stmt([Function(None, '__ne__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'interactive'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('guessed_filename', 'OP_ASSIGN')], Name('used_name'))]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('other_dict'), Const('__getitem__')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([AugAssign(Name('num_args'), '+=', Const(1))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('codecs'), 'open'), [Name('sql_file'), Const('r'), Keyword('encoding', Getattr(Name('settings'), 'FILE_CHARSET'))], None, None), AssName('fp', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'method_decorator', ['decorator'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('subcommand', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'argv'), 'OP_APPLY', [Const(1)]))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
else :
Module(None, Stmt([Function(None, 'delete', ['self', 'key', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('MAXSIZE', 'OP_ASSIGN')], CallFunc(Name('int'), [Sub((LeftShift((Const(1), Const(63))), Const(1)))], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Mod((CallFunc(Name('str'), [Const('%s%s%s')], None, None), Tuple([Name('value'), Getattr(Name('self'), 'sep'), CallFunc(Getattr(Name('self'), 'timestamp'), [], None, None)]))))]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Name('force_str'), [Getattr(Name('self'), 'obj')], None, None))]))
Module(None, Stmt([Discard(Yield(Const('# This is an auto-generated Django model module.')))]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], CallFunc(Getattr(Const(''), 'join'), [Name('tokens')], None, None))]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], Tuple([Const('WSGIServer'), Const('WSGIRequestHandler')]))]))
Module(None, Stmt([Assign([AssName('date', 'OP_ASSIGN')], CallFunc(Getattr(Name('datetime_safe'), 'new_datetime'), [Name('date')], None, None))]))
Module(None, Stmt([If([(And([Name('labels'), Compare(Getattr(Name('f'), 'name'), [('in', Name('labels'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Truncator'), Name('self')], None, None), '__init__'), [Lambda((), (), 0, CallFunc(Name('force_text'), [Name('text')], None, None))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('collect'), 'extend'), [Name('_builtin_context_processors')], None, None))]))
Module(None, Stmt([Return(Name('t'))]))
Module(None, Stmt([Return(Name('s'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parts'), 'append'), [Name('value')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('TemplateLiteral'), [CallFunc(Getattr(Getattr(Name('self'), 'template_parser'), 'compile_filter'), [Name('value')], None, None), Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_cache', 'OP_ASSIGN')], CallFunc(Getattr(Name('_caches'), 'setdefault'), [Name('name'), Dict(())], None, None))]))
Module(None, Stmt([Function(None, 'ipython', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([While(And([Compare(Name('i'), [('<', CallFunc(Name('len'), [Name('subject')], None, None))]), Compare(Subscript(Name('subject'), 'OP_APPLY', [Name('i')]), [('not in', Tuple([Const(' '), Const('\t')]))])]), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('SafeBytes'), [Name('t')], None, None))]))
Module(None, Stmt([Return(Name('None'))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'dicts', 'OP_ASSIGN')], Name('dicts'))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Getattr(Name('self'), 'file'), Const('size')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'extract', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('sys'), 'stdout'), 'write'), [Add((CallFunc(Getattr(Name('self'), 'main_help_text'), [], None, None), Const('\n')))], None, None))]))
Module(None, Stmt([Return(Getattr(Getattr(Name('self'), 'file'), 'name'))]))
Module(None, Stmt([If([(Compare(Slice(Name('base64d'), 'OP_APPLY', None, Const(1)), [('==', Const('.'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('git_changeset', 'OP_ASSIGN')], CallFunc(Name('get_git_changeset'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('datetime'), 'datetime'), 'strptime'), [CallFunc(Name('force_str'), [Name('value')], None, None), Name('format')], None, None))]))
else :
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], Add((Add((Slice(Name('s'), 'OP_APPLY', None, Name('site')), Name('syear'))), Slice(Name('s'), 'OP_APPLY', Add((Name('site'), Const(4))), None))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'can_read'), 'release'), [], None, None))]))
Module(None, Stmt([From('collections', [('OrderedDict', None)], 0)]))
Module(None, Stmt([If([(And([Compare(Name('i'), [('>=', CallFunc(Getattr(Name('self'), 'initial_form_count'), [], None, None))]), Getattr(Name('self'), 'initial_extra')]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Getattr(Getattr(Name('self'), 'field'), 'widget'))]))
except ( ValueError , TypeError ) :
else :
Module(None, Stmt([From('django.db', [('connections', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([Assign([AssName('_moved_attributes', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'strptime', ['self', 'value', 'format'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('boundary', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_find_boundary'), [Name('chunk'), Compare(CallFunc(Name('len'), [Name('chunk')], None, None), [('<', Getattr(Name('self'), '_rollback'))])], None, None))]))
Module(None, Stmt([Return(Name('nodes'))]))
else :
Module(None, Stmt([Class('BooleanField', [Name('Field')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('output_transaction', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Function(None, 'is_iterable', ['x'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([With(CallFunc(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'cursor'), [], None, None), AssName('cursor', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('end', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('s')], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'dicts'), 'append'), [Name('value')], None, None))]))
Module(None, Stmt([Return(Tuple([CallFunc(Getattr(CallFunc(Getattr(Name('fp'), 'read'), [], None, None), 'decode'), [Getattr(Name('settings'), 'FILE_CHARSET')], None, None), Name('filepath')]))]))
Module(None, Stmt([Assign([AssName('MAXSIZE', 'OP_ASSIGN')], CallFunc(Name('int'), [Sub((LeftShift((Const(1), Const(31))), Const(1)))], None, None))]))
Module(None, Stmt([Function(None, 'call_command', ['name', 'args', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('seen_models'), 'add'), [Name('model')], None, None))]))
else :
Module(None, Stmt([From('django.utils.functional', [('lazy', None)], 0)]))
else :
except KeyError :
Module(None, Stmt([Return(Getattr(Name('self'), '_urlconf_module'))]))
Module(None, Stmt([Class('EventHandler', [Getattr(Name('pyinotify'), 'ProcessEvent')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '_mark_post_parse_error', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Mod((CallFunc(Name('bytes'), [Name('self')], None, None), Name('rhs'))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'dup2'), [CallFunc(Getattr(Name('se'), 'fileno'), [], None, None), CallFunc(Getattr(Getattr(Name('sys'), 'stderr'), 'fileno'), [], None, None)], None, None))]))
else :
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('field'), '_get_val_from_obj'), [Name('obj')], None, None))]))
try :
elif isinstance ( timezone , six . string_types ) and pytz is not None :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'func', 'OP_ASSIGN')], Name('func'))]))
Module(None, Stmt([Assign([AssName('form', 'OP_ASSIGN')], CallFunc(Name('ManagementForm'), [Getattr(Name('self'), 'data'), Keyword('auto_id', Getattr(Name('self'), 'auto_id')), Keyword('prefix', Getattr(Name('self'), 'prefix'))], None, None))]))
Module(None, Stmt([Assign([AssName('gettext_lazy', 'OP_ASSIGN')], CallFunc(Name('lazy'), [Name('gettext'), Name('str')], None, None))]))
Module(None, Stmt([Assign([AssName('style', 'OP_ASSIGN')], CallFunc(Name('no_style'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_response_middleware'), 'insert'), [Const(0), Getattr(Name('mw_instance'), 'process_response')], None, None))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('context'), 'render_context'), 'OP_ASSIGN', [Name('BLOCK_CONTEXT_KEY')])], CallFunc(Name('BlockContext'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('httpd'), 'set_app'), [Name('wsgi_handler')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('context_extras'), 'OP_ASSIGN', [Const('LANGUAGE_BIDI')])], CallFunc(Getattr(Name('translation'), 'get_language_bidi'), [], None, None))]))
Module(None, Stmt([Assign([AssName('groupid', 'OP_ASSIGN')], Mod((Const('t%d'), Getattr(Name('tok'), 'id'))))]))
Module(None, Stmt([Assign([AssName('step', 'OP_ASSIGN')], Const('any'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('MIMEMultipart'), '__init__'), [Name('self'), Name('_subtype'), Name('boundary'), Name('_subparts')], None, Name('_params')))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('name'), Subscript(Name('item'), 'OP_APPLY', [Const('author_name')])], None, None))]))
except TemplateDoesNotExist :
Module(None, Stmt([Assign([Subscript(Name('attrs'), 'OP_ASSIGN', [Const('widgets')])], Name('widgets'))]))
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('handler', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Name('handlers')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('EscapeUnicode', 'OP_ASSIGN')], Name('EscapeText'))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Return(Tuple([Getattr(Name('self'), '__dt')]))]))
Module(None, Stmt([Assign([AssName('forms', 'OP_ASSIGN')], CallFunc(Getattr(Const(' '), 'join'), [GenExpr(GenExprInner(CallFunc(Getattr(Name('form'), 'as_ul'), [], None, None), [GenExprFor(AssName('form', 'OP_ASSIGN'), Name('self'), [])]))], None, None))]))
except TemplateDoesNotExist :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'can_read'), 'release'), [], None, None))]))
Module(None, Stmt([Function(None, 'ip_address_validators', ['protocol', 'unpack_ipv4'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([AugAssign(Name('i'), '+=', Const(1))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'dict_', 'autoescape', 'current_app', 'use_l10n', 'use_tz'], [Name('None'), Name('True'), Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
except KeyError :
Module(None, Stmt([Class('EmailField', [Name('CharField')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssTuple([AssName('options', 'OP_ASSIGN'), AssName('args', 'OP_ASSIGN')])], CallFunc(Getattr(Name('parser'), 'parse_known_args'), [Slice(Getattr(Name('self'), 'argv'), 'OP_APPLY', Const(2), None)], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('attrs'), 'OP_ASSIGN', [Const('class')])], Getattr(Getattr(Name('self'), 'form'), 'required_css_class'))]))
Module(None, Stmt([If([(Not(Name('email_messages')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(Name('rest')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Tuple([Name('val'), Name('encoded')]))]))
Module(None, Stmt([Return(Name('data'))]))
Module(None, Stmt([Assign([AssName('invalid_var_format_string', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Function(None, 'copy', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'file'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'chmod'), [Name('filename'), Name('new_permissions')], None, None))]))
Module(None, Stmt([Import([('pylibmc', None)])]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Prints the CREATE TABLE SQL statements for the given app name(s).'))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('Unknown model: %s.%s'), Tuple([Name('app_label'), Name('model_label')])))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'wrapper', ['args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], Mod((Const('Execution of %s failed'), Getattr(Name('self'), 'program'))))]))
Module(None, Stmt([From('django.db.migrations.loader', [('MigrationLoader', None)], 0)]))
Module(None, Stmt([Return(Getattr(Name('self'), '_request'))]))
Module(None, Stmt([Assign([AssName('nodelist_false', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'parse'), [Tuple([Name('end_tag')])], None, None))]))
Module(None, Stmt([Assign([AssName('script_url', 'OP_ASSIGN')], CallFunc(Name('get_bytes_from_wsgi'), [Name('environ'), Const('REDIRECT_URL'), Const('')], None, None))]))
Module(None, Stmt([If([(Not(Name('inhibit_post_migrate')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('sequence_sql', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('connection'), 'ops'), 'sequence_reset_sql'), [CallFunc(Name('no_style'), [], None, None), Getattr(Name('self'), 'models')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('tpl'), 'format'), [Getattr(Name('self'), 'name'), Getattr(Name('self'), 'sysid'), Getattr(Name('self'), 'pubid')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('errors happened while running xgettext on %s\n%s'), Tuple([Getattr(Name('self'), 'file'), Name('errors')])))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'get', ['self', 'key', 'default', 'version'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_default_manager'), Const('get_by_natural_key')], None, None), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([If([(Compare(Name('_file'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('app_dirs', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(CallFunc(Name('force_text'), [CallFunc(Name('ngettext'), [Name('singular'), Name('plural'), Name('number')], None, None)], None, None))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Assign([AssName('new_keys', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('self'), 'make_key'), [Name('x'), Keyword('version', Name('version'))], None, None), [ListCompFor(AssName('x', 'OP_ASSIGN'), Name('keys'), [])]))]))
Module(None, Stmt([Function(None, 'handle', ['self', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'content_type', 'status', 'reason'], [Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('converter'), Stmt([Pass()]))], None)]))
elif args [ 1 ] == '304' :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'view_name', 'OP_ASSIGN')], Name('view_name'))]))
Module(None, Stmt([Assign([AssName('convert', 'OP_ASSIGN')], Dict([(Const('__lt__'), List([Tuple([Const('__gt__'), Lambda(['self', 'other'], [], 0, Not(Or([Compare(Name('self'), [('<', Name('other'))]), Compare(Name('self'), [('==', Name('other'))])])))]), Tuple([Const('__le__'), Lambda(['self', 'other'], [], 0, Or([Compare(Name('self'), [('<', Name('other'))]), Compare(Name('self'), [('==', Name('other'))])]))]), Tuple([Const('__ge__'), Lambda(['self', 'other'], [], 0, Not(Compare(Name('self'), [('<', Name('other'))])))])])), (Const('__le__'), List([Tuple([Const('__ge__'), Lambda(['self', 'other'], [], 0, Or([Not(Compare(Name('self'), [('<=', Name('other'))])), Compare(Name('self'), [('==', Name('other'))])]))]), Tuple([Const('__lt__'), Lambda(['self', 'other'], [], 0, And([Compare(Name('self'), [('<=', Name('other'))]), Not(Compare(Name('self'), [('==', Name('other'))]))]))]), Tuple([Const('__gt__'), Lambda(['self', 'other'], [], 0, Not(Compare(Name('self'), [('<=', Name('other'))])))])])), (Const('__gt__'), List([Tuple([Const('__lt__'), Lambda(['self', 'other'], [], 0, Not(Or([Compare(Name('self'), [('>', Name('other'))]), Compare(Name('self'), [('==', Name('other'))])])))]), Tuple([Const('__ge__'), Lambda(['self', 'other'], [], 0, Or([Compare(Name('self'), [('>', Name('other'))]), Compare(Name('self'), [('==', Name('other'))])]))]), Tuple([Const('__le__'), Lambda(['self', 'other'], [], 0, Not(Compare(Name('self'), [('>', Name('other'))])))])])), (Const('__ge__'), List([Tuple([Const('__le__'), Lambda(['self', 'other'], [], 0, Or([Not(Compare(Name('self'), [('>=', Name('other'))])), Compare(Name('self'), [('==', Name('other'))])]))]), Tuple([Const('__gt__'), Lambda(['self', 'other'], [], 0, And([Compare(Name('self'), [('>=', Name('other'))]), Not(Compare(Name('self'), [('==', Name('other'))]))]))]), Tuple([Const('__lt__'), Lambda(['self', 'other'], [], 0, Not(Compare(Name('self'), [('>=', Name('other'))])))])]))]))]))
Module(None, Stmt([From('django.utils.functional', [('allow_lazy', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Add((CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_LABEL'), [Const('  Apply all migrations: ')], None, None), Or([CallFunc(Getattr(Const(', '), 'join'), [CallFunc(Name('set'), [GenExpr(GenExprInner(Name('a'), [GenExprFor(AssTuple([AssName('a', 'OP_ASSIGN'), AssName('n', 'OP_ASSIGN')]), Name('targets'), [])]))], None, None)], None, None), Const('(none)')])))], None, None))]))
Module(None, Stmt([Function(None, 'is_valid_ipv6_address', ['ip_str'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Name('incremental')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('s'), Tuple([Getattr(Name('six'), 'text_type'), Name('Promise')])], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('dummy'), [], None, None))]))
Module(None, Stmt([From('django.utils.translation', [('ugettext_lazy', '_'), ('pgettext_lazy', None)], 0)]))
Module(None, Stmt([Class('ModelMultipleChoiceField', [Name('ModelChoiceField')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('statements', 'OP_ASSIGN')], CallFunc(Name('sql_create'), [Name('app_config'), Getattr(Name('self'), 'style'), Name('connection')], None, None))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('updated'), CallFunc(Name('rfc3339_date'), [Subscript(Name('item'), 'OP_APPLY', [Const('updateddate')])], None, None)], None, None))]))
Module(None, Stmt([If([(Not(Compare(Getattr(Name('self'), 'inverse_match'), [('is not', CallFunc(Name('bool'), [CallFunc(Getattr(Getattr(Name('self'), 'regex'), 'search'), [CallFunc(Name('force_text'), [Name('value')], None, None)], None, None)], None, None))])), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_populate'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('data'), 'get'), [Name('name'), Name('None')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('content'), Const('temporary_file_path')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('CsrfTokenNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('os'), 'environ'), 'OP_ASSIGN', [Const('DJANGO_SETTINGS_MODULE')])], Getattr(Name('options'), 'settings'))]))
Module(None, Stmt([Assign([AssName('_fields_', 'OP_ASSIGN')], List([Tuple([Const('Internal'), Name('ULONG_PTR')]), Tuple([Const('InternalHigh'), Name('ULONG_PTR')]), Tuple([Const('_offset_union'), Name('_OFFSET_UNION')]), Tuple([Const('hEvent'), Name('HANDLE')])]))]))
Module(None, Stmt([Class('DjangoJSONEncoder', [Getattr(Name('json'), 'JSONEncoder')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'DSTDIFF', 'OP_ASSIGN')], Sub((Getattr(Name('self'), 'DSTOFFSET'), Getattr(Name('self'), 'STDOFFSET'))))]))
Module(None, Stmt([Import([('decimal', None)])]))
Module(None, Stmt([If([(Compare(Name('value'), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('fext'))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('tuple'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('contents', 'OP_ASSIGN')], CallFunc(Getattr(Name('one_percent_re'), 'sub'), [Const('%%'), Getattr(Name('t'), 'contents')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--locale'), Const('-l'), Keyword('dest', Const('locale')), Keyword('action', Const('append')), Keyword('default', List(())), Keyword('help', Const('Locale(s) to process (e.g. de_AT). Default is to process all. Can be used multiple times.'))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('translation'), '_info', 'OP_ASSIGN')], Dict(()))]))
elif k == 'bg' :
elif not self . required and not value :
@ encoding . setter
Module(None, Stmt([Assign([AssAttr(Name('self'), 'value', 'OP_ASSIGN')], Name('value'))]))
Module(None, Stmt([Return(Or([Name('value'), Name('arg')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--database'), Keyword('default', Name('DEFAULT_DB_ALIAS')), Keyword('help', Const('Nominates a database to print the SQL for. Defaults to the "default" database.'))], None, None))]))
Module(None, Stmt([Class('date', [Name('real_date')], None, Stmt([Pass()]), None)]))
@ encoding . setter
Module(None, Stmt([Assign([AssTuple([AssName('command', 'OP_ASSIGN'), AssName('source', 'OP_ASSIGN')])], CallFunc(Getattr(Getattr(Name('self'), 'command_stack'), 'pop'), [], None, None))]))
Module(None, Stmt([Function(None, '__new__', ['mcs', 'name', 'bases', 'attrs'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('from_current_timezone'), [Name('result')], None, None))]))
except ( KeyError , TypeError ) :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'years', 'OP_ASSIGN')], CallFunc(Name('range'), [Name('this_year'), Add((Name('this_year'), Const(10)))], None, None))]))
Module(None, Stmt([Function(None, 'close', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__contains__', ['self', 'item'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Compare(Name('lang_code'), [('not in', Name('_supported'))]), Compare(Name('replacement'), [('in', Name('_supported'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Getattr(Name('self'), 'streaming_content'))]))
try :
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Const("'templatetag' statement takes one argument")], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('context_match', 'OP_ASSIGN')], CallFunc(Getattr(Name('context_re'), 'match'), [CallFunc(Getattr(Name('imatch'), 'group'), [Const(2)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('schemes', 'OP_ASSIGN')], List([Const('http'), Const('https'), Const('ftp'), Const('ftps')]))]))
Module(None, Stmt([Discard(CallFunc(Name('_load_serializers'), [], None, None))]))
Module(None, Stmt([Assign([AssName('lead', 'OP_ASSIGN')], Add((Name('lead'), Name('opening'))))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('strerror', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Getattr(Name('e'), 'strerror'), Name('DEFAULT_LOCALE_ENCODING'), Keyword('strings_only', Name('True'))], None, None))]))
Module(None, Stmt([Function(None, 'filepath_to_uri', ['path'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('transaction'), 'atomic'), [Keyword('using', Getattr(Name('self'), 'using'))], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('response'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'context', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid')]), Keyword('code', Const('invalid'))], None, None), None, None)]))
Module(None, Stmt([With(CallFunc(Getattr(Getattr(Name('self'), '_lock'), 'reader'), [], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([With(CallFunc(Name('open'), [Name('filepath'), Const('rb')], None, None), AssName('fp', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_get_scheme', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('name', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')])], CallFunc(Getattr(Name('match'), 'groups'), [], None, None))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('len'), [CallFunc(Name('list'), [Name('email_messages')], None, None)], None, None))]))
Module(None, Stmt([For(AssName('migration', 'OP_ASSIGN'), Name('app_migrations'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'attrs', 'check_test'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('args'), Keyword('metavar', Const('app_label')), Keyword('nargs', Const('*'))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'saved_forms', 'OP_ASSIGN')], List(()))]))
else :
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'template_cache'), 'clear'), [], None, None))]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], CallFunc(Getattr(Name('s'), 'split'), [Const('.')], None, None))]))
Module(None, Stmt([Assign([AssName('use_func', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Name('error_msg')], None, None), None, None)]))
Module(None, Stmt([If([(And([Name('ending'), Not(CallFunc(Getattr(Name('msg'), 'endswith'), [Name('ending')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('SafeUnicode', 'OP_ASSIGN')], Name('SafeText'))]))
Module(None, Stmt([Assign([AssName('n', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('idx')], None, None))]))
Module(None, Stmt([Assign([AssName('retval', 'OP_ASSIGN')], CallFunc(Getattr(Name('handler'), 'upload_complete'), [], None, None))]))
Module(None, Stmt([Assign([AssName('block', 'OP_ASSIGN')], CallFunc(CallFunc(Name('type'), [Name('self')], None, None), [Getattr(Name('block'), 'name'), Getattr(Name('block'), 'nodelist')], None, None))]))
Module(None, Stmt([If([(Name('kwargs'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'initial_form_count', ['self'], [], 0, None, Stmt([Pass()]))]))
except Exception :
Module(None, Stmt([Assign([AssName('top_dir', 'OP_ASSIGN')], CallFunc(Getattr(Name('path'), 'join'), [CallFunc(Getattr(Name('os'), 'getcwd'), [], None, None), Name('name')], None, None))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Name('from_current_timezone'), [Name('result')], None, None))]))
Module(None, Stmt([Return(Name('attr'))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('Variable'), [Name('path')], None, None), 'resolve'), [Name('context')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('callable'), [Name('lookup_view')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Name('emit_post_migrate_signal'), [Name('created_models'), Getattr(Name('self'), 'verbosity'), Getattr(Name('self'), 'interactive'), Getattr(Name('connection'), 'alias')], None, None))]))
Module(None, Stmt([If([(Name('buffer_'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('BadHeaderError'), [Mod((Const("Header values can't contain newlines (got %r for header %r)"), Tuple([Name('val'), Name('name')])))], None, None), None, None)]))
Module(None, Stmt([Assign([Subscript(Name('link'), 'OP_ASSIGN', [Name('NEXT')])], Name('root'))]))
Module(None, Stmt([Return(And([Compare(Getattr(Name('value'), 'tzinfo'), [('is not', Name('None'))]), Compare(CallFunc(Getattr(Getattr(Name('value'), 'tzinfo'), 'utcoffset'), [Name('value')], None, None), [('is not', Name('None'))])]))]))
Module(None, Stmt([Assign([AssName('s1', 'OP_ASSIGN')], CallFunc(Getattr(Name('time'), 'strftime'), [Name('fmt'), Add((Tuple([Name('year')]), Slice(Name('timetuple'), 'OP_APPLY', Const(1), None)))], None, None))]))
elif var is None :
Module(None, Stmt([AugAssign(Name('year'), '+=', Const(2000))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Name('six'), 'text_type'), [Name('value')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], List([CallFunc(Name('format_html'), [Const('<select multiple="multiple"{0}>'), CallFunc(Name('flatatt'), [Name('final_attrs')], None, None)], None, None)]))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Function(None, 'handle_field', ['self', 'obj', 'field'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('params', 'OP_ASSIGN'), AssName('varargs', 'OP_ASSIGN'), AssName('varkw', 'OP_ASSIGN'), AssName('defaults', 'OP_ASSIGN')])], CallFunc(Name('getargspec'), [Name('func')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_upload_handlers', 'OP_ASSIGN')], Name('upload_handlers'))]))
try :
Module(None, Stmt([Continue()]))
Module(None, Stmt([Assign([AssName('program_options', 'OP_ASSIGN')], List([Const('--check-format')]))]))
Module(None, Stmt([Return(CallFunc(Name('unicode'), [CallFunc(Getattr(Name('s'), 'replace'), [Const('\\\\'), Const('\\\\\\\\')], None, None), Const('unicode_escape')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'validators'), 'append'), [CallFunc(Getattr(Name('validators'), 'MinValueValidator'), [Name('min_value')], None, None)], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'isdir'), [Name('basedir')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('chunk', 'OP_ASSIGN')], CallFunc(Getattr(Name('base64'), 'b64decode'), [Name('chunk')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('callback', 'OP_ASSIGN'), AssName('param_dict', 'OP_ASSIGN')])], CallFunc(Getattr(Name('resolver'), 'resolve_error_handler'), [Name('status_code')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('title'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('title')])], None, None))]))
Module(None, Stmt([Assign([AssName('length', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('arg')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'clear'), [], None, None))]))
Module(None, Stmt([Assign([AssName('migration_string', 'OP_ASSIGN')], CallFunc(Getattr(Name('writer'), 'as_string'), [], None, None))]))
Module(None, Stmt([Function(None, 'ungettext', ['singular', 'plural', 'number'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Tuple([CallFunc(Getattr(Subscript(Name('t'), 'OP_APPLY', [Const(0)]), 'lower'), [], None, None), Subscript(Name('t'), 'OP_APPLY', [Const(1)])]))]))
Module(None, Stmt([Function(None, '__next__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('shutil', [('copystat', None)], 0)]))
Module(None, Stmt([Assign([AssName('over_chunk', 'OP_ASSIGN')], CallFunc(Getattr(Name('field_stream'), 'read'), [Sub((Const(4), Name('over_bytes')))], None, None))]))
else :
Module(None, Stmt([Function(None, 'parse', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'autodiscover_modules', ['args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Name('template_dirs')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('value'), [('is not', Name('result'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssName('plan_node', 'OP_ASSIGN'), CallFunc(Getattr(Name('graph'), 'forwards_plan'), [Name('node')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_done', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([From('django.utils.translation', [('ugettext_lazy', None)], 0)]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('os'), 'access'), [Getattr(Name('self'), 'file_path'), Getattr(Name('os'), 'W_OK')], None, None)), Stmt([Pass()]))], None)]))
except Resolver404 as e :
except ( OverflowError , ValueError ) :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'fields', 'OP_ASSIGN')], Name('fields'))]))
Module(None, Stmt([If([(Name('sub_match'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('file_path', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'normpath'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('dirpath'), Name('filename')], None, None)], None, None))]))
Module(None, Stmt([If([(Name('cmatch'), Stmt([Pass()]))], None)]))
except ( DatabaseError , IntegrityError ) as e :
Module(None, Stmt([For(AssName('d', 'OP_ASSIGN'), Subscript(Getattr(Name('self'), 'dicts'), 'OP_APPLY', [UnarySub(Const(1))]), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('settings'), Const('SERIALIZATION_MODULES')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('func'))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'base_fields'), 'OP_ASSIGN', [Name('MIN_NUM_FORM_COUNT')])], CallFunc(Name('IntegerField'), [Keyword('required', Name('False')), Keyword('widget', Name('HiddenInput'))], None, None))]))
try :
Module(None, Stmt([Assign([AssName('header', 'OP_ASSIGN')], Slice(Name('chunk'), 'OP_APPLY', None, Name('header_end')))]))
try :
Module(None, Stmt([If([(Name('custom_sql'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('to_python', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_get_to_python'), [Name('pk_field')], None, None))]))
Module(None, Stmt([Assign([AssName('want_unicode', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'inverse_match', 'OP_ASSIGN')], Name('inverse_match'))]))
except StopIteration :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('excluded_apps'), 'add'), [Name('app_config')], None, None))]))
Module(None, Stmt([Assign([AssName('base36', 'OP_ASSIGN')], CallFunc(Name('BaseConverter'), [Name('BASE36_ALPHABET')], None, None))]))
else :
Module(None, Stmt([Assign([AssName('column_name', 'OP_ASSIGN')], Subscript(Name('row'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('"requires_model_validation" is deprecated in favor of "requires_system_checks".'), Name('RemovedInDjango19Warning')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'stream'), 'getvalue'), [], None, None))]))
Module(None, Stmt([Function(None, 'escape_filter', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('major', 'OP_ASSIGN')], CallFunc(Name('get_major_version'), [Name('version')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Const('\n'), 'join'), [List([CallFunc(Getattr(Name('six'), 'text_type'), [Getattr(Name('self'), 'management_form')], None, None), Name('forms')])], None, None)], None, None))]))
else :
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_body', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'read'), [], None, None))]))
Module(None, Stmt([Function(None, '_send', ['self', 'email_message'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('SuspiciousOperation', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'can_delete'), CallFunc(Getattr(Name('self'), '_should_delete_form'), [Name('form')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('member', 'OP_ASSIGN'), Name('members'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('combined', 'OP_ASSIGN')], CallFunc(Name('Media'), [], None, None))]))
Module(None, Stmt([Return(Tuple([Getattr(Name('self'), '__newobj__'), Tuple([Getattr(Name('self'), '__class__')]), CallFunc(Getattr(Name('self'), '__getstate__'), [], None, None)]))]))
Module(None, Stmt([Assign([AssAttr(Name('token'), 'source', 'OP_ASSIGN')], Tuple([Getattr(Name('self'), 'origin'), Name('source')]))]))
try :
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Assign([AssName('stats', 'OP_ASSIGN')], List([Const(0), Const(0)]))]))
Module(None, Stmt([Assign([AssName('excluded_apps', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), 'objects'))]))
Module(None, Stmt([Function(None, 'check', ['self', 'app_configs', 'tags', 'display_num_errors'], [Name('None'), Name('None'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'unpack_ipv4', 'OP_ASSIGN')], Name('unpack_ipv4'))]))
Module(None, Stmt([Function(None, 'regex', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('value', 'OP_ASSIGN'), AssName('converted', 'OP_ASSIGN')])], CallFunc(Name('convert_old_style_list'), [Name('value')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'language', 'deactivate'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'render', ['self', 'name', 'value', 'attrs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Compare(CallFunc(Getattr(Getattr(Name('self'), 'cleaned_data'), 'get'), [Name('name')], None, None), [('is not', Name('None'))]), Getattr(Getattr(Subscript(Getattr(Name('self'), 'cleaned_data'), 'OP_APPLY', [Name('name')]), '_state'), 'adding')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('asvar', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('chunks'), 'append'), [Name('bytes')], None, None))]))
Module(None, Stmt([If([(Compare(Subscript(Name('str_number'), 'OP_APPLY', [Const(0)]), [('==', Const('-'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'regexes', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Class('DjangoTranslation', [Getattr(Name('gettext_module'), 'GNUTranslations')], None, Stmt([Pass()]), None)]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'indent'), [Const(1)], None, None))]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'pubid', 'OP_ASSIGN')], Name('pubid'))]))
Module(None, Stmt([Assign([Subscript(Name('context'), 'OP_ASSIGN', [Getattr(Name('self'), 'asvar')])], Name('result'))]))
Module(None, Stmt([Assign([Subscript(Name('m2m_data'), 'OP_ASSIGN', [Getattr(Name('field'), 'name')])], CallFunc(Getattr(Name('self'), '_handle_m2m_field_node'), [Name('field_node'), Name('field')], None, None))]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'position'), '+=', CallFunc(Name('len'), [Name('output')], None, None))]))
Module(None, Stmt([Assign([AssName('lib', 'OP_ASSIGN')], CallFunc(Getattr(Name('libraries'), 'get'), [Name('library_name'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssName('duplicate', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('Context'), Name('self')], None, None), '__copy__'), [], None, None))]))
Module(None, Stmt([If([(Compare(Name('filename'), [('not in', Name('_mtimes'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('final_path'))]))
Module(None, Stmt([Class('Tok', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('expression', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'compile_filter'), [Add((Add((Name('var_name'), Name('VARIABLE_ATTRIBUTE_SEPARATOR'))), Subscript(Name('bits'), 'OP_APPLY', [Const(3)])))], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('query'), Name('MultiValueDict')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('NamedTemporaryFile', 'OP_ASSIGN')], Name('TemporaryFile'))]))
Module(None, Stmt([Assign([AssName('module', 'OP_ASSIGN')], CallFunc(Getattr(Name('importlib'), 'import_module'), [Mod((Const('.%s'), Name('flup_module'))), Const('flup')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('validate_ipv46_address'), [Name('ip_address')], None, None))]))
Module(None, Stmt([Discard(Yield(Name('d')))]))
Module(None, Stmt([For(AssName('name', 'OP_ASSIGN'), Name('MEDIA_TYPES'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'display', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('CheckboxChoiceInput', [Name('ChoiceInput')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'extra_context', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('extra_context'), Dict(())], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('fname')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('io', [('BytesIO', None)], 0)]))
try :
Module(None, Stmt([Class('SelectMultiple', [Name('Select')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assert(Not(CallFunc(Name('isinstance'), [Name('to'), Getattr(Name('six'), 'string_types')], None, None)), Const('"to" argument must be a list or tuple'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_unique'), [], None, None))]))
Module(None, Stmt([If([(Compare(Name('version'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('m', 'OP_ASSIGN')], CallFunc(Getattr(Name('plural_forms_re'), 'search'), [CallFunc(Getattr(Name('fp'), 'read'), [], None, None)], None, None))]))
Module(None, Stmt([If([(Getattr(Name('o'), 'microsecond'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('getattr'), [Name('obj'), Getattr(Name('field'), 'name')], None, None), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
except ValidationError as e :
Module(None, Stmt([Function(None, '__exit__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([From('django.utils.translation', [('ugettext_lazy', '_')], 0)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_remaining', 'OP_ASSIGN')], Name('length'))]))
Module(None, Stmt([From('django.utils.six.moves.urllib.parse', [('parse_qsl', None), ('urlencode', None), ('quote', None), ('urljoin', None), ('urlsplit', None)], 0)]))
Module(None, Stmt([Assign([AssName('MEDIA_TYPES', 'OP_ASSIGN')], Tuple([Const('css'), Const('js')]))]))
else :
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('offset'), Name('timedelta')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils', [('timezone', None)], 0)]))
except ImportError :
Module(None, Stmt([If([(Name('formfield'), Stmt([Pass()]))], None)]))
if hasattr ( middleware , 'process_exception' ) :
Module(None, Stmt([Subscript(Getattr(Name('self'), 'cleaned_data'), 'OP_DELETE', [Name('field')])]))
Module(None, Stmt([Assign([AssName('file_obj', 'OP_ASSIGN')], CallFunc(Getattr(Name('handler'), 'file_complete'), [Subscript(Name('counters'), 'OP_APPLY', [Name('i')])], None, None))]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('sys'), 'stderr'), 'write'), [Const('  as a FastCGI application, you will need to get flup from\n')], None, None))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], Getattr(Name('self'), 'html_initial_name'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [Name('ValueError'), CallFunc(Name('ValueError'), [Mod((Const('%r is not a valid date'), Name('date')))], None, None), Subscript(CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), 'OP_APPLY', [Const(2)])], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'as_widget'), [CallFunc(Name('Textarea'), [], None, None), Name('attrs')], None, Name('kwargs')))]))
Module(None, Stmt([If([(Compare(Name('k'), [('in', Name('seen'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Const('forloop'), [('in', Name('context'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('option_value', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Class('MultiValueDictKeyError', [Name('KeyError')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('pubDate'), CallFunc(Name('rfc2822_date'), [Subscript(Name('item'), 'OP_APPLY', [Const('pubdate')])], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('url', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('DateTimeField', [Name('BaseTemporalField')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('models', 'OP_ASSIGN')], CallFunc(Getattr(Name('app_config'), 'get_models'), [Keyword('include_auto_created', Name('True'))], None, None))]))
Module(None, Stmt([If([(Compare(Bitor([CallFunc(Name('set'), [CallFunc(Getattr(Name('kwargs'), 'keys'), [], None, None)], None, None), CallFunc(Name('set'), [CallFunc(Getattr(Name('defaults'), 'keys'), [], None, None)], None, None)]), [('!=', Bitor([CallFunc(Name('set'), [Name('params')], None, None), CallFunc(Name('set'), [CallFunc(Getattr(Name('defaults'), 'keys'), [], None, None)], None, None), CallFunc(Name('set'), [Name('prefix_args')], None, None)]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('yes', 'OP_ASSIGN'), AssName('no', 'OP_ASSIGN'), AssName('maybe', 'OP_ASSIGN')])], Name('bits'))]))
Module(None, Stmt([Assign([AssName('content_disposition', 'OP_ASSIGN')], CallFunc(Getattr(Name('info'), 'get'), [Const('content-disposition')], None, None))]))
Module(None, Stmt([If([(And([CallFunc(Name('hasattr'), [Name('out'), Const('isatty')], None, None), CallFunc(Getattr(Name('out'), 'isatty'), [], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_upload_handlers', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('uploadhandler'), 'load_handler'), [Name('handler'), Name('self')], None, None), [ListCompFor(AssName('handler', 'OP_ASSIGN'), Getattr(Name('settings'), 'FILE_UPLOAD_HANDLERS'), [])]))]))
_add_doc ( reraise , """Reraise an exception.""" )
Module(None, Stmt([Assign([AssName('origin', 'OP_ASSIGN')], CallFunc(Name('StringOrigin'), [Name('template_string')], None, None))]))
Module(None, Stmt([For(AssName('item', 'OP_ASSIGN'), Name('values'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'get', ['self', 'key', 'default'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Return(CallFunc(Name('ForNode'), [Name('loopvars'), Name('sequence'), Name('is_reversed'), Name('nodelist_loop'), Name('nodelist_empty')], None, None))]))
Module(None, Stmt([Import([('datetime', None)])]))
Module(None, Stmt([If([(Name('kwargs'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('RequireDebugFalse', [Getattr(Name('logging'), 'Filter')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'send_messages', ['self', 'email_messages'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_setup', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_save'), [Name('name'), Name('content')], None, None))]))
Module(None, Stmt([If([(Compare(Name('cleaned_data'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('thefile', 'OP_ASSIGN')], Mod((Const('%s.py'), Getattr(Name('self'), 'file'))))]))
@ property
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [CallFunc(Name('blankout'), [Name('part'), Const('S')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'fset', ['instance', 'value', 'name'], [Getattr(Name('fset'), '__name__')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('_ipv6'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('dirs'), 'append'), [Name('app_dir')], None, None))]))
Module(None, Stmt([Assign([AssName('pythonrc', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'expanduser'), [Name('pythonrc')], None, None))]))
Module(None, Stmt([From('django.template.loader', [('get_template', None), ('select_template', None)], 0)]))
else :
Module(None, Stmt([If([(Or([Not(CallFunc(Name('isinstance'), [Name('fk'), Name('ForeignKey')], None, None)), And([Compare(Getattr(Getattr(Name('fk'), 'rel'), 'to'), [('!=', Name('parent_model'))]), Compare(Getattr(Getattr(Name('fk'), 'rel'), 'to'), [('not in', CallFunc(Getattr(Getattr(Name('parent_model'), '_meta'), 'get_parent_list'), [], None, None))])])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('_CacheInfo'), [Subscript(Name('stats'), 'OP_APPLY', [Name('HITS')]), Subscript(Name('stats'), 'OP_APPLY', [Name('MISSES')]), Name('maxsize'), CallFunc(Name('len'), [Name('cache')], None, None)], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const('%r must be the first tag in the template.'), Name('node')))], None, None), None, None)]))
Module(None, Stmt([Class('DefaultStorage', [Name('LazyObject')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('ext'), 'startswith'), [Const('.')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('target', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'compile_filter'), [Subscript(Name('bits'), 'OP_APPLY', [Const(1)])], None, None))]))
Module(None, Stmt([Return(Compare(CallFunc(Getattr(Getattr(Name('self'), 'META'), 'get'), [Const('HTTP_X_REQUESTED_WITH')], None, None), [('==', Const('XMLHttpRequest'))]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('obj'), CallFunc(Getattr(Name('field'), 'get_attname'), [], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'register_serializer', ['format', 'serializer_module', 'serializers'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('apps'), 'get_model'), [Name('model_identifier')], None, None))]))
elif value is False :
Module(None, Stmt([Assign([Subscript(Name('msg'), 'OP_ASSIGN', [Const('Cc')])], CallFunc(Getattr(Const(', '), 'join'), [Getattr(Name('self'), 'cc')], None, None))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '__class__'), [ListComp(Tuple([Name('k'), Slice(Name('v'), 'OP_APPLY', None, None)]), [ListCompFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('self'), 'lists'), [], None, None), [])])], None, None))]))
Module(None, Stmt([Assign([AssName('KB', 'OP_ASSIGN')], LeftShift((Const(1), Const(10))))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Const('Your Python does not support IPv6.')], None, None), None, None)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Assign([AssName('comment_lineno_cache', 'OP_ASSIGN')], Getattr(Name('t'), 'lineno'))]))
Module(None, Stmt([Assign([AssName('content_type', 'OP_ASSIGN')], Mod((Const('%s; charset=%s'), Tuple([Getattr(Name('settings'), 'DEFAULT_CONTENT_TYPE'), Getattr(Name('self'), '_charset')]))))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('base'), Const('declared_fields')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'include_html', 'email_backend'], [Name('False'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'save_as_new', 'OP_ASSIGN')], Name('save_as_new'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('parser'), '__loaded_blocks'), 'append'), [Name('block_name')], None, None))]))
except self . LibraryValueNotFoundException :
Module(None, Stmt([AugAssign(Name('cache_key'), '+=', Mod((Const('.%s'), CallFunc(Getattr(CallFunc(Getattr(CallFunc(Getattr(Name('tz_name'), 'encode'), [Const('ascii'), Const('ignore')], None, None), 'decode'), [Const('ascii')], None, None), 'replace'), [Const(' '), Const('_')], None, None))))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('fcntl', None)])]))
else :
Module(None, Stmt([AugAssign(Name('options'), '+=', ListComp(Tuple([CallFunc(Getattr(Name('s_opt'), 'get_opt_string'), [], None, None), Getattr(Name('s_opt'), 'nargs')]), [ListCompFor(AssName('s_opt', 'OP_ASSIGN'), Getattr(Name('parser'), 'option_list'), [])]))]))
try :
Module(None, Stmt([Printnl([Add((Const("Can't import flup."), Name('flup_module')))], None)]))
Module(None, Stmt([Return(CallFunc(Name('escape'), [Name('output')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Const("next-to-last argument to 'regroup' tag must be 'as'")], None, None), None, None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const("JSON can't represent timezone-aware times.")], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('e'), 'errno'), [('==', Getattr(Name('errno'), 'ENOENT'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'closed', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Subscript(Name('bits'), 'OP_APPLY', [Const(2)]), [('==', Const('parsed'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('LPOVERLAPPED', 'OP_ASSIGN')], CallFunc(Name('POINTER'), [Name('OVERLAPPED')], None, None))]))
@ register . filter ( "timeuntil" , is_safe = False )
Module(None, Stmt([Return(Getattr(Name('self'), '_encoding'))]))
Module(None, Stmt([Assign([AssName('fixture_name', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'basename'), [Name('fixture_name')], None, None))]))
Module(None, Stmt([AugAssign(Name('result'), '^=', CallFunc(Name('_bin_to_long'), [Name('u')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_callback_str', 'OP_ASSIGN')], Add((Add((Name('prefix'), Const('.'))), Getattr(Name('self'), '_callback_str'))))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '__starttag_text', 'OP_ASSIGN')], Slice(Name('rawdata'), 'OP_APPLY', Name('i'), Name('endpos')))]))
Module(None, Stmt([Return(CallFunc(Name('URLNode'), [Name('viewname'), Name('args'), Name('kwargs'), Name('asvar')], None, None))]))
Module(None, Stmt([Assign([AssName('qs', 'OP_ASSIGN')], CallFunc(Getattr(Name('queryset'), 'filter'), [], None, Dict([(Getattr(Getattr(Name('self'), 'fk'), 'name'), Getattr(Name('self'), 'instance'))])))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_validate_unique', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'message', 'code', 'whitelist'], [Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
except KeyError :
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const('Searching for value. Unexpected end of string in column %d: %s'), Tuple([Name('i'), Name('subject')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('HTMLParseError', 'OP_ASSIGN')], Getattr(Name('_html_parser'), 'HTMLParseError'))]))
Module(None, Stmt([If([(Or([Getattr(Name('six'), 'PY3'), Compare(Getattr(Name('os'), 'name'), [('==', Const('nt'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_archive'), 'extract'), [Name('to_path')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('response'), 'has_header'), [Const('Vary')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'class_name', 'old_method_name', 'new_method_name', 'deprecation_warning'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Getattr(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'features'), 'needs_datetime_string_cast'), Not(CallFunc(Name('isinstance'), [Name('current_expires'), Name('datetime')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('zfile', 'OP_ASSIGN')], CallFunc(Name('GzipFile'), [Keyword('mode', Const('wb')), Keyword('compresslevel', Const(6)), Keyword('fileobj', Name('zbuf'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('format_html'), [Const('<ul class="{0}">{1}</ul>'), Getattr(Name('self'), 'error_class'), CallFunc(Name('format_html_join'), [Const(''), Const('<li>{0}</li>'), GenExpr(GenExprInner(Tuple([CallFunc(Name('force_text'), [Name('e')], None, None)]), [GenExprFor(AssName('e', 'OP_ASSIGN'), Name('self'), [])]))], None, None)], None, None))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'app_label'), Compare(Getattr(Name('app_config'), 'label'), [('!=', Getattr(Name('self'), 'app_label'))])]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Raise(Name('AttributeError'), None, None)]))
Module(None, Stmt([If([(And([Compare(Name('value'), [('in', Getattr(Name('self'), 'empty_values'))]), Getattr(Name('self'), 'required')]), Stmt([Pass()]))], None)]))
self . format = format if format else None
Module(None, Stmt([Class('ObjectDoesNotExist', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('ImproperlyConfigured'), [Const("Calling modelform_factory without defining 'fields' or 'exclude' explicitly is prohibited.")], None, None), None, None)]))
Module(None, Stmt([From('', [('Warning', None), ('register', None), ('Tags', None)], 2)]))
Module(None, Stmt([Discard(Yield(Subscript(Name('self'), 'OP_APPLY', [Name('name')])))]))
Module(None, Stmt([Raise(None, None, None)]))
errors . append ( {  'message' : escape ( message ) if escape_html else message ,  'code' : error . code or '' ,  } )
Module(None, Stmt([Function(None, '__init__', ['self', 'template_string', 'origin'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('description'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('description')])], None, None))]))
@ stringfilter
Module(None, Stmt([If([(And([Getattr(Name('node'), 'must_be_first'), Name('nodelist')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(Name('commit')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Subscript(Getattr(Name('self'), '_reverse_dict'), 'OP_APPLY', [Name('language_code')]))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Assign([AssName('iterkeys', 'OP_ASSIGN')], Name('_iterkeys'))]))
Module(None, Stmt([Assign([AssName('end_tag', 'OP_ASSIGN')], Add((Const('end'), Subscript(Name('bits'), 'OP_APPLY', [Const(0)]))))]))
Module(None, Stmt([Function(None, '__delitem__', ['self', 'header'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('_js_escapes', 'OP_ASSIGN')], Dict([(CallFunc(Name('ord'), [Const('\\')], None, None), Const('\\u005C')), (CallFunc(Name('ord'), [Const("'")], None, None), Const('\\u0027')), (CallFunc(Name('ord'), [Const('"')], None, None), Const('\\u0022')), (CallFunc(Name('ord'), [Const('>')], None, None), Const('\\u003E')), (CallFunc(Name('ord'), [Const('<')], None, None), Const('\\u003C')), (CallFunc(Name('ord'), [Const('&')], None, None), Const('\\u0026')), (CallFunc(Name('ord'), [Const('=')], None, None), Const('\\u003D')), (CallFunc(Name('ord'), [Const('-')], None, None), Const('\\u002D')), (CallFunc(Name('ord'), [Const(';')], None, None), Const('\\u003B')), (CallFunc(Name('ord'), [Const('\\u2028')], None, None), Const('\\u2028')), (CallFunc(Name('ord'), [Const('\\u2029')], None, None), Const('\\u2029'))]))]))
Module(None, Stmt([Return(CallFunc(Name('time_format'), [Name('value'), Const('TIME_FORMAT'), Keyword('use_l10n', Name('use_l10n'))], None, None))]))
Module(None, Stmt([For(AssName('form', 'OP_ASSIGN'), Name('valid_forms'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssTuple([AssName('hour', 'OP_ASSIGN'), AssName('minute', 'OP_ASSIGN')])], CallFunc(Name('divmod'), [Name('timezone'), Const(60)], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'decompress'), [Name('value')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'load_middleware'), [], None, None))]))
else :
Module(None, Stmt([If([(Compare(Name('timeout'), [('==', Name('DEFAULT_TIMEOUT'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('dirnames'), 'remove'), [Name('dirname')], None, None))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Name('Model'), [], None, Name('data')))]))
Module(None, Stmt([From('django.views', [('debug', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'keyOrder', 'OP_ASSIGN')], List(()))]))
@ property
@ cached_property
Module(None, Stmt([Assign([AssName('offset', 'OP_ASSIGN')], Sub((CallFunc(Name('len'), [Getattr(Name('self'), '__starttag_text')], None, None), CallFunc(Getattr(Getattr(Name('self'), '__starttag_text'), 'rfind'), [Const('\n')], None, None))))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '__locale', 'OP_ASSIGN')], CallFunc(Name('to_locale'), [Name('language')], None, None))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Assign([AssName('day_of_year', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'z'), [], None, None))]))
Module(None, Stmt([If([(Not(Name('callback')), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.core.servers.basehttp', [('run', None), ('get_internal_wsgi_application', None)], 0)]))
Module(None, Stmt([Assign([AssName('pickled', 'OP_ASSIGN')], CallFunc(Getattr(Name('pickle'), 'dumps'), [Name('value'), Getattr(Name('pickle'), 'HIGHEST_PROTOCOL')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_dir', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'abspath'), [Name('dir')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('mail'), 'attach_alternative'), [Name('html_message'), Const('text/html')], None, None))]))
Module(None, Stmt([If([(Name('m'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__del__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Const("'ssi' tag takes one argument: the path to the file to be included")], None, None), None, None)]))
Module(None, Stmt([If([(And([Getattr(Name('field'), 'rel'), CallFunc(Name('isinstance'), [Getattr(Name('field'), 'rel'), Getattr(Name('models'), 'ManyToManyRel')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Getattr(Name('os'), 'path'), Const('samefile')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('form'))]))
elif count > 1 :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_request', 'OP_ASSIGN')], Name('request'))]))
Module(None, Stmt([Class('FieldError', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssTuple([AssName('name', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')]), CallFunc(Getattr(Name('props'), 'items'), [], None, None), Stmt([Pass()]), None)]))
try :
Module(None, Stmt([If([(And([Compare(Name('table_name_filter'), [('is not', Name('None'))]), CallFunc(Name('callable'), [Name('table_name_filter')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('VerbatimNode'), [CallFunc(Getattr(Name('nodelist'), 'render'), [CallFunc(Name('Context'), [], None, None)], None, None)], None, None))]))
Module(None, Stmt([Class('BaseCommand', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('current', 'OP_ASSIGN')], Getattr(Name('settings'), 'TEMPLATE_STRING_IF_INVALID'))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], Slice(Name('bits'), 'OP_APPLY', None, UnarySub(Const(2))))]))
Module(None, Stmt([If([(Name('constant_arg'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('pieces', 'OP_ASSIGN')], CallFunc(Getattr(Name('accept_language_re'), 'split'), [CallFunc(Getattr(Name('lang_string'), 'lower'), [], None, None)], None, None))]))
Module(None, Stmt([Function(None, '_lazy_proxy_unpickle', ['func', 'args', 'kwargs', 'resultclasses'], [], 4, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('__contains__', 'OP_ASSIGN')], Name('has_key'))]))
Module(None, Stmt([Assign([AssName('m', 'OP_ASSIGN')], CallFunc(Getattr(Name('regex'), 'search'), [Name('text'), Name('pos')], None, None))]))
Module(None, Stmt([Return(Name('number'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'keyOrder'), 'append'), [Name('key')], None, None))]))
Module(None, Stmt([Assign([AssName('view', 'OP_ASSIGN')], Name('viewname'))]))
elif msg and visible_issue_count :
Module(None, Stmt([Assign([AssName('loader', 'OP_ASSIGN')], CallFunc(Name('MigrationLoader'), [Name('connection')], None, None))]))
Module(None, Stmt([Function(None, '__bytes_cast', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('AdminEmailHandler', [Getattr(Name('logging'), 'Handler')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('RegexField'), Name('self')], None, None), '__init__'), [Name('max_length'), Name('min_length')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('now', 'OP_ASSIGN')], CallFunc(Getattr(Name('datetime'), 'now'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'add_truncation_text'), [CallFunc(Getattr(Const(' '), 'join'), [Name('words')], None, None), Name('truncate')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('substitutions'), 'OP_ASSIGN', [Const('clear_checkbox_name')])], CallFunc(Name('conditional_escape'), [Name('checkbox_name')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [CallFunc(Name('_'), [Const('Enter a valid IPv4 or IPv6 address.')], None, None), Keyword('code', Const('invalid'))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'locale_paths'), 'extend'), [CallFunc(Name('list'), [Getattr(Name('settings'), 'LOCALE_PATHS')], None, None)], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('extra_classes'), 'add'), [Getattr(Getattr(Name('self'), 'form'), 'error_css_class')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Subscript(Getattr(Name('self'), 'dicts'), 'OP_APPLY', [UnarySub(Const(1))]), 'get'), [Name('key'), Name('otherwise')], None, None))]))
Module(None, Stmt([From('django.core.mail.backends.base', [('BaseEmailBackend', None)], 0)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('iter'), [Getattr(Name('self'), '_container')], None, None))]))
Module(None, Stmt([Assign([AssName('_PROTECTED_TYPES', 'OP_ASSIGN')], Add((Getattr(Name('six'), 'integer_types'), Tuple([CallFunc(Name('type'), [Name('None')], None, None), Name('float'), Name('Decimal'), Getattr(Name('datetime'), 'datetime'), Getattr(Name('datetime'), 'date'), Getattr(Name('datetime'), 'time')]))))]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'DEBUG'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'appendlist'), [CallFunc(Name('force_text'), [Name('key'), Name('encoding'), Keyword('errors', Const('replace'))], None, None), CallFunc(Name('force_text'), [Name('value'), Name('encoding'), Keyword('errors', Const('replace'))], None, None)], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('getattr'), [Name('settings'), Name('format_type')], None, None))]))
Module(None, Stmt([From('django.core.serializers.json', [('DjangoJSONEncoder', None)], 0)]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'basename'), [Name('name')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('transaction'), 'get_autocommit'), [Getattr(Name('self'), 'using')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_queryset', 'OP_ASSIGN')], Name('queryset'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'help_texts', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('options'), Const('help_texts'), Name('None')], None, None))]))
Module(None, Stmt([From('django.forms.widgets', [('*', None)], 0)]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(Name('obj_dict'), 'pop'), [Const('_data'), Dict(())], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('migration'), 'merged_operations'), 'extend'), [Getattr(CallFunc(Getattr(Name('loader'), 'get_migration'), [Name('node_app'), Name('node_name')], None, None), 'operations')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_key'), [Name('key')], None, None))]))
Module(None, Stmt([If([(And([Compare(CallFunc(Name('len'), [Name('app_labels')], None, None), [('>', Const(1))]), Name('primary_keys')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('do_ifequal'), [Name('parser'), Name('token'), Name('True')], None, None))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
else :
else :
try :
Module(None, Stmt([Assign([AssName('new_obj', 'OP_ASSIGN')], CallFunc(Name('func'), [Name('obj')], Name('arg_vals'), None))]))
Module(None, Stmt([Assign([AssName('url', 'OP_ASSIGN')], CallFunc(Getattr(Name('url'), 'replace'), [Const('\\'), Const('/')], None, None))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Return(Tuple([Name('base'), Name('ext')]))]))
Module(None, Stmt([Function(None, 'open', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'fields', 'args', 'kwargs'], [Tuple(())], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_css', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Import([('decimal', None)])]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('DTDForbidden'), Name('self')], None, None), '__init__'), [], None, None))]))
Module(None, Stmt([From('django.db.models.fields', [('Field', 'ModelField')], 0)]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([From('django.utils.six.moves.urllib.parse', [('urlparse', None)], 0)]))
Module(None, Stmt([Assign([AssName('found', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Slice(Getattr(Name('logging'), '_handlerList'), 'OP_DELETE', None, None)]))
Module(None, Stmt([If([(Not(Name('priority')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.six.moves', [('_thread', 'thread')], 0)]))
Module(None, Stmt([Return(And([CallFunc(Name('isinstance'), [Name('other'), Name('EmailValidator')], None, None), Compare(Getattr(Name('self'), 'domain_whitelist'), [('==', Getattr(Name('other'), 'domain_whitelist'))]), Compare(Getattr(Name('self'), 'message'), [('==', Getattr(Name('other'), 'message'))]), Compare(Getattr(Name('self'), 'code'), [('==', Getattr(Name('other'), 'code'))])]))]))
Module(None, Stmt([Assign([AssName('use_func', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Function(None, 'rendered_content', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('new_attr'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([If([(Name('hidden_fields'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Name('self'), 'render'), [Getattr(Name('self'), 'context')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('Field'), '__init__'), [Name('self'), Name('required'), Name('widget'), Name('label'), Name('initial'), Name('help_text')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Function(None, 'id_for_label', ['self', 'id_'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('all_issues'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('statements', 'OP_ASSIGN')], CallFunc(Name('sql_destroy_indexes'), [Name('app_config'), Getattr(Name('self'), 'style'), Name('connection')], None, None))]))
Module(None, Stmt([Assign([AssName('alter_sql', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('mail'), 'send'), [Keyword('fail_silently', Name('fail_silently'))], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('potfile')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('field', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'fields'), 'OP_APPLY', [Name('fieldname')]))]))
Module(None, Stmt([Assign([Subscript(Name('lines'), 'OP_ASSIGN', [Name('i')])], Mod((Add((Add((Const('%0'), Name('width'))), Const('d. %s'))), Tuple([Add((Name('i'), Const(1))), Name('line')]))))]))
except StopUpload as e :
Module(None, Stmt([Function(None, '__init__', ['self', 'host', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('response'), 'OP_ASSIGN', [Const('Content-Length')])], Const('0'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'html_initial_id', 'OP_ASSIGN')], CallFunc(Getattr(Name('form'), 'add_initial_prefix'), [Getattr(Name('self'), 'auto_id')], None, None))]))
Module(None, Stmt([Assign([AssName('urlconf_repr', 'OP_ASSIGN')], Mod((Const('<%s list>'), Getattr(Getattr(Subscript(Getattr(Name('self'), 'urlconf_name'), 'OP_APPLY', [Const(0)]), '__class__'), '__name__'))))]))
Module(None, Stmt([For(AssName('node', 'OP_ASSIGN'), Getattr(Name('self'), 'nodelist_loop'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssTuple([AssName('p1', 'OP_ASSIGN'), AssName('p2', 'OP_ASSIGN')])], Tuple([CallFunc(Name('urlparse'), [Name('url1')], None, None), CallFunc(Name('urlparse'), [Name('url2')], None, None)]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('open'), [Name('init_path'), Const('w')], None, None), 'close'), [], None, None))]))
Module(None, Stmt([Return(Tuple([CallFunc(Name('str'), [Name('name')], None, None), Name('val')]))]))
Module(None, Stmt([Assign([AssName('ext', 'OP_ASSIGN')], Add((Slice(Name('base'), 'OP_APPLY', UnarySub(Const(4)), None), Name('ext'))))]))
Module(None, Stmt([Class('URLNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('statements', 'OP_ASSIGN')], CallFunc(Name('sql_delete'), [Name('app_config'), Getattr(Name('self'), 'style'), Name('connection')], None, None))]))
Module(None, Stmt([Function(None, 'as_data', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('initial_set', 'OP_ASSIGN')], CallFunc(Name('set'), [GenExpr(GenExprInner(CallFunc(Name('force_text'), [Name('value')], None, None), [GenExprFor(AssName('value', 'OP_ASSIGN'), Name('initial'), [])]))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('locks'), 'unlock'), [Name('fd')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('errors'), 'extend'), [Name('new_errors')], None, None))]))
try :
Module(None, Stmt([Assign([AssName('cursor', 'OP_ASSIGN')], CallFunc(Getattr(Name('connection'), 'cursor'), [], None, None))]))
addr = '@' . join ( [ localpart , domain ] )
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([For(AssName('field', 'OP_ASSIGN'), CallFunc(Name('_parse_date_fmt'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Subscript(Name('message_context'), 'OP_APPLY', [Const(0)]), [('==', Const('"'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('messages'), 'update'), [CallFunc(Name('getattr'), [Name('c'), Const('default_error_messages'), Dict(())], None, None)], None, None))]))
Module(None, Stmt([Class('FileBasedCache', [Name('BaseCache')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'get_format', ['format_type', 'lang', 'use_l10n'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'date', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Getattr(Getattr(Name('self'), 'form'), 'is_bound')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('force_str'), [CallFunc(Getattr(CallFunc(Name('super'), [Name('BaseMemcachedCache'), Name('self')], None, None), 'make_key'), [Name('key'), Name('version')], None, None)], None, None))]))
try :
Module(None, Stmt([Assign([AssName('request', 'OP_ASSIGN')], Subscript(Getattr(Name('sys'), 'modules'), 'OP_APPLY', [Add((Name('__name__'), Const('.moves.urllib_request')))]))]))
Module(None, Stmt([Function(None, '_has_changed', ['self', 'initial', 'data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('char2number', 'OP_ASSIGN')], Dict([(Const('a'), Const('2')), (Const('b'), Const('2')), (Const('c'), Const('2')), (Const('d'), Const('3')), (Const('e'), Const('3')), (Const('f'), Const('3')), (Const('g'), Const('4')), (Const('h'), Const('4')), (Const('i'), Const('4')), (Const('j'), Const('5')), (Const('k'), Const('5')), (Const('l'), Const('5')), (Const('m'), Const('6')), (Const('n'), Const('6')), (Const('o'), Const('6')), (Const('p'), Const('7')), (Const('q'), Const('7')), (Const('r'), Const('7')), (Const('s'), Const('7')), (Const('t'), Const('8')), (Const('u'), Const('8')), (Const('v'), Const('8')), (Const('w'), Const('9')), (Const('x'), Const('9')), (Const('y'), Const('9')), (Const('z'), Const('9'))]))]))
Module(None, Stmt([Import([('warnings', None)])]))
else :
Module(None, Stmt([From('django.utils.six.moves', [('xrange', None)], 0)]))
Module(None, Stmt([Function(None, 'attach_file', ['self', 'path', 'mimetype'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__setitem__', ['self', 'key', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_html_output'), [Keyword('normal_row', Const('<tr%(html_class_attr)s><th>%(label)s</th><td>%(errors)s%(field)s%(help_text)s</td></tr>')), Keyword('error_row', Const('<tr><td colspan="2">%s</td></tr>')), Keyword('row_ender', Const('</td></tr>')), Keyword('help_text_html', Const('<br /><span class="helptext">%s</span>')), Keyword('errors_on_separate_row', Name('False'))], None, None))]))
Module(None, Stmt([If([(Compare(Name('decimals'), [('>', Name('digits'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Add((Name('m'), CallFunc(Name('Media'), [Name('definition')], None, None))))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_render'), [Name('context')], None, None))]))
Module(None, Stmt([AugAssign(Name('result'), '+=', Add((CallFunc(Name('ugettext'), [Const(', ')], None, None), CallFunc(Name('avoid_wrapping'), [Mod((Name('name2'), Name('count2')))], None, None))))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'msguniq_options', 'OP_ASSIGN')], Add((Slice(Getattr(Name('self'), 'msguniq_options'), 'OP_APPLY', None, None), List([Const('--no-wrap')]))))]))
Module(None, Stmt([Function(None, 'fget', ['instance', 'instance_type', 'name'], [Name('None'), Getattr(Name('fget'), '__name__')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('arg'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(Name('indent')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('stat', None)])]))
Module(None, Stmt([From('copy', [('copy', None)], 0)]))
else :
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Assign([AssName('FILE', 'OP_ASSIGN')], Const('file'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('  Unapplying %s...'), Name('migration'))), Keyword('ending', Const(''))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('len'), [Getattr(Name('self'), 'forms')], None, None))]))
Module(None, Stmt([If([(Getattr(Getattr(Name('form'), '_meta'), 'widgets'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Import([('datetime', None)])]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Class('WithNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Const("'autoescape' tag requires exactly one argument.")], None, None), None, None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'takes_context', 'args', 'kwargs'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Name('options')], None, None))]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Function(None, 'handle_app_config', ['self', 'app_config', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('kw'), 'extend'), [List([Getattr(Name('d'), 'hour'), Getattr(Name('d'), 'minute'), Getattr(Name('d'), 'second'), Getattr(Name('d'), 'microsecond'), Getattr(Name('d'), 'tzinfo')])], None, None))]))
Module(None, Stmt([Assign([AssName('header', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('header'), 'upper'), [], None, None), 'replace'), [Const('-'), Const('_')], None, None))]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('binary_type', 'OP_ASSIGN')], Name('bytes'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('sys'), 'stdout'), 'close'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stream'), 'write'), [Const('\n')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('become_daemon'), [Keyword('our_home_dir', Subscript(Name('options'), 'OP_APPLY', [Const('workdir')]))], None, Name('daemon_kwargs')))]))
Module(None, Stmt([Assign([AssName('now', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('datetime'), 'now'), [], None, None), 'strftime'), [Const('%B %d, %Y - %X')], None, None))]))
Module(None, Stmt([From('django.utils.itercompat', [('is_iterable', None)], 0)]))
Module(None, Stmt([Return(Compare(Name('scheme'), [('in', Getattr(Name('self'), 'url_schemes'))]))]))
Module(None, Stmt([For(AssName('name', 'OP_ASSIGN'), CallFunc(Name('sorted'), [Name('handlers')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.db.migrations.writer', [('MigrationWriter', None)], 0)]))
Module(None, Stmt([Assign([Subscript(Name('pdict'), 'OP_ASSIGN', [Name('name')])], Name('value'))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'cleaned_data'), 'OP_ASSIGN', [Name('name')])], Name('value'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 's', 'OP_ASSIGN')], Name('s'))]))
Module(None, Stmt([If([(Name('has_old_option'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.db.migrations.loader', [('MigrationLoader', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('result'), 'parent', 'OP_ASSIGN')], Name('self'))]))
except DatabaseError :
Module(None, Stmt([While(Compare(Name('k'), [('<', Name('endpos'))]), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('d', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Assign([AssName('pk_value', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Getattr(Name('self'), 'instance'), Getattr(Getattr(Getattr(Name('self'), 'fk'), 'rel'), 'field_name')], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('initial')], None, None), [('!=', CallFunc(Name('len'), [Name('data')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Tuple([Name('filename'), Name('display_url')]))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Getattr(Name('self'), 'DIGIT_PATTERN'), 'match'), [Name('idx')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('iterator', 'OP_ASSIGN')], CallFunc(Name('iter'), [Name('stream_or_iterable')], None, None))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Getattr(Name('s'), 'replace'), [Const('\\'), Const('\\\\')], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('line', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Name('lines')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('values', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('parser'), 'compile_filter'), [Name('bit')], None, None), [ListCompFor(AssName('bit', 'OP_ASSIGN'), Slice(Name('bits'), 'OP_APPLY', Const(1), None), [])]))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([If([(Compare(Name('migration_name'), [('==', Const('zero'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'combine', ['cls', 'date', 'time'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('db_name', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('connection'), 'creation'), 'create_test_db'), [Keyword('verbosity', Name('verbosity')), Keyword('autoclobber', Not(Name('interactive'))), Keyword('serialize', Name('False'))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'endElement'), [Const('object')], None, None))]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'configured'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('warning', 'OP_ASSIGN')], Const('ImmutableList object is immutable.'))]))
@ upload_handlers . setter
Module(None, Stmt([Function(None, 'get_default_prefix', ['cls'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], Subscript(Name('args'), 'OP_APPLY', [UnarySub(Const(1))]))]))
decorator = Node ( syms . decorator , [ Leaf ( token . AT , "@" ) , Name ( 'python_2_unicode_compatible' ) ] )
Module(None, Stmt([From('django.db.migrations.loader', [('AmbiguityError', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('result'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([AssName('format_module_path', 'OP_ASSIGN')], List([Name('format_module_path')]))]))
@ register . filter ( "slice" , is_safe = True )
Module(None, Stmt([Assign([AssName('stream_or_string', 'OP_ASSIGN')], CallFunc(Getattr(Name('stream_or_string'), 'decode'), [Const('utf-8')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('signing'), 'get_cookie_signer'), [Keyword('salt', Add((Name('key'), Name('salt'))))], None, None), 'sign'), [Name('value')], None, None))]))
@ register . tag
Module(None, Stmt([Assign([AssAttr(Name('self'), 'name', 'OP_ASSIGN')], Or([Name('name'), Getattr(Name('func'), '__name__')]))]))
Module(None, Stmt([Function(None, 'format', ['value', 'format_string'], [], 0, None, Stmt([Pass()]))]))
except ValueError :
Module(None, Stmt([Assign([AssName('output_transaction', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([If([(Getattr(Name('opts'), 'model'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Mod((Const('"%s"'), CallFunc(Getattr(CallFunc(Getattr(Name('etag'), 'replace'), [Const('\\'), Const('\\\\')], None, None), 'replace'), [Const('"'), Const('\\"')], None, None))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('notifier'), 'process_events'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'close'), [Name('fd')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('args'), 'append'), [CallFunc(Getattr(Name('parser'), 'compile_filter'), [Name('value')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'recipients', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('opts', 'OP_ASSIGN')], Getattr(Name('model'), '_meta'))]))
except http_cookies . CookieError :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'close'), [Name('fd')], None, None))]))
Module(None, Stmt([Import([('pyinotify', None)])]))
@ python_2_unicode_compatible
Module(None, Stmt([Assign([AssAttr(Name('self'), 'event_stream', 'OP_ASSIGN')], CallFunc(Getattr(Name('pulldom'), 'parse'), [Getattr(Name('self'), 'stream'), CallFunc(Getattr(Name('self'), '_make_parser'), [], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('template', 'OP_ASSIGN')], CallFunc(Name('get_template_from_string'), [Name('template'), Name('origin'), Name('template_name')], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('saved_instances'), 'append'), [CallFunc(Getattr(Name('self'), 'save_existing'), [Name('form'), Name('obj'), Keyword('commit', Name('commit'))], None, None)], None, None))]))
Module(None, Stmt([If([(And([Name('words'), Compare(Name('length'), [('<=', Const(0))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('errors'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('key'), [('not in', Name('self'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'stream'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([With(CallFunc(Getattr(Name('context'), 'push'), [], None, Name('values')), None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('termios', None)])]))
Module(None, Stmt([Assign([AssName('singular', 'OP_ASSIGN')], List(()))]))
except UnicodeEncodeError :
Module(None, Stmt([Return(CallFunc(Getattr(Const('\n'), 'join'), [Name('output')], None, None))]))
try :
Module(None, Stmt([From('django.utils', [('timezone', None), ('six', None)], 0)]))
Module(None, Stmt([If([(And([Compare(Name('attr'), [('in', Tuple([Const('__file__'), Const('__name__'), Const('__path__')]))]), Compare(Getattr(Name('self'), 'mod'), [('not in', Getattr(Name('sys'), 'modules'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('initial', 'OP_ASSIGN')], Name('False'))]))
except Resolver404 :
Module(None, Stmt([If([(Getattr(Name('self'), 'require_all_fields'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('other'), Name('Promise')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django', [('VERSION', 'version')], 0)]))
Module(None, Stmt([Assign([AssName('writer', 'OP_ASSIGN')], CallFunc(Name('MigrationWriter'), [Name('migration')], None, None))]))
Module(None, Stmt([Assign([AssName('patterns', 'OP_ASSIGN')], ListComp(Name('pattern'), [ListCompFor(AssTuple([AssName('possibility', 'OP_ASSIGN'), AssName('pattern', 'OP_ASSIGN'), AssName('defaults', 'OP_ASSIGN')]), Name('possibilities'), [])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('nodelist'), 'append'), [Name('node')], None, None))]))
Module(None, Stmt([AugAssign(Name('truncate_len'), '-=', Const(1))]))
Module(None, Stmt([Function(None, 'end_object', ['self', 'obj'], [], 0, None, Stmt([Pass()]))]))
elif char in 'bEFMmNn' :
Module(None, Stmt([If([(Not(CallFunc(Name('is_valid_ipv6_address'), [Name('value')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([For(AssName('module', 'OP_ASSIGN'), CallFunc(Name('get_format_modules'), [Name('lang')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("More than one migration matches '%s' in app '%s'. Please be more specific."), Tuple([Name('migration_name'), Name('app_label')])))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Mod((Const('DELETE FROM %s'), Name('table')))], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('Decimal'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('_file', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Return(CallFunc(Name('ungettext'), [Name('singular'), Name('plural'), Name('number')], None, None))]))
Module(None, Stmt([Function(None, '__deepcopy__', ['self', 'memodict'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([AugAssign(Name('msg'), '+=', Name('ending'))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('logger'), 'addHandler'), [Subscript(Subscript(Getattr(Name('self'), 'config'), 'OP_APPLY', [Const('handlers')]), 'OP_APPLY', [Name('h')])], None, None))]))
Module(None, Stmt([Class('FilterNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([Subscript(Name('extra_params'), 'OP_ASSIGN', [Const('null')])], Name('True'))]))
else :
Module(None, Stmt([Assign([AssName('pk', 'OP_ASSIGN')], CallFunc(Name('to_python'), [Name('pk')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('request'), 'META'), 'get'), [Name('header'), Name('None')], None, None))]))
Module(None, Stmt([Function(None, '__getattr__', ['self', 'attr'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssName('_meth_self', 'OP_ASSIGN')], Const('im_self'))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, '_base_set', ['self', 'mode', 'key', 'value', 'timeout'], [Name('DEFAULT_TIMEOUT')], 0, None, Stmt([Pass()]))]))
except ( ValueError , TypeError , ValidationError ) :
Module(None, Stmt([Function(None, 'media', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'has_key', ['self', 'key', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'notation_name', 'OP_ASSIGN')], Name('notation_name'))]))
Module(None, Stmt([Function(None, 'errors', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'attachments'), 'append'), [Tuple([Name('filename'), Name('content'), Name('mimetype')])], None, None))]))
simple_email_re = re . compile ( r'^\S+@\S+\.\S+$' )
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of BaseCache must provide an add() method')], None, None), None, None)]))
Module(None, Stmt([AugAssign(Name('chunk_size'), '*=', Const(2))]))
Module(None, Stmt([Assign([AssName('paras', 'OP_ASSIGN')], ListComp(Mod((Const('<p>%s</p>'), CallFunc(Getattr(Name('p'), 'replace'), [Const('\n'), Const('<br />')], None, None))), [ListCompFor(AssName('p', 'OP_ASSIGN'), Name('paras'), [])]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(3))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('EntitiesForbidden'), [Name('name'), Name('None'), Name('base'), Name('sysid'), Name('pubid'), Name('notation_name')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('table', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'ops'), 'quote_name'), [Getattr(Name('self'), '_table')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('LazyStream'), [CallFunc(Name('BoundaryIter'), [Getattr(Name('self'), '_stream'), Getattr(Name('self'), '_boundary')], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Name('fd'), [('>=', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'object_list', 'per_page', 'orphans', 'allow_empty_first_page'], [Const(0), Name('True')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('self'), Const('_get')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Assign([AssName('x', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Return(CallFunc(Name('RegroupNode'), [Name('target'), Name('expression'), Name('var_name')], None, None))]))
Module(None, Stmt([If([(And([Compare(Name('end_index'), [('is', Name('None'))]), Compare(Name('s_len'), [('>', Name('truncate_len'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('s'), 'getvalue'), [], None, None))]))
Module(None, Stmt([If([(And([Compare(CallFunc(Name('getattr'), [Name('meta'), Const('fields'), Name('fields')], None, None), [('is', Name('None'))]), Compare(CallFunc(Name('getattr'), [Name('meta'), Const('exclude'), Name('exclude')], None, None), [('is', Name('None'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_fd', ['f'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('fg', 'OP_ASSIGN')], CallFunc(Getattr(Name('colors'), 'pop'), [], None, None))]))
Module(None, Stmt([Function(None, 'get', ['self', 'header', 'alternate'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('error_class', 'OP_ASSIGN')], Name('ValueError'))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('self'), 'compare'), [Name('cleaned'), Getattr(Name('self'), 'limit_value')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('X', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '_resolve', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Subscript(Name('flags'), 'OP_APPLY', [Name('attr')]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'method', 'OP_ASSIGN')], CallFunc(Getattr(Subscript(Name('environ'), 'OP_APPLY', [Const('REQUEST_METHOD')]), 'upper'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'kill'), [CallFunc(Getattr(Name('os'), 'getpid'), [], None, None), UnarySub(Name('exit_code'))], None, None))]))
Module(None, Stmt([Assign([AssName('_assertRegex', 'OP_ASSIGN')], Const('assertRegexpMatches'))]))
Module(None, Stmt([Function(None, 'items', ['self'], [], 0, None, Stmt([Pass()]))]))
@ deconstructible
except Exception :
Module(None, Stmt([From('_systemrestart', [('SystemRestart', None)], 0)]))
@ stringfilter
Module(None, Stmt([Return(CallFunc(Name('tuple'), [GenExpr(GenExprInner(Name('a'), [GenExprFor(AssName('a', 'OP_ASSIGN'), Name('WRAPPER_ASSIGNMENTS'), [GenExprIf(CallFunc(Name('hasattr'), [Name('fn'), Name('a')], None, None))])]))], None, None))]))
Module(None, Stmt([Assign([AssName('primary_keys', 'OP_ASSIGN')], CallFunc(Getattr(Name('pks'), 'split'), [Const(',')], None, None))]))
Module(None, Stmt([Assign([AssName('seen_data', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))]))
Module(None, Stmt([Return(Name('name'))]))
Module(None, Stmt([Function(None, '_get_size_from_underlying_file', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('error_messages')])], Subscript(Name('error_messages'), 'OP_APPLY', [Getattr(Name('f'), 'name')]))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_urlconf_module', 'OP_ASSIGN')], Getattr(Name('self'), 'urlconf_name'))]))
@ property
Module(None, Stmt([From('django.template.base', [('TemplateDoesNotExist', None)], 0)]))
Module(None, Stmt([Class('DisallowedRedirect', [Name('SuspiciousOperation')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('len_item', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('item')], None, None))]))
Module(None, Stmt([From('django.utils.encoding', [('force_bytes', None)], 0)]))
Module(None, Stmt([Assign([AssName('iterlists', 'OP_ASSIGN')], Name('_iterlists'))]))
Module(None, Stmt([Assign([AssName('kwargs', 'OP_ASSIGN')], CallFunc(Getattr(Name('match'), 'groupdict'), [], None, None))]))
Module(None, Stmt([With(Getattr(Name('self'), 'initLock'), None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Function(None, 'stringformat', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'validate_host', ['host', 'allowed_hosts'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Name('s')], None, None), None, None)]))
try :
Module(None, Stmt([Assign([AssAttr(Getattr(Name('self'), '_caches'), 'caches', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], Add((Add((List([Const('msgattrib')]), Getattr(Name('self'), 'msgattrib_options'))), List([Const('-o'), Name('pofile'), Name('pofile')]))))]))
Module(None, Stmt([Function(None, '__getstate__', ['self'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Import([('tempfile', None)])]))
Module(None, Stmt([Assign([AssName('shown', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))]))
Module(None, Stmt([For(AssName('ldir', 'OP_ASSIGN'), Name('dirs'), Stmt([Pass()]), None)]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'render'), [], None, None))]))
Module(None, Stmt([If([(Compare(Name('refto'), [('in', Name('known_models'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('args')], None, None), [('>', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('fail_message', 'OP_ASSIGN')], Const('changed'))]))
elif self . required :
Module(None, Stmt([Return(Tuple([Const(''), Const('')]))]))
Module(None, Stmt([If([(Not(CallFunc(Name('callable'), [Name('view_func')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('migration', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('executor'), 'loader'), 'get_migration_by_prefix'), [Name('app_label'), Name('migration_name')], None, None))]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([Subscript(Name('root'), 'OP_ASSIGN', [Name('KEY')]), Subscript(Name('root'), 'OP_ASSIGN', [Name('RESULT')])], Name('None'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('contents', 'OP_ASSIGN')], CallFunc(Name('format_html'), [Const('{0}{1}'), Name('contents'), Name('label_suffix')], None, None))]))
Module(None, Stmt([From('django.core.serializers.python', [('Serializer', 'PythonSerializer')], 0)]))
Module(None, Stmt([Return(Name('value'))]))
@ register . tag
Module(None, Stmt([From('django.utils.six.moves', [('reduce', None)], 0)]))
Module(None, Stmt([Subscript(Name('kwargs'), 'OP_DELETE', [Const('warning')])]))
Module(None, Stmt([Assign([AssName('id_', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'attrs'), 'OP_APPLY', [Const('id')]))]))
Module(None, Stmt([Return(CallFunc(Name('_import_module'), [Getattr(Name('self'), 'mod')], None, None))]))
Module(None, Stmt([Raise(None, None, None)]))
try :
Module(None, Stmt([If([(Compare(Name('mtime'), [('!=', Subscript(Name('_mtimes'), 'OP_APPLY', [Name('filename')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('result'), 'key', 'OP_ASSIGN')], Name('key'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'name', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'params', 'OP_ASSIGN')], Name('params'))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('source'), Name('inst')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('candidate_pat', 'OP_ASSIGN')], Add((CallFunc(Getattr(Name('prefix_norm'), 'replace'), [Const('%'), Const('%%')], None, None), Name('result'))))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Name('_helper'), [Name('value')], None, None)], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'parent_widget', 'name', 'value', 'attrs', 'choices'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('strip_spaces_between_tags'), [CallFunc(Getattr(CallFunc(Getattr(Getattr(Name('self'), 'nodelist'), 'render'), [Name('context')], None, None), 'strip'), [], None, None)], None, None))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), '_upload_handlers')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('compiled_parent', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'get_parent'), [Name('context')], None, None))]))
Module(None, Stmt([Function(None, 'handle_label', ['self', 'label', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('args'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Continue()]))
elif not isinstance ( sep , str ) :
Module(None, Stmt([Function(None, 'reset', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('item', 'OP_ASSIGN'), Getattr(Name('self'), 'items'), Stmt([Pass()]), None)]))
else :
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('app'), 'initialize'), [Keyword('argv', List(()))], None, None))]))
Module(None, Stmt([Discard(Yield(Name('k')))]))
else :
Module(None, Stmt([Assign([AssName('terminal_char', 'OP_ASSIGN')], Const('>'))]))
Module(None, Stmt([Return(CallFunc(Name('sorted'), [Name('value'), Keyword('key', Getattr(CallFunc(Name('Variable'), [Name('arg')], None, None), 'resolve'))], None, None))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([If([(Compare(Name('val'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'makedirs'), [Getattr(Name('self'), 'file_path')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('template'), Tuple([Name('list'), Name('tuple')])], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Or([Compare(Name('value'), [('!=', Name('value'))]), Compare(Name('value'), [('==', CallFunc(Name('Decimal'), [Const('Inf')], None, None))]), Compare(Name('value'), [('==', CallFunc(Name('Decimal'), [Const('-Inf')], None, None))])]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([Subscript(Name('loop_dict'), 'OP_ASSIGN', [Const('last')])], Compare(Name('i'), [('==', Sub((Name('len_values'), Const(1))))]))]))
Module(None, Stmt([Assign([AssName('FILES', 'OP_ASSIGN')], CallFunc(Name('property'), [Name('_get_files')], None, None))]))
Module(None, Stmt([From('django.db.migrations.optimizer', [('MigrationOptimizer', None)], 0)]))
Module(None, Stmt([Assign([AssName('timetuple', 'OP_ASSIGN')], CallFunc(Getattr(Name('dt'), 'timetuple'), [], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('defaults'), 'OP_ASSIGN', [Const('empty_permitted')])], Name('True'))]))
Module(None, Stmt([Assign([AssTuple([AssName('output', 'OP_ASSIGN'), AssName('references', 'OP_ASSIGN')])], CallFunc(Getattr(Getattr(Name('connection'), 'creation'), 'sql_create_model'), [Name('model'), Name('style'), Name('known_models')], None, None))]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], CallFunc(Name('_'), [Const('Ensure this value is %(limit_value)s (it is %(show_value)s).')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Getattr(Name('base'), 'DeserializationError'), [Const("<field> node is missing the 'name' attribute")], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('_cookie_allows_colon_in_names', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([For(AssTuple([AssName('name', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('self'), 'extra_headers'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_populate'), [], None, None))]))
Module(None, Stmt([Assign([AssName('field_value', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'cleaned_data'), 'get'), [Name('field'), Name('None')], None, None))]))
Module(None, Stmt([Return(List(()))]))
Module(None, Stmt([Assign([AssName('connection', 'OP_ASSIGN')], Subscript(Name('connections'), 'OP_APPLY', [Subscript(Name('options'), 'OP_APPLY', [Const('database')])]))]))
Module(None, Stmt([Function(None, 'nud', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'join_tokens', ['tokens', 'trim'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('hmac'), Const('compare_digest')], None, None), Stmt([Pass()]))], None)]))
except ( KeyError , AttributeError ) as exc :
@ python_2_unicode_compatible
Module(None, Stmt([Function(None, 'make_origin', ['display_name', 'loader', 'name', 'dirs'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'connection_reset'), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('field_node', 'OP_ASSIGN'), CallFunc(Getattr(Name('node'), 'getElementsByTagName'), [Const('field')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('exclude'), 'append'), [Getattr(Name('f'), 'name')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'error_class', 'OP_ASSIGN')], CallFunc(Getattr(Const('errorlist {}'), 'format'), [Name('error_class')], None, None))]))
Module(None, Stmt([Assign([AssName('new_attr', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([Function(None, 'dec', ['func'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('serializer'), [], None, None), 'loads'), [Name('data')], None, None))]))
Module(None, Stmt([Class('TextInput', [Name('Input')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'template_cache'), 'OP_ASSIGN', [Name('key')])], Tuple([Name('template'), Name('origin')]))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Assign([AssName('field', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('Model'), '_meta'), 'get_field'), [Name('field_name')], None, None))]))
Module(None, Stmt([Assign([AssName('locale', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('locale')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'timezone', 'OP_ASSIGN')], CallFunc(Name('get_default_timezone'), [], None, None))]))
Module(None, Stmt([Assign([AssName('extension_map', 'OP_ASSIGN')], Dict([(Const('.tar'), Name('TarArchive')), (Const('.tar.bz2'), Name('TarArchive')), (Const('.tar.gz'), Name('TarArchive')), (Const('.tgz'), Name('TarArchive')), (Const('.tz2'), Name('TarArchive')), (Const('.zip'), Name('ZipArchive'))]))]))
Module(None, Stmt([Return(Mod((Const('%s %s'), Tuple([CallFunc(Getattr(Name('self'), 'f'), [], None, None), CallFunc(Getattr(Name('self'), 'a'), [], None, None)]))))]))
Module(None, Stmt([Class('ChoiceField', [Name('Field')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'extend'), [Mul((List([Subscript(Name('result'), 'OP_APPLY', [UnarySub(Const(1))])]), Sub((Name('count'), Const(1)))))], None, None))]))
Module(None, Stmt([Class('FileProxyMixin', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('indent', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'options'), 'get'), [Const('indent')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Name('str')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'method', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(Yield(Name('subwidget')))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([From('django.utils', [('datetime_safe', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('MultiValueDictKeyError'), [CallFunc(Name('repr'), [Name('key')], None, None)], None, None), None, None)]))
except http_cookies . CookieError :
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('self'), Const('_size')], None, None), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Class('BaseValidator', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('!=', Const(6))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('zfile'), 'write'), [Name('s')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('_trans'), 'ugettext'), [Name('message')], None, None))]))
Module(None, Stmt([Class('metaclass', [Name('meta')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('force_str'), [Getattr(Name('self'), '_tzname')], None, None))]))
Module(None, Stmt([Return(Const('1'))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'activated'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--format'), Keyword('default', Const('json')), Keyword('dest', Const('format')), Keyword('help', Const('Specifies the output serialization format for fixtures.'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('datetime'), 'datetime'), [], None, Name('kw')))]))
Module(None, Stmt([Class('EmailMultiAlternatives', [Name('EmailMessage')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'python_2_unicode_compatible', ['klass'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stream'), 'write'), [Const('\n')], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssTuple([AssName('dirpath', 'OP_ASSIGN'), AssName('f', 'OP_ASSIGN')])]), CallFunc(Name('enumerate'), [Name('locations')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'include_is_allowed', ['filepath'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssName('attr', 'OP_ASSIGN'), Name('_urllib_parse_moved_attributes'), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Assign([AssName('version', 'OP_ASSIGN')], Getattr(Name('self'), 'version'))]))
else :
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Assign([AssName('size', 'OP_ASSIGN')], Getattr(Name('self'), 'remaining'))]))
Module(None, Stmt([With(Name('lock'), None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('default'))]))
Module(None, Stmt([Return(CallFunc(Name('DebugVariableNode'), [Name('contents')], None, None))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'connection'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('use_null_fallback', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'common_logger_config'), [Name('logger'), Name('config'), Name('incremental')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('non_capturing_groups'), 'append'), [CallFunc(Name('len'), [Name('result')], None, None)], None, None))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'initlist', 'error_class'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('missing_args_message', 'OP_ASSIGN')], Const('Enter at least one application label.'))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'mkdir'), [Name('migrations_directory')], None, None))]))
Module(None, Stmt([Assign([AssName('LOCK_EX', 'OP_ASSIGN'), AssName('LOCK_SH', 'OP_ASSIGN'), AssName('LOCK_NB', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_changed_data', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const('Base36 conversion input too large.')], None, None), None, None)]))
try :
elif 'public' in cc and 'private' in kwargs :
Module(None, Stmt([Assign([AssName('input_type', 'OP_ASSIGN')], Const('text'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('password', 'OP_ASSIGN')], CallFunc(Name('force_bytes'), [Name('password')], None, None))]))
Module(None, Stmt([Assign([AssName('class_types', 'OP_ASSIGN')], Tuple([Name('type'), Getattr(Name('types'), 'ClassType')]))]))
except ( LookupError , BinasciiError ) as e :
else :
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([If([(Compare(Const('()'), [('in', Name('config'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('serializers'), 'get_serializer'), [Name('format')], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const('%r expected at least one variable assignment'), Subscript(Name('bits'), 'OP_APPLY', [Const(0)])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('found', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Class('TranslatorCommentWarning', [Name('SyntaxWarning')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(And([Name('has_old_option'), Name('has_new_option')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('base56', 'OP_ASSIGN')], CallFunc(Name('BaseConverter'), [Name('BASE56_ALPHABET')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('choice_value', 'OP_ASSIGN'), AssName('choice_label', 'OP_ASSIGN')])], Name('choice'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'choices', 'OP_ASSIGN')], Name('choices'))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const("%s.process_response didn't return an HttpResponse object. It returned None instead."), Getattr(Getattr(Getattr(Name('middleware_method'), '__self__'), '__class__'), '__name__')))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'writer_enters', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('int'), [Name('timeout')], None, None))]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('klass'), Name('cls')], None, None), '__new__'), [Name('cls')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('sys'), 'stderr'), 'write'), [Mod((Const('fork #1 failed: (%d) %s\n'), Tuple([Getattr(Name('e'), 'errno'), Getattr(Name('e'), 'strerror')])))], None, None))]))
Module(None, Stmt([Assign([AssName('pflen', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('prefixed')], None, None))]))
Module(None, Stmt([If([(Name('deps'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.core.serializers.python', [('Deserializer', 'PythonDeserializer')], 0)]))
Module(None, Stmt([Class('ModelForm', [CallFunc(Getattr(Name('six'), 'with_metaclass'), [Name('ModelFormMetaclass'), Name('BaseModelForm')], None, None)], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('ImproperlyConfigured'), [Mod((Const('Path for saving emails is invalid: %r'), Getattr(Name('self'), 'file_path')))], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Name('param'), [('in', Name('unhandled_params'))]), Stmt([Pass()]))], None)]))
except ValueError :
Module(None, Stmt([Function(None, 'smart_text', ['s', 'encoding', 'strings_only', 'errors'], [Const('utf-8'), Name('False'), Const('strict')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'validate_ipv46_address', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('subcommands', 'OP_ASSIGN')], Add((CallFunc(Name('list'), [CallFunc(Name('get_commands'), [], None, None)], None, None), List([Const('help')]))))]))
self . _request_middleware = self . _view_middleware = self . _template_response_middleware = self . _response_middleware = self . _exception_middleware = None
else :
Module(None, Stmt([Function(None, 'initial_form_count', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('_trans'), 'pgettext'), [Name('context'), Name('message')], None, None))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'can_delete'), CallFunc(Getattr(Name('self'), '_should_delete_form'), [Name('form')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'print_help', ['self', 'prog_name', 'subcommand'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('RegexURLResolver'), [Const('^/'), Name('urlconf')], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('field', 'OP_ASSIGN'), AssName('initial', 'OP_ASSIGN'), AssName('data', 'OP_ASSIGN')]), CallFunc(Name('zip'), [Getattr(Name('self'), 'fields'), Name('initial'), Name('data')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssTuple([AssName('app_name', 'OP_ASSIGN'), AssName('model_list', 'OP_ASSIGN')]), CallFunc(Getattr(Name('manifest'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([From('threading', [('local', None)], 0)]))
Module(None, Stmt([Assign([AssName('user_regex', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('(^[-!#$%&\'*+/=?^_`{}|~0-9A-Z]+(\\.[-!#$%&\'*+/=?^_`{}|~0-9A-Z]+)*$|^"([\\001-\\010\\013\\014\\016-\\037!#-\\[\\]-\\177]|\\\\[\\001-\\011\\013\\014\\016-\\177])*"$)'), Getattr(Name('re'), 'IGNORECASE')], None, None))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('io'), 'open'), [Name('fname'), Const('rb')], None, None), AssName('f', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Class('Variable', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('number', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('number')], None, None))]))
Module(None, Stmt([Function(None, '_get_choices', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('_default', 'OP_ASSIGN')], CallFunc(Name('translation'), [Getattr(Name('settings'), 'LANGUAGE_CODE')], None, None))]))
Module(None, Stmt([If([(Compare(Name('transfer_encoding'), [('==', Const('base64'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('NoArgsCommand', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('questioner', 'OP_ASSIGN')], CallFunc(Name('MigrationQuestioner'), [Keyword('defaults', Dict([(Const('ask_merge'), Name('True'))]))], None, None))]))
Module(None, Stmt([Assign([AssName('current_len', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([From('functools', [('wraps', None)], 0)]))
Module(None, Stmt([If([(Compare(Const(':'), [('not in', Name('template'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Const('  No migrations to apply.')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('EmailMultiAlternatives'), Name('self')], None, None), '__init__'), [Name('subject'), Name('body'), Name('from_email'), Name('to'), Name('bcc'), Name('connection'), Name('attachments'), Name('headers'), Name('cc')], None, None))]))
Module(None, Stmt([Subscript(Name('cache'), 'OP_DELETE', [Name('oldkey')])]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Function(None, '__call__', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
finally :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'error_list', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(Yield(Name('emitting')))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cache'), 'set'), [Name('cache_key'), Name('headerlist'), Name('cache_timeout')], None, None))]))
Module(None, Stmt([If([(Name('httponly'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('val'), Name('tuple')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('fmt', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'get'), [Const('format'), Name('None')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('call_command'), [Const('runserver'), Keyword('addrport', Subscript(Name('options'), 'OP_APPLY', [Const('addrport')])), Keyword('shutdown_message', Name('shutdown_message')), Keyword('use_reloader', Name('False')), Keyword('use_ipv6', Subscript(Name('options'), 'OP_APPLY', [Const('use_ipv6')])), Keyword('use_threading', Name('use_threading'))], None, None))]))
Module(None, Stmt([Assign([AssName('max_value', 'OP_ASSIGN')], CallFunc(Name('float'), [Name('max_value')], None, None))]))
Module(None, Stmt([Return(List(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cached_loaders'), 'append'), [CallFunc(Name('find_template_loader'), [Name('loader')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_num_pages', 'OP_ASSIGN'), AssAttr(Name('self'), '_count', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'set_charset'), [Name('utf8_charset')], None, None))]))
Module(None, Stmt([Assign([AssName('_func_closure', 'OP_ASSIGN')], Const('func_closure'))]))
Module(None, Stmt([Function(None, 'gen_filenames', ['only_new'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Name('filename'), Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('filename')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('requires_system_checks', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Raise(CallFunc(Name('ImproperlyConfigured'), [Mod((Const("Creating a ModelForm without either the 'fields' attribute or the 'exclude' attribute is prohibited; form %s needs updating."), Name('name')))], None, None), None, None)]))
Module(None, Stmt([Class('Error', [Name('CheckMessage')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('locale_dir', 'OP_ASSIGN')], Name('path'))]))
Module(None, Stmt([Function(None, '__call__', ['self', 'template_name', 'template_dirs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'clean', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core.mail.utils', [('CachedDnsName', None), ('DNS_NAME', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('context'), 'render_context'), 'pop'), [], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Subscript(Dict([(Name('True'), Const('2')), (Name('False'), Const('3')), (Const('2'), Const('2')), (Const('3'), Const('3'))]), 'OP_APPLY', [Name('value')]))]))
Module(None, Stmt([Assign([AssAttr(Name('e'), 'django_template_source', 'OP_ASSIGN')], Getattr(Name('node'), 'source'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'dicts'), 'pop'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('result'), 'key', 'OP_ASSIGN')], Name('key'))]))
Module(None, Stmt([Assign([AssName('elt', 'OP_ASSIGN')], List([Name('elt')]))]))
Module(None, Stmt([Assign([AssTuple([AssName('mimetype', 'OP_ASSIGN'), AssName('_', 'OP_ASSIGN')])], CallFunc(Getattr(Name('mimetypes'), 'guess_type'), [Name('filename')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('value'), 'strftime'), [Name('format')], None, None))]))
Module(None, Stmt([Return(Compare(Getattr(Name('self'), 'size'), [('>', Name('chunk_size'))]))]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Assign([AssName('possibilities', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'reverse_dict'), 'getlist'), [Name('lookup_view')], None, None))]))
Module(None, Stmt([Assign([AssName('filemsg', 'OP_ASSIGN')], Mod((Const('file %s, '), Name('origin'))))]))
Module(None, Stmt([Import([('json', None)])]))
Module(None, Stmt([Assign([AssTuple([AssName('tag', 'OP_ASSIGN'), AssName('this_value_expr', 'OP_ASSIGN'), AssName('max_value_expr', 'OP_ASSIGN'), AssName('max_width', 'OP_ASSIGN')])], Name('bits'))]))
Module(None, Stmt([If([(Compare(Name('attrs'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
@ property
Module(None, Stmt([Raise(CallFunc(Name('MultiPartParserError'), [Const('multipartparser.exhaust() was passed a non-iterable or stream parameter')], None, None), None, None)]))
Module(None, Stmt([Return(CallFunc(Name('force_text'), [CallFunc(Name('quote'), [CallFunc(Name('force_str'), [Name('url')], None, None), CallFunc(Name('force_str'), [Name('safe')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('_func_defaults', 'OP_ASSIGN')], Const('__defaults__'))]))
try :
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('s')], None, None), [('>', Const(13))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([If([(Or([CallFunc(Getattr(Name('bit'), 'startswith'), [Const('_("')], None, None), CallFunc(Getattr(Name('bit'), 'startswith'), [Const("_('")], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.core.files.base', [('File', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('fields'), 'sort'), [Keyword('key', Lambda(['x'], [], 0, Getattr(Subscript(Name('x'), 'OP_APPLY', [Const(1)]), 'creation_counter')))], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Invalid timezone: %r'), Name('timezone')))], None, None), None, None)]))
Module(None, Stmt([From('django.utils.six.moves.urllib.parse', [('quote', None), ('unquote', None), ('urlsplit', None), ('urlunsplit', None)], 0)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'allow_files'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('HITS', 'OP_ASSIGN'), AssName('MISSES', 'OP_ASSIGN')])], Tuple([Const(0), Const(1)]))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_wrapped'), [('is', Name('empty'))]), Stmt([Pass()]))], None)]))
except _BASE64_DECODE_ERROR :
Module(None, Stmt([Function(None, 'get_language', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(Name('TypeError'), None, None)]))
try :
from django . core . exceptions import SuspiciousMultipartForm
Module(None, Stmt([Assign([AssName('mod', 'OP_ASSIGN')], CallFunc(Name('import_module'), [Name('mod_name')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateDoesNotExist'), [Name('template_name')], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '__doc__', 'OP_ASSIGN')], Getattr(Getattr(Name('self'), '__class__'), '__doc__'))]))
Module(None, Stmt([Assign([AssName('pks', 'OP_ASSIGN')], CallFunc(Name('set'), [GenExpr(GenExprInner(CallFunc(Name('force_text'), [CallFunc(Name('getattr'), [Name('o'), Name('key')], None, None)], None, None), [GenExprFor(AssName('o', 'OP_ASSIGN'), Name('qs'), [])]))], None, None))]))
Module(None, Stmt([Assign([AssName('cc', 'OP_ASSIGN')], CallFunc(Getattr(Name('cc_delim_re'), 'split'), [Subscript(Name('response'), 'OP_APPLY', [Const('Cache-Control')])], None, None))]))
Module(None, Stmt([Assign([AssName('autoescape', 'OP_ASSIGN')], And([Name('autoescape'), Not(CallFunc(Name('isinstance'), [Name('value'), Name('SafeData')], None, None))]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Getattr(Name('error_dict'), 'setdefault'), [Name('NON_FIELD_ERRORS'), List(())], None, None), 'extend'), [Getattr(Name('self'), 'error_list')], None, None))]))
Module(None, Stmt([Assign([AssName('function_name', 'OP_ASSIGN')], Or([Name('name'), Getattr(CallFunc(Name('getattr'), [Name('func'), Const('_decorated_function'), Name('func')], None, None), '__name__')]))]))
elif isinstance ( value , datetime . datetime ) :
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Name('force_bytes'), [Getattr(Name('settings'), 'SECRET_KEY')], None, None))]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'style'), 'HTTP_SERVER_ERROR'), [Name('msg')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'choices', 'required', 'widget', 'label', 'initial', 'help_text', 'args', 'kwargs'], [Tuple(()), Name('True'), Name('None'), Name('None'), Name('None'), Const('')], 12, None, Stmt([Pass()]))]))
except TypeError as te :
Module(None, Stmt([If([(Getattr(Name('settings'), 'USE_TZ'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([If([(Compare(Name('condition'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('sys'), 'stdout', 'OP_ASSIGN')], CallFunc(Name('open'), [Name('out_log'), Const('a'), Name('buffering')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("Could not parse the remainder: '%s' from '%s'"), Tuple([Slice(Name('token'), 'OP_APPLY', Name('upto'), None), Name('token')])))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('gettext_module'), 'GNUTranslations'), '__init__'), [Name('self')], None, None))]))
Module(None, Stmt([Function(None, 'render', ['self', 'name', 'value', 'attrs', 'choices'], [Name('None'), Tuple(())], 0, None, Stmt([Pass()]))]))
except OSError :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'write_items'), [Name('handler')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Mod((Const('SELECT cache_key, expires FROM %s WHERE cache_key = %%s'), Name('table'))), List([Name('key')])], None, None))]))
Module(None, Stmt([Assign([AssName('attrs', 'OP_ASSIGN')], Or([Name('attrs'), Dict(())]))]))
@ lru_cache . lru_cache ( maxsize = None )
Module(None, Stmt([Return(CallFunc(Getattr(Name('template'), 'render'), [CallFunc(Getattr(Name('context'), 'new'), [Name('values')], None, None)], None, None))]))
@ register . filter ( is_safe = True )
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cache'), 'close'), [], None, None))]))
Module(None, Stmt([Function(None, 'get_renderer', ['self', 'name', 'value', 'attrs', 'choices'], [Name('None'), Tuple(())], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Subscript(Name('source'), 'OP_APPLY', [Const(1)]), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Name('args'), Name('kwargs')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('args')], None, None), [('!=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'handle_app_config', ['self', 'app_config', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('code'), 'interact'), [Keyword('local', Name('imported_objects'))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_servers', 'OP_ASSIGN')], Name('server'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'setFormatter'), [Name('formatter')], None, None))]))
Module(None, Stmt([For(AssName('template_dir', 'OP_ASSIGN'), Name('template_dirs'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('Module_six_moves_urllib_parse'), '_moved_attributes', 'OP_ASSIGN')], Name('_urllib_parse_moved_attributes'))]))
Module(None, Stmt([Assign([AssName('trail', 'OP_ASSIGN')], Add((Name('punctuation'), Name('trail'))))]))
Module(None, Stmt([Assign([AssName('c', 'OP_ASSIGN')], Subscript(Name('subject'), 'OP_APPLY', [Name('i')]))]))
Module(None, Stmt([Assign([AssName('encode', 'OP_ASSIGN')], Lambda(['k', 'v'], [], 0, Mod((Const('%s=%s'), Tuple([CallFunc(Name('quote'), [Name('k'), Name('safe')], None, None), CallFunc(Name('quote'), [Name('v'), Name('safe')], None, None)])))))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
@ classmethod
Module(None, Stmt([Assign([AssName('msgmerge_options', 'OP_ASSIGN')], List([Const('-q'), Const('--previous')]))]))
Module(None, Stmt([Assign([AssName('fmt', 'OP_ASSIGN')], CallFunc(Name('get_format'), [Const('DATE_FORMAT')], None, None))]))
Module(None, Stmt([Assign([AssName('list_', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('MultiValueDict'), Name('self')], None, None), '__getitem__'), [Name('key')], None, None))]))
Module(None, Stmt([AugAssign(Name('msg_count'), '+=', Const(1))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const('Searching for value. Expected another value but found end of string: %s'), Name('subject')))], None, None), None, None)]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Return(Dict(()))]))
Module(None, Stmt([Assign([AssName('id_', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'attrs'), 'get'), [Const('id'), Name('None')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('register_serializer'), [Name('format'), Subscript(Getattr(Name('settings'), 'SERIALIZATION_MODULES'), 'OP_APPLY', [Name('format')]), Name('serializers')], None, None))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'file', 'OP_ASSIGN')], CallFunc(Getattr(Name('os'), 'fdopen'), [Name('fd'), Name('mode'), Name('bufsize')], None, None))]))
Module(None, Stmt([Return(ListComp(Tuple([Name('k'), Subscript(Name('self'), 'OP_APPLY', [Name('k')])]), [ListCompFor(AssName('k', 'OP_ASSIGN'), Getattr(Name('self'), 'keyOrder'), [])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'dicts'), 'append'), [Name('other_dict')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'loaders'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'M', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('msg'), 'attach'), [Name('body_msg')], None, None))]))
Module(None, Stmt([Assign([AssName('__dir__', 'OP_ASSIGN')], CallFunc(Name('new_method_proxy'), [Name('dir')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_boundary', 'OP_ASSIGN')], Name('boundary'))]))
Module(None, Stmt([Assign([AssName('executor', 'OP_ASSIGN')], CallFunc(Name('MigrationExecutor'), [Name('connection')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'instance'), 'validate_unique'), [Keyword('exclude', Name('exclude'))], None, None))]))
Module(None, Stmt([Function(None, '_bin_to_long', ['x'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'i18n', ['request'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__next__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'error_messages', 'OP_ASSIGN')], Name('messages'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('TemporaryFileUploadHandler'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Function(None, '__call__', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('threading', None)])]))
Module(None, Stmt([If([(Name('match'), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Return(CallFunc(Name('fastcgi_help'), [Const('ERROR: Implementation must be one of prefork or thread.')], None, None))]))
Module(None, Stmt([If([(Or([And([Compare(Name('locale'), [('is', Name('None'))]), Not(Name('exclude')), Not(Name('process_all'))]), Compare(Getattr(Name('self'), 'domain'), [('is', Name('None'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Getattr(Name('self'), 'field'), 'empty_label'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssTuple([AssName('name', 'OP_ASSIGN'), AssName('app', 'OP_ASSIGN')]), CallFunc(Getattr(Name('six'), 'iteritems'), [CallFunc(Name('get_commands'), [], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('render_context', 'OP_ASSIGN')], Getattr(Getattr(Name('self'), 'context'), 'render_context'))]))
Module(None, Stmt([Assign([AssName('lines', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'timezone')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_has_changed', ['self', 'initial', 'data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('out', 'OP_ASSIGN')], ListComp(CallFunc(Name('str'), [Name('x')], None, None), [ListCompFor(AssName('x', 'OP_ASSIGN'), List([Getattr(Name('self'), 'id'), Getattr(Name('self'), 'first'), Getattr(Name('self'), 'second')]), [ListCompIf(Compare(Name('x'), [('is not', Name('None'))]))])]))]))
Module(None, Stmt([Assign([AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')])], CallFunc(Getattr(Name('x'), 'split'), [Const('='), Const(1)], None, None))]))
Module(None, Stmt([Assign([AssName('context_extras', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Function(None, 'gettext_noop', ['message'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stderr'), 'write'), [Mod((Const("App '%s' could not be found. Is it in INSTALLED_APPS?"), Name('app_label')))], None, None))]))
Module(None, Stmt([Function(None, 'sql_delete', ['app_config', 'style', 'connection', 'close_connection'], [Name('True')], 0, None, Stmt([Pass()]))]))
except ImportError :
Module(None, Stmt([For(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('self'), '_iteritems'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('keys', 'OP_ASSIGN')], CallFunc(Getattr(Name('node'), 'getElementsByTagName'), [Const('natural')], None, None))]))
Module(None, Stmt([Assign([AssName('_supported', 'OP_ASSIGN')], CallFunc(Name('OrderedDict'), [Getattr(Name('settings'), 'LANGUAGES')], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_queryset'))]))
Module(None, Stmt([Return(Const(''))]))
try :
def __init__ ( self , server , params , library , value_not_found_exception ) :
Module(None, Stmt([Function(None, 'has_key', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('msgs', 'OP_ASSIGN')], CallFunc(Getattr(Name('fp'), 'read'), [], None, None))]))
Module(None, Stmt([From('django.http', [('HttpResponse', None)], 0)]))
fd = os . open ( new_file_name , ( os . O_WRONLY | os . O_CREAT | getattr ( os , 'O_BINARY' , 0 ) |  ( os . O_EXCL if not allow_overwrite else 0 ) ) )
Module(None, Stmt([Assign([AssName('max_width', 'OP_ASSIGN')], CallFunc(Name('min'), [Or([And([CallFunc(Getattr(Name('line'), 'endswith'), [Const('\n')], None, None), Add((Name('width'), Const(1)))]), Name('width')]), Name('width')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Mod((Const('SELECT COUNT(*) FROM %s'), Name('table')))], None, None))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Assign([AssTuple([AssName('result', 'OP_ASSIGN'), AssName('upto', 'OP_ASSIGN')])], Tuple([List(()), Const(0)]))]))
Module(None, Stmt([Function(None, 'get_internal_wsgi_application', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Getattr(Name('self'), 'file_path'), Getattr(Name('six'), 'string_types')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('i', 'OP_ASSIGN')], Add((Name('i'), Const(1))))]))
Module(None, Stmt([Assign([AssName('output_transaction', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stderr'), 'write'), [Mod((Const('    Failed to install index for %s.%s model: %s\n'), Tuple([Name('app_name'), Getattr(Getattr(Name('model'), '_meta'), 'object_name'), Name('e')])))], None, None))]))
Module(None, Stmt([From('django.utils.six.moves.urllib.parse', [('urlsplit', None), ('urlunsplit', None)], 0)]))
Module(None, Stmt([Assign([AssName('ignore_patterns', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('ignore_patterns')], None, None))]))
Module(None, Stmt([From('django.utils.encoding', [('smart_text', None)], 0)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('self'), 'to_python'), [Name('value')], None, None), 'strip'), [], None, None))]))
Module(None, Stmt([Assign([AssName('_urllib_error_moved_attributes', 'OP_ASSIGN')], List([CallFunc(Name('MovedAttribute'), [Const('URLError'), Const('urllib2'), Const('urllib.error')], None, None), CallFunc(Name('MovedAttribute'), [Const('HTTPError'), Const('urllib2'), Const('urllib.error')], None, None), CallFunc(Name('MovedAttribute'), [Const('ContentTooShortError'), Const('urllib'), Const('urllib.error')], None, None)]))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'cookies'), 'OP_ASSIGN', [Name('key')])], Name('value'))]))
Module(None, Stmt([If([(Or([Compare(Name('value'), [('==', Name('k2'))]), Compare(Name('text_value'), [('==', CallFunc(Name('force_text'), [Name('k2')], None, None))])]), Stmt([Pass()]))], None)]))
@ register . filter ( is_safe = False )
Module(None, Stmt([Return(Name('ip_str'))]))
Module(None, Stmt([Assign([AssName('missing_fields', 'OP_ASSIGN')], Sub((CallFunc(Name('set'), [Name('none_model_fields')], None, None), CallFunc(Name('set'), [CallFunc(Getattr(Getattr(Name('new_class'), 'declared_fields'), 'keys'), [], None, None)], None, None))))]))
Module(None, Stmt([AugAssign(Name('end'), '-=', Const(1))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Assign([AssName('MONTHS_ALT', 'OP_ASSIGN')], Dict([(Const(1), CallFunc(Name('pgettext_lazy'), [Const('alt. month'), Const('January')], None, None)), (Const(2), CallFunc(Name('pgettext_lazy'), [Const('alt. month'), Const('February')], None, None)), (Const(3), CallFunc(Name('pgettext_lazy'), [Const('alt. month'), Const('March')], None, None)), (Const(4), CallFunc(Name('pgettext_lazy'), [Const('alt. month'), Const('April')], None, None)), (Const(5), CallFunc(Name('pgettext_lazy'), [Const('alt. month'), Const('May')], None, None)), (Const(6), CallFunc(Name('pgettext_lazy'), [Const('alt. month'), Const('June')], None, None)), (Const(7), CallFunc(Name('pgettext_lazy'), [Const('alt. month'), Const('July')], None, None)), (Const(8), CallFunc(Name('pgettext_lazy'), [Const('alt. month'), Const('August')], None, None)), (Const(9), CallFunc(Name('pgettext_lazy'), [Const('alt. month'), Const('September')], None, None)), (Const(10), CallFunc(Name('pgettext_lazy'), [Const('alt. month'), Const('October')], None, None)), (Const(11), CallFunc(Name('pgettext_lazy'), [Const('alt. month'), Const('November')], None, None)), (Const(12), CallFunc(Name('pgettext_lazy'), [Const('alt. month'), Const('December')], None, None))]))]))
Module(None, Stmt([Assign([AssName('template_dirs', 'OP_ASSIGN')], Name('app_template_dirs'))]))
elif self . verbosity == 3 :
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('obj'), 'save'), [], None, None))]))
else :
Module(None, Stmt([Function(None, '__init__', ['self', 'fail_silently', 'kwargs'], [Name('False')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'attr', 'OP_ASSIGN')], Name('old_attr'))]))
Module(None, Stmt([Assign([AssName('tt', 'OP_ASSIGN')], Tuple([Getattr(Name('dt'), 'year'), Getattr(Name('dt'), 'month'), Getattr(Name('dt'), 'day'), Getattr(Name('dt'), 'hour'), Getattr(Name('dt'), 'minute'), Getattr(Name('dt'), 'second'), CallFunc(Getattr(Name('dt'), 'weekday'), [], None, None), Const(0), Const(0)]))]))
Module(None, Stmt([With(Name('lock'), None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('params', 'OP_ASSIGN')], Dict([(Const('max'), Getattr(Name('self'), 'max_length')), (Const('length'), CallFunc(Name('len'), [Name('file_name')], None, None))]))]))
Module(None, Stmt([Class('SimpleTemplateResponse', [Name('HttpResponse')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('ImproperlyConfigured'), [Mod((Const('Command %s defines both "requires_model_validation" and "requires_system_checks", which is illegal. Use only "requires_system_checks".'), Getattr(Getattr(Name('self'), '__class__'), '__name__')))], None, None), None, None)]))
Module(None, Stmt([If([(Not(Name('content_type')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Or([Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('<', Const(3))]), Compare(Subscript(Name('bits'), 'OP_APPLY', [Const(1)]), [('!=', Const('as'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('func'), [], Getattr(Name('self'), '__args'), Getattr(Name('self'), '__kw')))]))
Module(None, Stmt([Class('NumberInput', [Name('TextInput')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Getattr(Name('datetime'), 'datetime')], None, None), Stmt([Pass()]))], None)]))
@ property
Module(None, Stmt([For(AssName('part', 'OP_ASSIGN'), Name('parts'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Getattr(Name('models'), 'signals'), 'pre_syncdb'), 'send'), [Keyword('sender', Getattr(Name('app_config'), 'models_module')), Keyword('app', Getattr(Name('app_config'), 'models_module')), Keyword('create_models', Name('create_models')), Keyword('verbosity', Name('verbosity')), Keyword('interactive', Name('interactive')), Keyword('db', Name('db'))], None, None))]))
try :
Module(None, Stmt([Return(CallFunc(Name('_'), [Const('PM')], None, None))]))
except ValidationError as e :
Module(None, Stmt([Assign([Subscript(Subscript(Getattr(Name('self'), 'dicts'), 'OP_APPLY', [UnarySub(Const(1))]), 'OP_ASSIGN', [Name('key')])], Name('value'))]))
Module(None, Stmt([Assign([Subscript(Name('data'), 'OP_ASSIGN', [Getattr(Name('field'), 'attname')])], CallFunc(Getattr(Name('self'), '_handle_fk_field_node'), [Name('field_node'), Name('field')], None, None))]))
Module(None, Stmt([If([(Compare(Const('date'), [('not in', Name('header_names'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('False'))]))
@ stringfilter
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([If([(Compare(Subscript(Name('item'), 'OP_APPLY', [Const('pubdate')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([AssName('ret', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), '_cache'), 'get_multi'), [Name('new_keys')], None, None))]))
Module(None, Stmt([Assign([AssName('week_number', 'OP_ASSIGN')], Const(53))]))
except UnicodeDecodeError :
except Exception :
Module(None, Stmt([Function(None, '__init__', ['self', 'var', 'name', 'nodelist', 'extra_context'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('initial', 'OP_ASSIGN')], ListComp(Const(''), [ListCompFor(AssName('x', 'OP_ASSIGN'), CallFunc(Name('range'), [Const(0), CallFunc(Name('len'), [Name('data')], None, None)], None, None), [])]))]))
Module(None, Stmt([Return(CallFunc(Name('any'), [Getattr(Name('self'), 'dicts')], None, None))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_leftover', 'OP_ASSIGN')], CallFunc(Getattr(Const(''), 'join'), [List([Name('bytes'), Getattr(Name('self'), '_leftover')])], None, None))]))
Module(None, Stmt([For(AssName('program', 'OP_ASSIGN'), Name('programs'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'iteritems', ['d', 'kw'], [], 8, None, Stmt([Pass()]))]))
Module('         Set a value in the cache if the key does not already exist. If         timeout is given, that timeout will be used for the key; otherwise         the default cache timeout will be used.         Returns True if the value was stored, False otherwise.         ', Stmt([]))
elif ch == '|' :
Module(None, Stmt([Function(None, '__init__', ['self', 'children', 'connector', 'negated'], [Name('None'), Name('None'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('LIGHT_PALETTE', 'OP_ASSIGN')], Const('light'))]))
Module(None, Stmt([If([(Compare(Subscript(Subscript(Name('targets'), 'OP_APPLY', [Const(0)]), 'OP_APPLY', [Const(1)]), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('data'))]))
Module(None, Stmt([Return(Const('0'))]))
Module(None, Stmt([AugAssign(Getattr(Name('Field'), 'creation_counter'), '+=', Const(1))]))
Module(None, Stmt([If([(Compare(Subscript(Name('item'), 'OP_APPLY', [Const('author_email')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('Encoders'), 'encode_base64'), [Name('attachment')], None, None))]))
else :
Module(None, Stmt([Return(Name('modules'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [], Name('exc_info'), None))]))
Module(None, Stmt([Assign([AssName('is_usable', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Class('_OFFSET_UNION', [Name('Union')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('values', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Const(''), 'join'), [Name('quant')], None, None), 'split'), [Const(',')], None, None))]))
Module(None, Stmt([Class('Parser', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('relations', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('connection'), 'introspection'), 'get_relations'), [Name('cursor'), Name('table_name')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_encoding', 'OP_ASSIGN')], Getattr(Name('settings'), 'DEFAULT_CHARSET'))]))
Module(None, Stmt([Function(None, 'validate_number', ['self', 'number'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('ClearableFileInput', [Name('FileInput')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssTuple([AssName('sql', 'OP_ASSIGN'), AssName('references', 'OP_ASSIGN')])], CallFunc(Getattr(Getattr(Name('connection'), 'creation'), 'sql_create_model'), [Name('model'), CallFunc(Name('no_style'), [], None, None), Name('seen_models')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('LookupError'), [Name('lang_code')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('target_var', 'OP_ASSIGN')], Subscript(Name('bits'), 'OP_APPLY', [UnarySub(Const(1))]))]))
Module(None, Stmt([Return(Name('base'))]))
Module(None, Stmt([Function(None, 'id_for_label', ['self', 'id_'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'file', 'OP_ASSIGN')], CallFunc(Name('open'), [Getattr(Name('self'), 'name'), Or([Name('mode'), Getattr(Name('self'), 'mode')])], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('params', 'OP_ASSIGN'), AssName('varargs', 'OP_ASSIGN'), AssName('varkw', 'OP_ASSIGN'), AssName('defaults', 'OP_ASSIGN')])], CallFunc(Name('getargspec'), [Name('func')], None, None))]))
Module(None, Stmt([Assign([AssName('inverse_match', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('unhandled_params'), 'remove'), [Name('param')], None, None))]))
except OSError as e :
Module(None, Stmt([Function(None, 'm2m_convert', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('smart_str', 'OP_ASSIGN')], Name('smart_text'))]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], Getattr(Getattr(Name('self'), '_pk_field'), 'name'))]))
Module(None, Stmt([If([(And([CallFunc(Getattr(Name('var'), 'startswith'), [Const('_(')], None, None), CallFunc(Getattr(Name('var'), 'endswith'), [Const(')')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('MaxValueValidator', [Name('BaseValidator')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Dict(()))]))
Module(None, Stmt([AugAssign(Name('prefix'), '+=', Const('/'))]))
Module(None, Stmt([Assign([AssName('indexes', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('connection'), 'introspection'), 'get_indexes'), [Name('cursor'), Name('table_name')], None, None))]))
Module(None, Stmt([Assign([AssName('str_hidden', 'OP_ASSIGN')], CallFunc(Getattr(Const(''), 'join'), [Name('hidden_fields')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Return(CallFunc(Name('int'), [CallFunc(Getattr(Name('binascii'), 'hexlify'), [Name('x')], None, None), Const(16)], None, None))]))
Module(None, Stmt([Assign([AssName('m', 'OP_ASSIGN')], CallFunc(Getattr(Name('IDENTIFIER'), 'match'), [Name('s')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('_get_timezone_name'), [CallFunc(Name('get_current_timezone'), [], None, None)], None, None))]))
Module(None, Stmt([Return(Name('new_class'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('lastBuildDate'), CallFunc(Name('rfc2822_date'), [CallFunc(Getattr(Name('self'), 'latest_post_date'), [], None, None)], None, None)], None, None))]))
Module(None, Stmt([For(AssName('app_label', 'OP_ASSIGN'), Name('bad_app_labels'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), '_populated')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'handle_app_config', ['self', 'app_config', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('self'))]))
else :
Module(None, Stmt([If([(And([Name('in_tag'), Not(Getattr(Name('self'), 'verbatim'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('i'))]))
except ImportError :
Module(None, Stmt([Class('_HashedSeq', [Name('list')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('klass'), [Keyword('fail_silently', Name('fail_silently'))], None, Name('kwds')))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Subscript(Name('self'), 'OP_DELETE', [Name('key')])]))
Module(None, Stmt([Class('EmptyPage', [Name('InvalidPage')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssTuple([AssName('value', 'OP_ASSIGN'), AssName('timestamp', 'OP_ASSIGN')])], CallFunc(Getattr(Name('result'), 'rsplit'), [Getattr(Name('self'), 'sep'), Const(1)], None, None))]))
Module(None, Stmt([Assign([AssName('doublecolon_len', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([If([(Not(Name('lookup')), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('date_key', 'OP_ASSIGN'), Name('date_keys'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Const(None))]))
try :
Module(None, Stmt([Assign([AssName('lbp', 'OP_ASSIGN')], Name('bp'))]))
except NotImplementedError :
Module(None, Stmt([Assign([AssName('d', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'config'), 'OP_APPLY', [Subscript(CallFunc(Getattr(Name('m'), 'groups'), [], None, None), 'OP_APPLY', [Const(0)])]))]))
Module(None, Stmt([Return(Tuple([CallFunc(Getattr(Subscript(Name('t'), 'OP_APPLY', [Const(0)]), 'lower'), [], None, None), Subscript(Name('t'), 'OP_APPLY', [Const(1)])]))]))
Module(None, Stmt([Assign([AssName('_cached_modules', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))]))
Module(None, Stmt([Function(None, 'language', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'can_read'), 'acquire'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('RegexURLResolver'), [Const('^/'), List([Name('ns_resolver')])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('Context'), '__init__'), [Name('self'), Name('dict_'), Keyword('current_app', Name('current_app')), Keyword('use_l10n', Name('use_l10n')), Keyword('use_tz', Name('use_tz'))], None, None))]))
Module(None, Stmt([Assign([AssName('other', 'OP_ASSIGN')], CallFunc(Getattr(Name('other'), '__cast'), [], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate'), [Name('out')], None, None))]))
Module(None, Stmt([Function(None, 'do_if', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
elif type ( s ) != six . text_type :
Module(None, Stmt([Return(Name('response'))]))
try :
Module(None, Stmt([Return(Getattr(Name('self'), '_size'))]))
Module(None, Stmt([If([(Compare(Const('forloop'), [('in', Name('context'))]), Stmt([Pass()]))], None)]))
except UnicodeDecodeError as e :
Module(None, Stmt([Assign([AssName('initial_text', 'OP_ASSIGN')], CallFunc(Name('ugettext_lazy'), [Const('Currently')], None, None))]))
Module(None, Stmt([If([(Getattr(Name('self'), '_validate_unique'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'extend'), [ListComp(CallFunc(Name('encode'), [Name('k'), CallFunc(Name('force_bytes'), [Name('v'), Getattr(Name('self'), 'encoding')], None, None)], None, None), [ListCompFor(AssName('v', 'OP_ASSIGN'), Name('list_'), [])])], None, None))]))
except ImportError :
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_read_started', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssName('default_list', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'boolean_check', ['v'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('m', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'CONVERT_PATTERN'), 'match'), [Name('value')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid')]), Keyword('code', Const('invalid'))], None, None), None, None)]))
Module(None, Stmt([Function(None, '__delitem__', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Getattr(Name('settings'), 'USE_TZ'), Compare(Name('value'), [('is not', Name('None'))]), CallFunc(Getattr(Name('timezone'), 'is_naive'), [Name('value')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('messages'), 'update'), [Or([Name('error_messages'), Dict(())])], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Function(None, 'ensure_echo_on', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Compare(Name('plan_node'), [('not in', Name('shown'))]), Compare(Subscript(Name('plan_node'), 'OP_APPLY', [Const(0)]), [('==', Name('app_name'))])]), Stmt([Pass()]))], None)]))
except KeyError :
Module(None, Stmt([If([(Name('renderer'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'endElement'), [Const('field')], None, None))]))
Module(None, Stmt([Function(None, 'contains', ['source', 'inst'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('kw'), 'OP_ASSIGN', [Const('microsecond')])], CallFunc(Getattr(Subscript(Name('kw'), 'OP_APPLY', [Const('microsecond')]), 'ljust'), [Const(6), Const('0')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('FormSet', 'OP_ASSIGN')], CallFunc(Name('formset_factory'), [Name('form'), Name('formset'), Keyword('extra', Name('extra')), Keyword('min_num', Name('min_num')), Keyword('max_num', Name('max_num')), Keyword('can_order', Name('can_order')), Keyword('can_delete', Name('can_delete')), Keyword('validate_min', Name('validate_min')), Keyword('validate_max', Name('validate_max'))], None, None))]))
Module(None, Stmt([Return(Slice(Getattr(Name('self'), 'forms'), 'OP_APPLY', CallFunc(Getattr(Name('self'), 'initial_form_count'), [], None, None), None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'parent_name', 'OP_ASSIGN')], Name('parent_name'))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('context'), Name('Context')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('lib', 'OP_ASSIGN')], CallFunc(Name('get_library'), [Name('taglib')], None, None))]))
Module(None, Stmt([Function(None, 'bpython', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('ETAG_MATCH', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('(?:W/)?"((?:\\\\.|[^"])*)"')], None, None))]))
Module(None, Stmt([If([(Or([Not(Name('autoescape')), CallFunc(Name('isinstance'), [Name('value'), Name('SafeData')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Mod((CallFunc(Name('ugettext'), [Const('Please correct the duplicate data for %(field_name)s which must be unique for the %(lookup)s in %(date_field)s.')], None, None), Dict([(Const('field_name'), Subscript(Name('date_check'), 'OP_APPLY', [Const(2)])), (Const('date_field'), Subscript(Name('date_check'), 'OP_APPLY', [Const(3)])), (Const('lookup'), CallFunc(Getattr(Name('six'), 'text_type'), [Subscript(Name('date_check'), 'OP_APPLY', [Const(1)])], None, None))]))))]))
Module(None, Stmt([Assign([AssName('msgs', 'OP_ASSIGN')], CallFunc(Getattr(Name('msgs'), 'decode'), [Const('utf-8')], None, None))]))
Module(None, Stmt([If([(And([Compare(CallFunc(Name('len'), [Name('value')], None, None), [('>=', Const(2))]), Compare(Slice(Name('value'), 'OP_APPLY', None, Const(1)), [('==', Slice(Name('value'), 'OP_APPLY', UnarySub(Const(1)), None)), ('==', Const('"'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('_default', 'OP_ASSIGN')], CallFunc(Name('translation'), [Getattr(Name('settings'), 'LANGUAGE_CODE')], None, None))]))
Module(None, Stmt([Import([('unicodedata', None)])]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'format'), [Const('D, j M Y H:i:s O')], None, None))]))
Module(None, Stmt([Return(Name('response'))]))
local , domain = middle . rsplit ( '@' , 1 )
Module(None, Stmt([Assign([AssName('prefixed_name', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'add_prefix'), [Name('name')], None, None))]))
Module(None, Stmt([While(And([Compare(Name('i'), [('<', CallFunc(Name('len'), [Name('subject')], None, None))]), Compare(Subscript(Name('subject'), 'OP_APPLY', [Name('i')]), [('!=', Subscript(Name('subject'), 'OP_APPLY', [Name('p')]))])]), Stmt([Pass()]), None)]))
except ZeroDivisionError :
else :
Module(None, Stmt([Assign([AssName('use_natural_keys', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('use_natural_keys')], None, None))]))
Module(None, Stmt([Function(None, 'emit_post_migrate', ['verbosity', 'interactive', 'database'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.http.request', [('HttpRequest', None), ('QueryDict', None), ('RawPostDataException', None), ('UnreadablePostError', None), ('build_request_repr', None)], 0)]))
Module(None, Stmt([Assign([AssName('_error_files', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], CallFunc(Name('callback'), [Name('request')], None, Name('param_dict')))]))
Module(None, Stmt([Import([('struct', None)])]))
else :
Module(None, Stmt([If([(Compare(Name('verbosity'), [('>=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'constant_time_compare', ['val1', 'val2'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Subscript(Name('kw'), 'OP_APPLY', [Const('microsecond')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_name', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([Class('LimitedStream', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Name('errors')], None, None))]))
Module(None, Stmt([If([(Compare(Name('comment_lineno_cache'), [('==', Name('cur_lineno'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'xgettext_options', 'OP_ASSIGN')], Add((Slice(Getattr(Name('self'), 'xgettext_options'), 'OP_APPLY', None, None), List([Const('--no-wrap')]))))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([If([(Name('issues'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'render', ['self', 'name', 'value', 'attrs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([If([(Compare(Name('filename'), [('not in', Name('_error_files'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('response'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Function(None, '__init__', ['self', 'environ'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Subscript(Name('options'), 'OP_APPLY', [Const('no_startup')])), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('tag'), [('in', Getattr(Name('self'), 'CDATA_CONTENT_ELEMENTS'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'nodelist', 'OP_ASSIGN')], CallFunc(Name('compile_string'), [Name('template_string'), Name('origin')], None, None))]))
Module(None, Stmt([Class('BlockContext', [Name('object')], None, Stmt([Pass()]), None)]))
except AttributeError :
Module(None, Stmt([If([(CallFunc(Getattr(Name('keyword'), 'iskeyword'), [Name('new_name')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('s'))]))
Module(None, Stmt([With(CallFunc(Name('open'), [Name('filename'), Const('wb')], None, None), AssName('outfile', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('d'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parts'), 'append'), [Mod((Const('(?P<%s>%s)'), Tuple([Name('groupid'), Getattr(Name('tok'), 'regex')])))], None, None))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Function(None, 'generic_tag_compiler', ['parser', 'token', 'params', 'varargs', 'varkw', 'defaults', 'name', 'takes_context', 'node_class'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('widget'), 'attrs'), 'update'), [Name('extra_attrs')], None, None))]))
Module(None, Stmt([Function(None, 'keys', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('kw'), 'OP_ASSIGN', [Const('tzinfo')])], Name('tzinfo'))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '__dict__'), 'update'), [Name('obj_dict')], None, None))]))
Module(None, Stmt([Return(CallFunc(CallFunc(Name('wraps'), [Name('func')], None, None), [Name('_dec')], None, None))]))
Module(None, Stmt([Function(None, 'open', ['self', 'mode'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([If([(Compare(Name('pickled'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([If([(Name('match'), Stmt([Pass()]))], None)]))
registry = CheckRegistry ( )
try :
else :
Module(None, Stmt([Assign([AssName('declared_fields', 'OP_ASSIGN')], CallFunc(Name('OrderedDict'), [], None, None))]))
Module(None, Stmt([Discard(Getattr(Name('settings'), 'SITE_ID'))]))
Module(None, Stmt([Function(None, 'resolve', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('resolved_args', 'OP_ASSIGN'), AssName('resolved_kwargs', 'OP_ASSIGN')])], CallFunc(Getattr(Name('self'), 'get_resolved_arguments'), [Name('context')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('smart_text'), [Name('token')], None, None))]))
Module(None, Stmt([Return(Getattr(Name('settings'), 'LANGUAGE_CODE'))]))
Module(None, Stmt([Assign([AssName('args_safe', 'OP_ASSIGN')], CallFunc(Name('map'), [Name('conditional_escape'), Name('args')], None, None))]))
Module(None, Stmt([AugAssign(Name('attrs'), '+=', ListComp(Getattr(Name('attr'), 'name'), [ListCompFor(AssName('attr', 'OP_ASSIGN'), Getattr(Name('self'), '_moved_attributes'), [])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('field_list'), 'append'), [Tuple([Getattr(Name('f'), 'name'), Name('formfield')])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [Name('MultiPartParserError'), CallFunc(Name('MultiPartParserError'), [Name('msg')], None, None), Subscript(CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), 'OP_APPLY', [Const(2)])], None, None))]))
Module(None, Stmt([Function(None, 'empty_form', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('args'), Keyword('metavar', Const('fixture')), Keyword('nargs', Const('*')), Keyword('help', Const('Path(s) to fixtures to load before running the server.'))], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('lookup', 'OP_ASSIGN'), AssName('arg', 'OP_ASSIGN')]), Name('args'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('old_method_name', 'OP_ASSIGN')], Subscript(Name('renamed_method'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Assign([AssName('rest', 'OP_ASSIGN')], Name('value'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Mod((CallFunc(Getattr(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'ops'), 'cache_key_culling_sql'), [], None, None), Name('table'))), List([Name('cull_num')])], None, None))]))
Module(None, Stmt([Assign([AssName('_urllib_response_moved_attributes', 'OP_ASSIGN')], List([CallFunc(Name('MovedAttribute'), [Const('addbase'), Const('urllib'), Const('urllib.response')], None, None), CallFunc(Name('MovedAttribute'), [Const('addclosehook'), Const('urllib'), Const('urllib.response')], None, None), CallFunc(Name('MovedAttribute'), [Const('addinfo'), Const('urllib'), Const('urllib.response')], None, None), CallFunc(Name('MovedAttribute'), [Const('addinfourl'), Const('urllib'), Const('urllib.response')], None, None)]))]))
try :
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('middleware'), Const('process_response')], None, None), Stmt([Pass()]))], None)]))
is_dst = False if dt is None else self . _isdst ( dt )
else :
Module(None, Stmt([Function(None, '_start_relational_field', ['self', 'field'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Subscript(Name('options'), 'OP_APPLY', [Const('errlog')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_load_serializers', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('model', 'OP_ASSIGN')], CallFunc(Getattr(Name('apps'), 'get_model'), [Name('exclude')], None, None))]))
Module(None, Stmt([Function(None, '__exit__', ['self', 'exc_type', 'exc_value', 'traceback'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('attrvalue', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('msgs', 'OP_ASSIGN')], CallFunc(Getattr(Const('\n'), 'join'), [Name('lines')], None, None))]))
Module(None, Stmt([Class('ConvertingTuple', [Name('tuple')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stderr'), 'write'), [Mod((Const('The po files under %s are in a seemingly not writable location. mo files will not be updated/created.'), Name('dirpath')))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_mutable', 'OP_ASSIGN')], Name('mutable'))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Function(None, 'args_check', ['name', 'func', 'provided'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Subscript(Name('cwords'), 'OP_APPLY', [Const(0)]), [('==', Const('runfcgi'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'remove_move', ['name'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], Mod((Const('Execution of %s failed: %s'), Tuple([Getattr(Name('self'), 'program'), Name('errors')]))))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('middleware'), 'process_response'), [Name('request'), Name('response')], None, None))]))
Module(None, Stmt([From('django.db', [('connections', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([Assign([AssName('candidate_subs', 'OP_ASSIGN')], CallFunc(Name('dict'), [CallFunc(Name('zip'), [Add((Name('prefix_args'), Name('params'))), Name('text_args')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('width', 'OP_ASSIGN')], CallFunc(Getattr(Name('six'), 'text_type'), [CallFunc(Name('len'), [CallFunc(Getattr(Name('six'), 'text_type'), [CallFunc(Name('len'), [Name('lines')], None, None)], None, None)], None, None)], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const("Installing %s fixture '%s' from %s."), Tuple([Name('ser_fmt'), Name('fixture_name'), CallFunc(Name('humanize'), [Name('fixture_dir')], None, None)])))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('sites'), 'append'), [Name('site')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Getattr(Name('self'), 'literal'))]))
Module(None, Stmt([Import([('sys', None)])]))
@ property
Module(None, Stmt([Function(None, 'format_html', ['format_string', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('filename', 'OP_ASSIGN')], Name('file'))]))
Module(None, Stmt([If([(Name('is_relation'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('now', 'OP_ASSIGN')], CallFunc(Getattr(Name('now'), 'replace'), [Keyword('tzinfo', Name('None'))], None, None))]))
Module(None, Stmt([Assign([AssName('media', 'OP_ASSIGN')], CallFunc(Name('Media'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('context'), 'autoescape', 'OP_ASSIGN')], Name('old_setting'))]))
Module(None, Stmt([Assign([AssName('sep', 'OP_ASSIGN')], Add((CallFunc(Name('len'), [CallFunc(Getattr(Subscript(Name('hextet'), 'OP_APPLY', [Const(0)]), 'split'), [Const(':')], None, None)], None, None), CallFunc(Name('len'), [CallFunc(Getattr(Subscript(Name('hextet'), 'OP_APPLY', [Const(1)]), 'split'), [Const(':')], None, None)], None, None))))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('obj_pk', 'OP_ASSIGN')], Getattr(CallFunc(Getattr(CallFunc(Getattr(Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_default_manager'), 'db_manager'), [Getattr(Name('self'), 'db')], None, None), 'get_by_natural_key'), [], Name('field_value'), None), 'pk'))]))
Module(None, Stmt([Assign([AssName('length', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('num')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'file'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('error_messages')])], Name('error_messages'))]))
Module(None, Stmt([Global(['_default'])]))
else :
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], List(()))]))
except ( ValueError , TypeError ) :
Module(None, Stmt([Return(Getattr(Name('self'), 'position'))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
post = ( pformat ( POST_override )  if POST_override is not None  else pformat ( request . POST ) )
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('f'), Getattr(Name('models'), 'FileField')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.timezone', [('utc', None), ('get_fixed_timezone', None)], 0)]))
Module(None, Stmt([Discard(Yield(Const('month')))]))
Module(None, Stmt([Assign([AssName('date', 'OP_ASSIGN')], Subscript(Getattr(Name('form'), 'cleaned_data'), 'OP_APPLY', [Name('unique_for')]))]))
Module(None, Stmt([If([(Name('format_module_path'), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssTuple([AssName('issues', 'OP_ASSIGN'), AssName('group_name', 'OP_ASSIGN')]), Name('sorted_issues'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Sub((Name('i'), Name('day_of_year'))), [('<', Sub((Const(4), Name('weekday'))))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('time', None)])]))
try :
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stream'), 'write'), [Const('[')], None, None))]))
Module(None, Stmt([Assign([AssName('end', 'OP_ASSIGN')], CallFunc(Getattr(Name('s'), 'find'), [Const(';')], None, None))]))
Module(None, Stmt([Function(None, 'all', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('d'), Name('real_datetime')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'namespace', 'OP_ASSIGN')], CallFunc(Getattr(Const(':'), 'join'), [Getattr(Name('self'), 'namespaces')], None, None))]))
Module(None, Stmt([Class('TemporaryFile', [Name('FileProxyMixin')], None, Stmt([Pass()]), None)]))
self . dict = OrderedDict ( ( ( x , None ) for x in iterable ) if iterable else [ ] )
Module(None, Stmt([Return(Name('WRAPPER_ASSIGNMENTS'))]))
Module(None, Stmt([Function(None, 'get_response', ['self', 'request'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 's'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('path'), 'decode'), [Name('fs_encoding')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'file_name', 'OP_ASSIGN')], Name('file_name'))]))
Module(None, Stmt([Assign([AssName('endpos', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'check_for_whole_start_tag'), [Name('i')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('repr'), [Getattr(Name('self'), 'dicts')], None, None))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'addr')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('seek', 'OP_ASSIGN')], CallFunc(Name('property'), [Lambda(['self'], [], 0, Getattr(Getattr(Name('self'), 'file'), 'seek'))], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Name('cursor'), 'fetchone'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_request', 'OP_ASSIGN')], CallFunc(Getattr(Name('datastructures'), 'MergeDict'), [Getattr(Name('self'), 'POST'), Getattr(Name('self'), 'GET')], None, None))]))
Module(None, Stmt([If([(And([Compare(Name('token'), [('==', Const('not'))]), Compare(Add((Name('i'), Const(1))), [('<', Name('l'))]), Compare(Subscript(Name('tokens'), 'OP_APPLY', [Add((Name('i'), Const(1)))]), [('==', Const('in'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('_i18n_cache_key_suffix'), [Name('request'), Name('cache_key')], None, None))]))
Module(None, Stmt([Assign([AssName('can_import_settings', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Function(None, 'handle_fk_field', ['self', 'obj', 'field'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('tagname', 'OP_ASSIGN')], CallFunc(Getattr(Name('tagname'), 'lower'), [], None, None))]))
Module(None, Stmt([Function(None, 'deconstructible', ['args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('media_attrs', 'OP_ASSIGN')], Getattr(Name('media'), '__dict__'))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
elif item [ "author_email" ] :
Module(None, Stmt([Assign([AssName('text', 'OP_ASSIGN')], CallFunc(Getattr(Name('match'), 'group'), [Const(1)], None, None))]))
Module(None, Stmt([For(AssName('node', 'OP_ASSIGN'), Name('self'), Stmt([Pass()]), None)]))
try :
try :
Module(None, Stmt([Function(None, 'get_signed_cookie', ['self', 'key', 'default', 'salt', 'max_age'], [Name('RAISE_ERROR'), Const(''), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.timezone', [('is_aware', None)], 0)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Class('DateField', [Name('BaseTemporalField')], None, Stmt([Pass()]), None)]))
return self . show_migration_list ( connection , [ options [ 'app_label' ] ] if options [ 'app_label' ] else None )
Module(None, Stmt([Function(None, 'configure_logging', ['logging_config', 'logging_settings'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Name('sender'), CallFunc(Name('getattr'), [Name('sender'), Const('handles_files'), Name('False')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('ns', 'OP_ASSIGN')], CallFunc(Getattr(Name('path'), 'pop'), [], None, None))]))
Module(None, Stmt([Function(None, 'copystat', ['src', 'dst'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('handlers', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'get'), [Const('handlers'), Name('None')], None, None))]))
Module(None, Stmt([Function(None, 'write_po_file', ['self', 'potfile', 'locale'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'clear', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('signals', 'OP_ASSIGN')], Const('signals'))]))
Module(None, Stmt([Assign([AssTuple([AssName('filename', 'OP_ASSIGN'), AssName('display_url', 'OP_ASSIGN')])], CallFunc(Name('cleanup_url'), [Name('url')], None, None))]))
Module(None, Stmt([Assign([AssName('default_error_messages', 'OP_ASSIGN')], Dict([(Const('invalid'), CallFunc(Name('_'), [Const('Enter a number.')], None, None)), (Const('max_digits'), CallFunc(Name('ungettext_lazy'), [Const('Ensure that there are no more than %(max)s digit in total.'), Const('Ensure that there are no more than %(max)s digits in total.'), Const('max')], None, None)), (Const('max_decimal_places'), CallFunc(Name('ungettext_lazy'), [Const('Ensure that there are no more than %(max)s decimal place.'), Const('Ensure that there are no more than %(max)s decimal places.'), Const('max')], None, None)), (Const('max_whole_digits'), CallFunc(Name('ungettext_lazy'), [Const('Ensure that there are no more than %(max)s digit before the decimal point.'), Const('Ensure that there are no more than %(max)s digits before the decimal point.'), Const('max')], None, None))]))]))
Module(None, Stmt([Function(None, 'default', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('subject', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'format_subject'), [Name('subject')], None, None))]))
Module(None, Stmt([Function(None, 'get_fqdn', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('-a'), Const('--all'), Keyword('action', Const('store_true')), Keyword('dest', Const('use_base_manager')), Keyword('default', Name('False')), Keyword('help', Const("Use Django's base manager to dump all models stored in the database, including those that would otherwise be filtered or modified by a custom manager."))], None, None))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'data', 'OP_ASSIGN')], Or([Name('data'), Dict(())]))]))
Module(None, Stmt([Assign([AssName('missing_args_message', 'OP_ASSIGN')], Const('You must provide a project name.'))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Assign([AssName('default_validators', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Compare(Subscript(Name('options'), 'OP_APPLY', [Const('method')]), [('in', Tuple([Const('prefork'), Const('fork')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('final_attrs', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'build_attrs'), [Name('attrs')], None, None))]))
finally :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'options', 'OP_ASSIGN')], Name('options'))]))
elif ch == ':' :
Module(None, Stmt([Function(None, 'content', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils._os', [('rmtree_errorhandler', None)], 0)]))
except ValueError :
Module(None, Stmt([Function(None, 'itervalues', ['d', 'kw'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('client'), 'behaviors', 'OP_ASSIGN')], Getattr(Name('self'), '_options'))]))
Module(None, Stmt([Assign([AssName('used_name', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(Name('the_path'), 'split'), [Const('/')], None, None), 'OP_APPLY', [UnarySub(Const(1))]))]))
Module(None, Stmt([If([(Compare(Name('date'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__ne__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('exclude', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Class('LocaleRegexProvider', [Name('object')], None, Stmt([Pass()]), None)]))
except ValueError :
else :
Module(None, Stmt([Assign([AssName('reloader', 'OP_ASSIGN')], Name('python_reloader'))]))
Module(None, Stmt([Assign([AssName('pending_references', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([If([(Name('opts'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('input_type', 'OP_ASSIGN')], Const('password'))]))
Module(None, Stmt([Assign([AssName('errors', 'OP_ASSIGN')], ListComp(Name('e'), [ListCompFor(AssName('e', 'OP_ASSIGN'), Name('all_issues'), [ListCompIf(Compare(Getattr(Name('checks'), 'ERROR'), [('<=', Getattr(Name('e'), 'level')), ('<', Getattr(Name('checks'), 'CRITICAL'))]))])]))]))
Module(None, Stmt([Assign([AssName('time_str', 'OP_ASSIGN')], CallFunc(Getattr(Name('date'), 'strftime'), [Const('%Y-%m-%dT%H:%M:%S')], None, None))]))
except LookupError :
Module(None, Stmt([Return(Mod((Const('<DjangoTranslation lang:%s>'), Getattr(Name('self'), '__language'))))]))
Module(None, Stmt([Class('SerializationError', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('BASE62_ALPHABET', 'OP_ASSIGN')], Const('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'))]))
Module(None, Stmt([If([(Compare(Name('model'), [('in', Name('excluded_models'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('slots', 'OP_ASSIGN')], CallFunc(Getattr(Name('orig_vars'), 'get'), [Const('__slots__')], None, None))]))
Module(None, Stmt([Assign([AssName('field_value', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('RFC850_DATE', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Mod((Const('^\\w{6,9}, %s-%s-%s %s GMT$'), Tuple([Name('__D'), Name('__M'), Name('__Y2'), Name('__T')])))], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('urlconf_name'), Getattr(Name('six'), 'string_types')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('serializers'), 'serialize'), [Name('format'), CallFunc(Name('get_objects'), [], None, None), Keyword('indent', Name('indent')), Keyword('use_natural_foreign_keys', Name('use_natural_foreign_keys')), Keyword('use_natural_primary_keys', Name('use_natural_primary_keys')), Keyword('stream', Or([Name('stream'), Getattr(Name('self'), 'stdout')]))], None, None))]))
except ValidationError :
Module(None, Stmt([From('django.utils._os', [('safe_join', None), ('abspathu', None)], 0)]))
else :
Module(None, Stmt([If([(Compare(Subscript(Name('item'), 'OP_APPLY', [Const('unique_id')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'npgettext', ['context', 'singular', 'plural', 'number'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([For(AssName('code', 'OP_ASSIGN'), Tuple([Name('lang_code'), Name('generic_lang_code')]), Stmt([Pass()]), None)]))
Module(None, Stmt([Import([('datetime', None)])]))
Module(None, Stmt([Return(Subscript(Getattr(Name('_time'), 'tzname'), 'OP_APPLY', [Name('is_dst')]))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('Subclasses must implement this method.')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('filepath', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'abspath'), [Name('filepath')], None, None))]))
Module(None, Stmt([Assign([AssName('list_length', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('list_')], None, None))]))
Module(None, Stmt([Class('ForNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('`request.REQUEST` is deprecated, use `request.GET` or `request.POST` instead.'), Name('RemovedInDjango19Warning'), Const(2)], None, None))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([If([(Compare(Name('arg'), [('not in', Tuple([Const('on'), Const('off')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('seconds', 'OP_ASSIGN')], CallFunc(Name('abs'), [Name('seconds')], None, None))]))
Module(None, Stmt([From('django.db', [('models', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('author'), Mod((Const('%s (%s)'), Tuple([Subscript(Name('item'), 'OP_APPLY', [Const('author_email')]), Subscript(Name('item'), 'OP_APPLY', [Const('author_name')])])))], None, None))]))
Module(None, Stmt([Assign([AssName('chars', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('chars')], None, None))]))
Module(None, Stmt([If([(Not(Name('lib')), Stmt([Pass()]))], None)]))
except ValueError :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'connection'), 'close'), [], None, None))]))
Module(None, Stmt([Function(None, 'handle', ['self', 'args', 'options'], [], 12, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('cache_choices has been deprecated and will be removed in Django 1.9.'), Name('RemovedInDjango19Warning'), Keyword('stacklevel', Const(2))], None, None))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('datetime_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('(?P<year>\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2})[T ](?P<hour>\\d{1,2}):(?P<minute>\\d{1,2})(?::(?P<second>\\d{1,2})(?:\\.(?P<microsecond>\\d{1,6})\\d{0,6})?)?(?P<tzinfo>Z|[+-]\\d{2}(?::?\\d{2})?)?$')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'show_traceback', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('traceback')], None, None))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Assign([AssName('format_key', 'OP_ASSIGN')], Const('DATETIME_INPUT_FORMATS'))]))
@ deconstructible
Module(None, Stmt([For(AssName('check', 'OP_ASSIGN'), Name('checks'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Name('func'), [Name('path')], None, None))]))
Module(None, Stmt([Assign([AssName('extend', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('definition'), Const('extend'), Name('True')], None, None))]))
Module(None, Stmt([From('django.core.cache.backends.base', [('BaseCache', None), ('DEFAULT_TIMEOUT', None)], 0)]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('WSGIServer'), Name('self')], None, None), 'server_bind'), [], None, None))]))
Module(None, Stmt([Return(Name('singular'))]))
Module(None, Stmt([Assign([AssName('path_info', 'OP_ASSIGN')], CallFunc(Name('get_bytes_from_wsgi'), [Name('environ'), Const('PATH_INFO'), Const('')], None, None))]))
Module(None, Stmt([From('django.utils.http', [('cookie_date', None)], 0)]))
Module(None, Stmt([If([(Not(Name('shown')), Stmt([Pass()]))], None)]))
should_convert = ( isinstance ( value , datetime )  and ( settings . USE_TZ if use_tz is None else use_tz )  and not is_naive ( value )  and getattr ( value , 'convert_to_local_time' , True ) )
Module(None, Stmt([Assign([AssName('default_error_messages', 'OP_ASSIGN')], Dict([(Const('invalid_choice'), CallFunc(Name('_'), [Const('The inline foreign key did not match the parent instance primary key.')], None, None))]))]))
Module(None, Stmt([For(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('list_', 'OP_ASSIGN')]), CallFunc(Getattr(Name('self'), 'lists'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'css_classes', ['self', 'extra_classes'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('msgs'))]))
Module(None, Stmt([While(Name('True'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(Name('m')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'addQuickElement', ['self', 'name', 'contents', 'attrs'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssAttr(Name('cls'), '_delegate_text', 'OP_ASSIGN')], Compare(Getattr(Name('six'), 'text_type'), [('in', Name('resultclasses'))]))]))
Module(None, Stmt([Assign([AssName('all_issues', 'OP_ASSIGN')], CallFunc(Getattr(Name('checks'), 'run_checks'), [Keyword('app_configs', Name('app_configs')), Keyword('tags', Name('tags'))], None, None))]))
Module(None, Stmt([Assign([AssName('conflicts', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('executor'), 'loader'), 'detect_conflicts'), [], None, None))]))
Module(None, Stmt([If([(And([Name('safe'), Not(CallFunc(Name('isinstance'), [Name('data'), Name('dict')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'as_json', ['self', 'escape_html'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core', [('checks', None)], 0)]))
Module(None, Stmt([Assign([AssName('filename', 'OP_ASSIGN')], CallFunc(Getattr(Name('filename'), 'encode'), [Const('utf-8')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'seek'), [Const(0)], None, None))]))
Module(None, Stmt([Assign([AssName('__version__', 'OP_ASSIGN')], Const('0.1'))]))
Module(None, Stmt([Class('UploadFileException', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Function(None, 'log_message', ['self', 'format', 'args'], [], 4, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'decorator', ['klass'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Assign([AssName('app_config', 'OP_ASSIGN')], CallFunc(Getattr(Name('apps'), 'get_app_config'), [Name('exclude')], None, None))]))
except UnicodeDecodeError :
Module(None, Stmt([Function(None, 'resolve_context', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('_trans'), 'deactivate'), [], None, None))]))
Module(None, Stmt([Function(None, 'reset_translations', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('pattern'), 'namespace'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'extensions', 'OP_ASSIGN')], CallFunc(Name('handle_extensions'), [Name('exts')], None, None))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const('Searching for value. Unexpected end of string in column %d: %s'), Tuple([Name('i'), Name('subject')])))], None, None), None, None)]))
Module(None, Stmt([For(AssTuple([AssName('key', 'OP_ASSIGN'), AssName('value_list', 'OP_ASSIGN')]), CallFunc(Getattr(Name('other_dict'), 'lists'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Class('MultipleChoiceField', [Name('ChoiceField')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const("You can only use `unpack_ipv4` if `protocol` is set to 'both'")], None, None), None, None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'add_truncation_text'), [Slice(Name('text'), 'OP_APPLY', None, Or([Name('end_index'), Const(0)])), Name('truncate')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), '_exit'), [Const(0)], None, None))]))
Module(None, Stmt([Pass()]))
except OSError :
Module(None, Stmt([Function(None, 'get_full_path', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('fp', 'OP_ASSIGN')], CallFunc(Getattr(Name('six'), 'StringIO'), [], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Name('ip_str'), 'count'), [Const('.')], None, None), [('!=', Const(3))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('path'))]))
Module(None, Stmt([From('django.utils.encoding', [('smart_text', None), ('is_protected_type', None)], 0)]))
Module(None, Stmt([Assign([AssName('connection', 'OP_ASSIGN')], Subscript(Name('connections'), 'OP_APPLY', [Subscript(Name('options'), 'OP_APPLY', [Const('database')])]))]))
Module(None, Stmt([Raise(CallFunc(Name('SignatureExpired'), [Mod((Const('Signature age %s > %s seconds'), Tuple([Name('age'), Name('max_age')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Name('Select'))]))
Module(None, Stmt([Function(None, 'extract', ['self', 'to_path'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('domain'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Mod((Const('tag:%s%s:%s/%s'), Tuple([Getattr(Name('bits'), 'hostname'), Name('d'), Getattr(Name('bits'), 'path'), Getattr(Name('bits'), 'fragment')]))))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('locks'), 'lock'), [Name('fd'), Getattr(Name('locks'), 'LOCK_EX')], None, None))]))
try :
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Name('DateTimeInput'))]))
@ property
Module(None, Stmt([Class('Module_six_moves_urllib_request', [Name('_LazyModule')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(Name('StopIteration'), None, None)]))
Module(None, Stmt([Assign([AssName('pkg_name', 'OP_ASSIGN')], Add((Const('templates/'), Name('template_name'))))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'close'), [], None, None))]))
Module(None, Stmt([Assign([AssName('view', 'OP_ASSIGN')], Subscript(Name('parts'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Return(CallFunc(Name('get_template'), [Name('parent')], None, None))]))
Module(None, Stmt([Assign([AssName('encoding', 'OP_ASSIGN')], Or([Getattr(Name('self'), 'encoding'), Getattr(Name('settings'), 'DEFAULT_CHARSET')]))]))
Module(None, Stmt([Assign([AssName('message_context', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Compare(Name('value'), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
nodelist = parser . parse ( ( 'elif' , 'else' , 'endif' ) )
Module(None, Stmt([Function(None, 'create_var', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('unicode_value'), 'strip'), [], None, None))]))
Module(None, Stmt([Subscript(Subscript(Getattr(Name('self'), 'dicts'), 'OP_APPLY', [UnarySub(Const(1))]), 'OP_DELETE', [Name('key')])]))
Module(None, Stmt([Function(None, 'is_ignored', ['path', 'ignore_patterns'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([If([(Not(Name('kwarg_format')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Name('new_value'))]))
Module(None, Stmt([Assign([AssName('singular', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(Name('potfiles'))]))
Module(None, Stmt([Assign([AssName('itervalues', 'OP_ASSIGN')], Name('_itervalues'))]))
Module(None, Stmt([Assign([AssName('formatted', 'OP_ASSIGN')], CallFunc(Getattr(Const('\n'), 'join'), [CallFunc(Name('sorted'), [Name('formatted')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Getattr(Name('copy'), 'copy'), [Name('self')], None, None))]))
Module(None, Stmt([Assign([AssName('ustring_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('([\\u0080-\\uffff])')], None, None))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'META'), 'OP_ASSIGN', [Const('PATH_INFO')])], Name('path_info'))]))
Module(None, Stmt([Assign([AssName('DARK_PALETTE', 'OP_ASSIGN')], Const('dark'))]))
Module(None, Stmt([Import([('itertools', None)])]))
else :
Module(None, Stmt([If([(And([Name('fields'), Compare(Getattr(Name('f'), 'name'), [('not in', Name('fields'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.db', [('connections', None), ('router', None), ('transaction', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('f'), 'seek'), [Const(0)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_option'), [Const('--settings'), Keyword('help', Const('The Python path to a settings module, e.g. "myproject.settings.main". If this isn\'t provided, the DJANGO_SETTINGS_MODULE environment variable will be used.'))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('result'), '_choices', 'OP_ASSIGN')], CallFunc(Getattr(Name('copy'), 'deepcopy'), [Getattr(Name('self'), '_choices'), Name('memo')], None, None))]))
Module(None, Stmt([Function(None, 'handle_app_config', ['self', 'app_config', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('urlquote', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('urlquote'), Getattr(Name('six'), 'text_type')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of Storage must provide a listdir() method')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('dec_part', 'OP_ASSIGN')], Add((Name('dec_part'), Mul((Const('0'), Sub((Name('decimal_pos'), CallFunc(Name('len'), [Name('dec_part')], None, None))))))))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '__name', 'OP_ASSIGN')], Mod((Const('%s%02d%02d'), Tuple([Name('sign'), Div((CallFunc(Name('abs'), [Name('offset')], None, None), Const(60.0))), Mod((CallFunc(Name('abs'), [Name('offset')], None, None), Const(60)))]))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('shutil'), 'rmtree'), [Name('path_to_remove'), Keyword('onerror', Name('rmtree_errorhandler'))], None, None))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Assign([AssName('handlers', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'get'), [Const('handlers'), Name('EMPTY_DICT')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'nodelist_empty'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_dimensions_cache'))]))
Module(None, Stmt([Class('Command', [Name('AppCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'linenumbers', ['value', 'autoescape'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'ignore', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('ignore')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Const('  the new migration will be used for new installs. Once you are sure')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'template_string', 'OP_ASSIGN')], Name('template_string'))]))
Module(None, Stmt([Assign([AssName('view_name', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'view_name'), 'resolve'), [Name('context')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('formats'), 'sanitize_separators'), [Name('value')], None, None))]))
Module(None, Stmt([If([(Name('value'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Slice(Name('value'), 'OP_APPLY', Const(1), UnarySub(Const(1))))]))
Module(None, Stmt([If([(Name('register_to'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('django.utils.tzinfo will be removed in Django 1.9. Use django.utils.timezone instead.'), Name('RemovedInDjango19Warning'), Keyword('stacklevel', Const(2))], None, None))]))
Module(None, Stmt([Assign([AssName('regex', 'OP_ASSIGN')], Getattr(Name('self'), '_regex'))]))
Module(None, Stmt([If([(Compare(Name('fset'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'label_suffix', 'OP_ASSIGN')], Name('label_suffix'))]))
Module(None, Stmt([If([(Not(Name('match')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'encoding', ['self', 'val'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([If([(Compare(Name('app'), [('==', Const('django.core'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'cache_clear', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Getattr(Name('self'), 'value'))]))
Module(None, Stmt([If([(Name('app_labels'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_cache'), 'clear'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'name', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([If([(Compare(Name('new_name'), [('!=', Name('col_name'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'append'), [Name('ch')], None, None))]))
Module(None, Stmt([Assign([AssName('format', 'OP_ASSIGN')], CallFunc(Name('force_str'), [Or([Name('default'), Subscript(CallFunc(Name('get_format'), [Const('TIME_INPUT_FORMATS')], None, None), 'OP_APPLY', [Const(0)])])], None, None))]))
Module(None, Stmt([If([(Compare(Name('year'), [('<', Const(70))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('format_html'), [Const('<input{0} />'), CallFunc(Name('flatatt'), [Name('final_attrs')], None, None)], None, None))]))
Module(None, Stmt([Return(Dict(()))]))
Module(None, Stmt([Function(None, 'F', ['i'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.encoding', [('force_str', None)], 0)]))
Module(None, Stmt([Assign([Subscript(Name('response'), 'OP_ASSIGN', [Const('Vary')])], CallFunc(Getattr(Const(', '), 'join'), [Add((Name('vary_headers'), Name('additional_headers')))], None, None))]))
Module(None, Stmt([For(AssName('field', 'OP_ASSIGN'), Getattr(Getattr(Name('model'), '_meta'), 'many_to_many'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('message_context', 'OP_ASSIGN')], CallFunc(Getattr(Name('message_context'), 'strip'), [Const('"')], None, None))]))
Module(None, Stmt([Return(Mod((Const('<For Node: for %s in %s, tail_len: %d%s>'), Tuple([CallFunc(Getattr(Const(', '), 'join'), [Getattr(Name('self'), 'loopvars')], None, None), Getattr(Name('self'), 'sequence'), CallFunc(Name('len'), [Getattr(Name('self'), 'nodelist_loop')], None, None), Name('reversed_text')]))))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Const('You must set settings.ALLOWED_HOSTS if DEBUG is False.')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('hex_format_string', 'OP_ASSIGN')], Mod((Const('%%0%ix'), Mul((Name('hlen'), Const(2))))))]))
Module(None, Stmt([Function(None, 'clear_checkbox_id', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(ListComp(Subscript(Name('self'), 'OP_APPLY', [Name('k')]), [ListCompFor(AssName('k', 'OP_ASSIGN'), Getattr(Name('self'), 'keyOrder'), [])]))]))
@ property
Module(None, Stmt([For(AssName('line', 'OP_ASSIGN'), Name('sequence_sql'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('ttl'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Return(Name('lang_code'))]))
except StandardError as e :
Module(None, Stmt([Assign([AssName('vary_headers', 'OP_ASSIGN')], CallFunc(Getattr(Name('cc_delim_re'), 'split'), [Subscript(Name('response'), 'OP_APPLY', [Const('Vary')])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('AppCommand.handle_app() is superseded by AppCommand.handle_app_config().'), Name('RemovedInDjango19Warning'), Keyword('stacklevel', Const(2))], None, None))]))
Module(None, Stmt([From('xml.dom', [('pulldom', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('attrs'), 'append'), [Tuple([CallFunc(Getattr(Name('attrname'), 'lower'), [], None, None), Name('attrvalue')])], None, None))]))
Module(None, Stmt([Function(None, 'sql_all', ['app_config', 'style', 'connection'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('base_url', 'OP_ASSIGN')], Getattr(Name('settings'), 'MEDIA_URL'))]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([If([(Compare(Name('instance'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.safestring', [('mark_safe', None)], 0)]))
Module(None, Stmt([Function(None, 'is_protected_type', ['obj'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('yaml', [('CSafeDumper', 'SafeDumper')], 0)]))
Module(None, Stmt([If([(Compare(Name('delta'), [('<', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'style'), 'HTTP_INFO'), [Name('msg')], None, None))]))
Module(None, Stmt([If([(Or([And([Getattr(Name('context'), 'autoescape'), Not(CallFunc(Name('isinstance'), [Name('value'), Name('SafeData')], None, None))]), CallFunc(Name('isinstance'), [Name('value'), Name('EscapeData')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'as_string', ['self', 'unixfrom'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('_serializers', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssName('space', 'OP_ASSIGN')], Add((CallFunc(Getattr(Name('line'), 'find'), [Const(' ')], None, None), Const(1))))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('IntegerField'), Name('self')], None, None), 'to_python'), [Name('value')], None, None))]))
Module(None, Stmt([AugAssign(Subscript(Name('stats'), 'OP_APPLY', [Name('MISSES')]), '+=', Const(1))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'compression_formats', 'OP_ASSIGN')], Dict([(Name('None'), Tuple([Name('open'), Const('rb')])), (Const('gz'), Tuple([Getattr(Name('gzip'), 'GzipFile'), Const('rb')])), (Const('zip'), Tuple([Name('SingleZipReader'), Const('r')]))]))]))
Module(None, Stmt([If([(Name('ignore_failures'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], CallFunc(Name('_resolve_name'), [Slice(Name('name'), 'OP_APPLY', Name('level'), None), Name('package'), Name('level')], None, None))]))
try :
else :
Module(None, Stmt([Function(None, 'unget', ['self', 'bytes'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Compare(Subscript(Name('caches'), 'OP_APPLY', [Name('DEFAULT_CACHE_ALIAS')]), [('!=', Name('other'))]))]))
Module(None, Stmt([Return(CallFunc(Name('TemplateSyntaxError'), [Name('msg')], None, None))]))
Module(None, Stmt([If([(And([Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('>=', Const(4))]), Compare(Subscript(Name('bits'), 'OP_APPLY', [UnarySub(Const(2))]), [('==', Const('from'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('value'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_init_translation_catalog'), [], None, None))]))
Module(None, Stmt([Class('ZipArchive', [Name('BaseArchive')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([If([(CallFunc(Name('is_naive'), [Name('obj')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('IPAddressField', [Name('CharField')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Discard(CallFunc(Name('check_programs'), [Const('xgettext')], None, None))]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'style'), 'HTTP_BAD_REQUEST'), [Name('msg')], None, None))]))
else :
Module(None, Stmt([Function(None, 'handle', ['self', 'fixture_labels', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('instance'), 'pk'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'lineno'), '+=', CallFunc(Getattr(Name('token_string'), 'count'), [Const('\n')], None, None))]))
@ stringfilter
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('key')], None, None), [('>', Name('MEMCACHE_MAX_KEY_LENGTH'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('data'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils.ipv6', [('is_valid_ipv6_address', None)], 0)]))
Module(None, Stmt([Assign([AssName('hextet', 'OP_ASSIGN')], CallFunc(Getattr(Name('ip_str'), 'split'), [Const('::')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ImproperlyConfigured'), [Const('Loader does not define a "load_template" callable template source loader')], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('MultiValueDict'), Name('self')], None, None), '__setitem__'), [Name('key'), List([Name('value')])], None, None))]))
Module(None, Stmt([Function(None, 'is_hidden', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Prints the DROP INDEX SQL statements for the given model module name(s).'))]))
Module(None, Stmt([Assign([AssName('quant', 'OP_ASSIGN')], Slice(Name('quant'), 'OP_APPLY', None, UnarySub(Const(1))))]))
@ register . filter ( expects_localtime = True , is_safe = False )
else :
Module(None, Stmt([Assign([AssName('l', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('tokens')], None, None))]))
Module(None, Stmt([Function(None, 'handle', ['self', 'args', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__delitem__', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Getattr(Getattr(Name('self'), '_wrapped'), '__dict__'))]))
Module(None, Stmt([Assign([AssName('repo_dir', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'dirname'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'dirname'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'abspath'), [Name('__file__')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'inner', ['self', 'args'], [], 4, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('link'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('temp_lib'), 'filters'), 'OP_ASSIGN', [Name('name')])], Subscript(Getattr(Name('lib'), 'filters'), 'OP_APPLY', [Name('name')]))]))
Module(None, Stmt([Function(None, 'utcoffset', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Field'), Name('self')], None, None), '__init__'), [], None, None))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('query', 'OP_ASSIGN')], CallFunc(Getattr(Name('query'), 'items'), [], None, None))]))
Module(None, Stmt([Assign([AssName('token', 'OP_ASSIGN')], CallFunc(Name('Token'), [Name('TOKEN_COMMENT'), Name('content')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Assign([AssName('StringIO', 'OP_ASSIGN')], Getattr(Name('io'), 'StringIO'))]))
Module(None, Stmt([Assign([Subscript(Name('attrs'), 'OP_ASSIGN', [Const('localized_fields')])], Name('localized_fields'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('stream'), 'unget'), [Slice(Name('chunk'), 'OP_APPLY', UnarySub(Name('rollback')), None)], None, None))]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], Mod((Const("Unclosed tag '%s'. Looking for one of: %s "), Tuple([Name('command'), CallFunc(Getattr(Const(', '), 'join'), [Name('parse_until')], None, None)]))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('sys'), 'exit'), [Const(1)], None, None))]))
else :
Module(None, Stmt([Assign([AssName('TB', 'OP_ASSIGN')], LeftShift((Const(1), Const(40))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'extend'), [CallFunc(Getattr(Getattr(Name('connection'), 'creation'), 'sql_indexes_for_model'), [Name('model'), Name('style')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('hfile', 'OP_ASSIGN')], CallFunc(Getattr(Name('msvcrt'), 'get_osfhandle'), [CallFunc(Name('_fd'), [Name('f')], None, None)], None, None))]))
Module(None, Stmt([For(AssName('attachment', 'OP_ASSIGN'), Getattr(Name('self'), 'attachments'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('loggers', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'get'), [Const('loggers'), Name('EMPTY_DICT')], None, None))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], Slice(CallFunc(Getattr(Name('token'), 'split_contents'), [], None, None), 'OP_APPLY', Const(1), None))]))
Module(None, Stmt([Assign([AssName('targets', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Getattr(Name('executor'), 'loader'), 'graph'), 'leaf_nodes'), [], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'asvar'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Assign([AssName('form', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'form'), [], None, Name('defaults')))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'timezone')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('salt', 'OP_ASSIGN')], CallFunc(Name('force_bytes'), [Name('salt')], None, None))]))
Module(None, Stmt([From('django.core.files.move', [('file_move_safe', None)], 0)]))
Module(None, Stmt([Import([('threading', None)])]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), '_archive'), 'read'), [Name('name')], None, None))]))
Module(None, Stmt([If([(Compare(Subscript(Name('params'), 'OP_APPLY', [Const(0)]), [('==', Const('context'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('msguniq_options', 'OP_ASSIGN')], List([Const('--to-code=utf-8')]))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([If([(Not(Name('chunk')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('ch'), [('==', Const('<'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('attrs'))]))
Module(None, Stmt([For(AssName('handler', 'OP_ASSIGN'), Name('handlers'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_default_manager'), 'db_manager'), [Name('db')], None, None), 'get_by_natural_key'), [], Name('field_value'), None))]))
Module(None, Stmt([Function(None, '_has_changed', ['self', 'initial', 'data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'run_shell'), [Keyword('shell', Subscript(Name('options'), 'OP_APPLY', [Const('interface')]))], None, None))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'closed')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'Z', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('domain_whitelist', 'OP_ASSIGN')], List([Const('localhost')]))]))
Module(None, Stmt([Function(None, 'localize', ['value', 'use_l10n'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'as_text', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('token'), 'contents'), 'split'), [], None, None))]))
Module(None, Stmt([For(AssName('key', 'OP_ASSIGN'), Name('keys'), Stmt([Pass()]), None)]))
self . object_name = 'CacheEntry'
Module(None, Stmt([Raise(CallFunc(Name('Resolver404'), [Dict([(Const('path'), Name('path'))])], None, None), None, None)]))
Module(None, Stmt([Assign([AssTuple([AssName('msgs', 'OP_ASSIGN'), AssName('errors', 'OP_ASSIGN'), AssName('status', 'OP_ASSIGN')])], CallFunc(Name('popen_wrapper'), [Name('args')], None, None))]))
Module(None, Stmt([Class('SimpleCookie', [Getattr(Name('http_cookies'), 'SimpleCookie')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('match'), 'group'), [Const(0)], None, None))]))
Module(None, Stmt([For(AssName('model', 'OP_ASSIGN'), Name('not_installed_models'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssTuple([AssName('key', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')])], CallFunc(Getattr(Name('match'), 'groups'), [], None, None))]))
if server_port != ( '443' if self . is_secure ( ) else '80' ) :
Module(None, Stmt([From('django.utils.safestring', [('mark_safe', None)], 0)]))
Module(None, Stmt([Assign([AssName('version', 'OP_ASSIGN')], CallFunc(Name('get_complete_version'), [Name('version')], None, None))]))
try :
Module(None, Stmt([If([(Compare(Name('value'), [('!=', Const(''))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("Cache table '%s' could not be created.\nThe error was: %s."), Tuple([Name('tablename'), CallFunc(Name('force_text'), [Name('e')], None, None)])))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('ctx'), 'update'), [CallFunc(Name('force_bytes'), [Name('value')], None, None)], None, None))]))
Module(None, Stmt([If([(Name('id_'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('params', 'OP_ASSIGN')], Slice(Name('params'), 'OP_APPLY', Const(1), None))]))
Module(None, Stmt([Import([('glob', None)])]))
Module(None, Stmt([Assign([AssName('_active', 'OP_ASSIGN')], CallFunc(Name('local'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('cls'), Name('k')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Getattr(Name('pending_references'), 'setdefault'), [Name('refto'), List(())], None, None), 'extend'), [Name('refs')], None, None))]))
elif options [ "socket" ] and not options [ "host" ] and not options [ "port" ] :
Module(None, Stmt([Assign([AssName('sites2', 'OP_ASSIGN')], CallFunc(Name('_findall'), [Name('s2'), CallFunc(Name('str'), [Add((Name('year'), Const(28)))], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('signature', 'OP_ASSIGN')], CallFunc(Name('base64_hmac'), [Add((Getattr(Name('self'), 'salt'), Const('signer'))), Name('value'), Getattr(Name('self'), 'key')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(CallFunc(Getattr(Name('re_camel_case'), 'sub'), [Const(' \\1'), Name('value')], None, None), 'strip'), [], None, None), 'lower'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('nodelist'), 'append'), [CallFunc(Getattr(Name('node'), 'render'), [Name('context')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('options', 'OP_ASSIGN'), AssName('args', 'OP_ASSIGN')])], CallFunc(Getattr(Name('parser'), 'parse_args'), [Slice(Name('argv'), 'OP_APPLY', Const(2), None)], None, None))]))
Module(None, Stmt([If([(Name('index_sql'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('warnings', None)])]))
except StandardError as e :
@ register . filter ( is_safe = True )
Module(None, Stmt([Assign([AssName('fname', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_key_to_file'), [Name('key'), Name('version')], None, None))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'fields', 'OP_ASSIGN')], Name('fields'))]))
except Exception :
Module(None, Stmt([Assign([AssName('use_threading', 'OP_ASSIGN')], Getattr(Getattr(Name('connection'), 'features'), 'test_db_allows_multiple_connections'))]))
Module(None, Stmt([If([(Compare(Name('tags'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('pickle', None)])]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'autoescape', 'OP_ASSIGN')], Name('autoescape'))]))
Module(None, Stmt([Assign([AssName('prev_opts', 'OP_ASSIGN')], ListComp(Subscript(CallFunc(Getattr(Name('x'), 'split'), [Const('=')], None, None), 'OP_APPLY', [Const(0)]), [ListCompFor(AssName('x', 'OP_ASSIGN'), Slice(Name('cwords'), 'OP_APPLY', Const(1), Sub((Name('cword'), Const(1)))), [])]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'domain'), [('==', Const('djangojs'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'backout'), 'append'), [Getattr(Name('self'), 'pointer')], None, None))]))
Module(None, Stmt([Assign([AssName('_serializers', 'OP_ASSIGN')], Name('serializers'))]))
Module(None, Stmt([Return(CallFunc(Name('decorator'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('tag', 'OP_ASSIGN')], Subscript(Name('bits'), 'OP_APPLY', [Const(1)]))]))
Module(None, Stmt([From('django.template.base', [('Context', None), ('FilterExpression', None), ('Lexer', None), ('Node', None), ('NodeList', None), ('Parser', None), ('RequestContext', None), ('Origin', None), ('StringOrigin', None), ('Template', None), ('TextNode', None), ('Token', None), ('TokenParser', None), ('Variable', None), ('VariableNode', None), ('constant_string', None), ('filter_raw_string', None)], 0)]))
Module(None, Stmt([Function(None, '_get_queryset', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('none_value', 'OP_ASSIGN')], Tuple([Const(0), Const('---')]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'var'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'origin', 'OP_ASSIGN')], Name('origin'))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('message'), Name('dict')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'valid_value', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Assign([AssName('val', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), '_cache'), 'get'), [Name('key')], None, None))]))
@ register . filter ( is_safe = True )
Module(None, Stmt([Assign([AssName('parser', 'OP_ASSIGN')], CallFunc(Name('CommandParser'), [Name('None'), Keyword('usage', Const('%(prog)s subcommand [options] [args]')), Keyword('add_help', Name('False'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('getattr'), [Getattr(Name('self'), '_caches'), Const('caches'), Dict(())], None, None), 'values'), [], None, None))]))
Module(None, Stmt([For(AssName('cat', 'OP_ASSIGN'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('categories')]), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(Yield(Const('# into your database.')))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'fixture_count', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Assign([AssTuple([AssName('main_value_pair', 'OP_ASSIGN'), AssName('params', 'OP_ASSIGN')])], CallFunc(Name('parse_header'), [Name('line')], None, None))]))
Module(None, Stmt([Function(None, 'get_fixed_timezone', ['offset'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('kw', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Name('k'), CallFunc(Name('int'), [Name('v')], None, None)]), [GenExprFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('six'), 'iteritems'), [Name('kw')], None, None), [GenExprIf(Compare(Name('v'), [('is not', Name('None'))]))])]))], None, None))]))
Module(None, Stmt([Return(Const('nd'))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([If([(Not(Name('field_name')), Stmt([Pass()]))], None)]))
@ stringfilter
try :
Module(None, Stmt([Return(CallFunc(Name('repr'), [CallFunc(Name('list'), [Name('self')], None, None)], None, None))]))
Module(None, Stmt([For(AssName('filepath', 'OP_ASSIGN'), CallFunc(Getattr(Name('self'), 'get_template_sources'), [Name('template_name'), Name('template_dirs')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '_read_limited', ['self', 'size'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('ch', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(Yield(Tuple([Name('field'), CallFunc(Name('list'), [CallFunc(Name('ValidationError'), [Name('errors')], None, None)], None, None)])))]))
Module(None, Stmt([Assign([AssName('comment', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'iriencode', ['value'], [], 0, None, Stmt([Pass()]))]))
else :
except ValueError :
Module(None, Stmt([For(AssName('name', 'OP_ASSIGN'), Name('filters'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('errors'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('limit_choices_to', 'OP_ASSIGN')], Getattr(Name('formfield'), 'limit_choices_to'))]))
Module(None, Stmt([Assign([AssName('exclude', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('exclude')], None, None))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'is_localized'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('app_list_value'), 'append'), [Name('model')], None, None))]))
Module(None, Stmt([Assign([AssName('statements', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('connection'), 'ops'), 'sequence_reset_sql'), [Getattr(Name('self'), 'style'), Name('models')], None, None))]))
from django . core . exceptions import ImproperlyConfigured
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Mod((Const("No fixture named '%s' found."), Name('fixture_name')))], None, None))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('media', 'OP_ASSIGN')], Add((Name('media'), Getattr(Getattr(Name('field'), 'widget'), 'media'))))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], Add((Slice(Name('result'), 'OP_APPLY', None, Name('start')), List([Name('inner')]))))]))
@ register . filter ( is_safe = True )
Module(None, Stmt([If([(CallFunc(Getattr(Name('options'), 'get'), [Const('no_location')], None, None), Stmt([Pass()]))], None)]))
@ register . filter ( is_safe = True )
Module(None, Stmt([From('pprint', [('pformat', None)], 0)]))
Module(None, Stmt([Assign([AssName('counters', 'OP_ASSIGN')], Mul((List([Const(0)]), CallFunc(Name('len'), [Name('handlers')], None, None))))]))
Module(None, Stmt([Return(CallFunc(Name('datetime'), [], Name('kw'), None))]))
Module(None, Stmt([Return(CallFunc(Name('iri_to_uri'), [Name('location')], None, None))]))
Module(None, Stmt([Assign([AssName('new_name', 'OP_ASSIGN')], Mod((Const('number_%s'), Name('new_name'))))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_post', 'OP_ASSIGN')], Name('post'))]))
Module(None, Stmt([Assign([AssName('language_code', 'OP_ASSIGN')], CallFunc(Name('get_language'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Mod((Const('SELECT COUNT(*) FROM %s'), Name('table')))], None, None))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
except ( OverflowError , ValueError ) as exc :
Module(None, Stmt([If([(CallFunc(Getattr(Name('template'), 'startswith'), [Const('file://')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils._os', [('safe_join', None)], 0)]))
Module(None, Stmt([From('django.utils.safestring', [('mark_safe', None)], 0)]))
Module(None, Stmt([Return(Subscript(Getattr(Name('self'), '_app_dict'), 'OP_APPLY', [Name('language_code')]))]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], CallFunc(Name('property'), [Name('_get_name'), Name('_set_name')], None, None))]))
Module(None, Stmt([Assign([AssName('config', 'OP_ASSIGN')], Getattr(Name('self'), 'config'))]))
Module(None, Stmt([Class('MemcachedCache', [Name('BaseMemcachedCache')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('_empty_value', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('fill_to', 'OP_ASSIGN')], Const(8))]))
Module(None, Stmt([From('django.utils', [('translation', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('all_models'), 'extend'), [CallFunc(Getattr(Name('router'), 'get_migratable_models'), [Name('app_config'), Name('database'), Keyword('include_auto_created', Name('True'))], None, None)], None, None))]))
Module(None, Stmt([Class('BaseFormSet', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.http', [('Http404', None)], 0)]))
Module(None, Stmt([AugAssign(Name('i'), '+=', Const(1))]))
Module(None, Stmt([Function(None, '_reset_dicts', ['self', 'value'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core', [('checks', None)], 0)]))
Module(None, Stmt([From('django.core.management.color', [('color_style', None)], 0)]))
Module(None, Stmt([Assign([AssName('html_class_attr', 'OP_ASSIGN')], Mod((Const(' class="%s"'), Name('css_classes'))))]))
Module(None, Stmt([Return(CallFunc(CallFunc(Name('getattr'), [Name('self'), Name('_assertCountEqual')], None, None), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([If([(Compare(Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('feed_copyright')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'top', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('append', 'OP_ASSIGN')], Name('complain'))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('s'), Getattr(Name('six'), 'text_type')], None, None), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const('ModelForm has no model class specified.')], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Name('digest'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Name('str'), [CallFunc(Name('dict'), [CallFunc(Getattr(Name('self'), 'items'), [], None, None)], None, None)], None, None))]))
Module(None, Stmt([From('django.utils.timezone', [('template_localtime', None)], 0)]))
@ register . filter ( is_safe = False )
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Return(Name('ret'))]))
Module(None, Stmt([For(AssTuple([AssName('func', 'OP_ASSIGN'), AssName('unused', 'OP_ASSIGN')]), Getattr(Name('filter_expr'), 'filters'), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([If([(And([Compare(Getattr(Name('self'), 'active_writers'), [('==', Const(0))]), Compare(Getattr(Name('self'), 'waiting_writers'), [('==', Const(0))]), Compare(Getattr(Name('self'), 'active_readers'), [('==', Const(0))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Mod((CallFunc(Name('ungettext'), [Const('Please submit %d or fewer forms.'), Const('Please submit %d or fewer forms.'), Getattr(Name('self'), 'max_num')], None, None), Getattr(Name('self'), 'max_num'))), Keyword('code', Const('too_many_forms'))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('sys'), 'stdout'), 'write'), [Add((CallFunc(Getattr(Name('self'), 'main_help_text'), [], None, None), Const('\n')))], None, None))]))
else :
Module(None, Stmt([If([(And([Name('run_syncdb'), Getattr(Getattr(Name('executor'), 'loader'), 'unmigrated_apps')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Getattr(Name('value'), 'with_traceback'), [Name('tb')], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Name('warn_msg'), Name('TranslatorCommentWarning')], None, None))]))
Module(None, Stmt([Return(Name('nodes'))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('end'), Name('unicode')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([AugAssign(Name('field_desc'), '+=', Add((Const('  # '), CallFunc(Getattr(Const(' '), 'join'), [Name('comment_notes')], None, None))))]))
Module(None, Stmt([If([(Compare(Getattr(Name('request'), 'method'), [('==', Const('HEAD'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'base', 'OP_ASSIGN')], Name('base'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'regex'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('logger'), 'setLevel'), [CallFunc(Name('_checkLevel'), [Name('level')], None, None)], None, None))]))
except StandardError as e :
Module(None, Stmt([Assign([AssName('opt_label', 'OP_ASSIGN')], Subscript(Name('option'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Discard(CallFunc(Name('handle_default_options'), [Name('options')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('Module_six_moves_urllib_error'), '_moved_attributes', 'OP_ASSIGN')], Name('_urllib_error_moved_attributes'))]))
Module(None, Stmt([Return(Name('arg'))]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], Const('Unknown field(s) (%s) specified for %s'))]))
Module(None, Stmt([Function(None, 'execute_from_command_line', ['argv'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('logger', 'OP_ASSIGN')], CallFunc(Getattr(Name('logging'), 'getLogger'), [Name('name')], None, None))]))
Module(None, Stmt([Assign([AssName('in_tag', 'OP_ASSIGN')], Name('False'))]))
else :
Module(None, Stmt([Assign([AssName('renderer', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('renderer'), Name('None')], None, None))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Assign([AssName('p', 'OP_ASSIGN')], CallFunc(Getattr(Name('language'), 'find'), [Const('-')], None, None))]))
Module(None, Stmt([From('django.core', [('mail', None)], 0)]))
Module(None, Stmt([If([(Compare(Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('subtitle')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('opts', 'OP_ASSIGN')], Getattr(Name('model'), '_meta'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'extend'), [CallFunc(Getattr(Getattr(Name('connection'), 'creation'), 'sql_destroy_indexes_for_model'), [Name('model'), Name('style')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'widthratio', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Getattr(Name('six'), 'PY2'), Compare(Name('value'), [('>', Getattr(Name('sys'), 'maxint'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Return(Name('val'))]))
Module(None, Stmt([Discard(CallFunc(Name('run'), [Getattr(Name('self'), 'addr'), CallFunc(Name('int'), [Getattr(Name('self'), 'port')], None, None), Name('handler'), Keyword('ipv6', Getattr(Name('self'), 'use_ipv6')), Keyword('threading', Name('threading'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Const('\n'), 'join'), [Name('lines')], None, None)], None, None))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([If([(And([Name('dirname'), Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('dirname')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'locale_paths', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(And([Compare(Name('protocol'), [('!=', Const('both'))]), Name('unpack_ipv4')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'takes_context'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'bad_cookies', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))]))
Module(None, Stmt([Assign([AssName('compile_func', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'tags'), 'OP_APPLY', [Name('command')]))]))
Module(None, Stmt([Assign([AssName('bit', 'OP_ASSIGN')], CallFunc(Getattr(Const(' '), 'join'), [Name('trans_bit')], None, None))]))
Module(None, Stmt([Return(Name('self'))]))
Module(None, Stmt([Return(Subscript(Name('_translations'), 'OP_APPLY', [Name('language')]))]))
Module(None, Stmt([Function(None, 'clean', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('locale_dir', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('uri'), Subscript(Name('item'), 'OP_APPLY', [Const('author_link')])], None, None))]))
Module(None, Stmt([Function(None, 'usage', ['self', 'subcommand'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Or([Compare(Name('value'), [('is', Name('True'))]), Compare(Name('value'), [('is', Name('False'))]), Compare(Name('value'), [('is', Name('None'))]), Compare(Name('value'), [('==', Const(''))])])), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('code', 'OP_ASSIGN')], Const('min_length'))]))
Module(None, Stmt([From('functools', [('wraps', None)], 0)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('other_dict'), Name('MultiValueDict')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Name('options')], None, None))]))
Module(None, Stmt([Function(None, 'urlquote', ['url', 'safe'], [Const('/')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('split', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Compare(Name('default'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('src_data', 'OP_ASSIGN')], CallFunc(Getattr(Name('fp'), 'read'), [], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Import([('logging', None)])]))
elif field in self . fields :
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Return(Name('template'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('debug'), 'technical_500_response'), [Name('request')], Name('exc_info'), None))]))
Module(None, Stmt([From('django.db', [('connections', None), ('transaction', None), ('router', None), ('DatabaseError', None)], 0)]))
except Exception :
Module(None, Stmt([Assign([AssName('supported', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Getattr(Name('s'), 'replace'), [Const('</'), Const('<\\/')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('trans_real'), '_default', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Name('deactivate'), [], None, None))]))
Module(None, Stmt([Assign([AssName('attrs', 'OP_ASSIGN')], List([Const('__doc__'), Const('__name__')]))]))
Module(None, Stmt([If([(Name('check_path'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Getattr(Getattr(Name('self'), 'paginator'), 'count'))]))
Module(None, Stmt([Class('SpacelessNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Name('m'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('to_delete', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('OptionParser usage for Django management commands is deprecated, use ArgumentParser instead'), Name('RemovedInDjango20Warning')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'port', 'OP_ASSIGN')], Name('DEFAULT_PORT'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('args'), 'append'), [CallFunc(Getattr(Name('parser'), 'compile_filter'), [Name('bit')], None, None)], None, None))]))
url = 'mailto:%s@%s' % ( local , domain )
Module(None, Stmt([Discard(CallFunc(Getattr(Name('final_output'), 'extend'), [CallFunc(Getattr(Getattr(Name('connection'), 'creation'), 'sql_for_pending_references'), [Name('refto'), Name('style'), Name('pending_references')], None, None)], None, None))]))
Module(None, Stmt([If([(Or([Not(Name('var')), Compare(Const(' '), [('in', Name('var'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('json', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'filters'), 'update'), [Getattr(Name('lib'), 'filters')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('root', 'OP_ASSIGN')])], Name('nonlocal_root'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_key'), [Name('key')], None, None))]))
Module(None, Stmt([If([(Name('unpack'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'%s' received too many positional arguments"), Name('name')))], None, None), None, None)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('type'), [Name('result')], None, None), [('in', Tuple([Name('ConvertingDict'), Name('ConvertingList'), Name('ConvertingTuple')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('match'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('roots', 'OP_ASSIGN')], Bitand([CallFunc(Name('set'), [CallFunc(Name('dir'), [Name('cls')], None, None)], None, None), CallFunc(Name('set'), [Name('convert')], None, None)]))]))
Module(None, Stmt([Assign([AssName('r', 'OP_ASSIGN')], Slice(Name('r'), 'OP_APPLY', None, Const(12)))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssAttr(Name('obj'), 'attrs', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'attrs'), 'copy'), [], None, None))]))
elif cls . _delegate_bytes :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'new_objects', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Name('message')], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('cls'), '_delegate_bytes', 'OP_ASSIGN')], Compare(Name('bytes'), [('in', Name('resultclasses'))]))]))
Module(None, Stmt([Class('OrderedSet', [Name('object')], None, Stmt([Pass()]), None)]))
elif hasattr ( query , 'items' ) :
Module(None, Stmt([Assign([AssName('converter', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'value_converters'), 'get'), [Name('prefix'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssName('fixture', 'OP_ASSIGN')], CallFunc(Name('open_method'), [Name('fixture_file'), Name('mode')], None, None))]))
Module(None, Stmt([Assert(Compare(Subscript(Name('version'), 'OP_APPLY', [Const(3)]), [('in', Tuple([Const('alpha'), Const('beta'), Const('rc'), Const('final')]))]), None)]))
Module(None, Stmt([Assign([AssName('indexes', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([From('django.core.serializers', [('base', None)], 0)]))
Module(None, Stmt([Class('Origin', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Mod((Name('normal_row'), Dict([(Const('errors'), CallFunc(Name('force_text'), [Name('bf_errors')], None, None)), (Const('label'), CallFunc(Name('force_text'), [Name('label')], None, None)), (Const('field'), CallFunc(Getattr(Name('six'), 'text_type'), [Name('bf')], None, None)), (Const('help_text'), Name('help_text')), (Const('html_class_attr'), Name('html_class_attr')), (Const('field_name'), Getattr(Name('bf'), 'html_name'))])))], None, None))]))
Module(None, Stmt([Class('Serializer', [Getattr(Name('base'), 'Serializer')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('int2byte', 'OP_ASSIGN')], CallFunc(Getattr(Name('operator'), 'methodcaller'), [Const('to_bytes'), Const(1), Const('big')], None, None))]))
Module(None, Stmt([For(AssName('node', 'OP_ASSIGN'), Getattr(Name('self'), 'nodelist_empty'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('_'), [Const('AM')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'get'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Function(None, 'urlize', ['text', 'trim_url_limit', 'nofollow', 'autoescape'], [Name('None'), Name('False'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', '_subtype', 'boundary', '_subparts', 'encoding', '_params'], [Const('mixed'), Name('None'), Name('None'), Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Const(''), 'join'), [GenExpr(GenExprInner(CallFunc(Getattr(Name('self'), 'make_bytes'), [Name('chunk')], None, None), [GenExprFor(AssName('chunk', 'OP_ASSIGN'), Name('value'), [])]))], None, None))]))
try :
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_prepare_data'), [Name('data')], None, None))]))
Module(None, Stmt([Assign([AssName('boundarystream', 'OP_ASSIGN')], CallFunc(Name('InterBoundaryIter'), [Getattr(Name('self'), '_stream'), Getattr(Name('self'), '_separator')], None, None))]))
Module(None, Stmt([Assign([AssName('nodelist', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'parse'), [Tuple([Const('endblock')])], None, None))]))
else :
Module(None, Stmt([Assign([Subscript(Name('data'), 'OP_ASSIGN', [Getattr(Name('f'), 'name')])], List(()))]))
Module(None, Stmt([Assign([AssTuple([AssName('params', 'OP_ASSIGN'), AssName('varargs', 'OP_ASSIGN'), AssName('varkw', 'OP_ASSIGN'), AssName('defaults', 'OP_ASSIGN')])], CallFunc(Name('getargspec'), [Name('func')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('MultiValueDict'), Name('self')], None, None), '__setitem__'), [Name('key'), Name('list_')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('date_format'), [Name('value'), Keyword('use_l10n', Name('use_l10n'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [Name('result')], None, None))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'instance', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Getattr(Name('self'), 'fk'), 'rel'), 'to'), [], None, None))]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('week_number', 'OP_ASSIGN')], Name('None'))]))
else :
Module(None, Stmt([If([(Compare(Name('initial'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'use_ipv6', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('use_ipv6')], None, None))]))
Module(None, Stmt([From('django.utils.encoding', [('force_bytes', None)], 0)]))
Module(None, Stmt([Class('ConvertingList', [Name('list')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of SyndicationFeed must provide a write() method')], None, None), None, None)]))
Module(None, Stmt([Return(Name('dec'))]))
Module(None, Stmt([Function(None, 'gettext_noop', ['message'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('BaseModelFormSet'), Name('self')], None, None), 'add_fields'), [Name('form'), Name('index')], None, None))]))
Module(None, Stmt([Class('Command', [Name('AppCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_client', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), '_lib'), 'Client'), [Getattr(Name('self'), '_servers')], None, None))]))
Module(None, Stmt([Function(None, 'activate', ['timezone'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'append'), [CallFunc(Getattr(Name('self'), 'create_token'), [Name('last_bit'), Tuple([Name('upto'), Add((Name('upto'), CallFunc(Name('len'), [Name('last_bit')], None, None)))]), Name('False')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('smart_unicode', 'OP_ASSIGN')], Name('smart_text'))]))
Module(None, Stmt([If([(Compare(Name('template'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
elif args [ 1 ] [ 0 ] == '1' :
from django . core . exceptions import MiddlewareNotUsed , PermissionDenied , SuspiciousOperation
Module(None, Stmt([Function(None, 'writeString', ['self', 'encoding'], [], 0, None, Stmt([Pass()]))]))
@ register . filter ( is_safe = False )
Module(None, Stmt([Assign([AssName('clean', 'OP_ASSIGN')], Lambda(['self', 'x'], [], 0, CallFunc(Name('len'), [Name('x')], None, None)))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--settings'), Keyword('help', Const('The Python path to a settings module, e.g. "myproject.settings.main". If this isn\'t provided, the DJANGO_SETTINGS_MODULE environment variable will be used.'))], None, None))]))
Module(None, Stmt([Function(None, 'random', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssTuple([AssName('start', 'OP_ASSIGN'), AssName('end', 'OP_ASSIGN')])], CallFunc(Getattr(Name('match'), 'span'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('basedirs'), 'extend'), [Getattr(Name('settings'), 'LOCALE_PATHS')], None, None))]))
Module(None, Stmt([Assign([AssName('content', 'OP_ASSIGN')], CallFunc(Getattr(Slice(Name('token_string'), 'OP_APPLY', Const(2), UnarySub(Const(2))), 'strip'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'check'), [Keyword('app_configs', Name('app_configs')), Keyword('display_num_errors', Name('display_num_errors'))], None, None))]))
Module(None, Stmt([If([(And([Name('bits'), Not(Name('kwarg_format'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.translation', [('ugettext_lazy', '_'), ('ungettext_lazy', None)], 0)]))
@ classmethod
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('baseconv'), 'base62'), 'encode'), [CallFunc(Name('int'), [CallFunc(Getattr(Name('time'), 'time'), [], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('cache_key', 'OP_ASSIGN')], Tuple([Name('format_type'), Name('lang')]))]))
Module(None, Stmt([Function(None, 'get_key_func', ['key_func'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('HttpResponseForbidden', [Name('HttpResponse')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], Slice(Name('subject'), 'OP_APPLY', Name('p'), Name('i')))]))
Module(None, Stmt([Assign([AssName('method', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('method')], None, None))]))
Module(None, Stmt([Class('EscapeText', [Getattr(Name('six'), 'text_type'), Name('EscapeData')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Mod((Name('truncate'), Dict([(Const('truncated_text'), Name('text'))]))))]))
Module(None, Stmt([If([(Compare(Name('subcommand'), [('==', Const('help'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('config'), 'OP_ASSIGN', [Const('mailhost')])], CallFunc(Getattr(Name('self'), 'as_tuple'), [Subscript(Name('config'), 'OP_APPLY', [Const('mailhost')])], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('type'), [Name('self')], None, None), '__bool__'), [Name('self')], None, None))]))
Module(None, Stmt([Function(None, 'get_many', ['self', 'keys', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Name('TextInput'))]))
except Exception :
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'to_python'), [Name('value')], None, None))]))
Module(None, Stmt([If([(Mod((Name('i'), Const(2))), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('force_str'), [Mod((Const("<Text Node: '%s'>"), Slice(Getattr(Name('self'), 's'), 'OP_APPLY', None, Const(25)))), Const('ascii'), Keyword('errors', Const('replace'))], None, None))]))
Module(None, Stmt([Function(None, 'handle_noargs', ['self', 'options'], [], 8, None, Stmt([Pass()]))]))
nodelist_true = parser . parse ( ( 'else' , 'endifchanged' ) )
Module(None, Stmt([Assign([AssName('hfile', 'OP_ASSIGN')], CallFunc(Getattr(Name('msvcrt'), 'get_osfhandle'), [CallFunc(Name('_fd'), [Name('f')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('daemonize', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('error_msg', 'OP_ASSIGN')], Mod((Const("Invalid template name in 'extends' tag: %r."), Name('parent'))))]))
Module(None, Stmt([If([(Compare(Name('remaining'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('context'), 'render_context'), 'OP_ASSIGN', [Name('self')])], CallFunc(Name('itertools_cycle'), [Getattr(Name('self'), 'cyclevars')], None, None))]))
elif len ( fks_to_parent ) == 0 :
try :
Module(None, Stmt([For(AssName('dict_', 'OP_ASSIGN'), Getattr(Name('self'), 'dicts'), Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils.translation', [('trans_real', None)], 0)]))
Module(None, Stmt([Function(None, 'compress_string', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('ViewDoesNotExist'), [Mod((Const("Could not import '%s'. Parent module %s does not exist."), Tuple([Name('lookup_view'), Name('mod_name')])))], None, None), None, None)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('errors happened while running msgmerge\n%s'), Name('errors')))], None, None), None, None)]))
Module(None, Stmt([Raise(CallFunc(Name('AttributeError'), [Getattr(Name('self'), 'warning')], None, None), None, None)]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), '_post', 'OP_ASSIGN'), AssAttr(Name('self'), '_files', 'OP_ASSIGN')])], Tuple([CallFunc(Name('QueryDict'), [Const(''), Keyword('encoding', Getattr(Name('self'), '_encoding'))], None, None), CallFunc(Name('MultiValueDict'), [], None, None)]))]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None), ('iri_to_uri', None)], 0)]))
Module(None, Stmt([Assign([AssName('i', 'OP_ASSIGN')], CallFunc(Getattr(Name('open_tags'), 'index'), [Name('tagname')], None, None))]))
try :
Module(None, Stmt([Assign([AssName('key_salt', 'OP_ASSIGN')], CallFunc(Name('force_bytes'), [Name('key_salt')], None, None))]))
Module(None, Stmt([If([(And([Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(2))]), Not(Name('fixture_files_in_dir'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Getattr(Name('s'), 'replace'), [Const('\n'), Const('\\n')], None, None))]))
Module(None, Stmt([From('django.template.context', [('BaseContext', None), ('Context', None), ('RequestContext', None), ('ContextPopException', None)], 0)]))
Module(None, Stmt([Return(Getattr(Name('self'), 'connection'))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('Truncator'), [Name('value')], None, None), 'chars'), [Name('length')], None, None))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([From('django.utils.encoding', [('force_bytes', None)], 0)]))
try :
tzinfo = timezone . get_current_timezone ( ) if settings . USE_TZ else None
Module(None, Stmt([Import([('stat', None)])]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('key_prefix', 'OP_ASSIGN')], Getattr(Name('settings'), 'CACHE_MIDDLEWARE_KEY_PREFIX'))]))
Module(None, Stmt([Assign([AssName('offset', 'OP_ASSIGN')], Add((Mul((Const(60), CallFunc(Name('int'), [Slice(Name('tzinfo'), 'OP_APPLY', Const(1), Const(3))], None, None))), Name('offset_mins'))))]))
Module(None, Stmt([Assign([AssName('has_new_option', 'OP_ASSIGN')], CallFunc(Name('hasattr'), [Name('self'), Const('requires_system_checks')], None, None))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stream'), 'write'), [Mul((Const('-'), Const(79)))], None, None))]))
else :
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'fail_silently')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('val', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Class('SubWidget', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('extra_files', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([For(AssName('filename', 'OP_ASSIGN'), CallFunc(Name('gen_filenames'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([Subscript(Name('data'), 'OP_ASSIGN', [Getattr(Name('f'), 'name')])], CallFunc(Name('list'), [CallFunc(Getattr(Name('qs'), 'values_list'), [Const('pk'), Keyword('flat', Name('True'))], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), '_exit'), [Const(1)], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'%s' did not receive value(s) for the argument(s): %s"), Tuple([Name('name'), CallFunc(Getattr(Const(', '), 'join'), [GenExpr(GenExprInner(Mod((Const("'%s'"), Name('p'))), [GenExprFor(AssName('p', 'OP_ASSIGN'), Name('unhandled_params'), [])]))], None, None)])))], None, None), None, None)]))
except ImportError :
Module(None, Stmt([Assign([AssName('user_settings', 'OP_ASSIGN')], CallFunc(Name('module_to_dict'), [Getattr(Name('settings'), '_wrapped')], None, None))]))
Module(None, Stmt([Assign([AssName('params', 'OP_ASSIGN')], Dict([(Const('datetime'), Name('value')), (Const('current_timezone'), Name('current_timezone'))]))]))
Module(None, Stmt([Function(None, 'bound_data', ['self', 'data', 'initial'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([From('django.utils.encoding', [('python_2_unicode_compatible', None)], 0)]))
Module(None, Stmt([Assign([AssName('__str__', 'OP_ASSIGN')], Name('serialize_headers'))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('datetime_safe'), 'new_date'), [Name('value')], None, None))]))
Module(None, Stmt([If([(Name('only_django'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('guid'), Subscript(Name('item'), 'OP_APPLY', [Const('unique_id')]), Name('guid_attrs')], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Function(None, 'do_ifequal', ['parser', 'token', 'negate'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('first_select', 'OP_ASSIGN'), CallFunc(Name('_parse_date_fmt'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('extracted'), 'close'), [], None, None))]))
Module(None, Stmt([If([(Compare(Name('level'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Raise(CallFunc(Name('UnrecognizedArchiveFormat'), [Mod((Const('Path not a recognized archive format: %s'), Name('filename')))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'skip_past', ['self', 'endtag'], [], 0, None, Stmt([Pass()]))]))
except ValidationError as e :
Module(None, Stmt([Function(None, '__contains__', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'initial', 'OP_ASSIGN')], Name('initial'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'error_class', 'OP_ASSIGN')], Name('error_class'))]))
Module(None, Stmt([Assign([AssName('re_escaped', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('\\\\(.)')], None, None))]))
Module(None, Stmt([If([(Compare(Name('p'), [('>=', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('incomment', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Return(CallFunc(Name('bytes'), [CallFunc(Name('func'), [], Getattr(Name('self'), '__args'), Getattr(Name('self'), '__kw'))], None, None))]))
try :
Module(None, Stmt([Assign([AssName('sentinal', 'OP_ASSIGN')], Add((Subscript(Name('bit'), 'OP_APPLY', [Const(2)]), Const(')'))))]))
Module(None, Stmt([Class('PyLibMCCache', [Name('BaseMemcachedCache')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([From('UserList', [('UserList', None)], 0)]))
Module(None, Stmt([Class('Paginator', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([If([(Compare(Name('end'), [('not in', Tuple([Const('>'), Const('/>')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('ser_fmt', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('binary_type', 'OP_ASSIGN')], Name('str'))]))
Module(None, Stmt([Assign([AssName('last', 'OP_ASSIGN')], Add((Name('pos'), Const(1))))]))
Module(None, Stmt([From('django.core.management.color', [('no_style', None)], 0)]))
Module(None, Stmt([Function(None, 'add_blocks', ['self', 'blocks'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_stream', 'OP_ASSIGN')], CallFunc(Name('LimitedStream'), [Subscript(Getattr(Name('self'), 'environ'), 'OP_APPLY', [Const('wsgi.input')]), Name('content_length')], None, None))]))
Module(None, Stmt([With(CallFunc(Name('open'), [Getattr(Name('writer'), 'path'), Const('wb')], None, None), AssName('fh', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('outdict', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'check'), [Keyword('app_configs', Name('app_configs')), Keyword('tags', Name('tags')), Keyword('display_num_errors', Name('True'))], None, None))]))
Module(None, Stmt([Assign([AssName('current', 'OP_ASSIGN')], CallFunc(Name('current'), [], None, None))]))
Module(None, Stmt([If([(And([Not(Name('changes')), Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(1))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Or([Compare(Getattr(Name('self'), 'selected_fields'), [('is', Name('None'))]), Compare(Slice(Getattr(Name('field'), 'attname'), 'OP_APPLY', None, UnarySub(Const(3))), [('in', Getattr(Name('self'), 'selected_fields'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([While(Compare(Name('t'), [('>', Const(0))]), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('ManagementForm'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('error', 'OP_ASSIGN')], Dict([(Or([Name('field'), Name('NON_FIELD_ERRORS')]), Getattr(Name('error'), 'error_list'))]))]))
Module(None, Stmt([Assign([AssTuple([AssName('ch2', 'OP_ASSIGN'), AssName('escaped', 'OP_ASSIGN')])], CallFunc(Name('next'), [Name('input_iter')], None, None))]))
Module(None, Stmt([If([(Name('parse_until'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('error_message'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'attrs', 'OP_ASSIGN')], Or([Name('attrs'), Dict(())]))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssAttr(Name('FormSet'), 'model', 'OP_ASSIGN')], Name('model'))]))
Module(None, Stmt([Import([('hashlib', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [Name('exc_type'), Name('exc_value'), Subscript(CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), 'OP_APPLY', [Const(2)])], None, None))]))
except ValueError :
Module(None, Stmt([Return(Const(0))]))
Module(None, Stmt([Function(None, '_load_post_and_files', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('DEFAULT_CHUNK_SIZE', 'OP_ASSIGN')], Mul((Const(64), Power((Const(2), Const(10))))))]))
Module(None, Stmt([Return(CallFunc(Name('set'), [CallFunc(Name('chain'), [], ListComp(Getattr(Name('check'), 'tags'), [ListCompFor(AssName('check', 'OP_ASSIGN'), Getattr(Name('self'), 'registered_checks'), [ListCompIf(CallFunc(Name('hasattr'), [Name('check'), Const('tags')], None, None))])]), None)], None, None))]))
Module(None, Stmt([Function(None, '__enter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
@ register . filter ( expects_localtime = True , is_safe = False )
Module(None, Stmt([From('django.utils.formats', [('localize', None)], 0)]))
Module(None, Stmt([Assign([AssName('default_validators', 'OP_ASSIGN')], List([Getattr(Name('validators'), 'validate_ipv4_address')]))]))
Module(None, Stmt([If([(Compare(Name('pathext'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Function(None, 'dictConfig', ['config'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'file'), 'seek'), [Const(0)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('Module_six_moves_urllib_parse'), Getattr(Name('attr'), 'name'), Name('attr')], None, None))]))
Module(None, Stmt([Assign([AssName('readlines', 'OP_ASSIGN')], CallFunc(Name('property'), [Lambda(['self'], [], 0, Getattr(Getattr(Name('self'), 'file'), 'readlines'))], None, None))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('token'), 'contents'), 'split'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'connection_reset', 'OP_ASSIGN')], Name('connection_reset'))]))
Module(None, Stmt([Assign([AssName('ISO_INPUT_FORMATS', 'OP_ASSIGN')], Dict([(Const('DATE_INPUT_FORMATS'), Tuple([Const('%Y-%m-%d')])), (Const('TIME_INPUT_FORMATS'), Tuple([Const('%H:%M:%S'), Const('%H:%M:%S.%f'), Const('%H:%M')])), (Const('DATETIME_INPUT_FORMATS'), Tuple([Const('%Y-%m-%d %H:%M:%S'), Const('%Y-%m-%d %H:%M:%S.%f'), Const('%Y-%m-%d %H:%M'), Const('%Y-%m-%d')]))]))]))
Module(None, Stmt([Class('_OFFSET', [Name('Structure')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('base_url'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'tag'), [Name('name'), Name('func')], None, None))]))
Module(None, Stmt([Printnl([Mod((Const('Running pre-migrate handlers for application %s'), Getattr(Name('app_config'), 'label')))], None)]))
Module(None, Stmt([From('django.db', [('models', None)], 0)]))
Module(None, Stmt([If([(And([CallFunc(Name('hasattr'), [Name('value'), Const('__iter__')], None, None), Not(CallFunc(Name('isinstance'), [Name('value'), Tuple([Name('bytes'), Getattr(Name('six'), 'string_types')])], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Subscript(Name('kw'), 'OP_APPLY', [Const('microsecond')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('pos', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Name('name'), 'lower'), [], None, None), [('in', Tuple([Const('from'), Const('to')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [Name('message')], None, None))]))
Module(None, Stmt([If([(Or([Compare(Getattr(Name('self'), 'selected_fields'), [('is', Name('None'))]), Compare(Getattr(Name('field'), 'attname'), [('in', Getattr(Name('self'), 'selected_fields'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Subscript(Name('options'), 'OP_APPLY', [Const('pidfile')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'lookups', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('field_value', 'OP_ASSIGN')], CallFunc(Name('smart_text'), [Name('field_value'), CallFunc(Getattr(Name('options'), 'get'), [Const('encoding'), Getattr(Name('settings'), 'DEFAULT_CHARSET')], None, None), Keyword('strings_only', Name('True'))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('settings'), 'configure'), [], None, None))]))
else :
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('sys'), 'platform'), 'startswith'), [Const('java')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([While(Compare(Name('x'), [('>', Const(0))]), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_dimensions_cache', 'OP_ASSIGN')], CallFunc(Name('get_image_dimensions'), [Name('self'), Keyword('close', Name('close'))], None, None))]))
elif not callable ( formfield_callback ) :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'lookups', 'OP_ASSIGN')], CallFunc(Name('tuple'), [CallFunc(Getattr(Name('var'), 'split'), [Name('VARIABLE_ATTRIBUTE_SEPARATOR')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('child_loggers', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Name('match'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('arg'), [('<', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Function(None, 'write', ['self', 'content'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'handle_merge'), [Name('loader'), Name('conflicts')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('bytes'), [Name('value')], None, None))]))
return quote ( force_bytes ( iri ) , safe = b"/#%[]=:;$&()+,!?*@'~" )
Module(None, Stmt([Function(None, '_create_message', ['self', 'msg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('module_has_submodule'), [Getattr(Name('app_config'), 'module'), Const('management')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Const(','), [('not in', Name('arg'))]), Stmt([Pass()]))], None)]))
else :
except ImportError :
else :
Module(None, Stmt([If([(And([Compare(Name('i'), [('>=', CallFunc(Getattr(Name('self'), 'initial_form_count'), [], None, None))]), Compare(Name('i'), [('>=', Getattr(Name('self'), 'min_num'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('source'), Name('Group')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_create_alternatives', ['self', 'msg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'template', 'OP_ASSIGN')], Name('template'))]))
Module(None, Stmt([Assign([AssName('stamp', 'OP_ASSIGN')], CallFunc(Getattr(Name('time'), 'mktime'), [Name('tt')], None, None))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Getattr(Name('token'), 'split_contents'), [], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Getattr(Name('os'), 'environ'), 'get'), [Const('RUN_MAIN')], None, None), [('==', Const('true'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('initial'))]))
Module(None, Stmt([While(Name('True'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('attrs'), 'pop'), [Name('key')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('callback', 'OP_ASSIGN'), AssName('param_dict', 'OP_ASSIGN')])], CallFunc(Getattr(Name('resolver'), 'resolve_error_handler'), [Const(500)], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Unable to configure handler %r: %s'), Tuple([Name('name'), Name('e')])))], None, None), None, None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('value'), 'replace'), [Keyword('tzinfo', Name('timezone'))], None, None))]))
Module(None, Stmt([Import([('smtplib', None)])]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'remaining'), '-=', CallFunc(Name('len'), [Name('result')], None, None))]))
except ImportError :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('final_output'), 'extend'), [Name('alter_sql')], None, None))]))
Module(None, Stmt([Assign([AssName('var_obj', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([For(AssName('ext', 'OP_ASSIGN'), Name('pathext'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('new_class', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('ModelFormMetaclass'), Name('mcs')], None, None), '__new__'), [Name('mcs'), Name('name'), Name('bases'), Name('attrs')], None, None))]))
Module(None, Stmt([Assign([AssName('doy', 'OP_ASSIGN')], Add((Subscript(Getattr(Name('self'), 'year_days'), 'OP_APPLY', [Getattr(Getattr(Name('self'), 'data'), 'month')]), Getattr(Getattr(Name('self'), 'data'), 'day'))))]))
Module(None, Stmt([Return(Tuple([Const(0), Name('ch2')]))]))
Module(None, Stmt([Assign([AssName('default_error_messages', 'OP_ASSIGN')], Dict([(Const('invalid'), CallFunc(Name('_'), [Const('Enter a whole number.')], None, None))]))]))
Module(None, Stmt([Return(Mod((Const('<ExtendsNode: extends %s>'), Getattr(Getattr(Name('self'), 'parent_name'), 'token'))))]))
Module(None, Stmt([Assign([AssAttr(Name('mail'), 'outbox', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('_templatetags_modules', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'make_list', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssTuple([AssName('name', 'OP_ASSIGN'), AssName('field', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('self'), 'fields'), 'items'), [], None, None), Stmt([Pass()]), None)]))
except UnicodeDecodeError :
Module(None, Stmt([Assign([AssName('DEFAULT_TIMEOUT', 'OP_ASSIGN')], CallFunc(Name('object'), [], None, None))]))
try :
Module(None, Stmt([Class('ImageField', [Name('FileField')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Name('op'), [], None, None))]))
Module(None, Stmt([Function(None, '_make_key', ['args', 'kwds', 'typed', 'kwd_mark', 'fasttypes', 'sorted', 'tuple', 'type', 'len'], [Tuple([CallFunc(Name('object'), [], None, None)]), Set([Name('int'), Name('str'), Name('frozenset'), CallFunc(Name('type'), [Name('None')], None, None)]), Name('sorted'), Name('tuple'), Name('type'), Name('len')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Getattr(Name('self'), 'port'), 'isdigit'), [], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Name('tag'), 'lower'), [], None, None), [('!=', Getattr(Name('self'), 'cdata_tag'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('PY3'), Stmt([Pass()]))], None)]))
else :
else :
Module(None, Stmt([From('django.utils.module_loading', [('module_has_submodule', None)], 0)]))
Module(None, Stmt([Assign([AssName('int_part', 'OP_ASSIGN')], Subscript(Name('int_part_gd'), 'OP_APPLY', [Sliceobj([Const(None), Const(None), UnarySub(Const(1))])]))]))
Module(None, Stmt([Class('ModelChoiceIterator', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([If([(Or([Compare(Name('size'), [('is', Name('None'))]), Compare(Name('size'), [('>', Getattr(Name('self'), 'remaining'))])]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('filterer'), 'addFilter'), [Subscript(Subscript(Getattr(Name('self'), 'config'), 'OP_APPLY', [Const('filters')]), 'OP_APPLY', [Name('f')])], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const("fk_name '%s' is not a ForeignKey to '%s.%'."), Tuple([Name('fk_name'), Getattr(Getattr(Name('parent_model'), '_meta'), 'app_label'), Getattr(Getattr(Name('parent_model'), '_meta'), 'object_name')])))], None, None), None, None)]))
Module(None, Stmt([From('django.db.utils', [('DatabaseError', None)], 0)]))
Module(None, Stmt([Assign([AssTuple([AssName('seconds2', 'OP_ASSIGN'), AssName('name2', 'OP_ASSIGN')])], Subscript(Name('chunks'), 'OP_APPLY', [Add((Name('i'), Const(1)))]))]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Assign([AssName('callback', 'OP_ASSIGN')], Getattr(Name('callback'), 'func'))]))
Module(None, Stmt([Function(None, 'create_bound_method', ['func', 'obj'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], Name('args'))]))
Module(None, Stmt([Class('OutputWrapper', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Class('CheckboxInput', [Name('Widget')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssName('name', 'OP_ASSIGN'), Name('loggers'), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssName('bit', 'OP_ASSIGN'), Name('bits'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Name('to'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('urlize', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('urlize'), Getattr(Name('six'), 'text_type')], None, None))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_HEADING'), [Const('Running migrations:')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('BASE16_ALPHABET', 'OP_ASSIGN')], Const('0123456789ABCDEF'))]))
except ValueError :
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Class('Module_six_moves_urllib_response', [Name('_LazyModule')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'reload', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'nodelist', 'OP_ASSIGN')], Name('nodelist'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'remove_potfiles'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'children'), 'extend'), [Getattr(Name('data'), 'children')], None, None))]))
Module(None, Stmt([Assign([AssName('_iterkeys', 'OP_ASSIGN')], Const('keys'))]))
Module(None, Stmt([Assign([AssName('cls', 'OP_ASSIGN')], CallFunc(Getattr(Name('extension_map'), 'get'), [Name('tail_ext')], None, None))]))
Module(None, Stmt([If([(And([Compare(Name('lang_code'), [('in', Name('_supported'))]), Compare(Name('lang_code'), [('is not', Name('None'))]), CallFunc(Name('check_for_language'), [Name('lang_code')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of Origin must provide a reload() method')], None, None), None, None)]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'fixture_count'), '+=', Const(1))]))
Module(None, Stmt([If([(Compare(Name('block'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'%s' takes at least one argument (path to a view)"), Subscript(Name('bits'), 'OP_APPLY', [Const(0)])))], None, None), None, None)]))
Module(None, Stmt([From('email.header', [('Header', None)], 0)]))
Module(None, Stmt([Assign([AssName('id', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Getattr(Name('self'), 'fetch_command'), [Subscript(Getattr(Name('options'), 'args'), 'OP_APPLY', [Const(0)])], None, None), 'print_help'), [Getattr(Name('self'), 'prog_name'), Subscript(Getattr(Name('options'), 'args'), 'OP_APPLY', [Const(0)])], None, None))]))
Module(None, Stmt([Assign([AssName('pad', 'OP_ASSIGN')], Mul((Const('='), Mod((UnarySub(CallFunc(Name('len'), [Name('s')], None, None)), Const(4))))))]))
Module(None, Stmt([Assign([AssName('g', 'OP_ASSIGN')], CallFunc(Getattr(Name('g'), 'strip'), [Const("'")], None, None))]))
except OSError as e :
Module(None, Stmt([If([(Compare(Name('block_name'), [('in', Getattr(Name('parser'), '__loaded_blocks'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('_', 'OP_ASSIGN'), AssName('rest', 'OP_ASSIGN')])], CallFunc(Getattr(Getattr(Name('token'), 'contents'), 'split'), [Name('None'), Const(1)], None, None))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'filter_expression'), 'resolve'), [Name('context')], None, None))]))
Module(None, Stmt([Function(None, 'add', ['self', 'item'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('encoding', 'OP_ASSIGN')], Or([Subscript(CallFunc(Getattr(Name('locale'), 'getdefaultlocale'), [], None, None), 'OP_APPLY', [Const(1)]), Const('ascii')]))]))
Module(None, Stmt([Function(None, 'conditional_escape', ['text'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('ViewDoesNotExist'), [Mod((Const("Could not import '%s.%s'. View is not callable."), Tuple([Name('mod_name'), Name('func_name')])))], None, None), None, None)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const('expected another tag, found end of string: %s'), Name('subject')))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'end_serialization', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('internal_use_only', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'instance', 'OP_ASSIGN')], CallFunc(Getattr(Name('opts'), 'model'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('data'), Name('bytes')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.datastructures', [('MultiValueDict', None)], 0)]))
Module(None, Stmt([Return(Name('template_name'))]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('step', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('str'), [Div((CallFunc(Name('Decimal'), [Const('1')], None, None), Power((Const(10), Getattr(Name('self'), 'decimal_places')))))], None, None), 'lower'), [], None, None))]))
Module(None, Stmt([Return(Subscript(Name('value'), 'OP_APPLY', [UnarySub(Const(1))]))]))
Module(None, Stmt([Assign([AssName('j', 'OP_ASSIGN')], CallFunc(Getattr(Name('match'), 'end'), [], None, None))]))
Module(None, Stmt([Return(Name('ip_str'))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Name('MLStripper'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'remove'), [Name('item')], None, None))]))
Module(None, Stmt([Assign([AssName('nodelist', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'parse'), [Tuple([Const('endverbatim')])], None, None))]))
Module(None, Stmt([If([(Compare(Subscript(CallFunc(Name('str'), [Name('number')], None, None), 'OP_APPLY', [Const(0)]), [('==', Name('sign'))]), Stmt([Pass()]))], None)]))
@ stringfilter
Module(None, Stmt([Assign([AssAttr(Name('self'), 'fail_silently', 'OP_ASSIGN')], Name('fail_silently'))]))
Module(None, Stmt([Function(None, 'do_extends', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('widget', 'OP_ASSIGN'), Getattr(Name('self'), 'widgets'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Name('reloader_thread'), [], None, None))]))
Module(None, Stmt([Assign([AssName('notifier', 'OP_ASSIGN')], CallFunc(Getattr(Name('pyinotify'), 'Notifier'), [Name('wm'), CallFunc(Name('EventHandler'), [], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('css_classes', 'OP_ASSIGN')], CallFunc(Getattr(Name('bf'), 'css_classes'), [], None, None))]))
Module(None, Stmt([Assign([AssName('pickled', 'OP_ASSIGN')], CallFunc(Getattr(Name('pickle'), 'dumps'), [Name('value'), Getattr(Name('pickle'), 'HIGHEST_PROTOCOL')], None, None))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Function(None, 'b64_encode', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Getattr(Name('s'), 'encode'), [Const('utf-8')], None, None))]))
Module(None, Stmt([Function(None, 'get_current_timezone_name', (), (), 0, None, Stmt([Pass()]))]))
except NotImplementedError :
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.text', [('unescape_entities', None)], 0)]))
Module(None, Stmt([For(AssTuple([AssName('name', 'OP_ASSIGN'), AssName('block', 'OP_ASSIGN')]), CallFunc(Getattr(Name('six'), 'iteritems'), [Name('blocks')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [CallFunc(Getattr(Getattr(Name('self'), 'style'), 'SQL_KEYWORD'), [CallFunc(Getattr(Getattr(Name('connection'), 'ops'), 'start_transaction_sql'), [], None, None)], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('tried'), 'append'), [List([Name('pattern')])], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_meta'), 'get_field'), [Getattr(Getattr(Name('field'), 'rel'), 'field_name')], None, None), 'to_python'), [Name('field_value')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'DSTOFFSET', 'OP_ASSIGN')], CallFunc(Name('timedelta'), [Keyword('seconds', UnarySub(Getattr(Name('_time'), 'altzone')))], None, None))]))
Module(None, Stmt([Assign([AssName('m', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('lookup_view'), Const('__module__'), Name('None')], None, None))]))
Module(None, Stmt([If([(Compare(Subscript(Name('options'), 'OP_APPLY', [Const('verbosity')]), [('>', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([Function(None, 'normalize_newlines', ['text'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('opts', 'OP_ASSIGN')], Getattr(Name('model'), '_meta'))]))
@ stringfilter
Module(None, Stmt([If([(Or([Not(Name('prefix')), Not(CallFunc(Name('hasattr'), [Name('self'), Const('_callback_str')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_files'), 'appendlist'), [CallFunc(Name('force_text'), [Name('old_field_name'), Getattr(Name('self'), '_encoding'), Keyword('errors', Const('replace'))], None, None), Name('file_obj')], None, None))]))
Module(None, Stmt([Function(None, 'debug', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--domain'), Const('-d'), Keyword('default', Const('django')), Keyword('dest', Const('domain')), Keyword('help', Const('The domain of the message files (default: "django").'))], None, None))]))
Module(None, Stmt([Function(None, 'same_origin', ['url1', 'url2'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__enter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Getattr(Name('apps'), 'setdefault'), [Name('app_name'), List(())], None, None), 'extend'), [Name('namespace_list')], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Function(None, 'changed_data', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Dict([(Const('xmlns'), Getattr(Name('self'), 'ns'))]))]))
Module(None, Stmt([Assign([AssName('compare_to', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('field_name', 'OP_ASSIGN')], CallFunc(Getattr(Subscript(Name('disposition'), 'OP_APPLY', [Const('name')]), 'strip'), [], None, None))]))
Module(None, Stmt([Function(None, 'total_form_count', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('compiled_regex', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Name('regex'), Getattr(Name('re'), 'UNICODE')], None, None))]))
Module(None, Stmt([Import([('os', None)])]))
try :
Module(None, Stmt([For(AssName('obj', 'OP_ASSIGN'), Name('objects'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('domains', 'OP_ASSIGN')], Tuple([Const('django')]))]))
Module(None, Stmt([Assign([AssName('cache', 'OP_ASSIGN')], CallFunc(Name('_create_cache'), [Name('alias')], None, None))]))
Module(None, Stmt([Function(None, 'write', ['data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--pks'), Keyword('dest', Const('primary_keys')), Keyword('help', Const('Only dump objects with given primary keys. Accepts a comma separated list of keys. This option will only work when you specify one model.'))], None, None))]))
Module(None, Stmt([Assign([AssName('_get_val', 'OP_ASSIGN')], CallFunc(Name('lazy'), [Name('_get_val'), Getattr(Name('six'), 'text_type')], None, None))]))
else :
Module(None, Stmt([Function(None, 'strptime', ['self', 'value', 'format'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('widget'), 'is_required', 'OP_ASSIGN')], Getattr(Name('self'), 'required'))]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'style'), 'HTTP_REDIRECT'), [Name('msg')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'subject'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('form'), 'data'), 'OP_ASSIGN', [CallFunc(Getattr(Name('form'), 'add_prefix'), [Getattr(Getattr(Name('self'), '_pk_field'), 'name')], None, None)])], Name('None'))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('basedirs'), 'extend'), [ListComp(CallFunc(Name('upath'), [Name('path')], None, None), [ListCompFor(AssName('path', 'OP_ASSIGN'), Getattr(Name('settings'), 'LOCALE_PATHS'), [])])], None, None))]))
Module(None, Stmt([Function(None, 'url', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('val', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'get'), [Name('k'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), '_post', 'OP_ASSIGN'), AssAttr(Name('self'), '_files', 'OP_ASSIGN')])], CallFunc(Getattr(Name('self'), 'parse_file_upload'), [Getattr(Name('self'), 'META'), Name('data')], None, None))]))
Module(None, Stmt([Assign([AssName('FILTER_ARGUMENT_SEPARATOR', 'OP_ASSIGN')], Const(':'))]))
stream = open ( output , 'w' ) if output else None
Module(None, Stmt([Discard(CallFunc(Getattr(Name('dirs'), 'remove'), [Name('dirname')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_cull_frequency', 'OP_ASSIGN')], Const(3))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'is_bound')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('part'), [('in', Name('PALETTES'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.core.management.sql', [('sql_delete', None)], 0)]))
Module(None, Stmt([Assign([AssName('output_transaction', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('formatted_subject', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('subject'), 'replace'), [Const('\n'), Const('\\n')], None, None), 'replace'), [Const('\r'), Const('\\r')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'current_app', 'OP_ASSIGN')], Name('current_app'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('app_label'), Keyword('help', Const('App label of the application to squash migrations for.'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('dec'), [Name('func')], None, None))]))
Module(None, Stmt([If([(Compare(Name('label_suffix'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'delete_first_token'), [], None, None))]))
Module(None, Stmt([For(AssName('__', 'OP_ASSIGN'), CallFunc(Name('xrange'), [Sub((Name('fill_to'), Name('sep')))], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssName('app_config', 'OP_ASSIGN'), CallFunc(Getattr(Name('apps'), 'get_app_configs'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('VariableNode'), [Name('filter_expression')], None, None))]))
Module(None, Stmt([Assign([AssName('paras', 'OP_ASSIGN')], ListComp(Mod((Const('<p>%s</p>'), CallFunc(Getattr(CallFunc(Name('escape'), [Name('p')], None, None), 'replace'), [Const('\n'), Const('<br />')], None, None))), [ListCompFor(AssName('p', 'OP_ASSIGN'), Name('paras'), [])]))]))
Module(None, Stmt([Assign([AssName('merge_migrations', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'run'), [], None, Name('options')))]))
Module(None, Stmt([Function(None, 'write', ['self', 'outfile', 'encoding'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('threading', None)])]))
Module(None, Stmt([Discard(CallFunc(Name('exhaust'), [Getattr(Name('self'), '_input_data')], None, None))]))
Module(None, Stmt([Function(None, 'has_key', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('Lexer', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '_is_expired', ['self', 'f'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('EmailField'), Name('self')], None, None), 'clean'), [Name('value')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('command'), 'stdout'), 'write'), [Name('errors')], None, None))]))
Module(None, Stmt([Assign([AssName('regex', 'OP_ASSIGN')], CallFunc(Name('property'), [Name('_get_regex'), Name('_set_regex')], None, None))]))
Module(None, Stmt([Assign([AssName('unescape_string_literal', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('unescape_string_literal')], None, None))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([From('django.core.management.utils', [('handle_extensions', None), ('find_command', None), ('popen_wrapper', None)], 0)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'output_transaction'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('self'), Const('_choices')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('x', 'OP_ASSIGN')], CallFunc(Name('int'), [FloorDiv((Name('x'), CallFunc(Name('len'), [Name('to_digits')], None, None)))], None, None))]))
Module(None, Stmt([If([(Compare(Name('new_value'), [('==', Name('value'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'path', 'OP_ASSIGN')], Mod((Const('%s/%s'), Tuple([CallFunc(Getattr(Name('script_name'), 'rstrip'), [Const('/')], None, None), CallFunc(Getattr(Name('path_info'), 'replace'), [Const('/'), Const(''), Const(1)], None, None)]))))]))
Module(None, Stmt([Function(None, 'get_template', ['template_name', 'dirs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('repr'), [CallFunc(Name('dict'), [Name('self')], None, None)], None, None))]))
except IOError as e :
Module(None, Stmt([Return(CallFunc(Name('func'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([For(AssTuple([AssName('matches', 'OP_ASSIGN'), AssName('pat', 'OP_ASSIGN'), AssName('defaults', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('pattern'), 'reverse_dict'), 'getlist'), [Name('name')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('gettempdir', 'OP_ASSIGN')], Getattr(Name('tempfile'), 'gettempdir'))]))
Module(None, Stmt([Assign([AssName('addr', 'OP_ASSIGN')], CallFunc(Name('parseaddr'), [CallFunc(Name('force_text'), [Name('addr')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('TRANSLATOR_COMMENT_MARK', 'OP_ASSIGN')], Const('Translators'))]))
Module(None, Stmt([Function(None, 'make_aware', ['value', 'timezone'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'deleted_forms', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('error', 'OP_ASSIGN'), Getattr(Name('self'), 'error_list'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'get_limit_choices_to', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Name('check_for_migrations'), [Name('app_config'), Name('connection')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('msgs', 'OP_ASSIGN'), AssName('errors', 'OP_ASSIGN'), AssName('status', 'OP_ASSIGN')])], CallFunc(Name('popen_wrapper'), [Name('args')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.template.base', [('Variable', None), ('Library', None), ('VariableDoesNotExist', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'months', 'OP_ASSIGN')], Name('months'))]))
Module(None, Stmt([For(AssName('key', 'OP_ASSIGN'), Getattr(Name('self'), 'keyOrder'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('_trans'), 'ungettext'), [Name('singular'), Name('plural'), Name('number')], None, None))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const("Deprecated - use 'migrate' instead."))]))
Module(None, Stmt([From('django.core.management.base', [('CommandError', None)], 0)]))
Module(None, Stmt([Function(None, 'open', ['self', 'name', 'mode'], [Const('rb')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([AugAssign(Name('msg'), '+=', Mod((Const(' You may need to add %r to ALLOWED_HOSTS.'), Name('domain'))))]))
Module(None, Stmt([Class('NodeList', [Name('list')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('run_syncdb', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('cwords', 'OP_ASSIGN')], Slice(CallFunc(Getattr(Subscript(Getattr(Name('os'), 'environ'), 'OP_APPLY', [Const('COMP_WORDS')]), 'split'), [], None, None), 'OP_APPLY', Const(1), None))]))
else :
Module(None, Stmt([Function(None, '__call__', ['self', 'environ', 'start_response'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'mod', 'OP_ASSIGN')], Name('new'))]))
Module(None, Stmt([If([(Name('cursor'), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('form', 'OP_ASSIGN'), Getattr(Name('self'), 'saved_forms'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Subscript(Getattr(Name('self'), 'client_address'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'protocol', 'unpack_ipv4', 'args', 'kwargs'], [Const('both'), Name('False')], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'charset', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('Unknown application: %s'), Name('app_label')))], None, None), None, None)]))
Module(None, Stmt([From('django.utils._os', [('upath', None)], 0)]))
Module(None, Stmt([Assign([AssName('content_type', 'OP_ASSIGN')], CallFunc(Getattr(Name('content_type'), 'strip'), [], None, None))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'localize'), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('tag', 'OP_ASSIGN'), Name('open_tags'), Stmt([Pass()]), None)]))
except AmbiguityError :
Module(None, Stmt([For(AssName('model', 'OP_ASSIGN'), Name('model_list'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Name('name'), 'lower'), [], None, None), [('in', Name('ADDRESS_HEADERS'))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([If([(Compare(Name('value'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('REQUEST', 'OP_ASSIGN')], CallFunc(Name('property'), [Name('_get_request')], None, None))]))
Module(None, Stmt([Function(None, 'value_from_datadict', ['self', 'data', 'files', 'name'], [], 0, None, Stmt([Pass()]))]))
elif len ( fks_to_parent ) == 0 :
Module(None, Stmt([Assign([AssName('paras', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'split'), [Const('\n{2,}'), Name('value')], None, None))]))
Module(None, Stmt([For(AssName('meta_line', 'OP_ASSIGN'), CallFunc(Getattr(Name('self'), 'get_meta'), [Name('table_name')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('cls'), [Subscript(Name('file_dict'), 'OP_APPLY', [Const('filename')]), Subscript(Name('file_dict'), 'OP_APPLY', [Const('content')]), CallFunc(Getattr(Name('file_dict'), 'get'), [Const('content-type'), Const('text/plain')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('MIMEText'), '__setitem__'), [Name('self'), Name('name'), Name('val')], None, None))]))
Module(None, Stmt([Assign([AssName('widgets', 'OP_ASSIGN')], Tuple([CallFunc(Name('DateInput'), [Keyword('attrs', Name('attrs')), Keyword('format', Name('date_format'))], None, None), CallFunc(Name('TimeInput'), [Keyword('attrs', Name('attrs')), Keyword('format', Name('time_format'))], None, None)]))]))
Module(None, Stmt([Raise(CallFunc(Name('IOError'), [Mod((Const('%s exists and is not a directory.'), Name('directory')))], None, None), None, None)]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Assign([AssName('starttag_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Mod((Const('<%s(/?>|(\\s+[^>]*>))'), Name('tags_re'))), Getattr(Name('re'), 'U')], None, None))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Assign([AssName('m', 'OP_ASSIGN')], CallFunc(Getattr(Name('regex'), 'match'), [Name('date')], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('hextet')], None, None), [('>', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'server', 'params'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'find_template_cache', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([From('django.utils._os', [('upath', None)], 0)]))
Module(None, Stmt([From('django.utils.encoding', [('force_str', None)], 0)]))
Module(None, Stmt([Assign([AssName('WEEKDAYS_REV', 'OP_ASSIGN')], Dict([(Const('monday'), Const(0)), (Const('tuesday'), Const(1)), (Const('wednesday'), Const(2)), (Const('thursday'), Const(3)), (Const('friday'), Const(4)), (Const('saturday'), Const(5)), (Const('sunday'), Const(6))]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_response_middleware', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(Name('default'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Mod((Const('Cache key will cause errors if used with memcached: %s (longer than %s)'), Tuple([Name('key'), Name('MEMCACHE_MAX_KEY_LENGTH')]))), Name('CacheKeyWarning')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('signal'), Const('SIGTTOU')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('MovedModule'), Name('self')], None, None), '__init__'), [Name('name')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Class('Module_six_moves_urllib_error', [Name('_LazyModule')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Name('NullBooleanSelect'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_request_middleware', 'OP_ASSIGN')], Name('None'))]))
@ stringfilter
Module(None, Stmt([Class('FileField', [Name('Field')], None, Stmt([Pass()]), None)]))
try :
Module(None, Stmt([Assign([AssName('autodetector', 'OP_ASSIGN')], CallFunc(Name('MigrationAutodetector'), [CallFunc(Getattr(Getattr(Name('executor'), 'loader'), 'project_state'), [], None, None), CallFunc(Getattr(Name('ProjectState'), 'from_apps'), [Name('apps')], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Name('initial'), [('==', Const('False'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('other', 'OP_ASSIGN')], CallFunc(Getattr(Name('other'), '__cast'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('loader'), 'get_template'), [Name('template')], None, None))]))
elif token . token_type == 2 :
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'phone2numeric_filter', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Return(Tuple([Name('key'), Name('pdict')]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'per_page', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('per_page')], None, None))]))
Module(None, Stmt([Assign([AssName('iterkeys', 'OP_ASSIGN')], Name('_iterkeys'))]))
Module(None, Stmt([Assign([AssName('PY2', 'OP_ASSIGN')], Compare(Subscript(Getattr(Name('sys'), 'version_info'), 'OP_APPLY', [Const(0)]), [('==', Const(2))]))]))
Module(None, Stmt([Return(CallFunc(Name('render_value_in_context'), [Name('output'), Name('context')], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Serializer'), Name('self')], None, None), 'handle_field'), [Name('obj'), Name('field')], None, None))]))
Module(None, Stmt([Function(None, 'decr', ['self', 'key', 'delta', 'version'], [Const(1), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('shutil', None)])]))
else :
Module(None, Stmt([Assign([AssName('Model', 'OP_ASSIGN')], CallFunc(Name('_get_model'), [Subscript(Name('d'), 'OP_APPLY', [Const('model')])], None, None))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'nodelist'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([Assign([AssName('label', 'OP_ASSIGN')], Const('label'))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('self'), 'compile_function_error'), [Name('token'), Name('e')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('timedelta'), [Const(0)], None, None))]))
Module(None, Stmt([Assign([AssName('timezone', 'OP_ASSIGN')], Add((Mul((Mul((Getattr(Name('offset'), 'days'), Const(24))), Const(60))), FloorDiv((Getattr(Name('offset'), 'seconds'), Const(60))))))]))
Module(None, Stmt([Assign([AssTuple([AssName('open_method', 'OP_ASSIGN'), AssName('mode', 'OP_ASSIGN')])], Subscript(Getattr(Name('self'), 'compression_formats'), 'OP_APPLY', [Name('cmp_fmt')]))]))
else :
Module(None, Stmt([From('email.utils', [('formatdate', None)], 0)]))
Module(None, Stmt([Assign([AssName('__init__', 'OP_ASSIGN')], Getattr(Name('type'), '__init__'))]))
Module(None, Stmt([Assign([AssName('nodelist_empty', 'OP_ASSIGN')], Name('None'))]))
try :
Module(None, Stmt([Return(Mod((Const('%02d'), Getattr(Getattr(Name('self'), 'data'), 'second'))))]))
Module(None, Stmt([Assign([AssName('connection', 'OP_ASSIGN')], Subscript(Name('connections'), 'OP_APPLY', [Subscript(Name('options'), 'OP_APPLY', [Const('database')])]))]))
except TypeError :
Module(None, Stmt([From('binascii', [('Error', 'BinasciiError')], 0)]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], Mod((Const('Invalid HTTP_HOST header: %r.'), Name('host'))))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'nodelist_false'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([Return(Name('ipv4_unpacked'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_update_errors'), [Name('e')], None, None))]))
try :
Module(None, Stmt([Function(None, 'close', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('FixedOffset', [Name('tzinfo')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('class_name', 'OP_ASSIGN')], Add((Getattr(Name('model'), '__name__'), CallFunc(Name('str'), [Const('Form')], None, None))))]))
Module(None, Stmt([Assign([AssName('sign', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([If([(Or([CallFunc(Getattr(Name('filename'), 'endswith'), [Name('extensions')], None, None), Compare(Name('filename'), [('in', Name('extra_files'))])]), Stmt([Pass()]))], None)]))
except TemplateSyntaxError as e :
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Name('linebreaks'), [Name('value'), Name('autoescape')], None, None)], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('strip_tags'), [Name('value')], None, None))]))
else :
Module(None, Stmt([Function(None, '__reversed__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Function(None, 'get_field_type', ['self', 'connection', 'table_name', 'row'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core.management.sql', [('sql_destroy_indexes', None)], 0)]))
Module(None, Stmt([If([(And([CallFunc(Name('isinstance'), [Name('value'), Getattr(Name('six'), 'string_types')], None, None), Compare(CallFunc(Getattr(Name('value'), 'lower'), [], None, None), [('in', Tuple([Const('false'), Const('0')]))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'managed', 'OP_ASSIGN')], Name('True'))]))
try :
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], CallFunc(Name('_'), [Const('Enter a valid URL.')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('load_template_source'), 'is_usable', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([From('django.utils', [('translation', None)], 0)]))
Module(None, Stmt([Function(None, 'safeseq', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('parent', 'OP_ASSIGN')], Tuple([Name('object')]))]))
Module(None, Stmt([Assign([AssName('script_name', 'OP_ASSIGN')], CallFunc(Name('get_script_name'), [Name('environ')], None, None))]))
Module(None, Stmt([Return(Compare(CallFunc(Getattr(Name('self'), '__cast'), [], None, None), [('==', Name('other'))]))]))
Module(None, Stmt([Class('WSGIRequestHandler', [Getattr(Name('simple_server'), 'WSGIRequestHandler'), Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('bytes_to_text'), [Name('value'), Getattr(Name('self'), 'encoding')], None, None))]))
Module(None, Stmt([For(AssName('candidate', 'OP_ASSIGN'), GenExpr(GenExprInner(Or([Compare(Name('d'), [('not in', Name('models'))]), Compare(Name('d'), [('in', Name('model_list'))])]), [GenExprFor(AssName('d', 'OP_ASSIGN'), Name('deps'), [])])), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('var', 'OP_ASSIGN')], Slice(Name('var'), 'OP_APPLY', Const(2), UnarySub(Const(1))))]))
else :
Module(None, Stmt([Return(Subscript(Name('t'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Assign([AssName('use_grouping', 'OP_ASSIGN')], And([Name('use_grouping'), Compare(Name('grouping'), [('>', Const(0))])]))]))
Module(None, Stmt([Assign([AssName('using', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('database')], None, None))]))
Module(None, Stmt([Class('Loader', [Name('BaseLoader')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('compare_to', 'OP_ASSIGN'), AssName('nodelist_true_output', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'nodelist_true'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Name('bytes_to_text'), [Name('key'), Getattr(Name('self'), 'encoding')], None, None))]))
Module(None, Stmt([Assign([AssName('inner_text', 'OP_ASSIGN')], List(()))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'startElement'), [Const('field'), Dict([(Const('name'), Getattr(Name('field'), 'name')), (Const('type'), CallFunc(Getattr(Name('field'), 'get_internal_type'), [], None, None))])], None, None))]))
Module(None, Stmt([Assign([AssName('all_unique_checks', 'OP_ASSIGN')], CallFunc(Getattr(Name('all_unique_checks'), 'union'), [CallFunc(Name('set'), [Name('unique_checks')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'start_serialization', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('graph', 'OP_ASSIGN')], Getattr(Name('loader'), 'graph'))]))
Module(None, Stmt([From('django.utils', [('formats', None)], 0)]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('SortedDict'), Name('self')], None, None), 'clear'), [], None, None))]))
Module(None, Stmt([Assign([AssName('headerlist', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Continue()]))
try :
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('format_locations'), 'append'), [Add((Name('path'), Const('.%s')))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('locks'), 'unlock'), [Name('fd')], None, None))]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'active_writers'), '-=', Const(1))]))
Module(None, Stmt([If([(Compare(Name('value'), [('is not', Name('result'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'queryset'), 'none'), [], None, None))]))
Module(None, Stmt([If([(Name('process_all'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.db', [('models', None)], 0)]))
Module(None, Stmt([Assign([AssTuple([AssName('project_name', 'OP_ASSIGN'), AssName('target', 'OP_ASSIGN')])], Tuple([CallFunc(Getattr(Name('options'), 'pop'), [Const('name')], None, None), CallFunc(Getattr(Name('options'), 'pop'), [Const('directory')], None, None)]))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Name('sql')], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('ttl'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('ttl')])], None, None))]))
Module(None, Stmt([From('django.utils.functional', [('cached_property', None)], 0)]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], Mod((Const('%s\n\nRequest repr(): %s'), Tuple([CallFunc(Getattr(Name('self'), 'format'), [Name('record')], None, None), Name('request_repr')]))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Mod((Const('INSERT INTO %s (cache_key, value, expires) VALUES (%%s, %%s, %%s)'), Name('table'))), List([Name('key'), Name('b64encoded'), Name('exp')])], None, None))]))
Module(None, Stmt([Assign([AssName('ip_address_validator_map', 'OP_ASSIGN')], Dict([(Const('both'), Tuple([List([Name('validate_ipv46_address')]), CallFunc(Name('_'), [Const('Enter a valid IPv4 or IPv6 address.')], None, None)])), (Const('ipv4'), Tuple([List([Name('validate_ipv4_address')]), CallFunc(Name('_'), [Const('Enter a valid IPv4 address.')], None, None)])), (Const('ipv6'), Tuple([List([Name('validate_ipv6_address')]), CallFunc(Name('_'), [Const('Enter a valid IPv6 address.')], None, None)]))]))]))
Module(None, Stmt([Class('TypedChoiceField', [Name('ChoiceField')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('summary'), Subscript(Name('item'), 'OP_APPLY', [Const('description')]), Dict([(Const('type'), Const('html'))])], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'verbatim', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Function(None, 'parse_accept_lang_header', ['lang_string'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Mod((Const('DELETE FROM %s WHERE cache_key = %%s'), Name('table'))), List([Name('key')])], None, None))]))
Module(None, Stmt([Assign([AssName('time_str', 'OP_ASSIGN')], CallFunc(Getattr(Name('time_str'), 'decode'), [Const('utf-8')], None, None))]))
Module(None, Stmt([Assign([AssName('default_settings', 'OP_ASSIGN')], CallFunc(Name('module_to_dict'), [Name('global_settings')], None, None))]))
Module(None, Stmt([Assign([AssName('params', 'OP_ASSIGN')], List([Subscript(Name('source'), 'OP_APPLY', [Const(1)])]))]))
Module(None, Stmt([From('importlib', [('find_loader', 'importlib_find')], 0)]))
Module(None, Stmt([For(AssName('resultclass', 'OP_ASSIGN'), Name('resultclasses'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'setlist'), [Name('k'), Name('v')], None, None))]))
else :
Module(None, Stmt([Function(None, 'F', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('url', 'OP_ASSIGN'), AssName('trimmed', 'OP_ASSIGN')])], Tuple([CallFunc(Name('escape'), [Name('url')], None, None), CallFunc(Name('escape'), [Name('trimmed')], None, None)]))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('e'), 'django_template_source', 'OP_ASSIGN')], Getattr(Name('token'), 'source'))]))
Module(None, Stmt([Function(None, 'parse_cookie', ['cookie'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('root', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'get'), [Const('root'), Name('None')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'keyOrder'), 'remove'), [Subscript(Name('result'), 'OP_APPLY', [Const(0)])], None, None))]))
Module(None, Stmt([Assign([AssName('dot', 'OP_ASSIGN')], CallFunc(Getattr(Name('package'), 'rindex'), [Const('.'), Const(0), Name('dot')], None, None))]))
Module(None, Stmt([Assign([AssName('int_part_gd', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([If([(Name('result'), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([If([(Name('formatter'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('connection', 'OP_ASSIGN')], Subscript(Name('connections'), 'OP_APPLY', [Subscript(Name('options'), 'OP_APPLY', [Const('database')])]))]))
@ stringfilter
Module(None, Stmt([Function(None, 'wordwrap', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssName('guid_attrs', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssName('end_index', 'OP_ASSIGN')], Name('i'))]))
else :
Module(None, Stmt([Return(Subscript(Name('d'), 'OP_APPLY', [Name('key')]))]))
Module(None, Stmt([If([(Compare(Name('cookie'), [('==', Const(''))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'nodelist_empty', 'OP_ASSIGN')], Name('nodelist_empty'))]))
Module(None, Stmt([Assign([AssName('app_names', 'OP_ASSIGN')], CallFunc(Name('sorted'), [Getattr(Name('loader'), 'migrated_apps')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('Unknown serialization format: %s'), Name('format')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('p', 'OP_ASSIGN')], Name('i'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'configure_logger'), [Name('name'), Subscript(Name('loggers'), 'OP_APPLY', [Name('name')])], None, None))]))
Module(None, Stmt([Function(None, 'size', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const("The %s could not be %s because the data didn't validate."), Tuple([Getattr(Name('opts'), 'object_name'), Name('fail_message')])))], None, None), None, None)]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
finder = sys . path_importer_cache [ entry ]
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('not_found'), 'append'), [Subscript(Getattr(Name('e'), 'args'), 'OP_APPLY', [Const(0)])], None, None))]))
else :
Module(None, Stmt([Return(CallFunc(Name('strftime'), [Name('self'), Name('fmt')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'children'), 'append'), [Name('data')], None, None))]))
Module(None, Stmt([From('html_parser', [('HTMLParser', None), ('HTMLParseError', None)], 1)]))
Module(None, Stmt([Return(Subscript(Name('WEEKDAYS'), 'OP_APPLY', [CallFunc(Getattr(Getattr(Name('self'), 'data'), 'weekday'), [], None, None)]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('plural'), 'append'), [Name('contents')], None, None))]))
Module(None, Stmt([Assign([AssName('close', 'OP_ASSIGN')], Getattr(Name('self'), 'closed'))]))
else :
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'nodelist'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([If([(And([Compare(Const('Location'), [('in', Name('response'))]), CallFunc(Getattr(Name('request'), 'get_host'), [], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([While(And([Compare(Name('i'), [('<', CallFunc(Name('len'), [Name('subject')], None, None))]), Compare(Subscript(Name('subject'), 'OP_APPLY', [Name('i')]), [('not in', Tuple([Const(' '), Const('\t')]))])]), Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango20Warning', None)], 0)]))
Module(None, Stmt([Assign([AssName('safe_data', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Return(Name('data'))]))
Module(None, Stmt([Assign([AssName('color_settings', 'OP_ASSIGN')], CallFunc(Getattr(Name('termcolors'), 'parse_color_setting'), [Name('DJANGO_COLORS')], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('callable'), [CallFunc(Name('getattr'), [Name('template'), Const('render'), Name('None')], None, None)], None, None)), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([Subscript(Name('options'), 'OP_ASSIGN', [Name('option')])], Name('value'))]))
Module(None, Stmt([While(Compare(Name('ch'), [('!=', Const('}'))]), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__deepcopy__', ['self', 'memo'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'query_string', 'mutable', 'encoding'], [Name('None'), Name('False'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('thousand_sep', 'OP_ASSIGN')], CallFunc(Name('get_format'), [Const('THOUSAND_SEPARATOR')], None, None))]))
@ python_2_unicode_compatible
Module(None, Stmt([Assign([AssAttr(Name('self'), 'stream', 'OP_ASSIGN')], CallFunc(Getattr(Name('six'), 'StringIO'), [Name('stream_or_string')], None, None))]))
@ python_2_unicode_compatible
except :
Module(None, Stmt([Discard(Yield(Tuple([Name('key'), Subscript(Name('self'), 'OP_APPLY', [Name('key')])])))]))
try :
Module(None, Stmt([If([(Name('attrs'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'ignore_patterns', 'OP_ASSIGN')], CallFunc(Name('list'), [CallFunc(Name('set'), [Name('ignore_patterns')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('token', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'next_token'), [], None, None))]))
Module(None, Stmt([AugAssign(Name('factor'), '-=', Const(1))]))
Module(None, Stmt([If([(Not(Name('match')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('new_environ'), 'OP_ASSIGN', [Const('RUN_MAIN')])], Const('true'))]))
Module(None, Stmt([Function(None, '__setitem__', ['self', 'key', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('formfield', 'OP_ASSIGN')], CallFunc(Name('formfield_callback'), [Name('f')], None, Name('kwargs')))]))
Module(None, Stmt([If([(Name('err_log'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const(None))]))
else :
Module(None, Stmt([Return(CallFunc(Name('strftime'), [Name('self'), Name('fmt')], None, None))]))
stream_class = StringIO if isinstance ( content , six . text_type ) else BytesIO
Module(None, Stmt([Assign([AssName('words', 'OP_ASSIGN')], CallFunc(Getattr(Name('word_split_re'), 'split'), [CallFunc(Name('force_text'), [Name('text')], None, None)], None, None))]))
Module(None, Stmt([From('django.utils.http', [('urlquote', None)], 0)]))
Module(None, Stmt([From('__future__', [('absolute_import', None)], 0)]))
Module(None, Stmt([Assign([AssName('opts', 'OP_ASSIGN')], Getattr(Name('model'), '_meta'))]))
else :
Module(None, Stmt([Function(None, 'merge', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('DEFAULT_PORT', 'OP_ASSIGN')], Const('8000'))]))
finally :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Name('errors')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("Can't find %s. Make sure you have GNU gettext tools 0.15 or newer installed."), Name('program')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('d', 'OP_ASSIGN')], CallFunc(Name('Decimal'), [Name('input_val')], None, None))]))
Module(None, Stmt([If([(And([Compare(Name('domain'), [('==', Const('djangojs'))]), Compare(Name('file_ext'), [('in', Getattr(Name('command'), 'extensions'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('error'), Name('ValidationError')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '__dispatch'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('ret'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('email'), Subscript(Name('item'), 'OP_APPLY', [Const('author_email')])], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('context'), 'autoescape', 'OP_ASSIGN')], Getattr(Name('self'), 'setting'))]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'isdir'), [Const('locale')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate'), [Keyword('display_num_errors', Name('True'))], None, None))]))
Module(None, Stmt([AugAssign(Name('i'), '+=', Const(1))]))
Module(None, Stmt([Function(None, 'get_major_version', ['version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('msgs', 'OP_ASSIGN')], CallFunc(Getattr(Name('msgs'), 'replace'), [Name('old'), Name('new')], None, None))]))
try :
Module(None, Stmt([From('django.utils.timezone', [('get_current_timezone_name', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('scheme'), [('not in', Getattr(Name('self'), 'schemes'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__wrapper__', ['args', 'kw'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_post', 'OP_ASSIGN')], CallFunc(Name('QueryDict'), [Const(''), Keyword('mutable', Name('True'))], None, None))]))
Module(None, Stmt([Assign([AssName('hidden_widget', 'OP_ASSIGN')], Name('MultipleHiddenInput'))]))
Module(None, Stmt([AugAssign(Name('visible_issue_count'), '+=', CallFunc(Name('len'), [Name('issues')], None, None))]))
Module(None, Stmt([Assign([AssName('match', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('UnlockFileEx', 'OP_ASSIGN')], Getattr(Getattr(Name('windll'), 'kernel32'), 'UnlockFileEx'))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('mw_instance'), Const('process_response')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('django_dir', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'normpath'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'dirname'), [Getattr(Name('django'), '__file__')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Class('GenericIPAddressField', [Name('CharField')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Name('shutdown_message'), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([AssName('p', 'OP_ASSIGN')], Name('i'))]))
Module(None, Stmt([If([(CallFunc(Name('getattr'), [Name('current'), Const('do_not_call_in_templates'), Name('False')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('data'), 'OP_ASSIGN', [Getattr(Name('field'), 'name')])], CallFunc(Getattr(Name('field'), 'to_python'), [Name('field_value')], None, None))]))
Module(None, Stmt([Assign([AssName('link', 'OP_ASSIGN')], CallFunc(Name('cache_get'), [Name('key')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('token_string'), 'find'), [Name('TRANSLATOR_COMMENT_MARK')], None, None), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Function(None, '_create_message', ['self', 'msg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('connection'), 'close'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Getattr(Name('lineno_comment_map'), 'setdefault'), [Getattr(Name('t'), 'lineno'), List(())], None, None), 'append'), [Getattr(Name('t'), 'contents')], None, None))]))
Module(None, Stmt([Assign([AssName('idstring', 'OP_ASSIGN')], Add((Const('.'), Name('idstring'))))]))
Module(None, Stmt([Class('LocalTimezone', [Name('tzinfo')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'full_clean'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Getattr(Name('six'), 'text_type')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'handle_inspection', ['self', 'options'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Assign([AssName('databases', 'OP_ASSIGN')], List([Getattr(Name('self'), 'using'), Name('None')]))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, '__bool__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Class('TimestampSigner', [Name('Signer')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'get_commands', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('ratio', 'OP_ASSIGN')], Mul((Div((Name('value'), Name('max_value'))), Name('max_width'))))]))
Module(None, Stmt([Assign([AssName('function_name', 'OP_ASSIGN')], Or([Name('name'), Getattr(CallFunc(Name('getattr'), [Name('func'), Const('_decorated_function'), Name('func')], None, None), '__name__')]))]))
Module(None, Stmt([Assign([AssName('cleaned_data', 'OP_ASSIGN')], Getattr(Name('form'), 'cleaned_data'))]))
Module(None, Stmt([Assign([AssName('unichr', 'OP_ASSIGN')], Name('unichr'))]))
Module(None, Stmt([Assign([AssName('tpl', 'OP_ASSIGN')], Const("DTDForbidden(name='{}', system_id={!r}, public_id={!r})"))]))
except ValueError :
Module(None, Stmt([Return(CallFunc(Getattr(Name('random_module'), 'choice'), [Name('value')], None, None))]))
Module(None, Stmt([From('django.utils.text', [('get_text_list', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("Named cycle '%s' does not exist"), Name('name')))], None, None), None, None)]))
try :
Module(None, Stmt([For(AssName('path_to_remove', 'OP_ASSIGN'), Getattr(Name('self'), 'paths_to_remove'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('errors', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'default_error_messages'), 'copy'), [], None, None))]))
Module(None, Stmt([Assign([AssName('empty_values', 'OP_ASSIGN')], CallFunc(Name('list'), [Getattr(Name('validators'), 'EMPTY_VALUES')], None, None))]))
Module(None, Stmt([Assign([AssName('_trans', 'OP_ASSIGN')], CallFunc(Name('Trans'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('TemplateLoader'), Const('load_template_source')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('QueryDict'), Name('self')], None, None), 'pop'), [Name('key')], Name('args'), None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('field_notes'), 'append'), [Const('Field renamed to remove unsuitable characters.')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'extend_nodelist'), [Name('nodelist'), CallFunc(Name('TextNode'), [Getattr(Name('token'), 'contents')], None, None), Name('token')], None, None))]))
Module(None, Stmt([Function(None, 'add_prefix', ['self', 'index'], [], 0, None, Stmt([Pass()]))]))
except UnicodeEncodeError :
Module(None, Stmt([Assign([AssName('model_list', 'OP_ASSIGN')], CallFunc(Getattr(Name('app_config'), 'get_models'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('metaclass'), [Getattr(Name('cls'), '__name__'), Getattr(Name('cls'), '__bases__'), Name('orig_vars')], None, None))]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'index'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'handle_data'), [Slice(Name('rawdata'), 'OP_APPLY', Name('i'), Name('j'))], None, None))]))
Module(None, Stmt([Assign([AssName('ns', 'OP_ASSIGN')], Subscript(Name('app_list'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Assign([AssName('requires_system_checks', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([If([(Compare(Name('truncate'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(List(()))]))
Module(None, Stmt([Function(None, 'get_parent', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('name'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('special_floats', 'OP_ASSIGN')], List([CallFunc(Name('str'), [Name('pos_inf')], None, None), CallFunc(Name('str'), [Name('neg_inf')], None, None), CallFunc(Name('str'), [Name('nan')], None, None)]))]))
Module(None, Stmt([If([(And([CallFunc(Name('hasattr'), [Getattr(Name('self'), 'data'), Const('tzinfo')], None, None), Getattr(Getattr(Name('self'), 'data'), 'tzinfo')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], CallFunc(Getattr(Const('.'), 'join'), [Name('parts')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'cdata_tag', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('arg'), Name('unicode')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('_func_globals', 'OP_ASSIGN')], Const('__globals__'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('MultiWidget'), Name('self')], None, None), '__init__'), [Name('attrs')], None, None))]))
Module(None, Stmt([Assign([AssName('fn', 'OP_ASSIGN')], Name('code_changed'))]))
Module(None, Stmt([From('django.utils.six', [('StringIO', None)], 0)]))
Module(None, Stmt([For(AssTuple([AssName('key', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')]), CallFunc(Getattr(Name('six'), 'iterlists'), [Name('self')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'waiting_writers'), '-=', Const(1))]))
Module(None, Stmt([Assign([AssName('prefix', 'OP_ASSIGN')], Getattr(Name('settings'), 'MEDIA_URL'))]))
Module(None, Stmt([For(AssName('attr', 'OP_ASSIGN'), Name('_urllib_request_moved_attributes'), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Function(None, 'do_ntranslate', ['singular', 'plural', 'number', 'translation_function'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Getattr(Name('settings'), 'USE_L10N'), CallFunc(Name('isinstance'), [Name('value'), Getattr(Name('six'), 'string_types')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('headerlist'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(Getattr(Name('qs'), 'ordered')), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Discard(CallFunc(Name('register_serializer'), [Name('format'), Subscript(Name('BUILTIN_SERIALIZERS'), 'OP_APPLY', [Name('format')]), Name('serializers')], None, None))]))
Module(None, Stmt([If([(And([CallFunc(Name('isinstance'), [Name('widget'), Name('NumberInput')], None, None), Compare(Const('step'), [('not in', Getattr(Name('widget'), 'attrs'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'verbatim', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_changed_data'))]))
Module(None, Stmt([Assign([AssName('iteritems', 'OP_ASSIGN')], Name('_iteritems'))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'can_import_settings'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'urlunquote', ['quoted_url'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('renderer', 'OP_ASSIGN')], Name('RadioFieldRenderer'))]))
Module(None, Stmt([Raise(CallFunc(Name('AttributeError'), [Const('You cannot set the upload handlers after the upload has been processed.')], None, None), None, None)]))
Module(None, Stmt([Return(Subscript(Subscript(Getattr(Name('self'), 'blocks'), 'OP_APPLY', [Name('name')]), 'OP_APPLY', [UnarySub(Const(1))]))]))
Module(None, Stmt([Import([('datetime', None)])]))
simple_url_2_re = re . compile ( r'^www\.|^(?!http)\w[^@]+\.(com|edu|gov|int|mil|net|org)($|/.*)$' , re . IGNORECASE )
Module(None, Stmt([If([(Compare(Name('number_equal'), [('>', Const(40))]), Stmt([Pass()]))], None)]))
@ register . filter ( is_safe = True )
Module(None, Stmt([Return(CallFunc(Getattr(Name('hmac'), 'new'), [Name('key'), Keyword('msg', CallFunc(Name('force_bytes'), [Name('value')], None, None)), Keyword('digestmod', Getattr(Name('hashlib'), 'sha1'))], None, None))]))
Module(None, Stmt([If([(And([Getattr(Name('f'), 'rel'), Compare(Getattr(Getattr(Name('f'), 'rel'), 'to'), [('not in', Name('to_delete'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('handler', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Getattr(Name('self'), '_upload_handlers')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(Getattr(Name('self'), 'warning'), None, None)]))
Module(None, Stmt([Assign([AssName('BLOCK_TAG_START', 'OP_ASSIGN')], Const('{%'))]))
else :
Module(None, Stmt([Assign([AssName('activate', 'OP_ASSIGN')], Lambda(['x'], [], 0, Name('None')))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'name', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([Return(Subscript(Name('d'), 'OP_APPLY', [Name('key')]))]))
Module(None, Stmt([For(AssName('choice', 'OP_ASSIGN'), Getattr(Getattr(Name('self'), 'field'), 'choice_cache'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('DebugLexer'), Name('self')], None, None), '__init__'), [Name('template_string'), Name('origin')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_key'), [Name('key')], None, None))]))
try :
Module(None, Stmt([Break()]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('type'), [Name('self')], None, None), '__bool__'), [Name('self')], None, None))]))
Module(None, Stmt([Function(None, 'end_serialization', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'paths_to_remove', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(Yield(Subscript(Name('self'), 'OP_APPLY', [Name('key')])))]))
except :
Module(None, Stmt([Assign([AssName('updates', 'OP_ASSIGN')], CallFunc(Name('dict'), [], None, None))]))
else :
Module(None, Stmt([Function(None, '_isdst', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('disable_existing', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'pop'), [Const('disable_existing_loggers'), Name('True')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'default_args', 'OP_ASSIGN')], Or([Name('default_args'), Dict(())]))]))
Module(None, Stmt([Assign([AssName('app_list', 'OP_ASSIGN')], Subscript(Getattr(Name('resolver'), 'app_dict'), 'OP_APPLY', [Name('ns')]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'style_func', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('FilePathField'), Name('self')], None, None), '__init__'), [Keyword('choices', Tuple(())), Keyword('required', Name('required')), Keyword('widget', Name('widget')), Keyword('label', Name('label')), Keyword('initial', Name('initial')), Keyword('help_text', Name('help_text'))], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('token', 'OP_ASSIGN')], CallFunc(Name('Token'), [Name('TOKEN_BLOCK'), Name('block_content')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('patch_response_headers'), [Name('response'), Keyword('cache_timeout', UnarySub(Const(1)))], None, None))]))
Module(None, Stmt([Assign([AssName('timestamp', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(Name('git_log'), 'communicate'), [], None, None), 'OP_APPLY', [Const(0)]))]))
except ( archive . ArchiveException , IOError ) as e :
Module(None, Stmt([Class('SingleZipReader', [Getattr(Name('zipfile'), 'ZipFile')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('criticals', 'OP_ASSIGN')], ListComp(Name('e'), [ListCompFor(AssName('e', 'OP_ASSIGN'), Name('all_issues'), [ListCompIf(Compare(Getattr(Name('checks'), 'CRITICAL'), [('<=', Getattr(Name('e'), 'level'))]))])]))]))
Module(None, Stmt([Return(CallFunc(Name('list'), [CallFunc(Getattr(Name('self'), 'iterlists'), [], None, None)], None, None))]))
@ register . filter ( is_safe = False )
Module(None, Stmt([Return(CallFunc(Getattr(Name('s'), 'get_data'), [], None, None))]))
Module(None, Stmt([While(Not(CallFunc(Getattr(Name('bit'), 'endswith'), [Name('sentinal')], None, None)), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('resolved_args', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('var'), 'resolve'), [Name('context')], None, None), [ListCompFor(AssName('var', 'OP_ASSIGN'), Getattr(Name('self'), 'args'), [])]))]))
Module(None, Stmt([Assign([AssName('urlconf', 'OP_ASSIGN')], Getattr(Name('settings'), 'ROOT_URLCONF'))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'encoding', 'OP_ASSIGN')], Name('encoding'))]))
Module(None, Stmt([Return(Name('_decorator'))]))
Module(None, Stmt([Assign([AssName('year', 'OP_ASSIGN')], Add((Name('year'), Mul((FloorDiv((Sub((Const(2000), Name('year'))), Const(28))), Const(28))))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('inner_text'), 'extend'), [CallFunc(Name('getInnerText'), [Name('child')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Name('str_hidden')], None, None))]))
try :
from django . core . exceptions import DisallowedHost , ImproperlyConfigured
else :
Module(None, Stmt([From('django.db', [('connections', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('new_method', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('base'), '__dict__'), 'get'), [Name('new_method_name')], None, None))]))
Module(None, Stmt([Assign([AssName('field_dict', 'OP_ASSIGN')], CallFunc(Name('OrderedDict'), [Name('field_list')], None, None))]))
Module(None, Stmt([From('django.utils.functional', [('allow_lazy', None)], 0)]))
Module(None, Stmt([Function(None, 'close', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('name'), [('==', Const('content-disposition'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid_time')]), Keyword('code', Const('invalid_time'))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'get', ['self', 'key', 'default', 'version'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Name('add_to_builtins'), [Const('django.template.defaultfilters')], None, None))]))
try :
Module(None, Stmt([Assign([AssName('chunk_size', 'OP_ASSIGN')], Getattr(Name('self'), 'DEFAULT_CHUNK_SIZE'))]))
Module(None, Stmt([Raise(CallFunc(Name('ImproperlyConfigured'), [Const("Calling modelformset_factory without defining 'fields' or 'exclude' explicitly is prohibited.")], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'open'), [], None, None))]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None), ('CommandError', None)], 0)]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Assign([AssName('extensions', 'OP_ASSIGN')], CallFunc(Name('tuple'), [CallFunc(Name('handle_extensions'), [Subscript(Name('options'), 'OP_APPLY', [Const('extensions')]), Keyword('ignored', Tuple(()))], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('path', 'OP_ASSIGN')], CallFunc(Name('join'), [CallFunc(Getattr(Name('os'), 'getcwdu'), [], None, None), Name('path')], None, None))]))
except UnicodeEncodeError :
Module(None, Stmt([Assign([AssName('ns_pattern', 'OP_ASSIGN')], Add((Name('ns_pattern'), Name('extra'))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--exclude'), Const('-x'), Keyword('default', List(())), Keyword('dest', Const('exclude')), Keyword('action', Const('append')), Keyword('help', Const('Locales to exclude. Default is none. Can be used multiple times.'))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_pk_field', 'OP_ASSIGN'), AssName('pk', 'OP_ASSIGN')], Getattr(Getattr(Getattr(Name('self'), 'model'), '_meta'), 'pk'))]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('callback'), Const('__name__')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('new_value'), 'append'), [CallFunc(Getattr(Name('self'), 'coerce'), [Name('choice')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('IDENTIFIER', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^[a-z_][a-z0-9_]*$'), Getattr(Name('re'), 'I')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('sys'), 'exit'), [Const(3)], None, None))]))
Module(None, Stmt([Function(None, 'add_item_elements', ['self', 'handler', 'item'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('InvalidCacheBackendError'), [Mod((Const("Could not find backend '%s': %s"), Tuple([Name('backend'), Name('e')])))], None, None), None, None)]))
Module(None, Stmt([Function(None, '_add_fallback', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, 'get', ['self', 'key', 'otherwise'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('with_base_fields'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Bitand([Getattr(CallFunc(Getattr(Name('os'), 'stat'), [Name('path')], None, None), 'st_mode'), Getattr(Name('stat'), 'S_IREAD')]), [('!=', Getattr(Name('stat'), 'S_IREAD'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssTuple([AssName('field_name', 'OP_ASSIGN'), AssName('field_value', 'OP_ASSIGN')]), CallFunc(Getattr(Name('six'), 'iteritems'), [Subscript(Name('d'), 'OP_APPLY', [Const('fields')])], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(And([Name('filename'), CallFunc(Getattr(Slice(Name('filename'), 'OP_APPLY', Add((CallFunc(Getattr(Name('filename'), 'rfind'), [Const('\\')], None, None), Const(1))), None), 'strip'), [], None, None)]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Mod((Const('DELETE FROM %s WHERE cache_key = %%s'), Name('table'))), List([Name('key')])], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('URLValidator'), Name('self')], None, None), '__init__'), [], None, Name('kwargs')))]))
except TypeError :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('email'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('author_email')])], None, None))]))
Module(None, Stmt([If([(Name('args'), Stmt([Pass()]))], None)]))
elif len ( bits ) == 6 :
Module(None, Stmt([Function(None, '__init__', ['self', 'attrs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([AugAssign(Name('i'), '+=', Const(1))]))
Module(None, Stmt([If([(Compare(Name('location'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('title', 'OP_ASSIGN')], Subscript(Name('list_'), 'OP_APPLY', [Name('i')]))]))
Module(None, Stmt([Assign([AssName('m', 'OP_ASSIGN')], CallFunc(Name('dict'), [CallFunc(Name('zip'), [Name('new_keys'), Name('keys')], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Name('row_data'), [('in', Name('seen_data'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Slice(Name('formatted_subject'), 'OP_APPLY', None, Const(989)))]))
Module(None, Stmt([If([(Compare(Name('t'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'save_as_new'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('sub_ul_renderer'), 'choice_input_class', 'OP_ASSIGN')], Getattr(Name('self'), 'choice_input_class'))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('prefix'), 'endswith'), [Const('/')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'is_url', ['self', 'template'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('ContentFile', [Name('File')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'style', 'OP_ASSIGN')], CallFunc(Name('no_style'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('decorator'), Const('__name__')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_num_pages'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils', [('six', None), ('lru_cache', None)], 0)]))
Module(None, Stmt([Class('BadHeaderError', [Name('ValueError')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(List(()))]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('values'), Const('__len__')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], Mod((Name('message'), Tuple([CallFunc(Getattr(Const(', '), 'join'), [Name('missing_fields')], None, None), Getattr(Getattr(Name('opts'), 'model'), '__name__')]))))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'blocks', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Getattr(Name('n'), 'name'), Name('n')]), [GenExprFor(AssName('n', 'OP_ASSIGN'), CallFunc(Getattr(Name('nodelist'), 'get_nodes_by_type'), [Name('BlockNode')], None, None), [])]))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'choice_cache', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Class('WindowsError', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('_standard_context_processors', 'OP_ASSIGN')], CallFunc(Name('tuple'), [Name('processors')], None, None))]))
Module(None, Stmt([Assign([AssName('compile_func', 'OP_ASSIGN')], CallFunc(Name('partial'), [Name('generic_tag_compiler'), Keyword('params', Name('params')), Keyword('varargs', Name('varargs')), Keyword('varkw', Name('varkw')), Keyword('defaults', Name('defaults')), Keyword('name', Name('function_name')), Keyword('takes_context', Name('takes_context')), Keyword('node_class', Name('InclusionNode'))], None, None))]))
Module(None, Stmt([Return(Mod((Const('<BaseConverter: base%s (%s)>'), Tuple([CallFunc(Name('len'), [Getattr(Name('self'), 'digits')], None, None), Getattr(Name('self'), 'digits')]))))]))
@ register . filter ( is_safe = True )
Module(None, Stmt([Assign([AssName('handlers', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'get'), [Const('handlers'), Name('EMPTY_DICT')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'filter'), [Name('name'), Name('func')], None, Name('flags')))]))
Module(None, Stmt([Assign([AssName('nodelist', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'parse'), [Tuple([Const('endfilter')])], None, None))]))
Module(None, Stmt([For(AssName('arg', 'OP_ASSIGN'), Add((CallFunc(Name('list'), [Name('args')], None, None), CallFunc(Name('list'), [CallFunc(Getattr(Name('six'), 'itervalues'), [Name('kwargs')], None, None)], None, None))), Stmt([Pass()]), None)]))
Module(None, Stmt([Class('SimplerXMLGenerator', [Name('XMLGenerator')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('timeval', 'OP_ASSIGN')], CallFunc(Getattr(Name('time'), 'time'), [], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('app_config'), 'models_module'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_raw_ipv6', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('m', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'INDEX_PATTERN'), 'match'), [Name('rest')], None, None))]))
Module(None, Stmt([Assign([AssName('choices', 'OP_ASSIGN')], CallFunc(Name('property'), [Name('_get_choices'), Name('_set_choices')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('fp'), 'write'), [Name('content')], None, None))]))
Module(None, Stmt([Function(None, 'message_dict', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('output_transaction', 'OP_ASSIGN')], Name('True'))]))
try :
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('list'), '__getitem__'), [Name('self'), Name('key')], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('settings'), 'is_overridden'), [Const('TEST_RUNNER')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('response'), 'OP_ASSIGN', [Const('Cache-Control')])], Name('cc'))]))
Module(None, Stmt([From('django.utils.module_loading', [('import_string', None)], 0)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('_active'), Const('value')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.safestring', [('mark_safe', None)], 0)]))
Module(None, Stmt([Function(None, 'handle', ['self', 'args', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Subscript(Name('option'), 'OP_APPLY', [Const(1)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Class('Signer', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('max_num'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('!=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('open_tags'), 'insert'), [Const(0), Name('tagname')], None, None))]))
Module(None, Stmt([From('', [('six', None)], 1)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'interactive'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('digits'), 'insert'), [UnarySub(Name('exponent')), Const('.')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('link'), Const(''), Dict([(Const('rel'), Const('alternate')), (Const('href'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('link')]))])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('sys'), 'exit'), [Name('exit_code')], None, None))]))
Module(None, Stmt([If([(Compare(Name('iterator'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], Mod((Const('System check identified some issues:\n%s'), Name('msg'))))]))
Module(None, Stmt([Function(None, 'forbid_multi_line_headers', ['name', 'val', 'encoding'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('related_att', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('obj'), CallFunc(Getattr(Name('field'), 'get_attname'), [], None, None)], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('x', 'OP_ASSIGN'), AssName('y', 'OP_ASSIGN')]), CallFunc(Name('zip'), [Name('val1'), Name('val2')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('formats'), 'date_format'), [Name('value'), Name('arg')], None, None))]))
Module(None, Stmt([Assign([AssName('msgs', 'OP_ASSIGN')], CallFunc(Getattr(Name('msgs'), 'decode'), [Const('utf-8')], None, None))]))
Module(None, Stmt([Function(None, '__promise__', ['cls', 'klass', 'funcname', 'method'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('saved_locale', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Name('mime_encode'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Name('ip_str'), 'count'), [Const('::')], None, None), [('==', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'date', ['value', 'arg'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'get_language_from_path', ['path'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Getattr(Getattr(Getattr(Name('field'), 'rel'), 'through'), '_meta'), 'auto_created'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_SUCCESS'), [Const(' FAKED')], None, None)], None, None))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY2'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('value'), Const('close')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'add_handlers'), [Name('logger'), Name('handlers')], None, None))]))
Module(None, Stmt([Return(Mod((Const('%s-%s-%s GMT'), Tuple([Slice(Name('rfcdate'), 'OP_APPLY', None, Const(7)), Slice(Name('rfcdate'), 'OP_APPLY', Const(8), Const(11)), Slice(Name('rfcdate'), 'OP_APPLY', Const(12), Const(25))]))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'remove'), [Name('name')], None, None))]))
Module(None, Stmt([From('collections', [('UserList', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Name('update_wrapper'), [Name('_wrapper'), Name('func')], None, None))]))
@ register . tag
Module(None, Stmt([With(CallFunc(Getattr(Name('context_instance'), 'push'), [Name('dictionary')], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([From('importlib', [('import_module', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Name('do_ntranslate'), [Name('singular'), Name('plural'), Name('number'), Const('ungettext')], None, None))]))
elif self . waiting_readers != 0 :
Module(None, Stmt([Assign([AssName('_called_from_command_line', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([With(Getattr(Name('self'), '_lock'), None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssTuple([AssName('uclass', 'OP_ASSIGN'), AssName('unique_check', 'OP_ASSIGN')]), Name('all_unique_checks'), Stmt([Pass()]), None)]))
Module(None, Stmt([Pass()]))
@ property
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('updated'), CallFunc(Name('rfc3339_date'), [CallFunc(Getattr(Name('self'), 'latest_post_date'), [], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('ret', 'OP_ASSIGN')], CallFunc(Getattr(Const(''), 'join'), [Getattr(Name('self'), 'vals')], None, None))]))
Module(None, Stmt([If([(Compare(Name('value'), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('MLStripper', [Name('HTMLParser')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_assert_mutable'), [], None, None))]))
Module(None, Stmt([Assign([AssName('potfiles', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'build_potfiles'), [], None, None))]))
Module(None, Stmt([If([(Compare(Name('size'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('old_attr', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([If([(Not(Name('squash')), Stmt([Pass()]))], None)]))
@ stringfilter
Module(None, Stmt([From('django.template.loader', [('get_template', None)], 0)]))
@ register . filter ( is_safe = False )
Module(None, Stmt([Return(Name('msg_count'))]))
Module(None, Stmt([Function(None, 'is_hidden', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('klass'), 'prefix', 'OP_ASSIGN')], Add((Const('\n'), CallFunc(Name('find_indentation'), [Name('node')], None, None))))]))
Module(None, Stmt([Discard(CallFunc(Name('int'), [Name('value')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_view_middleware'), 'append'), [Getattr(Name('mw_instance'), 'process_view')], None, None))]))
Module(None, Stmt([From('django.utils', [('six', None), ('timezone', None)], 0)]))
Module(None, Stmt([If([(Name('fake'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Compare(Getattr(Name('t'), 'token_type'), [('==', Name('TOKEN_BLOCK'))]), Compare(Getattr(Name('t'), 'contents'), [('==', Const('endcomment'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_setup', ['self'], [], 0, None, Stmt([Pass()]))]))
@ python_2_unicode_compatible
Module(None, Stmt([Function(None, 'U', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('meth', 'OP_ASSIGN')], CallFunc(Getattr(Name('cls'), '__promise__'), [Name('resultclass'), Name('k'), Name('v')], None, None))]))
Module(None, Stmt([Return(Name('token'))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('normalize_newlines'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('qs', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Getattr(Name('self'), 'model'), '_default_manager'), 'get_queryset'), [], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('re'), 'search'), [Const('^[_a-zA-Z]'), Name('name')], None, None)), Stmt([Pass()]))], None)]))
except ( OSError ) :
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('new_method_name', 'OP_ASSIGN')], Subscript(Name('renamed_method'), 'OP_APPLY', [Const(1)]))]))
Module(None, Stmt([Assign([AssName('localedir', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'dirname'), [Name('settingsfile')], None, None), Const('locale')], None, None))]))
Module(None, Stmt([Assign([AssName('deps', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('get_function_defaults', 'OP_ASSIGN')], CallFunc(Getattr(Name('operator'), 'attrgetter'), [Name('_func_defaults')], None, None))]))
Module(None, Stmt([Class('Trans', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('left'))]))
Module(None, Stmt([If([(Compare(Name('input_formats'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Return(Subscript(Name('self'), 'OP_APPLY', [Name('key')]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_coerce'), [Name('value')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'as_ul'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('security_logger'), 'error'), [CallFunc(Name('force_text'), [Name('e')], None, None), Keyword('extra', Dict([(Const('status_code'), Const(400)), (Const('request'), Name('request'))]))], None, None))]))
Module(None, Stmt([From('django.db.migrations', [('Migration', None)], 0)]))
Module(None, Stmt([Return(Name('field_dict'))]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'DEBUG_PROPAGATE_EXCEPTIONS'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'tag', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('self'), Const('_post')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('res', 'OP_ASSIGN')], Slice(Name('subject'), 'OP_APPLY', Name('p'), Name('i')))]))
Module(None, Stmt([Return(Name('changeset'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stream'), 'write'), [Mul((Const('-'), Const(79)))], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('styles'), 'reverse'), [], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('neg'), Stmt([Pass()]))], None)]))
Module(None, Stmt([While(Name('model_dependencies'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'check_migrations'), [], None, None))]))
try :
Module(None, Stmt([Return(Name('s'))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('==', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'symlink'), [Name('original_path'), Name('symlink_path')], None, None))]))
Module(None, Stmt([If([(Compare(Name('field'), [('in', Getattr(Name('form'), 'cleaned_data'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Mod((Const('Variable must be a string or number, got %s'), CallFunc(Name('type'), [Name('var')], None, None)))], None, None), None, None)]))
Module(None, Stmt([Class('MIMEMixin', [], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('__eq__', 'OP_ASSIGN')], CallFunc(Name('new_method_proxy'), [Getattr(Name('operator'), 'eq')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('merge_migrations'), 'append'), [Name('migration')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stream'), 'write'), [Const(']')], None, None))]))
Module(None, Stmt([Discard(CallFunc(CallFunc(Name('getattr'), [Name('combined'), Add((Const('add_'), Name('name')))], None, None), [CallFunc(Name('getattr'), [Name('self'), Add((Const('_'), Name('name'))), Name('None')], None, None)], None, None))]))
Module(None, Stmt([Return(Subscript(Name('output'), 'OP_APPLY', [Sliceobj([Const(None), Const(None), UnarySub(Const(1))])]))]))
Module(None, Stmt([Assign([AssName('page_range', 'OP_ASSIGN')], CallFunc(Name('property'), [Name('_get_page_range')], None, None))]))
Module(None, Stmt([For(AssName('f', 'OP_ASSIGN'), Getattr(Getattr(Getattr(Name('self'), 'instance'), '_meta'), 'fields'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('flup_module', 'OP_ASSIGN')], Add((Const('server.'), Subscript(Name('options'), 'OP_APPLY', [Const('protocol')]))))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'as_widget'), [CallFunc(Getattr(Getattr(Name('self'), 'field'), 'hidden_widget'), [], None, None), Name('attrs')], None, Name('kwargs')))]))
Module(None, Stmt([From('django.db', [('models', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([If([(Compare(Getattr(Name('e'), 'errno'), [('!=', Getattr(Name('errno'), 'ENOENT'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.functional', [('curry', None), ('Promise', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('_file'), 'write'), [Name('chunk')], None, None))]))
Module(None, Stmt([Function(None, 'getvalue', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'render', ['self', 'name', 'value', 'attrs'], [Name('None')], 0, None, Stmt([Pass()]))]))
except ImproperlyConfigured as exc :
Module(None, Stmt([Assign([AssName('dictConfigClass', 'OP_ASSIGN')], Name('DictConfigurator'))]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Name('p'), 'find'), [Const(':_(')], None, None), [('>=', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('str'), [Name('o')], None, None))]))
Module(None, Stmt([Function(None, '_get_width', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_post_render_callbacks'), 'append'), [Name('callback')], None, None))]))
Module(None, Stmt([Class('Node', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('EscapeBytes'), [CallFunc(Name('bytes'), [Name('s')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('random', 'OP_ASSIGN')], CallFunc(Getattr(Name('random'), 'SystemRandom'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'endElement'), [Const('natural')], None, None))]))
Module(None, Stmt([Return(Name('attrs'))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('template_name'), Tuple([Name('list'), Name('tuple')])], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'handle_m2m_field', ['self', 'obj', 'field'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('==', Const(4))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('Truncator'), [Name('value')], None, None), 'chars'), [Name('length'), Keyword('html', Name('True'))], None, None))]))
Module(None, Stmt([Assign([AssName('obj_pk', 'OP_ASSIGN')], Getattr(Name('obj_pk'), 'pk'))]))
Module(None, Stmt([If([(Compare(Name('value'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__len__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const("No fixture '%s' in %s."), Tuple([Name('fixture_name'), CallFunc(Name('humanize'), [Name('fixture_dir')], None, None)])))], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'attrs', 'OP_ASSIGN'), AssAttr(Name('self'), 'choices', 'OP_ASSIGN')])], Tuple([Name('attrs'), Name('choices')]))]))
Module(None, Stmt([Assign([AssName('supported', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('ttl', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('ttl')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'ops'), 'process_clob'), [Subscript(Name('row'), 'OP_APPLY', [Const(1)])], None, None))]))
Module(None, Stmt([Assign([AssName('parentloop', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'xgettext_options', 'OP_ASSIGN')], Add((Slice(Getattr(Name('self'), 'xgettext_options'), 'OP_APPLY', None, None), List([Const('--no-location')]))))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'get_ns_resolver', ['ns_pattern', 'resolver'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('context', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'resolve_context'), [Getattr(Name('self'), 'context_data')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('widget'), Name('NumberInput')], None, None), Stmt([Pass()]))], None)]))
except TypeError :
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_assert_mutable'), [], None, None))]))
Module(None, Stmt([Assign([AssName('orig_vars', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('cls'), '__dict__'), 'copy'), [], None, None))]))
Module(None, Stmt([Assign([AssName('translation', 'OP_ASSIGN')], CallFunc(Getattr(Name('gettext_module'), 'translation'), [Keyword('domain', Const('django')), Keyword('localedir', Name('localedir')), Keyword('languages', List([Getattr(Name('self'), '__locale')])), Keyword('codeset', Const('utf-8')), Keyword('fallback', Name('use_null_fallback'))], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('environ'), 'get'), [CallFunc(Name('str'), [Name('key')], None, None), CallFunc(Name('str'), [Name('default')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'resolve', ['self', 'path'], [], 0, None, Stmt([Pass()]))]))
raise AppRegistryNotReady (  "The translation infrastructure cannot be initialized before the "  "apps registry is ready. Check that you don't make non-lazy "  "gettext calls at import time." )
Module(None, Stmt([Function(None, 'reader', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('list'), [Name('value')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('No handler found with name %r'), Name('name')))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('sys'), 'stderr'), 'write'), [Const('  installed flup, then make sure you have it in your PYTHONPATH.\n')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'backout'), 'append'), [Getattr(Name('self'), 'pointer')], None, None))]))
try :
Module(None, Stmt([Assign([AssName('val', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('val')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('bool'), [Name('value')], None, None))]))
Module(None, Stmt([Return(Name('ZERO'))]))
try :
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('s'), Name('bytes')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('m', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'WORD_PATTERN'), 'match'), [Name('rest')], None, None))]))
Module(None, Stmt([Function(None, 'end_serialization', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'endElement'), [Const('django-objects')], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('six'), 'iteritems'), [Name('dict_')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('words', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('words')], None, None))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Class('CommandParser', [Name('ArgumentParser')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('optimizer', 'OP_ASSIGN')], CallFunc(Name('MigrationOptimizer'), [], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('field'), 'widget'), 'value_from_datadict'), [Getattr(Name('self'), 'data'), Getattr(Name('self'), 'files'), CallFunc(Getattr(Name('self'), 'add_prefix'), [Name('name')], None, None)], None, None))]))
Module(None, Stmt([Return(Getattr(Name('value'), 'pk'))]))
try :
else :
Module(None, Stmt([Function(None, '__add__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('bytes'), [Name('s')], None, None))]))
Module(None, Stmt([Assign([AssName('new', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([Class('CachedDnsName', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('httpd_cls', 'OP_ASSIGN')], Name('WSGIServer'))]))
Module(None, Stmt([Assign([AssAttr(Name('sys'), 'stdout', 'OP_ASSIGN')], CallFunc(Name('NullDevice'), [], None, None))]))
Module(None, Stmt([Assign([AssName('current_timezone', 'OP_ASSIGN')], CallFunc(Getattr(Name('timezone'), 'get_current_timezone'), [], None, None))]))
Module(None, Stmt([Assign([AssName('space', 'OP_ASSIGN')], Const(' '))]))
@ register . filter ( is_safe = True )
Module(None, Stmt([Assign([AssAttr(Name('self'), '_callback_str', 'OP_ASSIGN')], Name('callback'))]))
Module(None, Stmt([Assign([AssAttr(Name('response'), 'streaming_content', 'OP_ASSIGN')], List(()))]))
try :
Module(None, Stmt([Assign([AssName('app_label', 'OP_ASSIGN')], Name('label'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'remaining', 'OP_ASSIGN')], Name('limit'))]))
Module(None, Stmt([For(AssName('item', 'OP_ASSIGN'), Getattr(Name('self'), 'items'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'GET', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'decimal_places'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Getattr(Name('self'), '_empty_value'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'verbosity', 'OP_ASSIGN')], Subscript(Name('options'), 'OP_APPLY', [Const('verbosity')]))]))
Module(None, Stmt([Discard(CallFunc(Name('reloader'), [Name('wrapped_main_func'), Name('args'), Name('kwargs')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'pop'), [], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('inner', 'OP_ASSIGN'), AssName('outer', 'OP_ASSIGN')])], Tuple([CallFunc(Name('digest'), [], None, None), CallFunc(Name('digest'), [], None, None)]))]))
Module(None, Stmt([Discard(CallFunc(Name('v'), [Name('value')], None, None))]))
Module(None, Stmt([If([(And([Getattr(Name('six'), 'PY2'), Not(CallFunc(Name('isinstance'), [Name('path'), Name('bytes')], None, None))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([Subscript(Name('link_prev'), 'OP_ASSIGN', [Name('NEXT')])], Name('link_next'))]))
try :
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('datetime_safe'), 'new_datetime'), [Name('value')], None, None))]))
Module(None, Stmt([Class('IfChangedNode', [Name('Node')], None, Stmt([Pass()]), None)]))
elif args [ 1 ] [ 0 ] == '4' :
Module(None, Stmt([If([(Compare(Getattr(Name('value'), '__traceback__'), [('is not', Name('tb'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'clear_checkbox_name', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('json'), 'dump'), [CallFunc(Getattr(Name('self'), 'get_dump_object'), [Name('obj')], None, None), Getattr(Name('self'), 'stream'), Keyword('cls', Name('DjangoJSONEncoder'))], None, Getattr(Name('self'), 'json_kwargs')))]))
Module(None, Stmt([Function(None, 'value_from_datadict', ['self', 'data', 'files', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('stream_or_string'), Tuple([Name('bytes'), Getattr(Name('six'), 'string_types')])], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('from_current_timezone'), [Name('result')], None, None))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Assign([AssName('request_repr', 'OP_ASSIGN')], CallFunc(Getattr(Const('\n{0}'), 'format'), [CallFunc(Getattr(Name('filter'), 'get_request_repr'), [Name('request')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('escaped', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Function(None, 'http_date', ['epoch_seconds'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'current_token', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'next_token'), [], None, None))]))
except StandardError as e :
Module(None, Stmt([Discard(CallFunc(Name('update_wrapper'), [Name('_wrapper'), Name('dummy')], None, None))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
try :
Module(None, Stmt([Class('LocaleRegexURLResolver', [Name('RegexURLResolver')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Subscript(Name('item'), 'OP_APPLY', [Const('description')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('item', 'OP_ASSIGN')], Dict([(Const('title'), CallFunc(Name('to_unicode'), [Name('title')], None, None)), (Const('link'), CallFunc(Name('iri_to_uri'), [Name('link')], None, None)), (Const('description'), CallFunc(Name('to_unicode'), [Name('description')], None, None)), (Const('author_email'), CallFunc(Name('to_unicode'), [Name('author_email')], None, None)), (Const('author_name'), CallFunc(Name('to_unicode'), [Name('author_name')], None, None)), (Const('author_link'), CallFunc(Name('iri_to_uri'), [Name('author_link')], None, None)), (Const('pubdate'), Name('pubdate')), (Const('updateddate'), Name('updateddate')), (Const('comments'), CallFunc(Name('to_unicode'), [Name('comments')], None, None)), (Const('unique_id'), CallFunc(Name('to_unicode'), [Name('unique_id')], None, None)), (Const('unique_id_is_permalink'), Name('unique_id_is_permalink')), (Const('enclosure'), Name('enclosure')), (Const('categories'), Or([Name('categories'), Tuple(())])), (Const('item_copyright'), CallFunc(Name('to_unicode'), [Name('item_copyright')], None, None)), (Const('ttl'), Name('ttl'))]))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'delete_many', ['self', 'keys', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_choices'))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('TemporaryFileUploadHandler'), Name('self')], None, None), 'new_file'), [Name('file_name')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('self'), 'options'), 'get'), [Const('indent')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('categories'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('error_messages', 'OP_ASSIGN')], Or([CallFunc(Getattr(Name('kwargs'), 'get'), [Const('error_messages')], None, None), Dict(())]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'json_kwargs', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'options'), 'copy'), [], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('value')], None, None))]))
Module(None, Stmt([If([(Compare(Name('value'), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('ipv4_unpacked', 'OP_ASSIGN')], CallFunc(Name('_unpack_ipv4'), [Name('ip_str')], None, None))]))
Module(None, Stmt([Assign([AssName('COMMENT_TAG_START', 'OP_ASSIGN')], Const('{#'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Getattr(Name('self'), 'setlistdefault'), [Name('key')], None, None), 'append'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('filters'), 'OP_ASSIGN', [Name('name')])], CallFunc(Getattr(Name('self'), 'configure_filter'), [Subscript(Name('filters'), 'OP_APPLY', [Name('name')])], None, None))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Class('ComboField', [Name('Field')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Getattr(Name('arg'), 'split'), [Const(',')], None, None))]))
Module(None, Stmt([From('os.path', [('join', None), ('normcase', None), ('normpath', None), ('abspath', None), ('isabs', None), ('sep', None), ('dirname', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'choices'), 'append'), [Tuple([Name('f'), CallFunc(Getattr(Name('f'), 'replace'), [Name('path'), Const(''), Const(1)], None, None)])], None, None))]))
Module(None, Stmt([Return(Const('StopUpload: Consume request data, then halt.'))]))
Module(None, Stmt([If([(Compare(Getattr(Name('app_config'), 'models_module'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Getattr(Name('self'), '_dir')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'startDocument'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('list'), [CallFunc(Name('reversed'), [Name('modules')], None, None)], None, None))]))
else :
Module(None, Stmt([If([(Name('inplural'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'pprint', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'new_file', ['self', 'file_name', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Assign([AssName('infos', 'OP_ASSIGN')], ListComp(Name('e'), [ListCompFor(AssName('e', 'OP_ASSIGN'), Name('all_issues'), [ListCompIf(And([Compare(Getattr(Name('checks'), 'INFO'), [('<=', Getattr(Name('e'), 'level')), ('<', Getattr(Name('checks'), 'WARNING'))]), Not(CallFunc(Getattr(Name('e'), 'is_silenced'), [], None, None))]))])]))]))
Module(None, Stmt([Assign([AssName('src_data', 'OP_ASSIGN')], CallFunc(Name('prepare_js_for_gettext'), [Name('src_data')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('substitutions'), 'OP_ASSIGN', [Const('clear_checkbox_id')])], CallFunc(Name('conditional_escape'), [Name('checkbox_id')], None, None))]))
Module(None, Stmt([If([(Compare(Const('pk'), [('in', Name('d'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('line', 'OP_ASSIGN')], Mod((Const('%s\n'), Name('plural_form_line'))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_HEADING'), [Const('Optimizing...')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('final_attrs', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'build_attrs'), [Name('attrs'), Keyword('type', Getattr(Name('self'), 'input_type')), Keyword('name', Name('name'))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'utime'), [Name('dst'), Tuple([Getattr(Name('st'), 'st_atime'), Getattr(Name('st'), 'st_mtime')])], None, None))]))
Module(None, Stmt([If([(Not(Name('basedirs')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('func'), [Getattr(Name('self'), '_wrapped')], Name('args'), None))]))
else :
Module(None, Stmt([Return(Mod((Const('<%s: %r>'), Tuple([Getattr(CallFunc(Name('type'), [Name('self')], None, None), '__name__'), Name('repr_attr')]))))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'keyOrder'), 'append'), [Name('key')], None, None))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Return(Mod((Const('%02d'), Getattr(Getattr(Name('self'), 'data'), 'day'))))]))
Module(None, Stmt([Function(None, 'format_html_join', ['sep', 'format_string', 'args_generator'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_set_name', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('nodelist', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'parse'), [Tuple([Const('endwith')])], None, None))]))
Module(None, Stmt([If([(Name('match'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('bool'), [Name('value')], None, None))]))
Module(None, Stmt([Function(None, '__reduce__', ['self'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('initial'), Name('list')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'as_widget', ['self', 'widget', 'attrs', 'only_initial'], [Name('None'), Name('None'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('token'), 'contents'), 'split'), [], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), 'source'))]))
Module(None, Stmt([Assign([AssName('_assertCountEqual', 'OP_ASSIGN')], Const('assertCountEqual'))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(Name('s'), 'decode'), [Const('utf-8'), Name('errors')], None, None), 'encode'), [Name('encoding'), Name('errors')], None, None))]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], Const('make sure the name begins with a letter or underscore'))]))
Module(None, Stmt([Assign([Subscript(Name('data'), 'OP_ASSIGN', [Const('pk')])], CallFunc(Name('smart_text'), [CallFunc(Getattr(Name('obj'), '_get_pk_val'), [], None, None), Keyword('strings_only', Name('True'))], None, None))]))
Module(None, Stmt([Assign([AssName('qs', 'OP_ASSIGN')], CallFunc(Getattr(Name('qs'), 'order_by'), [Getattr(Getattr(Getattr(Getattr(Name('self'), 'model'), '_meta'), 'pk'), 'name')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("couldn't extract file %s to %s: %s"), Tuple([Name('filename'), Name('tempdir'), Name('e')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'connection', 'OP_ASSIGN')], CallFunc(Name('connection_class'), [Getattr(Name('self'), 'host'), Getattr(Name('self'), 'port')], None, Name('connection_params')))]))
Module(None, Stmt([If([(Name('autoescape'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('mail'), Const('outbox')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('module', 'OP_ASSIGN')], CallFunc(Name('type'), [Const('BadSerializerModule'), Tuple([Name('object')]), Dict([(Const('Deserializer'), Name('bad_serializer')), (Const('Serializer'), Name('bad_serializer'))])], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('bytes_to_text'), [Name('value'), Getattr(Name('self'), 'encoding')], None, None))]))
Module(None, Stmt([Return(Const(0))]))
Module(None, Stmt([Assign([AssName('want_unicode', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([From('django.utils.six.moves', [('cPickle', 'pickle')], 0)]))
Module(None, Stmt([Assign([AssName('i', 'OP_ASSIGN')], Mod((Name('i'), Name('j'))))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Getattr(Name('self'), 'field'), 'widget'), 'value_from_datadict'), [Getattr(Getattr(Name('self'), 'form'), 'data'), Getattr(Getattr(Name('self'), 'form'), 'files'), Getattr(Name('self'), 'html_name')], None, None))]))
Module(None, Stmt([Import([('glob', None)])]))
Module(None, Stmt([Assign([AssName('new_name', 'OP_ASSIGN')], CallFunc(Getattr(Name('new_name'), 'replace'), [Const('__'), Const('_')], None, None))]))
Module(None, Stmt([If([(Compare(Name('name'), [('==', Const('regex'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('_file'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
elif _len ( cache ) >= maxsize :
Module(None, Stmt([Subscript(Getattr(Name('form'), 'cleaned_data'), 'OP_DELETE', [Name('field')])]))
Module(None, Stmt([Return(Name('value'))]))
@ classmethod
Module(None, Stmt([For(AssName('app_config', 'OP_ASSIGN'), CallFunc(Getattr(Name('apps'), 'get_app_configs'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('e'), 'django_template_source', 'OP_ASSIGN')], Name('source'))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('escape'), [Name('value')], None, None))]))
Module(None, Stmt([If([(Compare(Name('format'), [('not in', CallFunc(Getattr(Name('serializers'), 'get_public_serializer_formats'), [], None, None))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([AssName('end', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('end'), Name('None')], None, None))]))
Module(None, Stmt([For(AssName('template_name', 'OP_ASSIGN'), Name('template_name_list'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'write_pot_file', ['potfile', 'msgs'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('message'), 'message', 'OP_ASSIGN')], Subscript(Name('error_messages'), 'OP_APPLY', [Getattr(Name('message'), 'code')]))]))
Module(None, Stmt([Function(None, '__copy__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_tzname', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'tzname'), [Name('dt')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('FileField'), Name('self')], None, None), 'clean'), [Name('data')], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Name('name'), 'lower'), [], None, None), [('==', Const('subject'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('total_forms'))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('copy', None)])]))
Module(None, Stmt([Return(Not(Or([Compare(CallFunc(Name('converter'), [Getattr(Name('opts'), 'db_table')], None, None), [('in', Name('tables'))]), And([Getattr(Name('opts'), 'auto_created'), Compare(CallFunc(Name('converter'), [Getattr(Getattr(Getattr(Name('opts'), 'auto_created'), '_meta'), 'db_table')], None, None), [('in', Name('tables'))])])])))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'lasttag', 'OP_ASSIGN'), AssName('tag', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('match'), 'group'), [Const(1)], None, None), 'lower'), [], None, None))]))
Module(None, Stmt([If([(Name('kwarg'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('request_finished', 'OP_ASSIGN')], CallFunc(Name('Signal'), [], None, None))]))
Module(None, Stmt([Discard(Yield(CallFunc(Getattr(Const(''), 'join'), [Name('self')], None, None)))]))
except ImportError as e :
Module(None, Stmt([Assign([AssName('comment_notes', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, '__enter__', ['self'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([For(AssName('match', 'OP_ASSIGN'), Name('matches'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Getattr(Getattr(Getattr(Name('self'), 'fk'), 'rel'), 'field_name'), [('!=', Getattr(Getattr(Getattr(Getattr(Getattr(Getattr(Name('self'), 'fk'), 'rel'), 'to'), '_meta'), 'pk'), 'name'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.text', [('normalize_newlines', None), ('slugify', '_slugify')], 0)]))
@ register . filter ( is_safe = False )
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], List([Const('activate'), Const('deactivate'), Const('override'), Const('deactivate_all'), Const('get_language'), Const('get_language_from_request'), Const('get_language_info'), Const('get_language_bidi'), Const('check_for_language'), Const('to_locale'), Const('templatize'), Const('string_concat'), Const('gettext'), Const('gettext_lazy'), Const('gettext_noop'), Const('ugettext'), Const('ugettext_lazy'), Const('ugettext_noop'), Const('ngettext'), Const('ngettext_lazy'), Const('ungettext'), Const('ungettext_lazy'), Const('pgettext'), Const('pgettext_lazy'), Const('npgettext'), Const('npgettext_lazy'), Const('LANGUAGE_SESSION_KEY')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Name('label_output')], None, None))]))
Module(None, Stmt([Assign([AssName('status_code', 'OP_ASSIGN')], Const(405))]))
Module(None, Stmt([Assign([AssName('out', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'compress'), [Name('clean_data')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'var_name', 'OP_ASSIGN')], Name('var_name'))]))
Module(None, Stmt([Function(None, 'new', ['self', 'values'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid_choice')]), Keyword('code', Const('invalid_choice')), Keyword('params', Dict([(Const('value'), Name('choice'))]))], None, None), None, None)]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('app_label', 'OP_ASSIGN'), AssName('migration_name', 'OP_ASSIGN')])], Tuple([Subscript(Name('options'), 'OP_APPLY', [Const('app_label')]), Subscript(Name('options'), 'OP_APPLY', [Const('migration_name')])]))]))
Module(None, Stmt([Function(None, 'value_from_datadict', ['self', 'data', 'files', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('vary_on'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('results'))]))
Module(None, Stmt([Assign([AssName('potfile', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Getattr(Name('self'), 'locale_dir'), Mod((Const('%s.pot'), CallFunc(Name('str'), [Name('domain')], None, None)))], None, None))]))
Module(None, Stmt([Return(Name('value'))]))
else :
Module(None, Stmt([Return(Compare(Name('ret'), [('==', Const(0))]))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of BaseEmailBackend must override send_messages() method')], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Mod((Const('UPDATE %s SET value = %%s, expires = %%s WHERE cache_key = %%s'), Name('table'))), List([Name('b64encoded'), Name('exp'), Name('key')])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'handle_endtag'), [CallFunc(Getattr(Name('tag'), 'lower'), [], None, None)], None, None))]))
Module(None, Stmt([From('django.utils.html', [('escape', None)], 0)]))
try :
Module(None, Stmt([Assign([AssName('all_locales', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('parts', 'OP_ASSIGN')], Slice(Name('parts'), 'OP_APPLY', None, UnarySub(Const(1))))]))
Module(None, Stmt([If([(CallFunc(Getattr(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'abspath'), [Name('dirpath')], None, None), 'startswith'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'dirname'), [Name('path')], None, None)], None, None), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Function(None, 'handle_m2m', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('comment_lineno_cache'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.db.migrations.loader', [('MigrationLoader', None), ('AmbiguityError', None)], 0)]))
Module(None, Stmt([If([(Not(Getattr(Name('token'), 'contents')), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('PIL', [('ImageFile', 'PillowImageFile')], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('translation'), 'activate'), [Name('saved_locale')], None, None))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'validate_min'), Compare(Sub((CallFunc(Getattr(Name('self'), 'total_form_count'), [], None, None), CallFunc(Name('len'), [Getattr(Name('self'), 'deleted_forms')], None, None))), [('<', Getattr(Name('self'), 'min_num'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('base'), Const('base_fields')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'attrs', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'pos'), '+=', Const(1))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'set_cdata_mode'), [Name('tag')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('defaults', 'OP_ASSIGN'), AssName('_', 'OP_ASSIGN')])], CallFunc(Getattr(Name('parser'), 'parse_args'), [Keyword('args', List(()))], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('SyntaxError'), [Mod((Const('Translation blocks must not include other block tags: %s (%sline %d)'), Tuple([Getattr(Name('t'), 'contents'), Name('filemsg'), Getattr(Name('t'), 'lineno')])))], None, None), None, None)]))
Module(None, Stmt([If([(Getattr(Name('bf'), 'label'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Mod((Const('%02d'), Getattr(Getattr(Name('self'), 'data'), 'minute'))))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Assign([AssName('msgs', 'OP_ASSIGN')], CallFunc(Getattr(Name('msgs'), 'replace'), [Mod((Const('#. #-#-#-#-#  %s.pot (PACKAGE VERSION)  #-#-#-#-#\n'), Getattr(Name('self'), 'domain'))), Const('')], None, None))]))
Module(None, Stmt([Assign([AssName('root', 'OP_ASSIGN')], Getattr(Name('logging'), 'root'))]))
else :
Module(None, Stmt([Function(None, '_create_mime_attachment', ['self', 'content', 'mimetype'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('DEFAULT_MIN_NUM', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'key_func', 'OP_ASSIGN')], CallFunc(Name('get_key_func'), [CallFunc(Getattr(Name('params'), 'get'), [Const('KEY_FUNCTION'), Name('None')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('codecs'), 'lookup'), [Subscript(Name('content_params'), 'OP_APPLY', [Const('charset')])], None, None))]))
@ wraps ( func )
Module(None, Stmt([Return(Name('nodelist'))]))
Module(None, Stmt([Assign([AssName('pks', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('primary_keys')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Name('statement')], None, None))]))
Module(None, Stmt([From('django.core.cache.backends.base', [('BaseCache', None), ('DEFAULT_TIMEOUT', None)], 0)]))
Module(None, Stmt([If([(Name('definition'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Name('app_output')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('yes', 'OP_ASSIGN'), AssName('no', 'OP_ASSIGN'), AssName('maybe', 'OP_ASSIGN')])], Tuple([Subscript(Name('bits'), 'OP_APPLY', [Const(0)]), Subscript(Name('bits'), 'OP_APPLY', [Const(1)]), Subscript(Name('bits'), 'OP_APPLY', [Const(1)])]))]))
Module(None, Stmt([Assign([AssAttr(Name('exc_value'), '__cause__', 'OP_ASSIGN')], Name('exc'))]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([Return(Getattr(Name('timezone'), 'zone'))]))
Module(None, Stmt([If([(Compare(Name('app_label'), [('not in', Getattr(Getattr(Name('executor'), 'loader'), 'migrated_apps'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'mapping'), 'get'), [Getattr(Name('self'), 'tagtype'), Const('')], None, None))]))
exts = extensions if extensions else [ 'js' ]
Module(None, Stmt([Discard(CallFunc(Getattr(Name('codecs'), 'lookup'), [Name('encoding')], None, None))]))
Module(None, Stmt([Function(None, 'fastcgi_help', ['message'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('binascii'), 'unhexlify'), [CallFunc(Getattr(Mod((Name('hex_format_string'), Name('x'))), 'encode'), [Const('ascii')], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'locale_paths'), 'append'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'abspath'), [Const('locale')], None, None)], None, None))]))
Module(None, Stmt([From('django.utils.translation', [('ugettext_lazy', '_'), ('ungettext_lazy', None)], 0)]))
Module(None, Stmt([Assign([AssName('color_names', 'OP_ASSIGN')], Tuple([Const('black'), Const('red'), Const('green'), Const('yellow'), Const('blue'), Const('magenta'), Const('cyan'), Const('white')]))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const('"with" in %r tag needs at least one keyword argument.'), Subscript(Name('bits'), 'OP_APPLY', [Const(0)])))], None, None), None, None)]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('script_name'), 'decode'), [Name('UTF_8')], None, None))]))
Module(None, Stmt([While(Compare(CallFunc(Name('len'), [Name('line')], None, None), [('>', Name('max_width'))]), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'regexes'), 'OP_ASSIGN', [Name('state')])], CallFunc(Getattr(Name('re'), 'compile'), [CallFunc(Getattr(Const('|'), 'join'), [Name('parts')], None, None), Bitor([Getattr(Name('re'), 'MULTILINE'), Getattr(Name('re'), 'VERBOSE')])], None, None))]))
Module(None, Stmt([For(AssName('name', 'OP_ASSIGN'), Name('namelist'), Stmt([Pass()]), None)]))
Module(None, Stmt([Class('Module_six_moves_urllib_parse', [Name('_LazyModule')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('value'), 'lower'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'chunk_size', 'OP_ASSIGN')], Name('chunk_size'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('FileField'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Name('user_function'), [], Name('args'), Name('kwds')))]))
Module(None, Stmt([Return(CallFunc(Name('force_text'), [CallFunc(Getattr(Name('widget'), 'render'), [Name('name'), CallFunc(Getattr(Name('self'), 'value'), [], None, None), Keyword('attrs', Name('attrs'))], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('options', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Return(Name('attrs'))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([If([(Name('tried'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.encoding', [('smart_text', None), ('force_str', None), ('force_text', None)], 0)]))
Module(None, Stmt([Function(None, '_handle_object', ['self', 'node'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('i', 'OP_ASSIGN')], CallFunc(Name('next_space_index'), [Name('subject'), Name('i')], None, None))]))
Module(None, Stmt([Assign([AssName('decimal_separator', 'OP_ASSIGN')], CallFunc(Name('get_format'), [Const('DECIMAL_SEPARATOR')], None, None))]))
try :
else :
Module(None, Stmt([Assign([AssName('token', 'OP_ASSIGN')], CallFunc(Name('get_token'), [Name('request')], None, None))]))
Module(None, Stmt([If([(Not(Subscript(Name('hextets'), 'OP_APPLY', [Name('index')])), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('ctx', 'OP_ASSIGN')], CallFunc(Getattr(Name('hashlib'), 'md5'), [], None, None))]))
else :
Module(None, Stmt([Assign([AssName('token', 'OP_ASSIGN')], Const('not in'))]))
Module(None, Stmt([Subscript(Getattr(Name('self'), '_cache'), 'OP_DELETE', [Name('key')])]))
Module(None, Stmt([Assign([AssName('klass', 'OP_ASSIGN')], CallFunc(Name('import_string'), [Or([Name('backend'), Getattr(Name('settings'), 'EMAIL_BACKEND')])], None, None))]))
Module(None, Stmt([Function(None, 'expression', ['self', 'rbp'], [Const(0)], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('ret', 'OP_ASSIGN')], CallFunc(Name('UnlockFileEx'), [Name('hfile'), Const(0), Const(0), Const(4294901760), CallFunc(Name('byref'), [Name('overlapped')], None, None)], None, None))]))
Module(None, Stmt([If([(Or([Compare(CallFunc(Name('int'), [Name('hextet'), Const(16)], None, None), [('<', Const(0))]), Compare(CallFunc(Name('int'), [Name('hextet'), Const(16)], None, None), [('>', Const(65535))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('declared_fields'), 'pop'), [Name('attr')], None, None))]))
Module(None, Stmt([Return(Const(1))]))
Module(None, Stmt([For(AssName('chunk', 'OP_ASSIGN'), Name('field_stream'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('matches', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Function(None, 'filesizeformat', ['bytes'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('\n'), 'join'), [Name('output')], None, None))]))
Module(None, Stmt([Assign([AssName('status_code', 'OP_ASSIGN')], Const(301))]))
Module(None, Stmt([If([(Compare(Name('model_list'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('cmp_fmt', 'OP_ASSIGN')], Subscript(Name('parts'), 'OP_APPLY', [UnarySub(Const(1))]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('urlresolvers'), 'set_urlconf'), [Name('urlconf')], None, None))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('exclude'), 'append'), [Name('name')], None, None))]))
else :
Module(None, Stmt([Assign([AssName('file', 'OP_ASSIGN')], Name('file_or_path'))]))
Module(None, Stmt([If([(Compare(Name('model'), [('not in', Name('app_list_value'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('force_str'), [Name('value')], None, None))]))
Module(None, Stmt([Function(None, 'get_unbound_function', ['unbound'], [], 0, None, Stmt([Pass()]))]))
elif command . verbosity > 0 :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_files', 'OP_ASSIGN')], CallFunc(Name('MultiValueDict'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('self'), 'callback'), [Name('record')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Return(CallFunc(Name('smart_text'), [Name('obj')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('level'), Name('int')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('file_root', 'OP_ASSIGN'), AssName('file_ext', 'OP_ASSIGN')])], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'splitext'), [Name('file_name')], None, None))]))
Module(None, Stmt([AugAssign(Name('opt_label'), '+=', Const('='))]))
Module(None, Stmt([Class('HiddenInput', [Name('Input')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('arg', 'OP_ASSIGN')], Subscript(Name('args'), 'OP_APPLY', [Const(1)]))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('html'), 'OP_ASSIGN', [Const('year')])], CallFunc(Getattr(Name('self'), 'create_select'), [Name('name'), Getattr(Name('self'), 'year_field'), Name('value'), Name('year_val'), Name('choices'), Getattr(Name('self'), 'year_none_value')], None, None))]))
@ register . filter ( is_safe = False )
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('sys'), 'stdout', 'OP_ASSIGN'), AssAttr(Name('sys'), 'stderr', 'OP_ASSIGN')])], Tuple([Name('so'), Name('se')]))]))
Module(None, Stmt([Assign([AssName('attrs_plus', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'attrs'), 'copy'), [], None, None))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([AugAssign(Subscript(Name('stats'), 'OP_APPLY', [Name('HITS')]), '+=', Const(1))]))
Module(None, Stmt([Assign([AssName('locales', 'OP_ASSIGN')], Or([Name('locale'), Name('all_locales')]))]))
except LookupError :
else :
Module(None, Stmt([Return(CallFunc(Name('SafeText'), [Name('data')], None, None))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Function(None, 'display', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('expires'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('propagate'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('selected_choices', 'OP_ASSIGN')], CallFunc(Name('set'), [GenExpr(GenExprInner(CallFunc(Name('force_text'), [Name('v')], None, None), [GenExprFor(AssName('v', 'OP_ASSIGN'), Name('selected_choices'), [])]))], None, None))]))
Module(None, Stmt([Assign([AssName('cleaned_line', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('comment_re'), 'sub'), [Const('\\1'), Name('line')], None, None), 'strip'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('_urlconfs'), 'value', 'OP_ASSIGN')], Name('urlconf_name'))]))
except ( HTMLParseError , UnboundLocalError ) :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [CallFunc(Getattr(Name('widget'), 'render'), [Add((Name('name'), Mod((Const('_%s'), Name('i'))))), Name('widget_value'), Name('final_attrs')], None, None)], None, None))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('readinto', 'OP_ASSIGN')], CallFunc(Name('property'), [Lambda(['self'], [], 0, Getattr(Getattr(Name('self'), 'file'), 'readinto'))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'append'), [CallFunc(Name('Group'), [Tuple([Mod((Const('%%(%s)s'), Name('name'))), Name('name')])], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('chunk_length', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('chunk')], None, None))]))
Module(None, Stmt([Return(Mod((Const('(NOT (%s: %s))'), Tuple([Getattr(Name('self'), 'connector'), CallFunc(Getattr(Const(', '), 'join'), [ListComp(CallFunc(Name('str'), [Name('c')], None, None), [ListCompFor(AssName('c', 'OP_ASSIGN'), Getattr(Name('self'), 'children'), [])])], None, None)]))))]))
Module(None, Stmt([Import([('io', None)])]))
Module(None, Stmt([For(AssName('k', 'OP_ASSIGN'), Name('keys'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('labels'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('handler'), 'file'), 'close'), [], None, None))]))
Module(None, Stmt([Class('EndToken', [Name('TokenBase')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'get', ['self', 'key', 'default', 'version'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'takes_context', 'OP_ASSIGN')], Name('takes_context'))]))
Module(None, Stmt([AugAssign(Name('hextets'), '+=', List([Const('')]))]))
Module(None, Stmt([Assign([AssName('__unicode__', 'OP_ASSIGN')], CallFunc(Name('new_method_proxy'), [Name('unicode')], None, None))]))
Module(None, Stmt([Function(None, 'handle', ['self', 'test_labels', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('bf', 'OP_ASSIGN')], Subscript(Name('self'), 'OP_APPLY', [Name('name')]))]))
Module(None, Stmt([Return(Name('ret'))]))
Module(None, Stmt([Assign([AssName('default_storage', 'OP_ASSIGN')], CallFunc(Name('DefaultStorage'), [], None, None))]))
Module(None, Stmt([For(AssName('key', 'OP_ASSIGN'), Getattr(Name('self'), 'bad_cookies'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('response'), 'has_header'), [Const('Expires')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('force_text'), [Name('s'), Name('encoding'), Name('strings_only'), Name('errors')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('ValidationError'), Name('self')], None, None), '__init__'), [Name('message'), Name('code'), Name('params')], None, None))]))
Module(None, Stmt([Assign([AssName('UNKNOWN_SOURCE', 'OP_ASSIGN')], Const('<unknown source>'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'getvalue'), [], None, None))]))
Module(None, Stmt([Assign([AssName('app_models', 'OP_ASSIGN')], CallFunc(Getattr(Name('app_config'), 'get_models'), [Keyword('include_auto_created', Name('True'))], None, None))]))
Module(None, Stmt([Function(None, 'save', ['self', 'commit'], [Name('True')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('upto'), [('!=', CallFunc(Name('len'), [Name('token')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'get_path_info', ['environ'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'send', ['self', 'fail_silently'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Assign([AssName('changed', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssName('templatetags_modules', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('id_'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Subscript(Getattr(Name('sys'), 'modules'), 'OP_APPLY', [Name('name')]))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("Type '%s help %s' for usage information."), Tuple([CallFunc(Getattr(Getattr(Name('os'), 'path'), 'basename'), [Subscript(Getattr(Name('sys'), 'argv'), 'OP_APPLY', [Const(0)])], None, None), Subscript(Getattr(Name('sys'), 'argv'), 'OP_APPLY', [Const(1)])])))], None, None), None, None)]))
Module(None, Stmt([If([(Or([Compare(CallFunc(Name('str'), [Const('\n')], None, None), [('in', Name('value'))]), Compare(CallFunc(Name('str'), [Const('\r')], None, None), [('in', Name('value'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('settings'), 'FORCE_SCRIPT_NAME'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('r'))]))
Module(None, Stmt([Return(Name('d'))]))
Module(None, Stmt([Function(None, '_wrapped_view', ['request', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("App '%s' does not have migrations (you cannot selectively sync unmigrated apps)"), Name('app_label')))], None, None), None, None)]))
Module(None, Stmt([Class('TemplateTagNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Assign([AssName('alternative_subtype', 'OP_ASSIGN')], Const('alternative'))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('WSGIServer'), [CallFunc(Name('get_internal_wsgi_application'), [], None, None)], None, Name('wsgi_opts')), 'run'), [], None, None))]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], Mod((Const('%s.%s'), Tuple([Name('app'), Getattr(Getattr(Name('model'), '_meta'), 'object_name')]))))]))
Module(None, Stmt([Assign([AssName('hlen', 'OP_ASSIGN')], Getattr(CallFunc(Name('digest'), [], None, None), 'digest_size'))]))
Module(None, Stmt([Function(None, '__call__', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('templatetags_modules', 'OP_ASSIGN')], CallFunc(Name('get_templatetags_modules'), [], None, None))]))
Module(None, Stmt([Assign([AssName('date_keys', 'OP_ASSIGN')], Tuple([Const('updateddate'), Const('pubdate')]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_non_form_errors', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Return(Name('data'))]))
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('_active'), Const('value'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssName('m2m_value', 'OP_ASSIGN')], Lambda(['value'], [], 0, CallFunc(Getattr(Name('value'), 'natural_key'), [], None, None)))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Return(Name('num_sent'))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('_urlconfs'), Const('value')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('conflicts', 'OP_ASSIGN')], CallFunc(Getattr(Name('loader'), 'detect_conflicts'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('t'), 'render'), [Name('context_instance')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('args'), Keyword('nargs', Getattr(Name('argparse'), 'REMAINDER')), Keyword('help', Const('Various KEY=val options.'))], None, None))]))
Module(None, Stmt([Function(None, 'request', ['request'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('view_path', 'OP_ASSIGN')], Or([Name('url_name'), Getattr(Name('self'), '_func_path')]))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'to', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Compare(Name('default'), [('is not', Name('RAISE_ERROR'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'renderer', 'OP_ASSIGN')], Name('renderer'))]))
Module(None, Stmt([Assign([AssName('ns', 'OP_ASSIGN')], Name('current_app'))]))
Module(None, Stmt([Assign([AssName('requires_system_checks', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([If([(Compare(Name('default_list'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('localize', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'get'), [Const('localize'), Name('False')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'name', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([Assign([AssName('cleaned_data', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'clean'), [], None, None))]))
Module(None, Stmt([Function(None, 'value', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('migration', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('executor'), 'loader'), 'get_migration_by_prefix'), [Name('app_label'), Name('migration_name')], None, None))]))
Module(None, Stmt([Function(None, 'timestamp', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [Name('data')], None, None))]))
Module(None, Stmt([Function(None, '_key_to_file', ['self', 'key', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('field_notes'), 'append'), [Const('Field name made lowercase.')], None, None))]))
else :
Module(None, Stmt([Assign([AssName('wrap', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('wrap'), Getattr(Name('six'), 'text_type')], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), '__language'))]))
Module(None, Stmt([For(AssName('handler', 'OP_ASSIGN'), Name('handlers'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Getattr(Name('self'), '_files'))]))
Module(None, Stmt([Class('DjangoSafeDumper', [Name('SafeDumper')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssName('t', 'OP_ASSIGN'), CallFunc(Getattr(CallFunc(Name('type'), [Name('res')], None, None), 'mro'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('size', 'OP_ASSIGN')], CallFunc(Name('property'), [Name('_get_size'), Name('_set_size')], None, None))]))
Module(None, Stmt([Assign([AssName('resource', 'OP_ASSIGN')], CallFunc(Name('resource_string'), [Getattr(Name('app_config'), 'name'), Name('pkg_name')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_wrapped'), [('is', Name('empty'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Assign([AssName('stream', 'OP_ASSIGN')], CallFunc(Name('LazyStream'), [CallFunc(Name('ChunkIter'), [Getattr(Name('self'), '_input_data'), Getattr(Name('self'), '_chunk_size')], None, None)], None, None))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('io'), 'open'), [Name('orig_file'), Keyword('encoding', Getattr(Name('settings'), 'FILE_CHARSET'))], None, None), AssName('fp', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('value'), [('in', Tuple([Name('None'), Const('')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('DisallowedHost', [Name('SuspiciousOperation')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'USE_I18N'), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([If([(Getattr(Name('fk'), 'unique'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'buffer', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Assign([AssName('kwargs', 'OP_ASSIGN')], Dict(()))]))
try :
Module(None, Stmt([If([(Compare(Name('instance'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Function(None, 'urlencode', ['value', 'safe'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('res', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Assign([AssAttr(Name('_active'), 'value', 'OP_ASSIGN')], Name('timezone'))]))
Module(None, Stmt([Class('RequireDebugTrue', [Getattr(Name('logging'), 'Filter')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.core.files.utils', [('FileProxyMixin', None)], 0)]))
Module(None, Stmt([Assign([AssName('msg_data', 'OP_ASSIGN')], CallFunc(Getattr(Name('msg'), 'as_bytes'), [], None, None))]))
Module(None, Stmt([Import([('operator', None)])]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('s'))]))
except UnicodeError :
Module(None, Stmt([Assign([AssName('request', 'OP_ASSIGN')], Getattr(Name('record'), 'request'))]))
except ValueError :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Getattr(Name('self'), 'fetch_command'), [Name('subcommand')], None, None), 'run_from_argv'), [Getattr(Name('self'), 'argv')], None, None))]))
Module(None, Stmt([Class('RenderContext', [Name('BaseContext')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('final_output'), 'extend'), [CallFunc(Getattr(Getattr(Name('connection'), 'creation'), 'sql_for_pending_references'), [Name('model'), Name('style'), Name('pending_references')], None, None)], None, None))]))
Module(None, Stmt([Return(Name('output'))]))
Module(None, Stmt([Return(Subscript(Getattr(Name('self'), '_regex_dict'), 'OP_APPLY', [Name('language_code')]))]))
Module(None, Stmt([AugAssign(Name('piece'), '+=', Subscript(Name('elt'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([If([(Name('unhandled_params'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'add_error'), [Name('None'), Name('e')], None, None))]))
Module(None, Stmt([Assign([AssName('path', 'OP_ASSIGN')], Slice(Name('parts'), 'OP_APPLY', Const(1), None))]))
Module(None, Stmt([Assign([AssName('used_column_names', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(CallFunc(Name('BlockNode'), [Name('block_name'), Name('nodelist')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_read_started', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('last', 'OP_ASSIGN')], Subscript(Name('root'), 'OP_APPLY', [Name('PREV')]))]))
else :
Module(None, Stmt([Assign([AssName('writelines', 'OP_ASSIGN')], CallFunc(Name('property'), [Lambda(['self'], [], 0, Getattr(Getattr(Name('self'), 'file'), 'writelines'))], None, None))]))
Module(None, Stmt([Assign([AssName('file_pos', 'OP_ASSIGN')], CallFunc(Getattr(Name('file'), 'tell'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('import_by_path() has been deprecated. Use import_string() instead.'), Name('RemovedInDjango19Warning'), Keyword('stacklevel', Const(2))], None, None))]))
Module(None, Stmt([Assign([AssName('text', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('text')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Name('list')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('result'), 'parent', 'OP_ASSIGN')], Name('self'))]))
Module(None, Stmt([If([(Compare(Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('feed_copyright')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Function(None, '_get_filename', ['self'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'remove'), [Name('path_to_remove')], None, None))]))
Module(None, Stmt([Assign([AssName('extra_attrs', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'widget_attrs'), [Name('widget')], None, None))]))
Module(None, Stmt([If([(Name('found'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_add_doc', ['func', 'doc'], [], 0, None, Stmt([Pass()]))]))
try :
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'buffer', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('self'), Const('_files')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('input_val'))]))
Module(None, Stmt([From('django.core.management.sql', [('sql_flush', None), ('emit_post_migrate_signal', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Name('Literal'), [Name('value')], None, None))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_assert_mutable'), [], None, None))]))
Module(None, Stmt([If([(Not(Name('app_labels')), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_unique'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('args'), Keyword('metavar', Const('fixture')), Keyword('nargs', Const('+')), Keyword('help', Const('Fixture labels.'))], None, None))]))
Module(None, Stmt([Assign([AssName('option_list', 'OP_ASSIGN')], Tuple(()))]))
Module(None, Stmt([Assign([AssName('eol_message', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('message'), 'replace'), [CallFunc(Name('str'), [Const('\r\n')], None, None), CallFunc(Name('str'), [Const('\n')], None, None)], None, None), 'replace'), [CallFunc(Name('str'), [Const('\r')], None, None), CallFunc(Name('str'), [Const('\n')], None, None)], None, None))]))
Module(None, Stmt([If([(And([Not(Getattr(Name('url_info'), 'netloc')), Getattr(Name('url_info'), 'scheme')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_get_image_dimensions', ['self'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Const('In order to allow non-dict objects to be serialized set the safe parameter to False')], None, None), None, None)]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('TypedMultipleChoiceField'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('DateTimeAwareJSONEncoder', 'OP_ASSIGN')], Name('DjangoJSONEncoder'))]))
Module(None, Stmt([Assign([Subscript(Name('cache'), 'OP_ASSIGN', [Name('key')])], Name('oldroot'))]))
Module(None, Stmt([Assign([AssName('new_args', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'widget_attrs', ['self', 'widget'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Name('app_name'), Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_LABEL')], None, None))]))
try :
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], CallFunc(Getattr(Name('fp'), 'read'), [], None, None))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('choice_label'), Tuple([Name('tuple'), Name('list')])], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'use_natural_primary_keys', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'pop'), [Const('use_natural_primary_keys'), Name('False')], None, None))]))
Module(None, Stmt([From('django.utils.six.moves.urllib.parse', [('urlparse', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('data'), [('in', Getattr(Name('self'), 'children'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Const(' '), 'join'), [Name('extra_classes')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('value'), 'replace'), [Name('replacement'), Const('')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'META', 'OP_ASSIGN')], Name('environ'))]))
Module(None, Stmt([Assign([AssName('payload', 'OP_ASSIGN')], CallFunc(Getattr(Name('text'), 'encode'), [Getattr(Name('utf8_charset'), 'output_charset')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('module'), 'Command'), [], None, None))]))
Module(None, Stmt([Assign([AssName('val1', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'compile_filter'), [Subscript(Name('bits'), 'OP_APPLY', [Const(1)])], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('_', 'OP_ASSIGN'), AssName('nodelist', 'OP_ASSIGN')]), Getattr(Name('self'), 'conditions_nodelists'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('loader', 'OP_ASSIGN')], CallFunc(Name('MigrationLoader'), [Name('None'), Keyword('ignore_no_migrations', Name('True'))], None, None))]))
Module(None, Stmt([Assign([AssName('final_path', 'OP_ASSIGN')], CallFunc(Name('abspathu'), [CallFunc(Name('join'), [Name('base')], Name('paths'), None)], None, None))]))
Module(None, Stmt([Assign([AssName('apps', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '_reverse_dict'), 'OP_ASSIGN', [Name('language_code')])], Name('lookups'))]))
Module(None, Stmt([Function(None, 'npgettext', ['context', 'singular', 'plural', 'number'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('WSGIRequestHandler'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('io'), 'open'), [Name('fname'), Const('rb')], None, None), AssName('f', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('val1')], None, None), [('!=', CallFunc(Name('len'), [Name('val2')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('readline', 'OP_ASSIGN')], CallFunc(Name('property'), [Lambda(['self'], [], 0, Getattr(Getattr(Name('self'), 'file'), 'readline'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [Name('value')], None, None))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('args'), 'append'), [Tuple([Name('False'), CallFunc(Getattr(CallFunc(Name('Variable'), [Name('constant_arg')], None, None), 'resolve'), [Dict(())], None, None)])], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'state', 'OP_ASSIGN')], Name('state'))]))
Module(None, Stmt([Function(None, 'translation', ['language'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'msg', 'OP_ASSIGN')], Name('msg'))]))
Module(None, Stmt([Assign([Subscript(Name('response'), 'OP_ASSIGN', [Const('ETag')])], Mod((Const('"%s"'), CallFunc(Getattr(CallFunc(Getattr(Name('hashlib'), 'md5'), [Getattr(Name('response'), 'content')], None, None), 'hexdigest'), [], None, None))))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_errors'))]))
Module(None, Stmt([If([(Compare(Name('initial'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('open_tags', 'OP_ASSIGN')], Slice(Name('open_tags'), 'OP_APPLY', Add((Name('i'), Const(1))), None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'context'), 'pop'), [], None, None))]))
Module(None, Stmt([Assign([AssName('plan', 'OP_ASSIGN')], List([Tuple([Subscript(Getattr(Getattr(Getattr(Name('executor'), 'loader'), 'graph'), 'nodes'), 'OP_APPLY', [Subscript(Name('targets'), 'OP_APPLY', [Const(0)])]), Subscript(Name('options'), 'OP_APPLY', [Const('backwards')])])]))]))
Module(None, Stmt([Return(Name('node'))]))
Module(None, Stmt([For(AssName('medium', 'OP_ASSIGN'), Name('extend'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('_mtimes', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([If([(Compare(Name('language'), [('in', Name('_DJANGO_DEPRECATED_LOCALES'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'is_secure', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('line', 'OP_ASSIGN')], CallFunc(Getattr(Name('sio'), 'readline'), [Name('size')], None, None))]))
self . settings_exception = None
self . verbose_name = 'cache entry'
Module(None, Stmt([Assign([AssName('changes', 'OP_ASSIGN')], CallFunc(Getattr(Name('autodetector'), 'changes'), [Keyword('graph', Getattr(Getattr(Name('executor'), 'loader'), 'graph'))], None, None))]))
Module(None, Stmt([If([(Compare(Name('status'), [('!=', Name('STATUS_OK'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('mimetypes', None)])]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('field'), 'to_python'), [CallFunc(Getattr(CallFunc(Name('getInnerText'), [Name('field_node')], None, None), 'strip'), [], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('loop_dict', 'OP_ASSIGN'), Subscript(Name('context'), 'OP_ASSIGN', [Const('forloop')])], Dict([(Const('parentloop'), Name('parentloop'))]))]))
Module(None, Stmt([Assign([AssName('warning', 'OP_ASSIGN')], Subscript(Name('kwargs'), 'OP_APPLY', [Const('warning')]))]))
parser . add_argument ( '--traceback' , action = 'store_true' ,  help = 'Raise on exception' )
Module(None, Stmt([Assign([Subscript(Name('attrs'), 'OP_ASSIGN', [Const('id')])], Name('auto_id'))]))
else :
Module(None, Stmt([Function(None, 'get', ['self', 'key', 'default', 'version'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Import([('zipfile', None)])]))
Module(None, Stmt([Assign([AssTuple([AssName('inner_result', 'OP_ASSIGN'), AssName('inner_args', 'OP_ASSIGN')])], Tuple([List(()), List(())]))]))
Module(None, Stmt([Class('ViewDoesNotExist', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('logger'), 'error'), [Const('Internal Server Error: %s'), Getattr(Name('request'), 'path'), Keyword('exc_info', Name('exc_info')), Keyword('extra', Dict([(Const('status_code'), Const(500)), (Const('request'), Name('request'))]))], None, None))]))
Module(None, Stmt([Assign([AssName('doublecolon_start', 'OP_ASSIGN')], UnarySub(Const(1)))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('django.utils.tzinfo.FixedOffset will be removed in Django 1.9. Use django.utils.timezone.get_fixed_timezone instead.'), Name('RemovedInDjango19Warning')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('offset'), Name('timedelta')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Mod((CallFunc(Name('ugettext'), [Const('Please correct the duplicate data for %(field)s.')], None, None), Dict([(Const('field'), Subscript(Name('unique_check'), 'OP_APPLY', [Const(0)]))]))))]))
Module(None, Stmt([Assign([AssName('filter_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Name('filter_raw_string'), Bitor([Getattr(Name('re'), 'UNICODE'), Getattr(Name('re'), 'VERBOSE')])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('write_pot_file'), [Name('potfile'), Name('msgs')], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('field', 'OP_ASSIGN'), AssName('errors', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('self'), 'error_dict'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('s'), 'getvalue'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('_entity_re'), 'sub'), [Name('_replace_entity'), Name('text')], None, None))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'widget', 'OP_ASSIGN')], Name('widget'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'resolver_match', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'indent'), [Const(1)], None, None))]))
Module(None, Stmt([Assign([AssName('msgattrib_options', 'OP_ASSIGN')], List([Const('--no-obsolete')]))]))
Module(None, Stmt([If([(Compare(Name('palette'), [('==', Subscript(Name('PALETTES'), 'OP_APPLY', [Name('NOCOLOR_PALETTE')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('kwargs', 'OP_ASSIGN')], Or([Name('kwargs'), Dict(())]))]))
Module(None, Stmt([From('django.db', [('connections', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([Function(None, 'writer', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('mtime', 'OP_ASSIGN')], Getattr(Name('stat'), 'st_mtime'))]))
Module(None, Stmt([Function(None, '__new__', ['mcs', 'name', 'bases', 'attrs'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([From('django.utils.encoding', [('force_unicode', None)], 0)]))
Module(None, Stmt([Function(None, 'handle', ['self', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('LazyObject', [Name('object')], None, Stmt([Pass()]), None)]))
try :
Module(None, Stmt([Assign([AssName('SafeString', 'OP_ASSIGN')], Name('SafeText'))]))
Module(None, Stmt([From('django.utils.module_loading', [('module_has_submodule', None)], 0)]))
Module(None, Stmt([Return(Name('found'))]))
except Exception as e :
else :
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([AugAssign(Subscript(Name('stats'), 'OP_APPLY', [Name('HITS')]), '+=', Const(1))]))
Module(None, Stmt([Function(None, 'connection', ['self'], [], 0, None, Stmt([Pass()]))]))
except :
Module(None, Stmt([Assign([Subscript(Name('daemon_kwargs'), 'OP_ASSIGN', [Const('umask')])], CallFunc(Name('int'), [Subscript(Name('options'), 'OP_APPLY', [Const('umask')]), Const(8)], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), 'tag_function'))]))
Module(None, Stmt([From('django.utils.module_loading', [('import_string', None)], 0)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'name', 'nodelist', 'parent'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], CallFunc(Name('list'), [Name('args')], None, None))]))
else :
Module(None, Stmt([If([(Or([Not(CallFunc(Name('isinstance'), [Name('list_'), Tuple([Name('tuple'), Name('list')])], None, None)), Compare(CallFunc(Name('len'), [Name('list_')], None, None), [('!=', Const(2))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('flat', 'OP_ASSIGN')], Dict(()))]))
@ property
Module(None, Stmt([Assign([AssName('parts', 'OP_ASSIGN')], CallFunc(Getattr(Name('fixture_name'), 'rsplit'), [Const('.'), Const(2)], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('re_newlines'), 'sub'), [Const('\n'), Name('text')], None, None))]))
Module(None, Stmt([Function(None, '__setstate__', ['self', 'state'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'umask'), [Name('old_umask')], None, None))]))
Module(None, Stmt([Assign([AssName('statement', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('re'), 'sub'), [Const('>\\s+<'), Const('><'), CallFunc(Name('force_text'), [Name('value')], None, None)], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'file'), 'close'), [], None, None))]))
Module(None, Stmt([Class('ReferenceLocalTimezone', [Name('tzinfo')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssName('key_value', 'OP_ASSIGN'), Name('related'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(CallFunc(Name('getattr'), [Name('self'), Name('shell')], None, None), [], None, None))]))
Module(None, Stmt([Assign([AssName('m2m_value', 'OP_ASSIGN')], Lambda(['value'], [], 0, CallFunc(Name('smart_text'), [CallFunc(Getattr(Name('value'), '_get_pk_val'), [], None, None), Keyword('strings_only', Name('True'))], None, None)))]))
Module(None, Stmt([Assign([AssName('show_traceback', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('traceback')], None, None))]))
Module('Close the cache connection', Stmt([]))
Module(None, Stmt([Function(None, 'parse_etags', ['etag_str'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'join', ['value', 'arg', 'autoescape'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'color_style', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('host', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'META'), 'OP_APPLY', [Const('SERVER_NAME')]))]))
Module(None, Stmt([Function(None, 'run_checks', ['self', 'app_configs', 'tags'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__new__', ['cls', 'fget', 'fset', 'fdel', 'doc'], [Name('None'), Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Name('_add_doc'), [Name('get_unbound_function'), Const('Get the function out of a possibly unbound function')], None, None))]))
Module(None, Stmt([Function(None, 'sql_create', ['app_config', 'style', 'connection'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('response'), 'add_post_render_callback'), [Name('_set_response_etag')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([From('django.utils.encoding', [('force_str', None), ('force_text', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('KeyError'), [Mod((Const('Unknown language code %s.'), Name('lang_code')))], None, None), None, None)]))
Module(None, Stmt([If([(And([Getattr(Name('settings'), 'TEMPLATE_DEBUG'), Compare(Name('origin'), [('is', Name('None'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('j'))]))
Module(None, Stmt([For(AssName('field', 'OP_ASSIGN'), Getattr(Getattr(Name('concrete_model'), '_meta'), 'local_fields'), Stmt([Pass()]), None)]))
Module(None, Stmt([While(Name('rest'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'delete_first_token'), [], None, None))]))
Module(None, Stmt([Import([('django.core.checks.compatibility.django_1_6_0', None)])]))
Module(None, Stmt([Function(None, 'send_mass_mail', ['datatuple', 'fail_silently', 'auth_user', 'auth_password', 'connection'], [Name('False'), Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Getattr(Name('self'), 'default_locale_path')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_key'), [Name('key')], None, None))]))
Module(None, Stmt([Function(None, 'getlist', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('app_label', 'OP_ASSIGN'), AssName('migration_name', 'OP_ASSIGN')])], Tuple([Subscript(Name('options'), 'OP_APPLY', [Const('app_label')]), Subscript(Name('options'), 'OP_APPLY', [Const('migration_name')])]))]))
Module(None, Stmt([Assign([AssName('propagate', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'get'), [Const('propagate'), Name('None')], None, None))]))
Module(None, Stmt([For(AssName('model', 'OP_ASSIGN'), CallFunc(Getattr(Name('router'), 'get_migratable_models'), [Name('app_config'), Getattr(Name('connection'), 'alias'), Keyword('include_auto_created', Name('True'))], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("App '%s' does not have migrations"), Name('app_label')))], None, None), None, None)]))
Module(None, Stmt([From('django.core', [('signals', None)], 0)]))
@ deconstructible
Module(None, Stmt([Function(None, 'handle_field', ['self', 'obj', 'field'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('serializers'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('localize')])], Name('True'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stderr'), 'write'), [Name('msg')], None, None))]))
Module(None, Stmt([Return(Name('self'))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
@ register . tag ( 'with' )
Module(None, Stmt([Function(None, 'convert', ['self', 'number', 'from_digits', 'to_digits', 'sign'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_post_clean'), [], None, None))]))
Module(None, Stmt([Function(None, 'get_handler', ['self', 'args', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'modelform_defines_fields', ['form_class'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('domain_regex', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('(?:[A-Z0-9](?:[A-Z0-9-]{0,247}[A-Z0-9])?\\.)+(?:[A-Z]{2,6}|[A-Z0-9-]{2,}(?<!-))$'), Getattr(Name('re'), 'IGNORECASE')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('g'), 'flatten'), [Name('self'), Keyword('unixfrom', Name('unixfrom'))], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('TypedChoiceField'), Name('self')], None, None), 'clean'), [Name('value')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Select'), Name('self')], None, None), '__init__'), [Name('attrs')], None, None))]))
delta = ( d - now ) if reversed else ( now - d )
Module(None, Stmt([Class('Library', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_lock', 'OP_ASSIGN')], CallFunc(Getattr(Name('threading'), 'RLock'), [], None, None))]))
Module(None, Stmt([From('django.db.backends.utils', [('typecast_timestamp', None)], 0)]))
Module(None, Stmt([Import([('hashlib', None)])]))
Module(None, Stmt([Function(None, 'javascript_quote', ['s', 'quote_double_quotes'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('FormSet', 'OP_ASSIGN')], CallFunc(Name('modelformset_factory'), [Name('model')], None, Name('kwargs')))]))
Module(None, Stmt([Function(None, 'quote_etag', ['etag'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'hint', 'OP_ASSIGN')], Name('hint'))]))
Module(None, Stmt([Class('TemplateSyntaxError', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Const("'cycle' tag requires at least two arguments")], None, None), None, None)]))
elif ch == "^" :
Module(None, Stmt([Assign([AssAttr(Name('result'), 'parent', 'OP_ASSIGN')], Name('self'))]))
Module(None, Stmt([Function(None, 'w', ['self'], [], 0, None, Stmt([Pass()]))]))
else :
@ property
@ lru_cache . lru_cache ( maxsize = None )
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parts'), 'reverse'), [], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('fd', 'OP_ASSIGN'), AssName('name', 'OP_ASSIGN')])], CallFunc(Getattr(Name('tempfile'), 'mkstemp'), [Keyword('suffix', Name('suffix')), Keyword('prefix', Name('prefix')), Keyword('dir', Name('dir'))], None, None))]))
Module(None, Stmt([Return(Dict(()))]))
Module(None, Stmt([Function(None, 'next_token', ['self'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Return(CallFunc(Name('format_html'), [Const('<input{0} />'), CallFunc(Name('flatatt'), [Name('final_attrs')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'utcoffset', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('max_whole_digits')]), Keyword('code', Const('max_whole_digits')), Keyword('params', Dict([(Const('max'), Sub((Getattr(Name('self'), 'max_digits'), Getattr(Name('self'), 'decimal_places'))))]))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'urlsafe_base64_decode', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('data_value', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('field'), 'widget'), 'value_from_datadict'), [Getattr(Name('self'), 'data'), Getattr(Name('self'), 'files'), Name('prefixed_name')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_assert_mutable'), [], None, None))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'silent'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('filename')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'content_type_extra', 'OP_ASSIGN')], Name('content_type_extra'))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssName('format_key', 'OP_ASSIGN')], Const('TIME_INPUT_FORMATS'))]))
Module(None, Stmt([Discard(Getattr(Name('settings'), 'INSTALLED_APPS'))]))
Module(None, Stmt([Function(None, 'has_previous', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([AssAttr(Name('_active'), 'value', 'OP_DELETE')]))
Module(None, Stmt([If([(Compare(Name('m'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('logging', [('_checkLevel', None)], 0)]))
Module(None, Stmt([If([(And([Compare(Name('fields'), [('is not', Name('None'))]), Compare(Getattr(Name('f'), 'name'), [('not in', Name('fields'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('name'), 'append'), [Name('ch')], None, None))]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'alias'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'dec', ['func'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([AssName('attr', 'OP_DELETE')]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Return(Name('input_val'))]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], CallFunc(Name('ungettext_lazy'), [Const('Ensure this value has at most %(limit_value)d character (it has %(show_value)d).'), Const('Ensure this value has at most %(limit_value)d characters (it has %(show_value)d).'), Const('limit_value')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'tokens'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('keys', 'OP_ASSIGN')], Name('_iterkeys'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'unlink'), [Getattr(Name('self'), 'name')], None, None))]))
except ImportError :
Module(None, Stmt([Assign([AssTuple([AssName('template', 'OP_ASSIGN'), AssName('display_name', 'OP_ASSIGN')])], CallFunc(Name('loader'), [Name('name'), Name('dirs')], None, None))]))
Module(None, Stmt([Assign([AssName('attr_list', 'OP_ASSIGN')], CallFunc(Getattr(Name('termios'), 'tcgetattr'), [Name('fd')], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('candidate'), Getattr(Name('six'), 'string_types')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'translate'), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('cat', 'OP_ASSIGN'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('categories')]), Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid')]), Keyword('code', Const('invalid'))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'memoize', ['func', 'cache', 'num_args'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('force_bytes'), [Name('value'), Getattr(Name('self'), '_charset')], None, None))]))
Module(None, Stmt([Assign([AssName('url_schemes', 'OP_ASSIGN')], List([Const('http'), Const('https'), Const('ftp')]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_content_length', 'OP_ASSIGN')], Name('content_length'))]))
Module(None, Stmt([Assign([AssName('unichr', 'OP_ASSIGN')], Name('chr'))]))
Module(None, Stmt([For(AssName('migration', 'OP_ASSIGN'), Name('merge_migrations'), Stmt([Pass()]), None)]))
regex = re_words if words else re_chars
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Unable to convert %r'), Name('value')))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('created_models'), 'add'), [Name('model')], None, None))]))
Module(None, Stmt([Function(None, 'ngettext', ['singular', 'plural', 'number'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [Name('UnreadablePostError'), CallFunc(Name('UnreadablePostError'), [], Getattr(Name('e'), 'args'), None), Subscript(CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), 'OP_APPLY', [Const(2)])], None, None))]))
Module(None, Stmt([If([(Compare(Name('_default'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.dispatch', [('Signal', None)], 0)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([From('django.utils.encoding', [('force_bytes', None)], 0)]))
Module(None, Stmt([For(AssName('name', 'OP_ASSIGN'), Name('loggers'), Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils.safestring', [('mark_safe', None)], 0)]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Assign([Subscript(Name('d'), 'OP_ASSIGN', [Name('k')])], Name('val'))]))
elif len ( options . args ) < 1 :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('URLValidator'), Name('self')], None, None), '__call__'), [Name('url')], None, None))]))
Module(None, Stmt([Return(Mod((Const('%s. You passed in %r (%s)'), Tuple([Name('original'), Getattr(Name('self'), 'obj'), CallFunc(Name('type'), [Getattr(Name('self'), 'obj')], None, None)]))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('django.utils.tzinfo.LocalTimezone will be removed in Django 1.9. Use django.utils.timezone.get_default_timezone instead.'), Name('RemovedInDjango19Warning')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'empty_value', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('empty_value'), Const('')], None, None))]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'variable_name'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const("Non-reversible reg-exp portion: '(?P%s'"), Name('ch')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('html', 'OP_ASSIGN')], CallFunc(Getattr(Name('starttag_re'), 'sub'), [Const(''), Name('html')], None, None))]))
try :
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('e'), Const('django_template_source')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(List([CallFunc(Getattr(Name('value'), 'date'), [], None, None), CallFunc(Getattr(CallFunc(Getattr(Name('value'), 'time'), [], None, None), 'replace'), [Keyword('microsecond', Const(0))], None, None)]))]))
Module(None, Stmt([Return(CallFunc(Name('ResolverMatch'), [Getattr(Name('self'), 'callback'), Name('args'), Name('kwargs'), Getattr(Name('self'), 'name')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('app_config'), 'models_module'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Mod((Const('%02d'), CallFunc(Getattr(Name('self'), 'g'), [], None, None))))]))
Module(None, Stmt([Raise(CallFunc(Name('EnvironmentError'), [Mod((Const("Cache directory '%s' does not exist and could not be created'"), Getattr(Name('self'), '_dir')))], None, None), None, None)]))
Module(None, Stmt([Function(None, '_update_unget_history', ['self', 'num_bytes'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(CallFunc(Name('getattr'), [Name('self'), Add((Const('add_'), Name('name')))], None, None), [CallFunc(Getattr(Name('media_attrs'), 'get'), [Name('name'), Name('None')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('locale_dirs', 'OP_ASSIGN')], CallFunc(Name('filter'), [Getattr(Getattr(Name('os'), 'path'), 'isdir'), CallFunc(Getattr(Name('glob'), 'glob'), [Mod((Const('%s/*'), Getattr(Name('self'), 'default_locale_path')))], None, None)], None, None))]))
Module(None, Stmt([Function(None, '_isdst', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Subscript(Getattr(Name('self'), '_regex_dict'), 'OP_APPLY', [Name('language_code')]))]))
Module(None, Stmt([Assign([AssName('_module', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_resolve'), [], None, None))]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], List([Const('CachedDnsName'), Const('DNS_NAME'), Const('EmailMessage'), Const('EmailMultiAlternatives'), Const('SafeMIMEText'), Const('SafeMIMEMultipart'), Const('DEFAULT_ATTACHMENT_MIME_TYPE'), Const('make_msgid'), Const('BadHeaderError'), Const('forbid_multi_line_headers'), Const('get_connection'), Const('send_mail'), Const('send_mass_mail'), Const('mail_admins'), Const('mail_managers')]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'has_key'), [Name('key')], None, None))]))
Module(None, Stmt([Assign([AssName('status_code', 'OP_ASSIGN')], Const(304))]))
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Const('invalid keyword arguments to print()')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Prints the custom table modifying SQL statements for the given app name(s).'))]))
Module(None, Stmt([Return(Name('self'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('TemplateIfParser'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], List([Getattr(Name('self'), 'name'), Getattr(Name('self'), 'value'), Getattr(Name('self'), 'attrs')]))]))
Module(None, Stmt([Assign([AssName('contents', 'OP_ASSIGN')], Or([Name('contents'), Getattr(Name('self'), 'label')]))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
except AttributeError :
Module(None, Stmt([If([(CallFunc(Getattr(Name('p_pattern'), 'startswith'), [Const('^')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('re'), 'sub'), [Const('&(?:\\w+|#\\d+);'), Const(''), CallFunc(Name('force_text'), [Name('value')], None, None)], None, None))]))
Module(None, Stmt([Function(None, '_media', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('Context', [Name('BaseContext')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([Subscript(Name('attrs'), 'OP_ASSIGN', [Const('min')])], Getattr(Name('self'), 'min_value'))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const('The file cannot be reopened.')], None, None), None, None)]))
Module(None, Stmt([Return(ListComp(Name('k'), [ListCompFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('six'), 'iteritems'), [Name('_serializers')], None, None), [ListCompIf(Not(Getattr(Getattr(Name('v'), 'Serializer'), 'internal_use_only')))])]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_current_app', 'OP_ASSIGN')], Name('current_app'))]))
Module(None, Stmt([Function(None, 'namespace_dict', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('filepath', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'filepath'), 'resolve'), [Name('context')], None, None))]))
Module(None, Stmt([Function(None, 'unclosed_block_tag', ['self', 'parse_until'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([If([(Compare(Name('common_ancestor'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('EmailInput', [Name('TextInput')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('p'), [('>=', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_servers', 'OP_ASSIGN')], CallFunc(Getattr(Name('server'), 'split'), [Const(';')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('NullBooleanSelect'), Name('self')], None, None), 'render'), [Name('name'), Name('value'), Name('attrs'), Name('choices')], None, None))]))
Module(None, Stmt([Function(None, 'eval', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'makedirs'), [Name('filename')], None, None))]))
except AttributeError :
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const('%s requires %d arguments, %d provided'), Tuple([Name('name'), Sub((Name('alen'), Name('dlen'))), Name('plen')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('filename', 'OP_ASSIGN')], Subscript(Subscript(CallFunc(Getattr(Name('traceback'), 'extract_tb'), [Name('tb')], None, None), 'OP_APPLY', [UnarySub(Const(1))]), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Return(Name('etags'))]))
Module(None, Stmt([If([(Compare(Name('val'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'urlizetrunc', ['value', 'limit', 'autoescape'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('c', 'OP_ASSIGN')], CallFunc(Name('SimpleCookie'), [], None, None))]))
Module(None, Stmt([Assign([AssName('kwargs', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssName('loggers', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'get'), [Const('loggers'), Name('EMPTY_DICT')], None, None))]))
Module(None, Stmt([Assign([AssName('expires', 'OP_ASSIGN')], Subscript(Name('row'), 'OP_APPLY', [Const(2)]))]))
Module(None, Stmt([Assign([AssTuple([AssName('msgs', 'OP_ASSIGN'), AssName('errors', 'OP_ASSIGN'), AssName('status', 'OP_ASSIGN')])], CallFunc(Name('popen_wrapper'), [Name('args')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('definition', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Function(None, '_new_instance', ['cls', 'children', 'connector', 'negated'], [Name('None'), Name('None'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('end'), 'endswith'), [Const('/>')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('opts', 'OP_ASSIGN')], Getattr(Name('self'), '_meta'))]))
Module(None, Stmt([Discard(Yield(CallFunc(Getattr(Name('self'), 'read'), [], None, None)))]))
Module(None, Stmt([Return(Name('t'))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Return(CallFunc(Name('getattr'), [Name('module'), Name('class_name')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_post_parse_error', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Function(None, 'strptime', ['self', 'value', 'format'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'variables'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([If([(Getattr(Name('settings'), 'configured'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('field_value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('getInnerText'), [Name('node')], None, None), 'strip'), [], None, None))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'tags'), 'OP_ASSIGN', [Name('name')])], Name('compile_function'))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('smart_text'), [Name('value')], None, None), 'strip'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'to', 'OP_ASSIGN')], CallFunc(Name('list'), [Name('to')], None, None))]))
except ValueError :
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), '_cache'), 'add'), [Name('key'), Name('value'), CallFunc(Getattr(Name('self'), 'get_backend_timeout'), [Name('timeout')], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Name('varargs'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([AssAttr(Name('_urlconfs'), 'value', 'OP_DELETE')]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'load_initial_data', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('load_initial_data')], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('self'), Const('_files')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('_generate_cache_key'), [Name('request'), Getattr(Name('request'), 'method'), List(()), Name('key_prefix')], None, None))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Assign([AssName('exp', 'OP_ASSIGN')], CallFunc(Getattr(Name('datetime'), 'fromtimestamp'), [Name('timeout')], None, None))]))
Module(None, Stmt([If([(Not(Name('support_legacy')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], Const("The use of the language code '%s' is deprecated. Please use the '%s' translation instead."))]))
except Exception :
Module(None, Stmt([Assign([AssAttr(Name('klass'), 'deconstruct', 'OP_ASSIGN')], Name('deconstruct'))]))
Module(None, Stmt([Return(CallFunc(Name('DebugNodeList'), [], None, None))]))
Module(None, Stmt([Class('Field', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_archive', 'OP_ASSIGN')], CallFunc(Getattr(Name('zipfile'), 'ZipFile'), [Name('file')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('shutil'), 'move'), [Name('the_path'), Name('guessed_path')], None, None))]))
else :
Module(None, Stmt([Return(Name('forms'))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [CallFunc(Name('_'), [Const('Enter a valid integer.')], None, None), Keyword('code', Const('invalid'))], None, None), None, None)]))
Module(None, Stmt([From('django.utils.translation', [('TranslatorCommentWarning', None), ('trim_whitespace', None), ('LANGUAGE_SESSION_KEY', None)], 0)]))
Module(None, Stmt([Function(None, 'delete_cookie', ['self', 'key', 'path', 'domain'], [Const('/'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('LocMemCache', [Name('BaseCache')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('hextets', 'OP_ASSIGN')], CallFunc(Getattr(Name('ip_str'), 'split'), [Const(':')], None, None))]))
Module(None, Stmt([Assign([AssName('lookup_str', 'OP_ASSIGN')], Add((Add((Getattr(Name('callback'), '__module__'), Const('.'))), Getattr(Getattr(Name('callback'), '__class__'), '__name__'))))]))
try :
elif char in 'Yy' :
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_archive', 'OP_ASSIGN')], CallFunc(Getattr(Name('tarfile'), 'open'), [Name('file')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('deactivate'), [], None, None))]))
Module(None, Stmt([Assign([AssName('input_attrs', 'OP_ASSIGN')], CallFunc(Name('dict'), [Keyword('value', CallFunc(Name('force_text'), [Name('v')], None, None))], None, Name('final_attrs')))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_assert_mutable'), [], None, None))]))
Module(None, Stmt([Assign([AssName('USE_INOTIFY', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([While(Compare(Name('factor'), [('>=', Const(0))]), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('unbound'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('value'), 'date'), [], None, None))]))
from django . core . exceptions import ValidationError
try :
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], Const('?'))]))
Module(None, Stmt([Assign([AssTuple([AssName('e', 'OP_ASSIGN'), AssName('tb', 'OP_ASSIGN')])], Slice(CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), 'OP_APPLY', Const(1), None))]))
Module(None, Stmt([If([(And([Compare(Const('.'), [('not in', Name('var'))]), Compare(Const('e'), [('not in', CallFunc(Getattr(Name('var'), 'lower'), [], None, None))])]), Stmt([Pass()]))], None)]))
except ( ImportError , AttributeError ) as e :
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Assign([AssName('obj_dict', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('SimpleTemplateResponse'), Name('self')], None, None), '__getstate__'), [], None, None))]))
self . check_test = boolean_check if check_test is None else check_test
Module(None, Stmt([Function(None, '__init__', ['self', 'name', 'value', 'attrs', 'choice', 'index'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('LANGUAGE_SESSION_KEY', 'OP_ASSIGN')], Const('_language'))]))
Module(None, Stmt([Return(CallFunc(Name('tuple'), [Name('bits')], None, None))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Function(None, 'compile_filter', ['self', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '__offset', 'OP_ASSIGN')], CallFunc(Name('timedelta'), [Keyword('minutes', Name('offset'))], None, None))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Assign([AssName('tags', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('re'), 'escape'), [Name('tag')], None, None), [ListCompFor(AssName('tag', 'OP_ASSIGN'), CallFunc(Getattr(Name('tags'), 'split'), [], None, None), [])]))]))
Module(None, Stmt([Class('Command', [Name('AppCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('instance')])], Subscript(CallFunc(Getattr(Name('self'), 'get_queryset'), [], None, None), 'OP_APPLY', [Name('i')]))]))
else :
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('node'), Name('ExtendsNode')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('tag', 'OP_ASSIGN'), AssName('this_value_expr', 'OP_ASSIGN'), AssName('max_value_expr', 'OP_ASSIGN'), AssName('max_width', 'OP_ASSIGN'), AssName('as_', 'OP_ASSIGN'), AssName('asvar', 'OP_ASSIGN')])], Name('bits'))]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('Unknown app in excludes: %s'), Name('exclude')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('WindowsError', 'OP_ASSIGN')], Name('WindowsError'))]))
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Mod((Const('update expected at most 1 arguments, got %d'), CallFunc(Name('len'), [Name('args')], None, None)))], None, None), None, None)]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const('Zip-compressed fixtures must contain one file.')], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Name('i'), [('>=', CallFunc(Name('len'), [Name('subject')], None, None))]), Stmt([Pass()]))], None)]))
except AttributeError :
Module(None, Stmt([Assign([AssName('truncate', 'OP_ASSIGN')], CallFunc(Name('property'), [Lambda(['self'], [], 0, Getattr(Getattr(Name('self'), 'file'), 'truncate'))], None, None))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], CallFunc(Getattr(Name('token'), 'split_contents'), [], None, None))]))
@ register . filter ( is_safe = True )
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [Mod((Const(' _(%s) '), Name('fmatch')))], None, None))]))
Module(None, Stmt([Class('JSONSerializer', [Name('object')], None, Stmt([Pass()]), None)]))
except IndexError :
Module(None, Stmt([Class('CacheClass', [Name('LocMemCache')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('last', 'OP_ASSIGN')], CallFunc(Name('max'), [Const(0), Sub((Name('end'), Const(1)))], None, None))]))
Module(None, Stmt([Assign([AssName('_localtime', 'OP_ASSIGN')], CallFunc(Getattr(Name('pytz'), 'timezone'), [Getattr(Name('settings'), 'TIME_ZONE')], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_client'))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Name('urlparse'), [Name('url')], None, None))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Return(Name('lookup_view'))]))
Module(None, Stmt([If([(Compare(Name('t'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([AssName('result_args', 'OP_ASSIGN')], Name('new_args'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('debug'), 'technical_500_response'), [Name('request'), Keyword('status_code', Const(400))], CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), None))]))
Module(None, Stmt([Discard(CallFunc(Name('_load_serializers'), [], None, None))]))
else :
try :
Module(None, Stmt([Global(['_default'])]))
try :
Module(None, Stmt([Assign([AssName('filemsg', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Function(None, '__deepcopy__', ['self', 'memo'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('html4_singlets', 'OP_ASSIGN')], Tuple([Const('br'), Const('col'), Const('link'), Const('base'), Const('img'), Const('param'), Const('area'), Const('hr'), Const('input')]))]))
return f . fileno ( ) if hasattr ( f , 'fileno' ) else f
Module(None, Stmt([Global(['_format_cache', '_format_modules_cache'])]))
else :
Module(None, Stmt([For(AssName('bit', 'OP_ASSIGN'), CallFunc(Getattr(Name('smart_split_re'), 'finditer'), [Name('text')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Function(None, 'j', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(CallFunc(Name('getattr'), [Name('instance'), Name('name')], None, None), [], None, None))]))
Module(None, Stmt([From('django.utils.translation', [('trans_null', 'trans')], 0)]))
Module(None, Stmt([Function(None, 'get_language_from_request', ['request', 'check_path'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'out', 'style_func', 'ending'], [Name('None'), Const('\n')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_num_pages', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([From('django.utils', [('formats', None), ('six', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'abstract', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'help_text', 'OP_ASSIGN')], Or([Getattr(Name('field'), 'help_text'), Const('')]))]))
Module(None, Stmt([Raise(CallFunc(Name('InputStreamExhausted'), [], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('msg_data', 'OP_ASSIGN')], CallFunc(Getattr(Name('msg_data'), 'decode'), [Name('charset')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'instance'), 'full_clean'), [Keyword('exclude', Name('exclude')), Keyword('validate_unique', Name('False'))], None, None))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Function(None, 'clear', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Add((Add((CallFunc(Name('sql_create'), [Name('app_config'), Name('style'), Name('connection')], None, None), CallFunc(Name('sql_custom'), [Name('app_config'), Name('style'), Name('connection')], None, None))), CallFunc(Name('sql_indexes'), [Name('app_config'), Name('style'), Name('connection')], None, None))))]))
Module(None, Stmt([If([(Name('PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'value_encode', ['self', 'val'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('answer', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Return(CallFunc(Name('Media'), [], None, Dict([(CallFunc(Name('str'), [Name('name')], None, None), CallFunc(Name('getattr'), [Name('self'), Add((Const('_'), Name('name')))], None, None))])))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('datetime'), 'fromtimestamp'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'getctime'), [CallFunc(Getattr(Name('self'), 'path'), [Name('name')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Return(Name('s'))]))
try :
Module(None, Stmt([Assign([AssName('secret', 'OP_ASSIGN')], Getattr(Name('settings'), 'SECRET_KEY'))]))
Module(None, Stmt([Return(Or([Compare(Getattr(Name('value'), 'tzinfo'), [('is', Name('None'))]), Compare(CallFunc(Getattr(Getattr(Name('value'), 'tzinfo'), 'utcoffset'), [Name('value')], None, None), [('is', Name('None'))])]))]))
Module(None, Stmt([Assign([AssName('field', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'fields'), 'OP_APPLY', [Name('name')]))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('    No custom SQL for %s.%s model\n'), Tuple([Name('app_name'), Getattr(Getattr(Name('model'), '_meta'), 'object_name')])))], None, None))]))
try :
Module(None, Stmt([Assign([AssName('items', 'OP_ASSIGN')], Name('_iteritems'))]))
Module(None, Stmt([Assign([AssName('members', 'OP_ASSIGN')], ListComp(Name('member'), [ListCompFor(AssName('member', 'OP_ASSIGN'), CallFunc(Getattr(Getattr(Name('self'), '_archive'), 'getmembers'), [], None, None), [ListCompIf(Compare(Getattr(Name('member'), 'name'), [('!=', Const('pax_global_header'))]))])]))]))
except ValueError :
Module(None, Stmt([If([(Compare(Subscript(Name('subject'), 'OP_APPLY', [Name('i')]), [('in', Tuple([Const('"'), Const("'")]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('extra_params'), 'update'), [Name('field_params')], None, None))]))
Module(None, Stmt([Assign([AssName('label_output', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'handle_label'), [Name('label')], None, Name('options')))]))
Module(None, Stmt([AssName('attr', 'OP_DELETE')]))
Module(None, Stmt([If([(Compare(Name('name'), [('in', Name('existing'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('html_gunk_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('(?:<br clear="all">|<i><\\/i>|<b><\\/b>|<em><\\/em>|<strong><\\/strong>|<\\/?smallcaps>|<\\/?uppercase>)'), Getattr(Name('re'), 'IGNORECASE')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'msg', 'params'], [Tuple(())], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('category'), Name('cat')], None, None))]))
Module(None, Stmt([For(AssName('message', 'OP_ASSIGN'), Name('messages'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([From('django.forms', [('Form', None)], 0)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Assign([AssName('old_app_dir', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'normpath'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('app_dir'), Const('models/sql')], None, None)], None, None))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'output_transaction'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Mod((CallFunc(Name('str'), [Const('<%s %s (%s:%s) %s>')], None, None), Tuple([Getattr(Getattr(Name('self'), '__class__'), '__name__'), Name('urlconf_repr'), Getattr(Name('self'), 'app_name'), Getattr(Name('self'), 'namespace'), Getattr(Getattr(Name('self'), 'regex'), 'pattern')]))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_initialize_handlers'), [], None, None))]))
Module(None, Stmt([Continue()]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('message'), 'message'), [], None, None))]))
Module(None, Stmt([Assign([AssName('kwargs', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None), ('python_2_unicode_compatible', None)], 0)]))
Module(None, Stmt([Return(Tuple([Name('field_type'), Name('field_params'), Name('field_notes')]))]))
Module(None, Stmt([If([(Compare(Name('push'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Getattr(Name('self'), 'data'), 'hour'), [('>', Const(12))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('regex', 'OP_ASSIGN'), Tuple([Name('RFC1123_DATE'), Name('RFC850_DATE'), Name('ASCTIME_DATE')]), Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const("The view %s.%s didn't return an HttpResponse object. It returned None instead."), Tuple([Getattr(Name('callback'), '__module__'), Name('view_name')])))], None, None), None, None)]))
Module(None, Stmt([From('django.core.files.move', [('file_move_safe', None)], 0)]))
Module(None, Stmt([Assign([AssName('as_form', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Function(None, 'autoescape', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'name', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([Import([('calendar', None)])]))
Module(None, Stmt([Assign([AssName('_locs_', 'OP_ASSIGN')], Getattr(Name('frame'), 'f_locals'))]))
Module(None, Stmt([Function(None, 'needs_multipart_form', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([For(AssTuple([AssName('receiver', 'OP_ASSIGN'), AssName('_', 'OP_ASSIGN'), AssName('_', 'OP_ASSIGN')]), Name('receivers'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], Tuple([Const('LOCK_EX'), Const('LOCK_SH'), Const('LOCK_NB'), Const('lock'), Const('unlock')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'empty_variable'), [Name('token')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'kwargs', 'OP_ASSIGN')], Name('kwargs'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'options', 'OP_ASSIGN')], Name('options'))]))
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('word', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Name('words')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'bytes_to_text', ['s', 'encoding'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('url', 'OP_ASSIGN')], CallFunc(Name('smart_urlquote'), [Mod((Const('http://%s'), Name('middle')))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('unhandled_params'), 'pop'), [Const(0)], None, None))]))
Module(None, Stmt([Function(None, 'to_language', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('e'), 'errno'), [('==', Getattr(Name('errno'), 'EEXIST'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Return(CallFunc(Name('format_html'), [Const('<option value="{0}"{1}>{2}</option>'), Name('option_value'), Name('selected_html'), CallFunc(Name('force_text'), [Name('option_label')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('kwargs', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssName('_DJANGO_DEPRECATED_LOCALES', 'OP_ASSIGN')], Name('_BROWSERS_DEPRECATED_LOCALES'))]))
elif field_type == 'IntegerField(' and not connection . features . can_introspect_autofield :
Module(None, Stmt([From('itertools', [('groupby', None), ('cycle', 'itertools_cycle')], 0)]))
elif param in kwargs :
Module(None, Stmt([Assign([AssName('itervalues', 'OP_ASSIGN')], Name('_itervalues'))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([From('__future__', [('absolute_import', None)], 0)]))
Module(None, Stmt([Function(None, 'error', ['self', 'token', 'msg'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None)], 0)]))
Module(None, Stmt([Class('HTMLParser', [Getattr(Name('_html_parser'), 'HTMLParser')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([Subscript(Name('words'), 'OP_ASSIGN', [Name('i')])], CallFunc(Name('escape'), [Name('word')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('context_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))\\s*')], None, None))]))
Module(None, Stmt([Assign([AssName('options', 'OP_ASSIGN')], CallFunc(Name('sorted'), [GenExpr(GenExprInner(Tuple([Name('k'), Name('v')]), [GenExprFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), Name('options'), [GenExprIf(CallFunc(Getattr(Name('k'), 'startswith'), [Name('curr')], None, None))])]))], None, None))]))
Module(None, Stmt([Assign([AssName('subject', 'OP_ASSIGN')], Getattr(Name('self'), 'subject'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('file_'), 'close'), [], None, None))]))
Module(None, Stmt([Function(None, 'emit_pre_migrate_signal', ['create_models', 'verbosity', 'interactive', 'db'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('line', 'OP_ASSIGN')], Add((Name('buffer_'), Name('line'))))]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Getattr(Name('base'), 'build_instance'), [Name('Model'), Name('data'), Getattr(Name('self'), 'db')], None, None))]))
Module(None, Stmt([Function(None, 'm', ['self'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Return(Subscript(CallFunc(Name('list'), [CallFunc(Getattr(Name('self'), '__iter__'), [], None, None)], None, None), 'OP_APPLY', [Name('idx')]))]))
Module(None, Stmt([Function(None, 'wrap', ['text', 'width'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Getattr(Name('self'), 'hashvalue'))]))
Module(None, Stmt([Class('File', [Name('FileProxyMixin')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'get', ['self', 'key', 'default'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Name('value'), CallFunc(Name('hasattr'), [Name('value'), Const('url')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('os'), 'access'), [Name('filename'), Getattr(Name('os'), 'W_OK')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('cookiedict'))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'fail_silently')), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None), ('smart_text', None)], 0)]))
Module(None, Stmt([Assign([AssName('base_subdir', 'OP_ASSIGN')], Mod((Const('%s_template'), Name('app_or_project'))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [], Name('exc_info'), None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(Dict(()))]))
Module(None, Stmt([If([(Compare(Subscript(Name('data_list'), 'OP_APPLY', [Const(1)]), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Assign([AssName('piece', 'OP_ASSIGN')], CallFunc(Getattr(Const(''), 'join'), [Slice(Name('source'), 'OP_APPLY', Name('last'), None)], None, None))]))
Module(None, Stmt([From('unittest', [('*', None)], 0)]))
Module(None, Stmt([Class('HttpResponseRedirectBase', [Name('HttpResponse')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('found', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('found'), Name('frag')], None, None))]))
Module(None, Stmt([For(AssName('filename', 'OP_ASSIGN'), Name('files'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('new_conn_created', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'open'), [], None, None))]))
Module(None, Stmt([Return(Getattr(Name('mod'), 'register'))]))
Module(None, Stmt([Return(CallFunc(Name('_long_to_bin'), [Name('result'), Name('hex_format_string')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('int'), [CallFunc(Getattr(Name('time'), 'mktime'), [CallFunc(Getattr(Getattr(Name('self'), 'data'), 'timetuple'), [], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('language_code', 'OP_ASSIGN')], CallFunc(Name('get_language'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('lines'), 'append'), [Name('line')], None, None))]))
Module(None, Stmt([Function(None, 'accessed_time', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Mod((Const('%s = %s'), Tuple([Name('key'), Subscript(Name('user_settings'), 'OP_APPLY', [Name('key')])])))], None, None))]))
Module(None, Stmt([Assign([AssName('commands', 'OP_ASSIGN')], CallFunc(Name('get_commands'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('len'), [CallFunc(Getattr(Name('value'), 'split'), [], None, None)], None, None))]))
return 'https' if os . environ . get ( "HTTPS" ) == "on" else 'http'
Module(None, Stmt([Discard(CallFunc(Getattr(Name('inner_args'), 'extend'), [Name('args')], None, None))]))
Module(None, Stmt([Class('WSGIServer', [Getattr(Name('simple_server'), 'WSGIServer'), Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Name('is_templatized'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('form'), 'save'), [Keyword('commit', Name('commit'))], None, None))]))
else :
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Name('self'), 'format_output'), [Name('output')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('_urlconfs', 'OP_ASSIGN')], CallFunc(Name('local'), [], None, None))]))
Module(None, Stmt([Assign([AssName('model_identifier', 'OP_ASSIGN')], CallFunc(Getattr(Name('node'), 'getAttribute'), [Name('attr')], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Name('ip_str'), 'count'), [Const('::')], None, None), [('>', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], Or([Getattr(Name('self'), 'to_field_name'), Const('pk')]))]))
Module(None, Stmt([Assign([AssName('form', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('BaseInlineFormSet'), Name('self')], None, None), '_construct_form'), [Name('i')], None, Name('kwargs')))]))
mode = 'wb' if isinstance ( chunk , bytes ) else 'wt'
Module(None, Stmt([If([(Name('response'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('kwargs'), 'setdefault'), [Const('content_type'), Const('application/json')], None, None))]))
Module(None, Stmt([Return(Name('ZERO'))]))
migration . branch = migration . ancestry [  ( migration . ancestry . index ( common_ancestor ) + 1 ) :  ]
Module(None, Stmt([Discard(CallFunc(Getattr(Name('bits'), 'append'), [Name('None')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('bmatch'), 'group'), [Const(1)], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('CsrfTokenNode'), [], None, None))]))
Module(None, Stmt([For(AssName('loader', 'OP_ASSIGN'), Getattr(Name('self'), '_loaders'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('attrvalue', 'OP_ASSIGN')], Slice(Name('attrvalue'), 'OP_APPLY', Const(1), UnarySub(Const(1))))]))
Module(None, Stmt([Function(None, 'exit_command', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('end', 'OP_ASSIGN')], CallFunc(Getattr(Name('s'), 'find'), [Const(';'), Add((Name('end'), Const(1)))], None, None))]))
Module(None, Stmt([Assign([AssName('jan1_weekday', 'OP_ASSIGN')], Add((CallFunc(Getattr(CallFunc(Getattr(Getattr(Name('self'), 'data'), 'replace'), [Keyword('month', Const(1)), Keyword('day', Const(1))], None, None), 'weekday'), [], None, None), Const(1))))]))
else :
Module(None, Stmt([Discard(Yield(Name('key')))]))
Module(None, Stmt([Return(Add((CallFunc(Getattr(Name('s'), 'get_data'), [], None, None), Getattr(Name('s'), 'rawdata'))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('attrs'), 'setdefault'), [Const('step'), Name('step')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('ch', 'OP_ASSIGN'), AssName('escaped', 'OP_ASSIGN')])], CallFunc(Name('next'), [Name('pattern_iter')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'args', 'OP_ASSIGN')], Name('args'))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'enter_command'), [Name('command'), Name('token')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'active_readers', 'OP_ASSIGN')], Const(0))]))
try :
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'nodelist_false'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([Assign([AssName('client', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), '_lib'), 'Client'), [Getattr(Name('self'), '_servers')], None, None))]))
Module(None, Stmt([Function(None, '__eq__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('dict'), '__setitem__'), [Name('result'), CallFunc(Getattr(Name('copy'), 'deepcopy'), [Name('key'), Name('memo')], None, None), CallFunc(Getattr(Name('copy'), 'deepcopy'), [Name('value'), Name('memo')], None, None)], None, None))]))
Module(None, Stmt([Return(ListComp(Slice(Name('f'), 'OP_APPLY', None, UnarySub(Const(3))), [ListCompFor(AssName('f', 'OP_ASSIGN'), CallFunc(Getattr(Name('os'), 'listdir'), [Name('command_dir')], None, None), [ListCompIf(And([Not(CallFunc(Getattr(Name('f'), 'startswith'), [Const('_')], None, None)), CallFunc(Getattr(Name('f'), 'endswith'), [Const('.py')], None, None)]))])]))]))
Module(None, Stmt([Assign([AssName('val2', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'var2'), 'resolve'), [Name('context'), Name('True')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('iter'), [Name('second_item')], None, None))]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('doublecolon_len', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'setFeature'), [Getattr(Name('handler'), 'feature_external_ges'), Name('False')], None, None))]))
Module(None, Stmt([Function(None, 'handle_app_config', ['self', 'app_config', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('node', 'OP_ASSIGN'), Getattr(Name('self'), 'nodelist_loop'), Stmt([Pass()]), None)]))
except KeyError :
Module(None, Stmt([If([(Compare(Subscript(Name('text'), 'OP_APPLY', [Const(0)]), [('in', Const('xX'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'strftime', ['dt', 'fmt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('can_fail'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('TYPE', 'OP_ASSIGN')], Name('RAW'))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'obj'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'name', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([From('email.utils', [('formatdate', None), ('getaddresses', None), ('formataddr', None), ('parseaddr', None)], 0)]))
Module(None, Stmt([Function(None, 'write', ['self', 's'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Getattr(Name('self'), '__name'))]))
Module(None, Stmt([Assign([AssName('robotparser', 'OP_ASSIGN')], Subscript(Getattr(Name('sys'), 'modules'), 'OP_APPLY', [Add((Name('__name__'), Const('.moves.urllib_robotparser')))]))]))
Module(None, Stmt([If([(Not(Name('unused_char')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'required', 'OP_ASSIGN'), AssAttr(Name('self'), 'label', 'OP_ASSIGN'), AssAttr(Name('self'), 'initial', 'OP_ASSIGN')])], Tuple([Name('required'), Name('label'), Name('initial')]))]))
Module(None, Stmt([Return(CallFunc(Name('sorted'), [Name('value'), Keyword('key', Getattr(CallFunc(Name('Variable'), [Name('arg')], None, None), 'resolve')), Keyword('reverse', Name('True'))], None, None))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'body'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('processors', 'OP_ASSIGN')], Tuple(()))]))
Module(None, Stmt([Assign([AssName('text_args', 'OP_ASSIGN')], ListComp(CallFunc(Name('force_text'), [Name('v')], None, None), [ListCompFor(AssName('v', 'OP_ASSIGN'), Name('args'), [])]))]))
Module(None, Stmt([Assign([AssName('id', 'OP_ASSIGN')], Const('literal'))]))
Module(None, Stmt([Function(None, '__exit__', ['self', 'exc_type', 'exc_value', 'traceback'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Sub((Getattr(Getattr(Name('self'), 'data'), 'hour'), Const(12))))]))
Module(None, Stmt([Return(Getattr(Subscript(Name('_serializers'), 'OP_APPLY', [Name('format')]), 'Deserializer'))]))
Module(None, Stmt([Function(None, 'create_nodelist', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('patterns', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Getattr(Name('self'), 'urlconf_module'), Const('urlpatterns'), Getattr(Name('self'), 'urlconf_module')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [CallFunc(Getattr(Const('\n'), 'join'), [GenExpr(GenExprInner(Mod((Const('  * %s'), Name('e'))), [GenExprFor(AssName('e', 'OP_ASSIGN'), Name('errors'), [])]))], None, None)], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of Serializer must provide an handle_fk_field() method')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('top', 'OP_ASSIGN')], Add((Name('bottom'), Getattr(Name('self'), 'per_page'))))]))
Module(None, Stmt([Return(Tuple([List([Const('')]), List([List(())])]))]))
Module(None, Stmt([Assign([AssName('output_transaction', 'OP_ASSIGN')], Name('True'))]))
else :
Module(None, Stmt([Function(None, 'get_format_modules', ['lang', 'reverse'], [Name('None'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Slice(Getattr(Name('sys'), 'version_info'), 'OP_APPLY', None, Const(2)), [('>=', Tuple([Const(3), Const(4)]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('buf', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'readline'), [], None, None))]))
Module(None, Stmt([From('django.utils.html', [('format_html', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('c'), 'append'), [Name('tok')], None, None))]))
Module(None, Stmt([If([(Compare(Name('func'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('list_')], None, None), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('field'), [('not in', Getattr(Name('self'), 'errors'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('field_type', 'OP_ASSIGN')], Const('TextField'))]))
Module(None, Stmt([Discard(CallFunc(Name('check_for_migrations'), [Name('app_config'), Name('connection')], None, None))]))
Module(None, Stmt([Assign([AssName('clear_checkbox_label', 'OP_ASSIGN')], CallFunc(Name('ugettext_lazy'), [Const('Clear')], None, None))]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], Const('django.utils.text.javascript_quote() is deprecated. Use django.utils.html.escapejs() instead.'))]))
Module(None, Stmt([Assign([AssName('WORD_PATTERN', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^\\s*(\\w+)\\s*')], None, None))]))
Module(None, Stmt([Return(Name('attrs'))]))
Module(None, Stmt([Assign([AssName('defaults', 'OP_ASSIGN')], Dict([(Const('auto_id'), Getattr(Name('self'), 'auto_id')), (Const('prefix'), CallFunc(Getattr(Name('self'), 'add_prefix'), [Name('i')], None, None)), (Const('error_class'), Getattr(Name('self'), 'error_class'))]))]))
Module(None, Stmt([Discard(CallFunc(Name('iter'), [Name('x')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('delattr'), [Getattr(Name('obj'), '__class__'), Getattr(Name('self'), 'name')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Const('</select>')], None, None))]))
Module(None, Stmt([Function(None, 'dumps', ['self', 'obj'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('parts', 'OP_ASSIGN')], Slice(Name('parts'), 'OP_APPLY', None, UnarySub(Const(1))))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('default'))]))
Module(None, Stmt([If([(Name('primary_keys'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('cache'))]))
Module(None, Stmt([Return(Name('code'))]))
Module(None, Stmt([Return(Tuple([Getattr(Name('self'), '__offset')]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_choices', 'OP_ASSIGN'), AssAttr(Getattr(Name('self'), 'widget'), 'choices', 'OP_ASSIGN')], CallFunc(Name('list'), [Name('value')], None, None))]))
@ property
else :
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'unclosed_block_tag'), [Name('parse_until')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--noinput'), Keyword('action', Const('store_false')), Keyword('dest', Const('interactive')), Keyword('default', Name('True')), Keyword('help', Const('Tells Django to NOT prompt the user for input of any kind.'))], None, None))]))
try :
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
else :
Module(None, Stmt([If([(Getattr(Name('form'), 'is_bound'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of BaseCache must provide a clear() method')], None, None), None, None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'server', 'params'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('default'))]))
Module(None, Stmt([For(AssName('i', 'OP_ASSIGN'), CallFunc(Name('range'), [Const(0), Sub((CallFunc(Name('len'), [Name('pieces')], None, None), Const(1))), Const(3)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('middle'), 'startswith'), [Name('opening')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Mod((Const('`%s.%s` method should be renamed `%s`.'), Tuple([Name('class_name'), Name('old_method_name'), Name('new_method_name')]))), Name('deprecation_warning'), Const(2)], None, None))]))
Module(None, Stmt([Assign([AssName('natural_key', 'OP_ASSIGN')], CallFunc(Getattr(Name('obj'), 'natural_key'), [], None, None))]))
Module(None, Stmt([Function(None, 'id_for_label', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('var_obj', 'OP_ASSIGN')], CallFunc(Name('Variable'), [Name('var')], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('last_row'), 'endswith'), [Name('row_ender')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Command'), Name('self')], None, None), 'run_from_argv'), [Name('argv')], None, None))]))
Module(None, Stmt([Assign([AssName('n', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('lookup_view'), Const('__name__'), Name('None')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('content', 'OP_ASSIGN')], CallFunc(Name('templatize'), [Name('src_data'), Slice(Name('orig_file'), 'OP_APPLY', Const(2), None)], None, None))]))
Module(None, Stmt([Assign([AssName('i', 'OP_ASSIGN')], Getattr(Name('self'), 'pointer'))]))
Module(None, Stmt([If([(Compare(Name('__name__'), [('==', Const('__main__'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], Slice(Name('s'), 'OP_APPLY', Name('end'), None))]))
Module(None, Stmt([Class('StopUpload', [Name('UploadFileException')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssName('base', 'OP_ASSIGN'), CallFunc(Getattr(Name('inspect'), 'getmro'), [Name('new_class')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'level', 'msg', 'hint', 'obj', 'id'], [Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('field_value'), Name('str')], None, None), Stmt([Pass()]))], None)]))
except StopFutureHandlers :
Module(None, Stmt([Return(CallFunc(Name('timedelta'), [Keyword('seconds', UnarySub(Getattr(Name('time'), 'timezone')))], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'isfile'), [Name('pythonrc')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'asvar', 'OP_ASSIGN')], Name('asvar'))]))
Module(None, Stmt([Return(CallFunc(Name('_get_timezone_name'), [CallFunc(Name('get_default_timezone'), [], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('ch', 'OP_ASSIGN')], CallFunc(Name('next'), [Name('input_iter')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Name('sql')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('timezone'), 'make_aware'), [Name('value'), Name('current_timezone')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('e'), 'errno'), [('!=', Getattr(Name('errno'), 'ENOENT'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('_file'), 'close'), [], None, None))]))
else :
Module(None, Stmt([Return(CallFunc(Name('iter'), [Getattr(Name('self'), 'file')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('sys'), 'stderr', 'OP_ASSIGN')], CallFunc(Name('NullDevice'), [], None, None))]))
Module(None, Stmt([Return(Name('False'))]))
elif hasattr ( pattern , '_callback' ) :
Module(None, Stmt([Function(None, 'add_css', ['self', 'data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Global(['_serializers'])]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('name'), Keyword('help', Const('Name of the application or project.'))], None, None))]))
Module(None, Stmt([Assign([AssName('termios', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Function(None, 'build_potfiles', ['self'], [], 0, None, Stmt([Pass()]))]))
except AttributeError :
Module(None, Stmt([Discard(Yield(Name('buf')))]))
else :
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('max_decimal_places')]), Keyword('code', Const('max_decimal_places')), Keyword('params', Dict([(Const('max'), Getattr(Name('self'), 'decimal_places'))]))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Name('deactivate_all'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('get_callable'), 'cache_clear'), [], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("couldn't handle %s template %s."), Tuple([Getattr(Name('self'), 'app_or_project'), Name('template')])))], None, None), None, None)]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'DEBUG'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_add_fallback'), [], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'argv'], [Name('None')], 0, None, Stmt([Pass()]))]))
class CheckRegistry ( object ) :
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('to_field')])], Getattr(Getattr(Getattr(Name('self'), 'fk'), 'rel'), 'field_name'))]))
Module(None, Stmt([If([(And([Name('next_item'), CallFunc(Name('isinstance'), [Name('next_item'), Tuple([Name('list'), Name('tuple')])], None, None)]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([AssName('max_value', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'max_expr'), 'resolve'), [Name('context')], None, None))]))
attrs = flatatt ( attrs ) if attrs else ''
Module(None, Stmt([If([(Not(Subscript(Name('url_fields'), 'OP_APPLY', [Const(1)])), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('cache_key'))]))
Module(None, Stmt([Return(Const('<UTC>'))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid')]), Keyword('code', Const('invalid'))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('locations', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Compare(Name('klass'), [('not in', Getattr(Name('cls'), '__dispatch'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('Atom1Feed', [Name('SyndicationFeed')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [Name('DeserializationError'), CallFunc(Name('DeserializationError'), [Name('e')], None, None), Subscript(CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), 'OP_APPLY', [Const(2)])], None, None))]))
Module(None, Stmt([Assign([AssName('klass', 'OP_ASSIGN')], CallFunc(Name('load_command_class'), [Name('app_name'), Name('subcommand')], None, None))]))
Module(None, Stmt([Return(Name('kwargs'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'endElement'), [Name('name')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('obj'), '_constructor_args', 'OP_ASSIGN')], Tuple([Name('args'), Name('kwargs')]))]))
Module(None, Stmt([Assign([AssName('form_field', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'fields'), 'OP_APPLY', [Name('field')]))]))
Module(None, Stmt([Assign([AssName('final_output', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_default_manager'), 'db_manager'), [Getattr(Name('self'), 'db')], None, None), 'get_by_natural_key'), [], Name('field_value'), None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('f'), 'save_form_data'), [Name('instance'), Subscript(Name('cleaned_data'), 'OP_APPLY', [Getattr(Name('f'), 'name')])], None, None))]))
Module(None, Stmt([Assign([AssName('_assertRaisesRegex', 'OP_ASSIGN')], Const('assertRaisesRegexp'))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'use_natural_foreign_keys'), CallFunc(Name('hasattr'), [Getattr(Getattr(Name('field'), 'rel'), 'to'), Const('natural_key')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('attrs', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('obj_pk', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_meta'), 'get_field'), [Getattr(Getattr(Name('field'), 'rel'), 'field_name')], None, None), 'to_python'), [Name('field_value')], None, None))]))
Module(None, Stmt([Function(None, 'validate', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'message', 'OP_ASSIGN')], Name('message'))]))
try :
@ register . tag
Module(None, Stmt([Discard(CallFunc(Getattr(Name('file_field_list'), 'append'), [Name('f')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'files', 'OP_ASSIGN')], Or([Name('files'), Dict(())]))]))
Module(None, Stmt([If([(And([Compare(Name('fields'), [('is not', Name('None'))]), Compare(Getattr(Name('f'), 'name'), [('not in', Name('fields'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('tt', 'OP_ASSIGN')], Add((Tuple([Const(2037)]), Slice(Name('tt'), 'OP_APPLY', Const(1), None))))]))
Module(None, Stmt([Class('IfEqualNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'get', ['self', 'key', 'otherwise'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'buffer', 'OP_ASSIGN')], Slice(Getattr(Name('self'), 'buffer'), 'OP_APPLY', Name('size'), None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('include_is_allowed'), [Name('filepath')], None, None)), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([From('importlib', [('import_module', None)], 0)]))
Module(None, Stmt([If([(Not(Name('_serializers')), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([AssName('delta', 'OP_ASSIGN')], Sub((Name('expires'), CallFunc(Getattr(Name('expires'), 'utcnow'), [], None, None))))]))
self . addr = '::1' if self . use_ipv6 else '127.0.0.1'
Module(None, Stmt([Function(None, 'get_supported_language_variant', ['lang_code', 'strict'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('params'), 'get'), [Const('filename')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Assign([AssAttr(Name('logger'), 'handlers', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('app_output', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'handle_app_config'), [Name('app_config')], None, Name('options')))]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], Mod((Const('Module "%s" does not define a "%s" attribute/class'), Tuple([Name('dotted_path'), Name('class_name')]))))]))
Module(None, Stmt([From('xml.sax.expatreader', [('ExpatParser', '_ExpatParser')], 0)]))
Module(None, Stmt([Assert(Compare(Slice(Name('rawdata'), 'OP_APPLY', Name('i'), Add((Name('i'), Const(2)))), [('==', Const('</'))]), Const('unexpected call to parse_endtag'))]))
Module(None, Stmt([Assign([AssName('chunk', 'OP_ASSIGN')], CallFunc(Getattr(Name('handler'), 'receive_data_chunk'), [Name('chunk'), Subscript(Name('counters'), 'OP_APPLY', [Name('i')])], None, None))]))
Module(None, Stmt([Assign([AssName('token', 'OP_ASSIGN')], CallFunc(Name('Token'), [Name('TOKEN_TEXT'), Name('token_string')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_catalog', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('translation'), '_catalog'), 'copy'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('"validate" has been deprecated in favor of "check".'), Name('RemovedInDjango19Warning')], None, None))]))
Module(None, Stmt([Assign([AssName('fp', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('file'), Getattr(Name('sys'), 'stdout')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const("Key '%s' not found"), Name('key')))], None, None), None, None)]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('form'), 'save'), [Keyword('commit', Name('commit'))], None, None))]))
Module(None, Stmt([If([(Compare(Subscript(Name('item'), 'OP_APPLY', [Const('comments')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
except KeyboardInterrupt :
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid_choice')]), Keyword('code', Const('invalid_choice')), Keyword('params', Dict([(Const('value'), Name('val'))]))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'set', ['self', 'key', 'value', 'timeout', 'version'], [Name('DEFAULT_TIMEOUT'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('property'), [Name('fget'), Name('fset'), Name('fdel'), Name('doc')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('get_supported_language_variant'), [Name('accept_lang')], None, None))]))
Module(None, Stmt([If([(And([Compare(Getattr(Name('token'), 'token_type'), [('==', Name('TOKEN_BLOCK'))]), Compare(Getattr(Name('token'), 'contents'), [('==', Name('endtag'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('DecimalField', [Name('IntegerField')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), '_post', 'OP_ASSIGN'), AssAttr(Name('self'), '_files', 'OP_ASSIGN')])], Tuple([CallFunc(Name('QueryDict'), [Const(''), Keyword('encoding', Getattr(Name('self'), '_encoding'))], None, None), CallFunc(Name('MultiValueDict'), [], None, None)]))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], Add((Add((List([Getattr(Name('sys'), 'executable')]), ListComp(Mod((Const('-W%s'), Name('o'))), [ListCompFor(AssName('o', 'OP_ASSIGN'), Getattr(Name('sys'), 'warnoptions'), [])]))), Getattr(Name('sys'), 'argv'))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Mod((Const('### %s = %s'), Tuple([Name('key'), Subscript(Name('user_settings'), 'OP_APPLY', [Name('key')])])))], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('_'), 'OP_ASSIGN', [Subscript(Name('m'), 'OP_APPLY', [Name('k')])])], Name('v'))]))
Module(None, Stmt([Function(None, '__init__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'print_', ['args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'callable', ['obj'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('response'), 'streaming'), Stmt([Pass()]))], None)]))
@ classmethod
Module(None, Stmt([Function(None, 'is_ajax', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('response'), 'add_post_render_callback'), [Name('callback')], None, None))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
elif t . token_type == TOKEN_TEXT :
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('file_name', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('file_name'), Name('encoding'), Keyword('errors', Const('replace'))], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('sys'), 'platform'), 'startswith'), [Const('java')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('instance')])], CallFunc(Getattr(Name('self'), '_existing_object'), [Name('pk')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid_choice')]), Keyword('code', Const('invalid_choice')), Keyword('params', Dict([(Const('value'), Name('value'))]))], None, None), None, None)]))
Module(None, Stmt([Return(Mod((Const('[Included template had syntax error: %s]'), Name('e'))))]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'waiting_readers'), '+=', Const(1))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('extra_classes'), 'add'), [Getattr(Getattr(Name('self'), 'form'), 'required_css_class')], None, None))]))
Module(None, Stmt([Assign([AssName('translated', 'OP_ASSIGN')], Mod((Name('translated'), Name('rhs'))))]))
Module(None, Stmt([For(AssName('middleware_method', 'OP_ASSIGN'), Getattr(Name('self'), '_template_response_middleware'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'timezone')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(1))]), Name('sql')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Name('__import__'), [Name('name')], None, None))]))
Module(None, Stmt([Return(Name('commands'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'unclosed_block_tag'), [List([Name('endtag')])], None, None))]))
try :
Module(None, Stmt([With(CallFunc(Getattr(Name('io'), 'open'), [Name('orig_file'), Const('r'), Keyword('encoding', Getattr(Name('settings'), 'FILE_CHARSET'))], None, None), AssName('fp', 'OP_ASSIGN'), Stmt([Pass()]))]))
else :
Module(None, Stmt([If([(And([CallFunc(Name('isinstance'), [Name('rhs'), Name('dict')], None, None), Name('number')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'download', ['self', 'url'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('definition'), 'OP_ASSIGN', [Const('opts')])], Name('opts'))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Function(None, '_iteritems', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'has_changed', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('temp_lib'), 'filters'), 'OP_ASSIGN', [Name('name')])], Subscript(Getattr(Name('lib'), 'filters'), 'OP_APPLY', [Name('name')]))]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Name('os'), 'fork'), [], None, None), [('>', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [Mod((Const(' npgettext(%r, %r, %r,count) '), Tuple([Name('message_context'), CallFunc(Name('join_tokens'), [Name('singular'), Name('trimmed')], None, None), CallFunc(Name('join_tokens'), [Name('plural'), Name('trimmed')], None, None)])))], None, None))]))
try :
Module(None, Stmt([Function(None, 'prepend_token', ['self', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Subscript(CallFunc(Getattr(Name('self'), '_get_image_dimensions'), [], None, None), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([For(AssName('fmatch', 'OP_ASSIGN'), CallFunc(Getattr(Name('constant_re'), 'findall'), [Getattr(Name('t'), 'contents')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('e'), 'django_template_source', 'OP_ASSIGN')], Getattr(Name('token'), 'source'))]))
Module(None, Stmt([Import([('re', None)])]))
try :
Module(None, Stmt([Assign([AssName('changeset', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([If([(Or([Compare(Name('value'), [('==', Getattr(Name('self'), 'empty_value'))]), Compare(Name('value'), [('in', Getattr(Name('self'), 'empty_values'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('code', 'OP_ASSIGN')], Const('invalid'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('formats'), 'localize_input'), [Name('value')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('GenericIPAddressField'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('html', 'OP_ASSIGN')], CallFunc(Getattr(Name('endtag_re'), 'sub'), [Const(''), Name('html')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Const("Command doesn't accept any arguments")], None, None), None, None)]))
@ register . filter ( is_safe = True )
Module(None, Stmt([Assign([AssName('choices', 'OP_ASSIGN')], CallFunc(Name('property'), [Name('_get_choices'), Getattr(Name('ChoiceField'), '_set_choices')], None, None))]))
Module(None, Stmt([Function(None, 'import_module', ['name', 'package'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('c', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'pop'), [Const('()')], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'append'), [Const('.')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_files', 'OP_ASSIGN')], CallFunc(Name('MultiValueDict'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('full_statement'), 'append'), [Const(');')], None, None))]))
url = quote ( url , safe = b'!*\'();:@&=+$,/?#[]~' )
Module(None, Stmt([Assign([AssName('statement', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(Yield(Name('line')))]))
Module(None, Stmt([Assign([AssName('reset_sequences', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('reset_sequences'), Name('True')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Name('list')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__eq__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('MinLengthValidator', [Name('BaseValidator')], None, Stmt([Pass()]), None)]))
except IOError :
Module(None, Stmt([Function(None, 'exists', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('deps'), 'append'), [Name('rel_model')], None, None))]))
Module(None, Stmt([Function(None, 'int2byte', ['i'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_done', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '_current'), 'OP_ASSIGN', [Getattr(Name('field'), 'name')])], CallFunc(Name('str'), [CallFunc(Name('getattr'), [Name('obj'), Getattr(Name('field'), 'name')], None, None)], None, None))]))
try :
Module(None, Stmt([Return(Name('ip_str'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('\n'), 'join'), [CallFunc(Name('sql_flush'), [Getattr(Name('self'), 'style'), Subscript(Name('connections'), 'OP_APPLY', [Subscript(Name('options'), 'OP_APPLY', [Const('database')])]), Keyword('only_django', Name('True'))], None, None)], None, None))]))
Module(None, Stmt([AssAttr(Name('_active'), 'value', 'OP_DELETE')]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'get_available_name'), [Name('name')], None, None))]))
Module(None, Stmt([Assign([AssName('original', 'OP_ASSIGN')], CallFunc(Getattr(Name('UnicodeDecodeError'), '__str__'), [Name('self')], None, None))]))
Module(None, Stmt([If([(Name('first'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('et', 'OP_ASSIGN'), AssName('ev', 'OP_ASSIGN'), AssName('tb', 'OP_ASSIGN')])], CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None))]))
except ValueError :
Module(None, Stmt([If([(Getattr(Name('self'), 'first'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('cgi', None)])]))
Module(None, Stmt([From('django.utils', [('datastructures', None)], 0)]))
Module(None, Stmt([Class('FirstOfNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '_app_dict'), 'OP_ASSIGN', [Name('language_code')])], Name('apps'))]))
Module(None, Stmt([If([(Not(Name('commit')), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Import([('fnmatch', None)])]))
Module(None, Stmt([Class('CharField', [Name('Field')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(CallFunc(Getattr(CallFunc(Getattr(CallFunc(Getattr(CallFunc(Getattr(CallFunc(Name('force_text'), [Name('text')], None, None), 'replace'), [Const('&'), Const('&amp;')], None, None), 'replace'), [Const('<'), Const('&lt;')], None, None), 'replace'), [Const('>'), Const('&gt;')], None, None), 'replace'), [Const('"'), Const('&quot;')], None, None), 'replace'), [Const("'"), Const('&#39;')], None, None)], None, None))]))
Module(None, Stmt([Class('ContextPopException', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Class('__proxy__', [Name('Promise')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils.module_loading', [('import_string', None)], 0)]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([AugAssign(Name('i'), '+=', Const(1))]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('item'), Tuple([Name('list'), Name('tuple')])], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'nodelist', ['self'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'state', 'OP_ASSIGN')], Name('first'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('path'), 'split'), [Const('/'), Const(1)], None, None))]))
Module(None, Stmt([Assign([AssName('input_format', 'OP_ASSIGN')], Subscript(CallFunc(Name('get_format'), [Const('DATE_INPUT_FORMATS')], None, None), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Assign([AssName('iterator', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('fixture_files'), 'extend'), [Name('fixture_files_in_dir')], None, None))]))
Module(None, Stmt([If([(And([Compare(Getattr(Name('self'), 'max_digits'), [('is not', Name('None'))]), Compare(Name('digits'), [('>', Getattr(Name('self'), 'max_digits'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('app_path'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('notifier'), 'check_events'), [Keyword('timeout', Name('None'))], None, None))]))
Module(None, Stmt([Function(None, 'get', ['self', 'key', 'default'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('interactive', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('interactive')], None, None))]))
Module(None, Stmt([Assign([AssName('tok', 'OP_ASSIGN')], Const('"REGEX"'))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, 'ssi', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
@ register . filter ( is_safe = False )
Module(None, Stmt([If([(Name('conflicts'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('qs'))]))
Module(None, Stmt([Assign([AssName('candidate_subs', 'OP_ASSIGN')], Name('text_kwargs'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('translation'), 'activate'), [Getattr(Name('settings'), 'LANGUAGE_CODE')], None, None))]))
Module(None, Stmt([For(AssName('attr', 'OP_ASSIGN'), Name('_urllib_response_moved_attributes'), Stmt([Pass()]), None)]))
finally :
Module(None, Stmt([Assign([AssName('error', 'OP_ASSIGN')], Subscript(Getattr(Name('sys'), 'modules'), 'OP_APPLY', [Add((Name('__name__'), Const('.moves.urllib_error')))]))]))
Module(None, Stmt([Function(None, 'resolve_template', ['self', 'template'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'error'), [Mod((Const('bad end tag: %r'), Tuple([Slice(Name('rawdata'), 'OP_APPLY', Name('i'), Name('j'))])))], None, None))]))
Module(None, Stmt([Return(Name('valid'))]))
Module(None, Stmt([Assign([AssName('current', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('current'), Name('bit')], None, None))]))
try :
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('best_doublecolon_len', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Raise(CallFunc(Name('ImproperlyConfigured'), [Mod((Const("You must define a '%s' cache"), Name('DEFAULT_CACHE_ALIAS')))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_name'), [Name('app_name'), Const('app')], None, None))]))
Module(None, Stmt([Assign([AssName('LOCK_NB', 'OP_ASSIGN')], Const(1))]))
elif token_string . startswith ( COMMENT_TAG_START ) :
Module(None, Stmt([If([(Or([Not(Name('supported_platform')), Not(Name('is_a_tty'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('sub_tried', 'OP_ASSIGN')], CallFunc(Getattr(Subscript(Getattr(Name('e'), 'args'), 'OP_APPLY', [Const(0)]), 'get'), [Const('tried')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('files'), 'get'), [Name('name'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Mod((CallFunc(Name('ugettext'), [Const('%s GB')], None, None), CallFunc(Name('filesize_number_format'), [Div((Name('bytes'), Name('GB')))], None, None))))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
else :
Module(None, Stmt([Function(None, 'run_validators', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'create_nodelist', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('TimeFormat', [Name('Formatter')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
if token . contents == 'else' :
Module(None, Stmt([Assign([AssName('inplural', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssName('style', 'OP_ASSIGN')], CallFunc(Name('dummy'), [], None, None))]))
Module(None, Stmt([Assign([AssName('parentloop', 'OP_ASSIGN')], Subscript(Name('context'), 'OP_APPLY', [Const('forloop')]))]))
Module(None, Stmt([Return(CallFunc(Name('property'), [Name('_media')], None, None))]))
Module(None, Stmt([From('email.message', [('Message', None)], 0)]))
Module(None, Stmt([Function(None, '_truncate_html', ['self', 'length', 'truncate', 'text', 'truncate_len', 'words'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('status'), [('!=', Name('STATUS_OK'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssTuple([AssName('cnt', 'OP_ASSIGN'), AssName('digit', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Subscript(Name('int_part'), 'OP_APPLY', [Sliceobj([Const(None), Const(None), UnarySub(Const(1))])])], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], CallFunc(Name('_'), [Const("%(datetime)s couldn't be interpreted in time zone %(current_timezone)s; it may be ambiguous or it may not exist.")], None, None))]))
Module(None, Stmt([Function(None, 'has_changed', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Name('file_move_safe'), [CallFunc(Getattr(Name('content'), 'temporary_file_path'), [], None, None), Name('full_path')], None, None))]))
Module(None, Stmt([If([(Name('is_templatized'), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('format', 'OP_ASSIGN'), Name('BUILTIN_SERIALIZERS'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('date_format'), [Name('value'), Const('DATETIME_FORMAT'), Keyword('use_l10n', Name('use_l10n'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('repr'), [CallFunc(Name('list'), [Name('self')], None, None)], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('output'), 'OP_ASSIGN', [UnarySub(Const(1))])], Add((Add((Slice(Name('last_row'), 'OP_APPLY', None, UnarySub(CallFunc(Name('len'), [Name('row_ender')], None, None))), Name('str_hidden'))), Name('row_ender'))))]))
try :
Module(None, Stmt([From('django.core.management.sql', [('custom_sql_for_model', None), ('emit_post_migrate_signal', None), ('emit_pre_migrate_signal', None)], 0)]))
Module(None, Stmt([Assign([AssName('mw_instance', 'OP_ASSIGN')], CallFunc(Name('mw_class'), [], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Assign([AssAttr(Name('cls'), '__bytes__', 'OP_ASSIGN')], Getattr(Name('cls'), '__bytes_cast'))]))
except AppRegistryNotReady :
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Return(Mod((Const('\x1b[%sm'), Name('RESET'))))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'%s' cannot appear more than once in the same template"), Subscript(Name('bits'), 'OP_APPLY', [Const(0)])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_changed_data', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('m2m_convert', 'OP_ASSIGN')], Lambda(['v'], [], 0, CallFunc(Name('smart_text'), [CallFunc(Getattr(Getattr(Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_meta'), 'pk'), 'to_python'), [Name('v')], None, None)], None, None)))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [Const(' #\n')], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Assign([AssName('encode', 'OP_ASSIGN')], CallFunc(Name('curry'), [Name('_proxy_method'), Keyword('method', Getattr(Getattr(Name('six'), 'text_type'), 'encode'))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('extra_files'), 'extend'), [CallFunc(Name('map'), [Lambda(['x'], [], 0, CallFunc(Getattr(Name('x'), 'strip'), [], None, None)), CallFunc(Getattr(Name('file'), 'split'), [Const(',')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'compress_sequence', ['sequence'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('sql', 'OP_ASSIGN'), Name('sql_list'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'ordered_forms', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'slice_filter', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('normpath'), [Name('path')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('any'), [GenExpr(GenExprInner(Getattr(Name('w'), 'needs_multipart_form'), [GenExprFor(AssName('w', 'OP_ASSIGN'), Getattr(Name('self'), 'widgets'), [])]))], None, None))]))
except NotImplementedError :
Module(None, Stmt([Assign([AssName('memo', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([For(AssName('basedir', 'OP_ASSIGN'), Name('basedirs'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('name'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('error_text', 'OP_ASSIGN')], CallFunc(Name('str'), [Name('e')], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Getattr(Name('self'), 'META'), 'get'), [Name('header'), Name('None')], None, None), [('==', Name('value'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(CallFunc(Name('getattr'), [Name('_default'), Name('translation_function')], None, None), [Name('singular'), Name('plural'), Name('number')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('_trans'), 'get_language_from_path'), [Name('path')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '__language'), [('==', Getattr(Name('settings'), 'LANGUAGE_CODE'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('uri'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('author_link')])], None, None))]))
Module(None, Stmt([Assign([AssName('locale', 'OP_ASSIGN')], CallFunc(Name('to_locale'), [Name('lang')], None, None))]))
try :
Module(None, Stmt([Assign([AssName('WEEKDAYS', 'OP_ASSIGN')], Dict([(Const(0), CallFunc(Name('_'), [Const('Monday')], None, None)), (Const(1), CallFunc(Name('_'), [Const('Tuesday')], None, None)), (Const(2), CallFunc(Name('_'), [Const('Wednesday')], None, None)), (Const(3), CallFunc(Name('_'), [Const('Thursday')], None, None)), (Const(4), CallFunc(Name('_'), [Const('Friday')], None, None)), (Const(5), CallFunc(Name('_'), [Const('Saturday')], None, None)), (Const(6), CallFunc(Name('_'), [Const('Sunday')], None, None))]))]))
Module(None, Stmt([From('django.utils', [('dateformat', None), ('numberformat', None), ('datetime_safe', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'args', 'OP_ASSIGN')], Name('args'))]))
Module(None, Stmt([Global(['_localtime'])]))
Module(None, Stmt([Function(None, 'wrapper', ['args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'path', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('inputs'), 'append'), [CallFunc(Name('format_html'), [Const('<input{0} />'), CallFunc(Name('flatatt'), [Name('input_attrs')], None, None)], None, None)], None, None))]))
Module(None, Stmt([If([(Not(Name('_cookie_encodes_correctly')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'urlencode', ['self', 'safe'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('app', 'OP_ASSIGN')], CallFunc(Getattr(Name('TerminalIPythonApp'), 'instance'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('var'), 'endswith'), [Const('.')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('connection', 'OP_ASSIGN')], Or([Name('connection'), CallFunc(Name('get_connection'), [Keyword('username', Name('auth_user')), Keyword('password', Name('auth_password')), Keyword('fail_silently', Name('fail_silently'))], None, None)]))]))
Module(None, Stmt([Assign([AssName('token', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'next_token'), [], None, None))]))
Module(None, Stmt([Function(None, 'getvalue', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('parentmod', 'OP_ASSIGN'), AssName('submod', 'OP_ASSIGN')])], CallFunc(Name('get_mod_func'), [Name('mod_name')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('format_html'), [Const("<input type='hidden' name='csrfmiddlewaretoken' value='{0}' />"), Name('csrf_token')], None, None))]))
else :
Module(None, Stmt([If([(Compare(Const('error_messages'), [('in', Name('kwargs'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__new__', ['mcs', 'name', 'bases', 'attrs'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("Can't resolve dependencies for %s in serialized app list."), CallFunc(Getattr(Const(', '), 'join'), [GenExpr(GenExprInner(Mod((Const('%s.%s'), Tuple([Getattr(Getattr(Name('model'), '_meta'), 'app_label'), Getattr(Getattr(Name('model'), '_meta'), 'object_name')]))), [GenExprFor(AssTuple([AssName('model', 'OP_ASSIGN'), AssName('deps', 'OP_ASSIGN')]), CallFunc(Name('sorted'), [Name('skipped'), Keyword('key', Lambda(['obj'], [], 0, Getattr(Subscript(Name('obj'), 'OP_APPLY', [Const(0)]), '__name__')))], None, None), [])]))], None, None)))], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Name('urlconf'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([If([(Name('item_date'), Stmt([Pass()]))], None)]))
@ register . tag ( 'filter' )
Module(None, Stmt([Assign([AssName('new_key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'key_func'), [Name('key'), Getattr(Name('self'), 'key_prefix'), Name('version')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'cdata_tag'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'object_list', 'OP_ASSIGN')], CallFunc(Name('list'), [Getattr(Name('self'), 'object_list')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('os'), Const('chmod')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('MIMEText'), '__init__'), [Name('self'), Name('text'), Name('subtype'), Name('charset')], None, None))]))
Module(None, Stmt([Assign([AssName('exclude', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_get_validation_exclusions'), [], None, None))]))
Module(None, Stmt([From('django.core.files', [('locks', None)], 0)]))
Module(None, Stmt([Assign([AssName('id_', 'OP_ASSIGN')], CallFunc(Getattr(Name('final_attrs'), 'get'), [Const('id'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'show_hidden_initial', 'OP_ASSIGN')], Name('show_hidden_initial'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'extract'), [Name('absolute_path')], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('self'), 'compile_filter_error'), [Name('token'), Name('e')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'chunks', ['self', 'chunk_size'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'namespaces', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Name('categories'), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Not a valid Python identifier: %r'), Name('s')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'code', 'OP_ASSIGN')], Name('code'))]))
Module(None, Stmt([While(And([Compare(Const('<'), [('in', Name('value'))]), Compare(Const('>'), [('in', Name('value'))])]), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(Name('script_url')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'set', ['self', 'key', 'value', 'timeout', 'version'], [Name('DEFAULT_TIMEOUT'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'DEBUG'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_itervalues', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('bytes_read'), [('>', Name('rollback'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('e'), 'args', 'OP_ASSIGN')], Tuple([Mod((Const('Could not load %(app_label)s.%(object_name)s(pk=%(pk)s): %(error_msg)s'), Dict([(Const('app_label'), Getattr(Getattr(Getattr(Name('obj'), 'object'), '_meta'), 'app_label')), (Const('object_name'), Getattr(Getattr(Getattr(Name('obj'), 'object'), '_meta'), 'object_name')), (Const('pk'), Getattr(Getattr(Name('obj'), 'object'), 'pk')), (Const('error_msg'), CallFunc(Name('force_text'), [Name('e')], None, None))])))]))]))
Module(None, Stmt([Assign([AssName('_format_cache', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Return(CallFunc(Name('fastcgi_help'), [Const('Invalid combination of host, port, socket.')], None, None))]))
except serializers . SerializerDoesNotExist :
Module(None, Stmt([AugAssign(Name('id_'), '+=', Const('_0'))]))
else :
elif ch == ')' :
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango20Warning', None)], 0)]))
Module(None, Stmt([AugAssign(Name('result'), '|=', Bitxor([Name('x'), Name('y')]))]))
Module(None, Stmt([If([(Not(Name('m')), Stmt([Pass()]))], None)]))
elif isinstance ( value , ( decimal . Decimal , float ) + six . integer_types ) :
Module(None, Stmt([Class('NoReverseMatch', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Class('MultiWidget', [Name('Widget')], None, Stmt([Pass()]), None)]))
except IOError :
Module(None, Stmt([Class('TextNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(Yield(CallFunc(Getattr(Name('base'), 'DeserializedObject'), [Name('obj'), Name('m2m_data')], None, None)))]))
Module(None, Stmt([AugAssign(Name('i'), '+=', Const(1))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Assign([AssName('_', 'OP_ASSIGN')], Dict(()))]))
except AttributeError :
Module(None, Stmt([Assign([Subscript(Name('namespaces'), 'OP_ASSIGN', [Name('namespace')])], Tuple([Add((Name('p_pattern'), Name('prefix'))), Name('sub_pattern')]))]))
elif indexes [ column_name ] [ 'unique' ] :
Module(None, Stmt([Assign([AssName('condition', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('TemplateIfParser'), [Name('parser'), Name('bits')], None, None), 'parse'), [], None, None))]))
Module(None, Stmt([Assign([AssName('decimal_digits', 'OP_ASSIGN')], Const('0123456789'))]))
get = ( pformat ( GET_override )  if GET_override is not None  else pformat ( request . GET ) )
self . username = settings . EMAIL_HOST_USER if username is None else username
Module(None, Stmt([Assign([AssName('deps', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Getattr(Name('model'), 'natural_key'), Const('dependencies'), List(())], None, None))]))
Module(None, Stmt([Return(Tuple([Name('resource'), Mod((Const('egg:%s:%s'), Tuple([Getattr(Name('app_config'), 'name'), Name('pkg_name')])))]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('examining files with the extensions: %s\n'), CallFunc(Name('get_text_list'), [CallFunc(Name('list'), [Getattr(Name('self'), 'extensions')], None, None), Const('and')], None, None)))], None, None))]))
Module(None, Stmt([Assign([AssName('sortable_virtual_fields', 'OP_ASSIGN')], ListComp(Name('f'), [ListCompFor(AssName('f', 'OP_ASSIGN'), Getattr(Name('opts'), 'virtual_fields'), [ListCompIf(CallFunc(Name('isinstance'), [Name('f'), Name('ModelField')], None, None))])]))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Return(Name('obj_dict'))]))
Module(None, Stmt([If([(Compare(Name('charset'), [('==', Const('utf-8'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'handle_app_config', ['self', 'app_config', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const("'get_cache' is deprecated in favor of 'caches'."), Name('RemovedInDjango19Warning'), Keyword('stacklevel', Const(2))], None, None))]))
Module(None, Stmt([From('django.core', [('signals', None)], 0)]))
Module(None, Stmt([Assign([AssName('filename', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'basename'), [Name('path')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('app_label', 'OP_ASSIGN'), AssName('migration_name', 'OP_ASSIGN')])], Tuple([Subscript(Name('options'), 'OP_APPLY', [Const('app_label')]), Subscript(Name('options'), 'OP_APPLY', [Const('migration_name')])]))]))
Module(None, Stmt([Assign([AssName('unpack', 'OP_ASSIGN')], Compare(Name('num_loopvars'), [('>', Const(1))]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('FileBasedCache'), Name('self')], None, None), '__init__'), [Name('params')], None, None))]))
Module(None, Stmt([If([(Name('kwargs'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([If([(Compare(Name('attrs'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('output')], None, None))]))
Module(None, Stmt([Assign([AssName('cache', 'OP_ASSIGN')], Subscript(Name('caches'), 'OP_APPLY', [Getattr(Name('settings'), 'CACHE_MIDDLEWARE_ALIAS')]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'display_name', 'loader', 'name', 'dirs'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('new_value'))]))
Module(None, Stmt([If([(Or([Name('use_l10n'), And([Compare(Name('use_l10n'), [('is', Name('None'))]), Getattr(Name('settings'), 'USE_L10N')])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(Name('self'), 'get_renderer'), [Name('name'), Name('value'), Name('attrs'), Name('choices')], None, None), 'render'), [], None, None))]))
Module(None, Stmt([If([(Compare(Name('name'), [('not in', Getattr(Name('parser'), '_namedCycleNodes'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('loop_dict'), 'OP_ASSIGN', [Const('counter')])], Add((Name('i'), Const(1))))]))
Module(None, Stmt([Assign([AssName('condition', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('TemplateIfParser'), [Name('parser'), Name('bits')], None, None), 'parse'), [], None, None))]))
Module(None, Stmt([Assign([AssName('unhandled_params', 'OP_ASSIGN')], Slice(Name('unhandled_params'), 'OP_APPLY', None, UnarySub(CallFunc(Name('len'), [Name('defaults')], None, None))))]))
Module(None, Stmt([Import([('time', None)])]))
Module(None, Stmt([Return(Compare(Mod((CallFunc(Name('int'), [Name('value')], None, None), CallFunc(Name('int'), [Name('arg')], None, None))), [('==', Const(0))]))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '_regex_dict'), 'OP_ASSIGN', [Name('language_code')])], Name('regex_compiled'))]))
except AmbiguityError :
else :
Module(None, Stmt([Return(Name('cls'))]))
Module(None, Stmt([Assign([AssName('incomment', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'error_dict', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Function(None, '__ne__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('loaders'), 'append'), [Name('loader')], None, None))]))
try :
Module(None, Stmt([If([(And([Getattr(Name('form'), 'cleaned_data'), Compare(Subscript(Getattr(Name('form'), 'cleaned_data'), 'OP_APPLY', [Name('field')]), [('is not', Name('None'))]), Compare(Subscript(Getattr(Name('form'), 'cleaned_data'), 'OP_APPLY', [Name('unique_for')]), [('is not', Name('None'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_fname'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssTuple([AssName('field', 'OP_ASSIGN'), AssName('messages', 'OP_ASSIGN')]), CallFunc(Getattr(Name('message'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([From('logging', [('NullHandler', None)], 0)]))
Module(None, Stmt([For(AssName('j', 'OP_ASSIGN'), CallFunc(Name('xrange'), [CallFunc(Name('int'), [Name('iterations')], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_archive'), 'close'), [], None, None))]))
Module(None, Stmt([If([(Not(Name('url')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Assign([AssName('extra_context', 'OP_ASSIGN')], CallFunc(Name('token_kwargs'), [Name('remaining_bits'), Name('parser'), Keyword('support_legacy', Name('True'))], None, None))]))
Module(None, Stmt([Subscript(Name('attrs'), 'OP_DELETE', [Name('attr')])]))
Module(None, Stmt([Assign([AssName('r', 'OP_ASSIGN')], Sub((Name('dklen'), Mul((Sub((Name('l'), Const(1))), Name('hlen'))))))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(CallFunc(Getattr(Name('re'), 'sub'), [Const('[^\\w\\s-]'), Const(''), Name('value')], None, None), 'strip'), [], None, None), 'lower'), [], None, None))]))
Module(None, Stmt([Function(None, 'has_bom', ['fn'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('__dispatch', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--backwards'), Keyword('action', Const('store_true')), Keyword('dest', Const('backwards')), Keyword('default', Name('False')), Keyword('help', Const('Creates SQL to unapply the migration, rather than to apply it'))], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('key', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')]), CallFunc(Getattr(Name('data'), 'items'), [], None, None), Stmt([Pass()]), None)]))
elif autoescape :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'validators'), 'append'), [CallFunc(Getattr(Name('validators'), 'MinLengthValidator'), [CallFunc(Name('int'), [Name('min_length')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('QueryDict'), Name('self')], None, None), '__setitem__'), [Name('key'), Name('value')], None, None))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([From('django.db', [('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([Function(None, 'attach', ['self', 'filename', 'content', 'mimetype'], [Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('sublist', 'OP_ASSIGN'), Name('second_item'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Name('message_context'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('filename', 'OP_ASSIGN')], Slice(Name('filename'), 'OP_APPLY', None, UnarySub(Const(1))))]))
Module(None, Stmt([Pass()]))
@ register . filter ( "linebreaks" , is_safe = True , needs_autoescape = True )
else :
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'strptime'), [Name('value'), Name('format')], None, None))]))
else :
Module(None, Stmt([Assign([AssName('DEFAULT_LOCALE_ENCODING', 'OP_ASSIGN')], CallFunc(Name('get_system_encoding'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('func'), [Name('context'), Getattr(Name('self'), 'first'), Getattr(Name('self'), 'second')], None, None))]))
Module(None, Stmt([Import([('traceback', None)])]))
Module(None, Stmt([Function(None, 'set', ['self', 'key', 'value', 'timeout', 'version'], [Name('DEFAULT_TIMEOUT'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('context_extras'), 'OP_ASSIGN', [Const('sql_queries')])], Getattr(Name('connection'), 'queries'))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], Add((Tuple([Subscript(Getattr(Name('form'), 'cleaned_data'), 'OP_APPLY', [Name('field')])]), Name('date_data'))))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([Subscript(Name('context_extras'), 'OP_ASSIGN', [Const('LANGUAGES')])], Getattr(Name('settings'), 'LANGUAGES'))]))
Module(None, Stmt([Class('BaseDatabaseCache', [Name('BaseCache')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssTuple([AssName('seconds', 'OP_ASSIGN'), AssName('name', 'OP_ASSIGN')])]), CallFunc(Name('enumerate'), [Name('chunks')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '_list_cache_files', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], CallFunc(Name('SafeMIMEMultipart'), [Keyword('_subtype', Getattr(Name('self'), 'alternative_subtype')), Keyword('encoding', Name('encoding'))], None, None))]))
Module(None, Stmt([Assign([AssName('modified_code', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([If([(Not(Name('locale_dir')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('doomed', 'OP_ASSIGN')], ListComp(Name('k'), [ListCompFor(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('k', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Getattr(Name('self'), '_cache')], None, None), [ListCompIf(Compare(Mod((Name('i'), Getattr(Name('self'), '_cull_frequency'))), [('==', Const(0))]))])]))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('response'), '_handler_class', 'OP_ASSIGN')], Getattr(Name('self'), '__class__'))]))
Module(None, Stmt([AugAssign(Subscript(Name('result'), 'OP_APPLY', [Name('i')]), '+=', Name('piece'))]))
Module(None, Stmt([If([(Compare(Const('help'), [('in', Name('options'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('ngettext_lazy', 'OP_ASSIGN')], Name('ngettext'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'can_read', 'OP_ASSIGN')], CallFunc(Getattr(Name('threading'), 'Semaphore'), [Const(0)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_max_entries', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('max_entries')], None, None))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('transaction'), 'atomic'), [Keyword('using', Name('database')), Keyword('savepoint', Getattr(Getattr(Name('connection'), 'features'), 'can_rollback_ddl'))], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Subscript(Name('hextets'), 'OP_APPLY', [Name('index')]), [('==', Const('0'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Subscript(Subscript(Getattr(Name('self'), '_headers'), 'OP_APPLY', [CallFunc(Getattr(Name('header'), 'lower'), [], None, None)]), 'OP_APPLY', [Const(1)]))]))
Module(None, Stmt([Return(Name('key_func'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'startElement'), [Const('author'), Dict(())], None, None))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('callable', 'OP_ASSIGN')], Name('callable'))]))
Module(None, Stmt([If([(Compare(Getattr(Getattr(Name('self'), 'data'), 'hour'), [('>', Const(11))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Const(''), 'join'), [GenExpr(GenExprInner(CallFunc(Name('force_text'), [Name('n')], None, None), [GenExprFor(AssName('n', 'OP_ASSIGN'), Name('nodelist'), [])]))], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('sys'), 'exit'), [Const(1)], None, None))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], CallFunc(Getattr(Name('match'), 'groups'), [], None, None))]))
Module(None, Stmt([Assign([AssName('hextets', 'OP_ASSIGN')], Add((List([Const('')]), Name('hextets'))))]))
Module(None, Stmt([Assign([AssName('needs_multipart_form', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'run_validators'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], Getattr(Name('options'), 'args'))]))
Module(None, Stmt([Assign([AssName('strip_spaces_between_tags', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('strip_spaces_between_tags'), Getattr(Name('six'), 'text_type')], None, None))]))
Module(None, Stmt([Import([('gettext', None)])]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_setup'), [], None, None))]))
Module(None, Stmt([Return(Mod((Const('(%s: %s)'), Tuple([Getattr(Name('self'), 'connector'), CallFunc(Getattr(Const(', '), 'join'), [ListComp(CallFunc(Name('str'), [Name('c')], None, None), [ListCompFor(AssName('c', 'OP_ASSIGN'), Getattr(Name('self'), 'children'), [])])], None, None)]))))]))
Module(None, Stmt([If([(Compare(Name('t'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.template.debug', [('DebugLexer', None), ('DebugParser', None)], 0)]))
Module(None, Stmt([Assign([AssName('chunk', 'OP_ASSIGN')], CallFunc(Name('next'), [Name('self')], None, None))]))
Module(None, Stmt([If([(Or([Compare(Name('exctype'), [('is not', Name('WindowsError'))]), Compare(Const('Access is denied'), [('not in', CallFunc(Name('str'), [Name('value')], None, None))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
self . cache_model_class = CacheEntry
Module(None, Stmt([If([(Compare(Name('new'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Compare(Name('data_set'), [('!=', Name('initial_set'))]))]))
Module(None, Stmt([From('django.utils.encoding', [('force_bytes', None), ('force_str', None), ('force_text', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'fields', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('options'), Const('fields'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssName('app_label', 'OP_ASSIGN')], Subscript(Name('options'), 'OP_APPLY', [Const('app_label')]))]))
except StopIteration :
except ValueError :
Module(None, Stmt([Assign([AssName('toktext', 'OP_ASSIGN')], CallFunc(Getattr(Name('match'), 'group'), [Name('name')], None, None))]))
Module(None, Stmt([Assign([AssName('base_name', 'OP_ASSIGN')], Mod((Const('%s_name'), Name('app_or_project'))))]))
Module(None, Stmt([If([(CallFunc(Getattr(CallFunc(Getattr(Getattr(Name('t'), 'contents'), 'lstrip'), [], None, None), 'startswith'), [Name('TRANSLATOR_COMMENT_MARK')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('pgettext_lazy', 'OP_ASSIGN')], CallFunc(Name('lazy'), [Name('pgettext'), Getattr(Name('six'), 'text_type')], None, None))]))
@ classmethod
Module(None, Stmt([If([(Compare(Name('response'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('DebugParser'), Name('self')], None, None), 'extend_nodelist'), [Name('nodelist'), Name('node'), Name('token')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('handlers'), 'OP_ASSIGN', [Name('name')])], Name('handler'))]))
Module(None, Stmt([If([(And([CallFunc(Name('hasattr'), [Name('rel_model'), Const('natural_key')], None, None), Compare(Name('rel_model'), [('!=', Name('model'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('pickled', 'OP_ASSIGN')], CallFunc(Getattr(Name('pickle'), 'dumps'), [Name('new_value'), Getattr(Name('pickle'), 'HIGHEST_PROTOCOL')], None, None))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Getattr(Name('six'), 'text_type'), [Name('s')], None, None))]))
Module(None, Stmt([From('django.utils', [('timezone', None)], 0)]))
Module(None, Stmt([Function(None, 'handle_fk_field', ['self', 'obj', 'field'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(List(()))]))
Module(None, Stmt([Assign([AssAttr(Name('httpd'), 'daemon_threads', 'OP_ASSIGN')], Name('True'))]))
else :
Module(None, Stmt([Raise(CallFunc(Name('ImproperlyConfigured'), [Mod((Const('"%s" is not a valid regular expression: %s'), Tuple([Name('regex'), CallFunc(Getattr(Name('six'), 'text_type'), [Name('e')], None, None)])))], None, None), None, None)]))
Module(None, Stmt([AugAssign(Name('result'), '|=', Bitxor([CallFunc(Name('ord'), [Name('x')], None, None), CallFunc(Name('ord'), [Name('y')], None, None)]))]))
Module(None, Stmt([Discard(CallFunc(Name('write'), [Name('arg')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('initial')])], CallFunc(Name('getattr'), [Getattr(Name('self'), 'parent_instance'), Getattr(Name('self'), 'to_field')], None, None))]))
Module(None, Stmt([Return(Name('form'))]))
else :
Module(None, Stmt([Class('TranslatableFile', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.core.serializers', [('base', None)], 0)]))
Module(None, Stmt([Global(['_default'])]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], Or([Name('args'), List(())]))]))
Module(None, Stmt([Raise(CallFunc(Name('StopFutureHandlers'), [], None, None), None, None)]))
Module(None, Stmt([If([(Compare(Name('contents'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Name('SimpleLazyObject'), [Getattr(Name('self'), '_setupfunc')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('AttributeError'), [Name('attr')], None, None), None, None)]))
Module(None, Stmt([Function(None, 'as_json', ['self', 'escape_html'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Subscript(Name('item'), 'OP_APPLY', [Const('updateddate')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(Getattr(Name('settings'), 'MANAGERS')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('otherwise'))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('type'), [Name('self')], None, None), '__next__'), [Name('self')], None, None))]))
Module(None, Stmt([If([(Name('value'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Subscript(Getattr(Name('self'), 'blocks'), 'OP_APPLY', [Name('name')]), 'insert'), [Const(0), Name('block')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'coerce'), [Name('value')], None, None))]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Assign([AssName('non_atomic_requests', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('view'), Const('_non_atomic_requests'), CallFunc(Name('set'), [], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('m', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('_html_parser'), 'attrfind'), 'match'), [Name('rawdata'), Name('k')], None, None))]))
else :
Module(None, Stmt([If([(Compare(Name('language_code'), [('not in', Getattr(Name('self'), '_reverse_dict'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('self'), Const('error_dict')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('i', 'OP_ASSIGN')], Add((Name('i'), Const(1))))]))
Module(None, Stmt([Assign([AssName('exp', 'OP_ASSIGN')], Div((CallFunc(Name('Decimal'), [Const('1.0')], None, None), Power((CallFunc(Name('Decimal'), [Const(10)], None, None), CallFunc(Name('abs'), [Name('p')], None, None))))))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const("Output the contents of the database as a fixture of the given format (using each model's default manager unless --all is specified)."))]))
Module(None, Stmt([Return(Name('Operator'))]))
Module(None, Stmt([Return(Compare(Name('result'), [('==', Const(0))]))]))
Module(None, Stmt([Import([('contextlib', None)])]))
Module(None, Stmt([If([(Name('secure'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of LabelCommand must provide a handle_label() method')], None, None), None, None)]))
Module(None, Stmt([If([(Or([Not(CallFunc(Getattr(Getattr(Name('self'), '_css'), 'get'), [Name('medium')], None, None)), Compare(Name('path'), [('not in', Subscript(Getattr(Name('self'), '_css'), 'OP_APPLY', [Name('medium')]))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(Yield(Const('')))]))
try :
Module(None, Stmt([If([(Not(Name('matches')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '__class__'), [], None, None))]))
Module(None, Stmt([Assign([AssName('relations', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([If([(Not(Name('template_dirs')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'urlize', ['value', 'autoescape'], [Name('None')], 0, None, Stmt([Pass()]))]))
@ stringfilter
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'func'), [Name('value')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_clean_fields'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [Mod((Const(' pgettext(%r, %r) '), Tuple([Name('message_context'), Name('g')])))], None, None))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'alternatives'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('arg', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('arg')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('SafeBytes'), [Name('data')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--no-initial-data'), Keyword('action', Const('store_false')), Keyword('dest', Const('load_initial_data')), Keyword('default', Name('True')), Keyword('help', Const('Tells Django not to load any initial data after database synchronization.'))], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('self'), 'recipients'), [], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('doublecolon_start', 'OP_ASSIGN')], UnarySub(Const(1)))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'dict_'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('path', 'OP_ASSIGN'), Name('paths'), Stmt([Pass()]), None)]))
initial_forms = len ( self . initial ) if self . initial else 0
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Mod((Const('Level not an integer or a valid string: %r'), Name('level')))], None, None), None, None)]))
else :
Module(None, Stmt([Assign([AssName('globalpath', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'dirname'), [CallFunc(Name('upath'), [Getattr(Subscript(Getattr(Name('sys'), 'modules'), 'OP_APPLY', [Getattr(Name('settings'), '__module__')]), '__file__')], None, None)], None, None), Const('locale')], None, None))]))
Module(None, Stmt([Class('MultiValueField', [Name('Field')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(And([Getattr(Name('settings'), 'TEMPLATE_DEBUG'), Name('display_name')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'validators'), 'append'), [CallFunc(Getattr(Name('validators'), 'MaxLengthValidator'), [CallFunc(Name('int'), [Name('max_length')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Printnl([Mod((Const('In the tar file %s the member %s is invalid: %s'), Tuple([Name('name'), Getattr(Name('member'), 'name'), Name('exc')])))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('link_prev', 'OP_ASSIGN'), AssName('link_next', 'OP_ASSIGN'), AssName('key', 'OP_ASSIGN'), AssName('result', 'OP_ASSIGN')])], Name('link'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'app_or_project', 'OP_ASSIGN')], Name('app_or_project'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('msg'), 'attach'), [CallFunc(Getattr(Name('self'), '_create_attachment'), [], Name('attachment'), None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_expire_info'), 'clear'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('import_string'), [Or([Name('import_path'), Getattr(Name('settings'), 'DEFAULT_FILE_STORAGE')])], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('RadioFieldRenderer', [Name('ChoiceFieldRenderer')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'truncatewords', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'tags', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssName('d', 'OP_ASSIGN')], CallFunc(Name('get_deserializer'), [Name('format')], None, None))]))
Module(None, Stmt([From('io', [('BytesIO', None), ('StringIO', None), ('UnsupportedOperation', None)], 0)]))
Module(None, Stmt([From('django.core.management.sql', [('sql_all', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const('The %r option was specified more than once.'), Name('option')))], None, None), None, None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('required')]), Keyword('code', Const('required'))], None, None), None, None)]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('stream')])], Name('None'))]))
Module(None, Stmt([Function(None, 'get_image_dimensions', ['file_or_path', 'close'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Tuple([Name('end'), Name('next')]))]))
Module(None, Stmt([Function(None, '__setitem__', ['self', 'key', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('table', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'ops'), 'quote_name'), [Getattr(Name('self'), '_table')], None, None))]))
Module(None, Stmt([Assign([AssName('middle', 'OP_ASSIGN')], Mod((Const('<a href="%s"%s>%s</a>'), Tuple([Name('url'), Name('nofollow_attr'), Name('trimmed')]))))]))
Module(None, Stmt([Assign([AssName('bad_app_labels', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))]))
Module(None, Stmt([While(Compare(Name('remaining'), [('!=', Const(0))]), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('old', 'OP_ASSIGN')], Add((Const('#: '), Slice(Name('work_file'), 'OP_APPLY', Const(2), None))))]))
@ register . filter ( is_safe = True )
Module(None, Stmt([If([(Compare(Const('args'), [('in', Name('options'))]), Stmt([Pass()]))], None)]))
except TypeError :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'delete_first_token'), [], None, None))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([AugAssign(Name('doublecolon_len'), '+=', Const(1))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('args'), Keyword('metavar', Const('app_label')), Keyword('nargs', Const('+')), Keyword('help', Const('One or more application label.'))], None, None))]))
Module(None, Stmt([Function(None, 'to_current_timezone', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('ch', 'OP_ASSIGN'), Name('input_iter'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('tagfind', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('([a-zA-Z][-.a-zA-Z0-9:_]*)(?:\\s|/(?!>))*')], None, None))]))
Module(None, Stmt([Assign([AssName('commands', 'OP_ASSIGN')], DictComp(Name('name'), Const('django.core'), [ListCompFor(AssName('name', 'OP_ASSIGN'), CallFunc(Name('find_commands'), [Subscript(Name('__path__'), 'OP_APPLY', [Const(0)])], None, None), [])]))]))
Module(None, Stmt([Assign([AssName('old', 'OP_ASSIGN')], Add((Const('#: '), Name('work_file'))))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Import([('time', None)])]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [CallFunc(Name('type'), [Name('dt')], None, None), Name('dt')], None, None), 'strftime'), [Name('fmt')], None, None))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'fail_silently')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('data'), Const('read')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'path', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('is_compressed', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('csrf_token', 'OP_ASSIGN')], CallFunc(Getattr(Name('context'), 'get'), [Const('csrf_token'), Name('None')], None, None))]))
Module(None, Stmt([Function(None, 'receive_data_chunk', ['self', 'raw_data', 'start'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('attachment', 'OP_ASSIGN')], CallFunc(Name('MIMEBase'), [Name('basetype'), Name('subtype')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('wrapper'), 'cache_info', 'OP_ASSIGN')], Name('cache_info'))]))
Module(None, Stmt([Return(Const('th'))]))
Module(None, Stmt([Return(Name('obj'))]))
Module(None, Stmt([Assign([AssName('prefix', 'OP_ASSIGN')], Mod((Const('django_%s_template_'), Getattr(Name('self'), 'app_or_project'))))]))
Module(None, Stmt([Discard(Yield(CallFunc(Getattr(Name('buf'), 'read'), [], None, None)))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'data')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const("Cache table '%s' already exists."), Name('tablename')))], None, None))]))
Module(None, Stmt([If([(Compare(Name('header_end'), [('==', UnarySub(Const(1)))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('type'), [Add((Getattr(Name('form'), '__name__'), CallFunc(Name('str'), [Const('FormSet')], None, None))), Tuple([Name('formset')]), Name('attrs')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('Media'), [Name('definition')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('_generate_cache_key'), [Name('request'), Name('method'), Name('headerlist'), Name('key_prefix')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'isfile'), [Name('fext')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('os', None)])]))
@ classmethod
Module(None, Stmt([Assign([AssAttr(Name('self'), 'interactive', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('interactive')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('dict'), [Name('self')], None, None))]))
Module(None, Stmt([Return(Name('False'))]))
except ImportError :
Module(None, Stmt([Return(Name('s'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_empty', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssTuple([AssName('neg', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')])], CallFunc(Getattr(Name('self'), 'convert'), [Name('s'), Getattr(Name('self'), 'digits'), Getattr(Name('self'), 'decimal_digits'), Getattr(Name('self'), 'sign')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('app_dirs'), 'append'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'normpath'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('app_dir'), Const('sql')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Return(Name('s'))]))
Module(None, Stmt([Assign([AssName('first', 'OP_ASSIGN'), AssName('second', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Return(Subscript(Name('value'), 'OP_APPLY', [CallFunc(Name('slice'), [], Name('bits'), None)]))]))
Module(None, Stmt([Assign([AssName('path_info', 'OP_ASSIGN')], CallFunc(Name('get_bytes_from_wsgi'), [Name('environ'), Const('PATH_INFO'), Const('/')], None, None))]))
Module(None, Stmt([Assign([AssName('connection', 'OP_ASSIGN')], Subscript(Name('connections'), 'OP_APPLY', [CallFunc(Getattr(Name('options'), 'get'), [Const('database')], None, None)]))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('QueryDict'), Name('self')], None, None), 'setdefault'), [Name('key'), Name('default')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('context_extras'), 'OP_ASSIGN', [Const('debug')])], Name('True'))]))
Module(None, Stmt([If([(Compare(Name('data'), [('is', Name('FILE_INPUT_CONTRADICTION'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__len__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Const('th'))]))
Module(None, Stmt([Assign([AssName('fields', 'OP_ASSIGN')], ListComp(Tuple([Name('field_name'), CallFunc(Getattr(Name('attrs'), 'pop'), [Name('field_name')], None, None)]), [ListCompFor(AssTuple([AssName('field_name', 'OP_ASSIGN'), AssName('obj', 'OP_ASSIGN')]), CallFunc(Name('list'), [CallFunc(Getattr(Name('six'), 'iteritems'), [Name('attrs')], None, None)], None, None), [ListCompIf(CallFunc(Name('isinstance'), [Name('obj'), Name('Field')], None, None))])]))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Function(None, 'add_to_builtins', ['module'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Compare(Const('private'), [('in', Name('cc'))]), Compare(Const('public'), [('in', Name('kwargs'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(Getattr(Name('settings'), 'BASE_DIR'))]))
Module(None, Stmt([Assign([AssName('default_error_messages', 'OP_ASSIGN')], Dict([(Const('invalid'), CallFunc(Name('_'), [Const('Enter a valid date/time.')], None, None))]))]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_wrapped'), [('is', Name('empty'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'pop', ['self', 'k', 'args'], [], 4, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Assign([AssName('get_method_function', 'OP_ASSIGN')], CallFunc(Getattr(Name('operator'), 'attrgetter'), [Name('_meth_func')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('getattr'), [Name('module'), Getattr(Name('self'), 'attr')], None, None))]))
Module(None, Stmt([Assign([AssName('file_name', 'OP_ASSIGN')], Getattr(Name('data'), 'name'))]))
Module(None, Stmt([Function(None, '_dec', ['args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'models'), 'add'), [Getattr(Getattr(Name('obj'), 'object'), '__class__')], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('medium', 'OP_ASSIGN'), AssName('paths', 'OP_ASSIGN')]), CallFunc(Getattr(Name('data'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('list'), [Name('_serializers')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '__offset', 'OP_ASSIGN')], CallFunc(Name('timedelta'), [Keyword('minutes', Name('offset'))], None, None))]))
Module(None, Stmt([Assign([AssName('query', 'OP_ASSIGN')], CallFunc(Getattr(Name('query'), 'lists'), [], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('list'), 'pop'), [Name('self'), Name('idx')], None, None))]))
Module(None, Stmt([Function(None, 'write_items', ['self', 'handler'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Mod((Const('%02d'), Subscript(CallFunc(Getattr(Name('calendar'), 'monthrange'), [Getattr(Getattr(Name('self'), 'data'), 'year'), Getattr(Getattr(Name('self'), 'data'), 'month')], None, None), 'OP_APPLY', [Const(1)]))))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_post_parse_error', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'forms'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('Warning'), Name('self')], None, None), '__init__'), [Name('WARNING')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('apps'), 'get_model'), [Const('auth'), Const('Permission')], None, None))]))
try :
Module(None, Stmt([Function(None, '_get_context_stack_frame', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('timezone'), 'normalize'), [Name('value')], None, None))]))
elif version [ 3 ] != 'final' :
Module(None, Stmt([Class('HttpResponse', [Name('HttpResponseBase')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('id_'))]))
Module(None, Stmt([Assign([AssName('klass', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'resolve'), [CallFunc(Getattr(Name('config'), 'pop'), [Const('class')], None, None)], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, 'error', ['self', 'message'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('memo'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('MultiValueDict'), Name('self')], None, None), '__init__'), [Name('key_to_list_mapping')], None, None))]))
Module(None, Stmt([Function(None, 'incr', ['self', 'key', 'delta', 'version'], [Const(1), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('file'), 'close'), [], None, None))]))
Module(None, Stmt([Return(Mod((Add((Const('%'), CallFunc(Getattr(Name('six'), 'text_type'), [Name('arg')], None, None))), Name('value'))))]))
else :
Module(None, Stmt([Return(Compare(Getattr(Name('self'), 'pointer'), [('<', CallFunc(Name('len'), [Getattr(Name('self'), 'subject')], None, None))]))]))
Module(None, Stmt([Return(CallFunc(Name('SpacelessNode'), [Name('nodelist')], None, None))]))
Module(None, Stmt([Assign([AssName('new_name', 'OP_ASSIGN')], Mod((Const('field%s'), Name('new_name'))))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_truncate_html'), [Name('length'), Name('truncate'), Name('text'), Name('truncate_len'), Name('False')], None, None))]))
Module(None, Stmt([Class('IntegerField', [Name('Field')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None), ('CommandError', None)], 0)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'template_string', 'origin', 'name'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('current_expires', 'OP_ASSIGN')], Subscript(Name('result'), 'OP_APPLY', [Const(1)]))]))
Module(None, Stmt([While(Name('remaining_bits'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Getattr(Name('self'), 'cleaned_data'))]))
Module(None, Stmt([Return(Const(''))]))
elif t . token_type == TOKEN_COMMENT :
Module(None, Stmt([Return(Subscript(CallFunc(Name('list'), [Name('error')], None, None), 'OP_APPLY', [Const(0)]))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('settings'), 'USE_I18N', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([If([(Compare(Name('cache_timeout'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('other'), Name('Promise')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('translation'), 'activate'), [Getattr(Name('settings'), 'LANGUAGE_CODE')], None, None))]))
Module(None, Stmt([If([(Or([Compare(Name('exp'), [('is', Name('None'))]), Compare(Name('exp'), [('>', CallFunc(Getattr(Name('time'), 'time'), [], None, None))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('form_class_attrs', 'OP_ASSIGN')], Dict([(Const('Meta'), Name('Meta')), (Const('formfield_callback'), Name('formfield_callback'))]))]))
except ValueError :
Module(None, Stmt([Assign([AssAttr(Name('klass'), '__str__', 'OP_ASSIGN')], Lambda(['self'], [], 0, CallFunc(Getattr(CallFunc(Getattr(Name('self'), '__unicode__'), [], None, None), 'encode'), [Const('utf-8')], None, None)))]))
Module(None, Stmt([Assign([AssName('selected_html', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('thread'), 'start_new_thread'), [Name('main_func'), Name('args')], None, None))]))
Module(None, Stmt([If([(Compare(Subscript(Name('item'), 'OP_APPLY', [Const('pubdate')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('recursive'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('any'), [GenExpr(GenExprInner(Compare(Const('__call__'), [('in', Getattr(Name('klass'), '__dict__'))]), [GenExprFor(AssName('klass', 'OP_ASSIGN'), Getattr(CallFunc(Name('type'), [Name('obj')], None, None), '__mro__'), [])]))], None, None))]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None), ('iri_to_uri', None)], 0)]))
@ register . filter ( "escape" , is_safe = True )
from django . core . exceptions import ValidationError
Module(None, Stmt([Assign([AssName('valid', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Return(CallFunc(Name('LoadNode'), [], None, None))]))
Module(None, Stmt([If([(Name('status'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'escape_quotes', ['m'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'makedirs'), [Name('original_path')], None, None))]))
Module(None, Stmt([Assign([AssName('has_old_option', 'OP_ASSIGN')], CallFunc(Name('hasattr'), [Name('self'), Const('requires_model_validation')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'choice_label', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Subscript(Name('choice'), 'OP_APPLY', [Const(1)])], None, None))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
try :
Module(None, Stmt([Assign([AssName('new_msg', 'OP_ASSIGN')], Mod((Const("Database %s couldn't be flushed. Possible reasons:\n  * The database isn't running or isn't configured correctly.\n  * At least one of the expected database tables doesn't exist.\n  * The SQL was invalid.\nHint: Look at the output of 'django-admin.py sqlflush'. That's the SQL this command wasn't able to run.\nThe full error: %s"), Tuple([Subscript(Getattr(Name('connection'), 'settings_dict'), 'OP_APPLY', [Const('NAME')]), Name('e')]))))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('name')], None, None), [('>', Const(255))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Getattr(Name('settings'), 'USE_TZ'), Compare(Name('value'), [('is not', Name('None'))]), CallFunc(Getattr(Name('timezone'), 'is_aware'), [Name('value')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Name('deactivate'), [], None, None))]))
Module(None, Stmt([If([(Compare(Slice(Getattr(Name('sys'), 'version_info'), 'OP_APPLY', None, Const(2)), [('==', Tuple([Const(2), Const(7)]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('kwarg_format'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('all_models', 'OP_ASSIGN')], ListComp(Tuple([Getattr(Name('app_config'), 'label'), CallFunc(Getattr(Name('router'), 'get_migratable_models'), [Name('app_config'), Getattr(Name('connection'), 'alias'), Keyword('include_auto_created', Name('True'))], None, None)]), [ListCompFor(AssName('app_config', 'OP_ASSIGN'), CallFunc(Getattr(Name('apps'), 'get_app_configs'), [], None, None), [ListCompIf(And([Compare(Getattr(Name('app_config'), 'models_module'), [('is not', Name('None'))]), Compare(Getattr(Name('app_config'), 'label'), [('in', Name('app_labels'))])]))])]))]))
Module(None, Stmt([Class('ModelChoiceField', [Name('ChoiceField')], None, Stmt([Pass()]), None)]))
self . stdout . write ( (  "%(started_at)s\n"  "Django version %(version)s, using settings %(settings)r\n"  "Starting development server at http://%(addr)s:%(port)s/\n"  "Quit the server with %(quit_command)s.\n"  ) % {  "started_at" : now ,  "version" : self . get_version ( ) ,  "settings" : settings . SETTINGS_MODULE ,  "addr" : '[%s]' % self . addr if self . _raw_ipv6 else self . addr ,  "port" : self . port ,  "quit_command" : quit_command ,  } )
Module(None, Stmt([Return(CallFunc(Name('avoid_wrapping'), [Name('value')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('finder'), 'find_module'), [Name('name'), Name('package_path')], None, None), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([AssName('seen_data', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))]))
except LookupError :
Module(None, Stmt([Function(None, 'slugify', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_set_response_etag', ['response'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([AugAssign(Name('i'), '+=', Const(1))]))
Module(None, Stmt([Return(CallFunc(CallFunc(Name('getattr'), [Name('instance'), Name('name')], None, None), [Name('value')], None, None))]))
Module(None, Stmt([If([(Compare(Name('number'), [('<', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('attrs', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('FloatField'), Name('self')], None, None), 'widget_attrs'), [Name('widget')], None, None))]))
Module(None, Stmt([Assert(Compare(Name('content'), [('is not', Name('None'))]), None)]))
Module(None, Stmt([Assign([AssName('security_logger', 'OP_ASSIGN')], CallFunc(Getattr(Name('logging'), 'getLogger'), [Mod((Const('django.security.%s'), Getattr(Getattr(Name('e'), '__class__'), '__name__')))], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([If([(Compare(Name('compare_to'), [('!=', Subscript(Name('state_frame'), 'OP_APPLY', [Name('self')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('g', 'OP_ASSIGN')], CallFunc(Getattr(Name('imatch'), 'group'), [Const(1)], None, None))]))
Module(None, Stmt([Function(None, 'delete', ['self', 'key', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
@ register . filter ( is_safe = False )
Module(None, Stmt([Assign([AssAttr(Name('self'), 'base_url', 'OP_ASSIGN')], Name('base_url'))]))
else :
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'verbosity', 'OP_ASSIGN')], CallFunc(Name('int'), [CallFunc(Getattr(Name('options'), 'get'), [Const('verbosity')], None, None)], None, None))]))
Module(None, Stmt([From('django.forms.utils', [('from_current_timezone', None), ('to_current_timezone', None)], 0)]))
Module(None, Stmt([For(AssName('operation', 'OP_ASSIGN'), Getattr(Name('migration'), 'merged_operations'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('url_info', 'OP_ASSIGN')], CallFunc(Name('urlparse'), [Name('url')], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Name('handler'), 'handle_raw_input'), [Getattr(Name('self'), '_input_data'), Getattr(Name('self'), '_meta'), Getattr(Name('self'), '_content_length'), Getattr(Name('self'), '_boundary'), Name('encoding')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'error_messages', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('options'), Const('error_messages'), Name('None')], None, None))]))
Module(None, Stmt([Import([('gettext', 'gettext_module')])]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Function(None, 'transform', ['self', 'node', 'results'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('timesince'), [Name('d'), Name('now'), Keyword('reversed', Name('True'))], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'attrs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__delattr__', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'chmod'), [Name('dst'), Name('mode')], None, None))]))
Module(None, Stmt([Assign([AssName('new_path', 'OP_ASSIGN')], CallFunc(Getattr(Name('path'), 'join'), [Name('top_dir'), Name('relative_dir'), CallFunc(Getattr(Name('filename'), 'replace'), [Name('base_name'), Name('name')], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Const('message-id'), [('not in', Name('header_names'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'connection', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'field_name', 'OP_ASSIGN')], Name('field_name'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('value'), 'strip'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'incr'), [Name('key'), UnarySub(Name('delta')), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('calendar'), 'isleap'), [Getattr(Getattr(Name('self'), 'data'), 'year')], None, None))]))
Module(None, Stmt([Function(None, 'add', ['self', 'key', 'value', 'timeout', 'version'], [Name('DEFAULT_TIMEOUT'), Name('None')], 0, None, Stmt([Pass()]))]))
elif options [ "daemonize" ] . lower ( ) in ( 'false' , 'no' , 'f' ) :
@ register . tag
Module(None, Stmt([If([(Compare(Name('csrf_token'), [('==', Const('NOTPROVIDED'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], CallFunc(Name('middleware_method'), [Name('request'), Name('response')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Const("can't delete _wrapped.")], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('subtitle'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('subtitle')])], None, None))]))
Module(None, Stmt([Assign([AssName('boolean_attrs', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'errors', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('logger'), 'addHandler'), [Name('handler')], None, None))]))
Module(None, Stmt([Assign([AssName('parser', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'create_parser'), [Name('prog_name'), Name('subcommand')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('closing_tag', 'OP_ASSIGN'), AssName('tagname', 'OP_ASSIGN'), AssName('self_closing', 'OP_ASSIGN')])], CallFunc(Getattr(Name('tag'), 'groups'), [], None, None))]))
else :
Module(None, Stmt([From('django.core.handlers.wsgi', [('WSGIHandler', None)], 0)]))
Module(None, Stmt([If([(Name('result'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('DebugVariableNode', [Name('VariableNode')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(And([Compare(CallFunc(Name('len'), [Name('parts')], None, None), [('>', Const(1))]), Compare(Subscript(Name('parts'), 'OP_APPLY', [UnarySub(Const(1))]), [('in', Getattr(Name('self'), 'compression_formats'))])]), Stmt([Pass()]))], None)]))
field_output . append ( "%sNULL" % ( "NOT " if not f . null else "" ) )
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'compile_messages'), [Name('locations')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('force_text'), [CallFunc(Name('iri_to_uri'), [Name('value')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'new_objects'), 'append'), [CallFunc(Getattr(Name('self'), 'save_new'), [Name('form'), Keyword('commit', Name('commit'))], None, None)], None, None))]))
except StandardError as e :
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'timezone'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([AssName('new_result', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Add((Tuple([Getattr(Name('decimal'), 'Decimal'), Name('float')]), Getattr(Name('six'), 'integer_types')))], None, None), Stmt([Pass()]))], None)]))
@ property
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [Name('ImportError'), CallFunc(Name('ImportError'), [Name('msg')], None, None), Subscript(CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), 'OP_APPLY', [Const(2)])], None, None))]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'index'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_strip_once', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('fileno', 'OP_ASSIGN')], CallFunc(Name('property'), [Lambda(['self'], [], 0, Getattr(Getattr(Name('self'), 'file'), 'fileno'))], None, None))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('Subclasses must define this method.')], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'use_natural_foreign_keys', 'OP_ASSIGN')], Or([CallFunc(Getattr(Name('options'), 'pop'), [Const('use_natural_foreign_keys'), Name('False')], None, None), Getattr(Name('self'), 'use_natural_keys')]))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Function(None, '__contains__', ['self', 'item'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
elif form . has_changed ( ) :
Module(None, Stmt([If([(Name('html'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('get_valid_filename'), [Name('name')], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Const('No changes detected')], None, None))]))
else :
Module(None, Stmt([Return(Tuple([Name('source'), CallFunc(Name('make_origin'), [Name('display_name'), Name('loader'), Name('name'), Name('dirs')], None, None)]))]))
except IndexError :
Module(None, Stmt([If([(Name('use_base_manager'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'run_from_argv', ['self', 'argv'], [], 0, None, Stmt([Pass()]))]))
elif autoescape :
Module(None, Stmt([From('django.core.mail.utils', [('DNS_NAME', None)], 0)]))
Module(None, Stmt([Function(None, 'add_item_elements', ['self', 'handler', 'item'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'nodelist'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'vals', 'OP_ASSIGN')], List(()))]))
elif pluralmatch :
Module(None, Stmt([If([(Compare(Name('value'), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('template', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'resolve_template'), [Getattr(Name('self'), 'template_name')], None, None))]))
Module(None, Stmt([From('datetime', [('datetime', None)], 0)]))
Module(None, Stmt([Return(Getattr(CallFunc(Name('super'), [Name('SimpleTemplateResponse'), Name('self')], None, None), 'content'))]))
Module(None, Stmt([Class('Warning', [Name('CheckMessage')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'z', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('BaseContext', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--database'), Keyword('default', Name('DEFAULT_DB_ALIAS')), Keyword('help', Const('Nominates a database to print the SQL for. Defaults to the "default" database.'))], None, None))]))
Module(None, Stmt([Assign([AssName('message_context', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'title', 'link', 'description', 'language', 'author_email', 'author_name', 'author_link', 'subtitle', 'categories', 'feed_url', 'feed_copyright', 'feed_guid', 'ttl', 'kwargs'], [Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None'), Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(Tuple([CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--failfast'), Keyword('action', Const('store_true')), Keyword('dest', Const('failfast')), Keyword('default', Name('False')), Keyword('help', Const('Tells Django to stop running the test suite after first failed test.'))], None, None)]))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Name('BytesIO'), [Getattr(Name('self'), '_body')], None, None))]))
Module(None, Stmt([Function(None, '_construct_form', ['self', 'i', 'kwargs'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('words', 'OP_ASSIGN')], Slice(Name('words'), 'OP_APPLY', None, Name('length')))]))
Module(None, Stmt([If([(And([CallFunc(Name('hasattr'), [Name('response'), Const('render')], None, None), CallFunc(Name('callable'), [Getattr(Name('response'), 'render')], None, None)]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([AssName('field_notes', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([From('django.core.mail.utils', [('DNS_NAME', None)], 0)]))
except ValueError :
except ImproperlyConfigured :
Module(None, Stmt([Import([('zlib', None)])]))
Module(None, Stmt([Assign([Subscript(Name('memo'), 'OP_ASSIGN', [CallFunc(Name('id'), [Name('self')], None, None)])], Name('result'))]))
Module(None, Stmt([Return(CallFunc(Name('iter'), [CallFunc(CallFunc(Name('getattr'), [Name('d'), Name('_iterkeys')], None, None), [], None, Name('kw'))], None, None))]))
@ register ( Tags . models , Tags . signals )
except StandardError as e :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'model', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('options'), Const('model'), Name('None')], None, None))]))
Module(None, Stmt([Discard(Yield(Name('node')))]))
Module(None, Stmt([Assign([AssName('c', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'resolve'), [Name('c')], None, None))]))
Module(None, Stmt([Function(None, 'format_output', ['self', 'rendered_widgets'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('msgs_with_ctxt', 'OP_ASSIGN')], Tuple([Mod((Const('%s%s%s'), Tuple([Name('context'), Name('CONTEXT_SEPARATOR'), Name('singular')]))), Mod((Const('%s%s%s'), Tuple([Name('context'), Name('CONTEXT_SEPARATOR'), Name('plural')]))), Name('number')]))]))
Module(None, Stmt([Function(None, 'utcoffset', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('FILE_MODIFIED', 'OP_ASSIGN')], Const(1))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Runs the command-line client for specified database, or the default database if none is provided.'))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([If([(Compare(Name('code'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('self'), Const('_object_dict')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('best_doublecolon_end', 'OP_ASSIGN')], Add((Name('best_doublecolon_start'), Name('best_doublecolon_len'))))]))
Module(None, Stmt([If([(And([Name('in_tag'), CallFunc(Getattr(Name('token_string'), 'startswith'), [Name('BLOCK_TAG_START')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('obj_dict'), 'OP_ASSIGN', [Const('_data')])], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Name('k'), CallFunc(Getattr(Name('self'), 'getlist'), [Name('k')], None, None)]), [GenExprFor(AssName('k', 'OP_ASSIGN'), Name('self'), [])]))], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'lookups'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Getattr(Name('token'), 'split_contents'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('_MovedItems'), '_moved_attributes', 'OP_ASSIGN')], Name('_moved_attributes'))]))
Module(None, Stmt([If([(Or([Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('<', Const(2))]), Compare(Subscript(Name('bits'), 'OP_APPLY', [UnarySub(Const(2))]), [('!=', Const('as'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('copy', None)])]))
Module(None, Stmt([From('django.forms.widgets', [('Media', None), ('MediaDefiningClass', None), ('TextInput', None), ('Textarea', None)], 0)]))
Module(None, Stmt([If([(Compare(Const('.'), [('in', Subscript(CallFunc(Getattr(Name('ip_str'), 'split'), [Const(':')], None, None), 'OP_APPLY', [UnarySub(Const(1))]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.translation', [('ugettext', '_')], 0)]))
try :
Module(None, Stmt([From('django.core.files.base', [('File', None)], 0)]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], Const('[fixture ...]'))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'cache_key'), [Name('template_name'), Name('template_dirs')], None, None))]))
Module(None, Stmt([Assign([AssName('new_value', 'OP_ASSIGN')], CallFunc(Name('_strip_once'), [Name('value')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'as_table'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('t'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Getattr(Name('base'), 'SerializationError'), [Mod((Const('Non-model object (%s) encountered during serialization'), CallFunc(Name('type'), [Name('obj')], None, None)))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('processors', 'OP_ASSIGN')], CallFunc(Name('tuple'), [Name('processors')], None, None))]))
Module(None, Stmt([Function(None, 'extract', ['self', 'filename'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
else :
Module(None, Stmt([For(AssName('field', 'OP_ASSIGN'), Getattr(Getattr(Name('concrete_model'), '_meta'), 'many_to_many'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assert(CallFunc(Name('isinstance'), [Name('level'), Name('int')], None, None), Const('The first argument should be level.'))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('data'), Const('temporary_file_path')], None, None), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([AssName('options', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'parse_args'), [Slice(Name('argv'), 'OP_APPLY', Const(2), None)], None, None))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], Getattr(Name('message'), 'error_list'))]))
Module(None, Stmt([Assign([AssName('command', 'OP_ASSIGN')], Name('app_name'))]))
Module(None, Stmt([Class('PasswordInput', [Name('TextInput')], None, Stmt([Pass()]), None)]))
response = self . handle_uncaught_exception ( request , resolver , sys . exc_info ( ) )
Module(None, Stmt([Assign([AssName('_upload_handlers', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('TYPE', 'OP_ASSIGN')], Name('FIELD'))]))
Module(None, Stmt([For(AssTuple([AssName('app_name', 'OP_ASSIGN'), AssName('model_list', 'OP_ASSIGN')]), CallFunc(Getattr(Name('manifest'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('SafeText'), [Name('data')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('The joined path (%s) is located outside of the base path component (%s)'), Tuple([Name('final_path'), Name('base_path')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('cursor', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('BytesIO', 'OP_ASSIGN')], Getattr(Name('io'), 'BytesIO'))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('PythonSerializer'), Name('self')], None, None), 'getvalue'), [], None, None))]))
else :
Module(None, Stmt([Assign([Subscript(Subscript(Getattr(Name('self'), 'cookies'), 'OP_APPLY', [Name('key')]), 'OP_ASSIGN', [Const('domain')])], Name('domain'))]))
Module(None, Stmt([Assign([AssName('missing_args_message', 'OP_ASSIGN')], Const('You must provide an application name.'))]))
Module(None, Stmt([Function(None, 'handle', ['self', 'args', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'has_leading_dir', ['self', 'paths'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('isolated_context', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('only'), Name('False')], None, None))]))
Module(None, Stmt([From('math', [('ceil', None)], 0)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([If([(Compare(Name('obj_list'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('token'), 'contents'), 'split'), [], None, None))]))
Module(None, Stmt([Assign([AssName('colors', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('styles'), 'pop'), [], None, None), 'split'), [Const('/')], None, None))]))
Module(None, Stmt([Function(None, 'list', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('tables', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('connection'), 'introspection'), 'django_table_names'), [Keyword('only_existing', Name('True'))], None, None))]))
elif message_context [ 0 ] == "'" :
Module(None, Stmt([Class('TemplateResponse', [Name('SimpleTemplateResponse')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('compare', 'OP_ASSIGN')], Lambda(['self', 'a', 'b'], [], 0, Compare(Name('a'), [('is not', Name('b'))])))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Getattr(Name('get_git_changeset'), 'cache'))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'is_bound'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('errors', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('extra_classes'), Const('split')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('reason'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('newlines', 'OP_ASSIGN')], CallFunc(Name('property'), [Lambda(['self'], [], 0, Getattr(Getattr(Name('self'), 'file'), 'newlines'))], None, None))]))
Module(None, Stmt([Assign([AssName('consume_next', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssName('contents', 'OP_ASSIGN')], CallFunc(Name('conditional_escape'), [Name('contents')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('HttpResponse'), 'content'), 'fset'), [Name('self'), Name('value')], None, None))]))
elif action == "apply_success" :
Module(None, Stmt([Function(None, 'app_dict', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('SplitDateTimeWidget'), Name('self')], None, None), '__init__'), [Name('widgets'), Name('attrs')], None, None))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_populate'), [], None, None))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'path_info', 'OP_ASSIGN')], Name('path_info'))]))
Module(None, Stmt([From('django.conf', [('settings', None), ('global_settings', None)], 0)]))
Module(None, Stmt([Return(CallFunc(CallFunc(Name('make_middleware_decorator'), [Name('middleware_class')], None, None), [], None, None))]))
Module(None, Stmt([From('django.core', [('urlresolvers', None)], 0)]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('new_name'), 'endswith'), [Const('_id')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('gzip', None)])]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([Return(Name('exit_code'))]))
Module(None, Stmt([If([(Compare(Const("'format'"), [('not in', CallFunc(Name('str'), [Name('te')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'no_obsolete', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('no_obsolete')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('extra_params'), 'update'), [Name('params')], None, None))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], CallFunc(Name('template_localtime'), [Name('output'), Keyword('use_tz', Getattr(Name('context'), 'use_tz'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('DateField'), Name('self')], None, None), 'to_python'), [Name('value')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Name('formats'), 'number_format'), [Mod((Const('%d'), CallFunc(Name('int'), [Name('d')], None, None))), Const(0)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('orig', 'OP_ASSIGN')], Getattr(Getattr(Name('self'), 'parent_instance'), 'pk'))]))
Module(None, Stmt([Return(Name('new_key'))]))
Module(None, Stmt([Assign([AssAttr(Name('parser'), 'StartDoctypeDeclHandler', 'OP_ASSIGN')], Getattr(Name('self'), 'start_doctype_decl'))]))
Module(None, Stmt([Assign([AssName('wm', 'OP_ASSIGN')], CallFunc(Getattr(Name('pyinotify'), 'WatchManager'), [], None, None))]))
Module(None, Stmt([Assign([AssName('time_str', 'OP_ASSIGN')], CallFunc(Getattr(Name('time_str'), 'decode'), [Const('utf-8')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [CallFunc(Getattr(Getattr(Name('self'), 'style'), 'NOTICE'), [Const('\nYou have unapplied migrations; your app may not work properly until they are applied.')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('digits', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('digittuple')], None, None))]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Getattr(Name('models'), 'signals'), Name('name')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(CallFunc(Getattr(Name('line'), 'lstrip'), [], None, None), 'startswith'), [Name('TRANSLATOR_COMMENT_MARK')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('collect'), 'extend'), [Getattr(Name('settings'), 'TEMPLATE_CONTEXT_PROCESSORS')], None, None))]))
else :
Module(None, Stmt([If([(CallFunc(Getattr(Name('timezone'), 'is_aware'), [Name('expires')], None, None), Stmt([Pass()]))], None)]))
except LookupError :
Module(None, Stmt([Return(Getattr(Name('self'), '_fqdn'))]))
Module(None, Stmt([From('django.template.base', [('Library', None), ('add_to_builtins', None), ('builtins', None), ('get_library', None), ('get_templatetags_modules', None), ('get_text_list', None), ('import_library', None), ('libraries', None)], 0)]))
Module(None, Stmt([Assign([AssName('attr', 'OP_ASSIGN')], CallFunc(Name('import_string'), [Name('dotted_path')], None, None))]))
Module(None, Stmt([From('itertools', [('chain', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Name('IncludeNode'), [CallFunc(Getattr(Name('parser'), 'compile_filter'), [Subscript(Name('bits'), 'OP_APPLY', [Const(1)])], None, None), Keyword('extra_context', Name('namemap')), Keyword('isolated_context', Name('isolated_context'))], None, None))]))
Module(None, Stmt([For(AssName('d', 'OP_ASSIGN'), CallFunc(Name('reversed'), [Getattr(Name('self'), 'dicts')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'get_default_timezone_name', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(List(()))]))
Module(None, Stmt([For(AssName('dict_', 'OP_ASSIGN'), Getattr(Name('self'), 'dicts'), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([From('django.utils.encoding', [('smart_text', None)], 0)]))
self . use_ssl = settings . EMAIL_USE_SSL if use_ssl is None else use_ssl
Module(None, Stmt([Function(None, 'is_serious', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'readlines', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
@ property
Module(None, Stmt([Class('Lexer', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__eq__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('requires_system_checks', 'OP_ASSIGN')], Name('False'))]))
from django . core . checks . registry import registry
Module(None, Stmt([Return(Name('self'))]))
Module(None, Stmt([Assign([AssName('rel_model', 'OP_ASSIGN')], Getattr(Getattr(Name('field'), 'rel'), 'to'))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Assign([AssName('translated', 'OP_ASSIGN')], CallFunc(Name('func'), [], None, Name('kwargs')))]))
Module(None, Stmt([With(CallFunc(Name('Archive'), [Name('path')], None, None), AssName('archive', 'OP_ASSIGN'), Stmt([Pass()]))]))
try :
Module(None, Stmt([Function(None, 'luhn', ['candidate'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('nm', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('Header'), [Name('nm'), Name('encoding')], None, None), 'encode'), [], None, None))]))
Module(None, Stmt([Return(Compare(Getattr(Name('self'), 'number'), [('<', Getattr(Getattr(Name('self'), 'paginator'), 'num_pages'))]))]))
Module(None, Stmt([Assign([Subscript(Name('msg'), 'OP_ASSIGN', [Const('From')])], CallFunc(Getattr(Getattr(Name('self'), 'extra_headers'), 'get'), [Const('From'), Getattr(Name('self'), 'from_email')], None, None))]))
Module(None, Stmt([If([(Name('PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('AssignmentNode', [Name('TagHelperNode')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, 'compile_function_error', ['self', 'token', 'e'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'has_key', ['self', 'key', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('MultipleObjectsReturned', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('bad_serializer', 'OP_ASSIGN')], CallFunc(Name('BadSerializer'), [Name('exc')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'xml', 'OP_ASSIGN')], CallFunc(Name('SimplerXMLGenerator'), [Getattr(Name('self'), 'stream'), CallFunc(Getattr(Getattr(Name('self'), 'options'), 'get'), [Const('encoding'), Getattr(Name('settings'), 'DEFAULT_CHARSET')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('item'), 'update'), [Name('kwargs')], None, None))]))
Module(None, Stmt([Assign([AssName('role', 'OP_ASSIGN')], CallFunc(Getattr(Name('role'), 'upper'), [], None, None))]))
else :
Module(None, Stmt([Assign([AssName('messages', 'OP_ASSIGN')], ListComp(CallFunc(Name('EmailMessage'), [Name('subject'), Name('message'), Name('sender'), Name('recipient'), Keyword('connection', Name('connection'))], None, None), [ListCompFor(AssTuple([AssName('subject', 'OP_ASSIGN'), AssName('message', 'OP_ASSIGN'), AssName('sender', 'OP_ASSIGN'), AssName('recipient', 'OP_ASSIGN')]), Name('datatuple'), [])]))]))
Module(None, Stmt([Assign([AssName('new_context', 'OP_ASSIGN')], CallFunc(Name('context_class'), [Name('_dict')], None, Dict([(Const('autoescape'), Getattr(Name('context'), 'autoescape')), (Const('current_app'), Getattr(Name('context'), 'current_app')), (Const('use_l10n'), Getattr(Name('context'), 'use_l10n')), (Const('use_tz'), Getattr(Name('context'), 'use_tz'))])))]))
Module(None, Stmt([Assign([AssName('autodetector', 'OP_ASSIGN')], CallFunc(Name('MigrationAutodetector'), [CallFunc(Getattr(Name('loader'), 'project_state'), [], None, None), CallFunc(Getattr(Name('ProjectState'), 'from_apps'), [Name('apps')], None, None), CallFunc(Name('InteractiveMigrationQuestioner'), [Keyword('specified_apps', Name('app_labels')), Keyword('dry_run', Getattr(Name('self'), 'dry_run'))], None, None)], None, None))]))
@ property
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Mod((Const("Your TEMPLATE_LOADERS setting includes %r, but your Python installation doesn't support that type of template loading. Consider removing that line from TEMPLATE_LOADERS."), Name('loader')))], None, None))]))
Module(None, Stmt([Assign([AssName('function_name', 'OP_ASSIGN')], Or([Name('name'), Getattr(CallFunc(Name('getattr'), [Name('func'), Const('_decorated_function'), Name('func')], None, None), '__name__')]))]))
Module(None, Stmt([Return(Compare(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'normcase'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'abspath'), [Name('src')], None, None)], None, None), [('==', CallFunc(Getattr(Getattr(Name('os'), 'path'), 'normcase'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'abspath'), [Name('dst')], None, None)], None, None))]))]))
Module(None, Stmt([From('email.mime.multipart', [('MIMEMultipart', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('PasswordInput'), Name('self')], None, None), '__init__'), [Name('attrs')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Command'), Name('self')], None, None), 'add_arguments'), [Name('parser')], None, None))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'resolve', ['path', 'urlconf'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Assign([AssName('arg', 'OP_ASSIGN')], Getattr(Name('settings'), 'DATE_FORMAT'))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'is_required')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('media', 'OP_ASSIGN')], Add((Name('media'), Getattr(Name('w'), 'media'))))]))
Module(None, Stmt([Assign([AssAttr(Name('response'), 'content', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('orig_vars'), 'pop'), [Const('__dict__'), Name('None')], None, None))]))
try :
Module(None, Stmt([If([(Compare(Name('ch'), [('==', Const('?'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'choices'), 'append'), [Tuple([Name('f'), CallFunc(Getattr(Name('f'), 'replace'), [Name('path'), Const(''), Const(1)], None, None)])], None, None))]))
Module(None, Stmt([From('django.utils.module_loading', [('import_string', None)], 0)]))
Module(None, Stmt([If([(Compare(Subscript(Name('item'), 'OP_APPLY', [Const('author_name')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('urljoin'), [Name('prefix'), Name('path')], None, None))]))
Module(None, Stmt([From('django.utils.six.moves', [('xrange', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('EntitiesForbidden'), [Name('name'), Name('value'), Name('base'), Name('sysid'), Name('pubid'), Name('notation_name')], None, None), None, None)]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [CallFunc(Name('str'), [Name('param')], None, None)])], Name('value'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('comment_notes'), 'append'), [Const('AutoField?')], None, None))]))
Module(None, Stmt([If([(Not(Name('_serializers')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('forms_valid', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Import([('os', None)])]))
except Exception as e :
Module(None, Stmt([Function(None, 'validate_unique', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_request_middleware'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'trim_whitespace', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('pickle'), 'loads'), [CallFunc(Getattr(Name('base64'), 'b64decode'), [CallFunc(Name('force_bytes'), [Name('value')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('pop_context', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'timezone', 'OP_ASSIGN')], Name('timezone'))]))
@ property
Module(None, Stmt([If([(Name('options'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('itertools', [('product', None)], 0)]))
Module(None, Stmt([Function(None, 'values', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('TOKEN_MAPPING', 'OP_ASSIGN')], Dict([(Name('TOKEN_TEXT'), Const('Text')), (Name('TOKEN_VAR'), Const('Var')), (Name('TOKEN_BLOCK'), Const('Block')), (Name('TOKEN_COMMENT'), Const('Comment'))]))]))
self . file_permissions_mode = (  file_permissions_mode if file_permissions_mode is not None  else settings . FILE_UPLOAD_PERMISSIONS  )
Module(None, Stmt([Discard(CallFunc(Getattr(Name('defaults'), 'update'), [Name('kwargs')], None, None))]))
Module(None, Stmt([Return(CallFunc(CallFunc(Name('import_string'), [Name('path')], None, None), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('pathext', 'OP_ASSIGN')], List([Const('')]))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_coerce'), [Name('data')], None, None))]))
msgid = '<%s.%s.%s%s@%s>' % ( utcdate , pid , randint , idstring , idhost )
Module(None, Stmt([Return(Name('chunk'))]))
Module(None, Stmt([Function(None, 'wrapper', ['args', 'kwds'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '__to_language', 'OP_ASSIGN')], CallFunc(Name('to_language'), [Name('language')], None, None))]))
@ register . tag ( 'include' )
Module(None, Stmt([Function(None, 'Y', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('widget'), 'is_localized', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('signals'), 'request_started'), 'send'), [Keyword('sender', Getattr(Name('self'), '__class__'))], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], Add((Getattr(Name('self'), 'buffer'), CallFunc(Getattr(Name('self'), '_read_limited'), [Sub((Name('size'), CallFunc(Name('len'), [Getattr(Name('self'), 'buffer')], None, None)))], None, None))))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Assign([AssName('nodelist_false', 'OP_ASSIGN')], CallFunc(Name('NodeList'), [], None, None))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'isolated_context'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('_BROWSERS_DEPRECATED_LOCALES', 'OP_ASSIGN')], Dict([(Const('zh-cn'), Const('zh-hans')), (Const('zh-tw'), Const('zh-hant'))]))]))
Module(None, Stmt([If([(Not(Name('func_name')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'render_to_string', ['template_name', 'dictionary', 'context_instance', 'dirs'], [Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'hashvalue', 'OP_ASSIGN')], CallFunc(Name('hash'), [Name('tup')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Const('</optgroup>')], None, None))]))
Module(None, Stmt([Assign([AssName('sub_match', 'OP_ASSIGN')], CallFunc(Getattr(Name('pattern'), 'resolve'), [Name('new_path')], None, None))]))
Module(None, Stmt([Assign([AssName('kwargs', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('change', 'OP_ASSIGN')], CallFunc(Name('fn'), [], None, None))]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], Name('new_obj'))]))
Module(None, Stmt([Function(None, '__init__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('internal_use_only', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Return(Name('context'))]))
Module(None, Stmt([Return(Name('val'))]))
Module(None, Stmt([If([(Compare(Name('key_prefix'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('timeout'), [('==', Name('DEFAULT_TIMEOUT'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__deepcopy__', ['self', 'memo'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('T', 'OP_ASSIGN')], ListComp(CallFunc(Name('F'), [Name('x')], None, None), [ListCompFor(AssName('x', 'OP_ASSIGN'), CallFunc(Name('range'), [Const(1), Name('l')], None, None), [])]))]))
try :
Module(None, Stmt([If([(Not(CallFunc(Getattr(CallFunc(Getattr(Name('ip_str'), 'lower'), [], None, None), 'startswith'), [Const('0000:0000:0000:0000:0000:ffff:')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Getattr(Name('self'), '_count'))]))
Module(None, Stmt([Assign([AssName('new_class', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('MediaDefiningClass'), Name('mcs')], None, None), '__new__'), [Name('mcs'), Name('name'), Name('bases'), Name('attrs')], None, None))]))
Module(None, Stmt([Function(None, 'compile_filter_error', ['self', 'token', 'e'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Subscript(Getattr(Name('graph'), 'nodes'), 'OP_APPLY', [Name('plan_node')]), 'replaces'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'wrapper', ['cls'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('settings'), 'configure'), [], None, None))]))
Module(None, Stmt([Class('Loader', [Name('BaseLoader')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('key_prefix', 'OP_ASSIGN')], Getattr(Name('settings'), 'CACHE_MIDDLEWARE_KEY_PREFIX'))]))
Module(None, Stmt([Class('TemplateDoesNotExist', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('escapejs'), [Name('value')], None, None))]))
try :
else :
Module(None, Stmt([If([(Getattr(Name('self'), 'activated'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'plural', 'OP_ASSIGN')], Lambda(['n'], [], 0, CallFunc(Name('int'), [Compare(Name('n'), [('!=', Const(1))])], None, None)))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('settings'), 'configure'), [Keyword('USE_I18N', Name('True'))], None, None))]))
try :
Module(None, Stmt([Return(List([Const('parse'), Const('error'), Const('request'), Const('response'), Const('robotparser')]))]))
Module(None, Stmt([From('django.utils.text', [('smart_split', None), ('unescape_string_literal', None), ('get_text_list', None)], 0)]))
Module(None, Stmt([Function(None, 'encoding', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('middleware_method', 'OP_ASSIGN'), Getattr(Name('self'), '_response_middleware'), Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([For(AssName('app_config', 'OP_ASSIGN'), CallFunc(Name('reversed'), [CallFunc(Name('list'), [CallFunc(Getattr(Name('apps'), 'get_app_configs'), [], None, None)], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(Name('roots')), Stmt([Pass()]))], None)]))
except UnicodeError :
Module(None, Stmt([Continue()]))
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('item', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Name('values')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Name('data'), [], None, None))]))
Module(None, Stmt([If([(Or([Getattr(Getattr(Name('self'), 'parent_name'), 'filters'), CallFunc(Name('isinstance'), [Getattr(Getattr(Name('self'), 'parent_name'), 'var'), Name('Variable')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssTuple([AssName('key', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')]), CallFunc(Getattr(Name('six'), 'iteritems'), [Name('kwargs')], None, None), Stmt([Pass()]), None)]))
@ property
Module(None, Stmt([For(AssName('item', 'OP_ASSIGN'), Name('sorted_items'), Stmt([Pass()]), None)]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'choices', 'OP_ASSIGN')], List([Tuple([Const(''), Const('---------')])]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_unget_history', 'OP_ASSIGN')], Add((List([Name('num_bytes')]), Slice(Getattr(Name('self'), '_unget_history'), 'OP_APPLY', None, Const(49)))))]))
Module(None, Stmt([Assign([AssName('Signer', 'OP_ASSIGN')], CallFunc(Name('import_string'), [Getattr(Name('settings'), 'SIGNING_BACKEND')], None, None))]))
Module(None, Stmt([Assign([AssName('func', 'OP_ASSIGN')], CallFunc(Name('import_string'), [Name('path')], None, None))]))
Module(None, Stmt([Assign([AssName('suffixes', 'OP_ASSIGN')], GenExpr(GenExprInner(CallFunc(Getattr(Const('.'), 'join'), [GenExpr(GenExprInner(Name('ext'), [GenExprFor(AssName('ext', 'OP_ASSIGN'), Name('combo'), [GenExprIf(Name('ext'))])]))], None, None), [GenExprFor(AssName('combo', 'OP_ASSIGN'), CallFunc(Name('product'), [Name('databases'), Name('ser_fmts'), Name('cmp_fmts')], None, None), [])])))]))
try :
Module(None, Stmt([Return(CallFunc(Getattr(Const('\n'), 'join'), [Name('statements')], None, None))]))
Module(None, Stmt([Assign([AssName('c', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'pop'), [Const('()')], None, None))]))
Module(None, Stmt([Assign([AssName('both_after', 'OP_ASSIGN')], List([CallFunc(Name('Tok'), [Const('other'), Const('.')], None, None)]))]))
Module(None, Stmt([Assign([AssName('age', 'OP_ASSIGN')], Sub((CallFunc(Getattr(Name('time'), 'time'), [], None, None), Name('timestamp'))))]))
Module(None, Stmt([If([(Compare(Name('s_len'), [('>', Name('length'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'gettext', ['message'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Subscript(Name('host'), 'OP_APPLY', [UnarySub(Const(1))]), [('==', Const(']'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('LoaderOrigin'), [Name('display_name'), Name('loader'), Name('name'), Name('dirs')], None, None))]))
Module(None, Stmt([Function(None, 'handle_field', ['self', 'obj', 'field'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_errors'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([From('collections', [('OrderedDict', None)], 0)]))
Module(None, Stmt([Assign([AssName('request_class', 'OP_ASSIGN')], Name('WSGIRequest'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'none_value', 'OP_ASSIGN')], Tuple([Const(0), Name('empty_label')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('current_fields'), 'append'), [Tuple([Name('key'), Name('value')])], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_errors', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Compare(Name('language'), [('not in', Name('_translations'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('node'), 'hasAttribute'), [Const('pk')], None, None), Stmt([Pass()]))], None)]))
except NameError :
Module(None, Stmt([Return(CallFunc(Getattr(Name('value'), 'replace'), [Keyword('tzinfo', Name('None'))], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('root', 'OP_ASSIGN'), AssName('dirs', 'OP_ASSIGN'), AssName('files', 'OP_ASSIGN')]), CallFunc(Getattr(Name('os'), 'walk'), [Name('template_dir')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('target_dir', 'OP_ASSIGN')], CallFunc(Getattr(Name('path'), 'join'), [Name('top_dir'), Name('relative_dir')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('gettext'), '_translations', 'OP_ASSIGN')], Dict(()))]))
except StandardError as e :
Module(None, Stmt([Class('Command', [Name('AppCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('clean', 'OP_ASSIGN')], Lambda(['self', 'x'], [], 0, CallFunc(Name('len'), [Name('x')], None, None)))]))
Module(None, Stmt([If([(Compare(Slice(Getattr(Name('sys'), 'version_info'), 'OP_APPLY', None, Const(2)), [('>=', Tuple([Const(3), Const(3)]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__wrapper__', ['self', 'args', 'kw'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('RequestContext', [Name('Context')], None, Stmt([Pass()]), None)]))
connection_class = smtplib . SMTP_SSL if self . use_ssl else smtplib . SMTP
@ property
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], CallFunc(Getattr(Name('form'), 'save'), [Keyword('commit', Name('False'))], None, None))]))
Module(None, Stmt([If([(Not(Getattr(Name('app_config'), 'path')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('DefaultCacheProxy', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('elt'), Name('NonCapture')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Compare(CallFunc(Getattr(Name('cursor'), 'fetchone'), [], None, None), [('is not', Name('None'))]))]))
Module(None, Stmt([Assign([AssName('text', 'OP_ASSIGN')], CallFunc(Getattr(Name('unicodedata'), 'normalize'), [Const('NFC'), Getattr(Name('self'), '_wrapped')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('SortedDict'), Name('self')], None, None), '__init__'), [], None, None))]))
Module(None, Stmt([Assign([AssName('fd', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Getattr(Name('pyinotify'), 'INotifyWrapper'), 'create'), [], None, None), 'inotify_init'), [], None, None))]))
try :
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'asvar'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('DisallowedRedirect'), [Mod((Const("Unsafe redirect to URL with protocol '%s'"), Getattr(Name('parsed'), 'scheme')))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'tell', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('tempdir'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('base36'), 'append'), [Subscript(Name('digits'), 'OP_APPLY', [FloorDiv((Name('i'), Name('j')))])], None, None))]))
Module(None, Stmt([Assign([AssName('seen', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('key', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')]), CallFunc(Name('parse_qsl'), [Or([Name('query_string'), Const('')]), Keyword('keep_blank_values', Name('True')), Keyword('encoding', Name('encoding'))], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssTuple([AssName('ch', 'OP_ASSIGN'), AssName('escaped', 'OP_ASSIGN')])], CallFunc(Name('next'), [Name('pattern_iter')], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_callback'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'help_text', 'OP_ASSIGN')], Name('help_text'))]))
Module(None, Stmt([Assign([AssName('exit_code', 'OP_ASSIGN')], CallFunc(Getattr(Name('os'), 'spawnve'), [Getattr(Name('os'), 'P_WAIT'), Getattr(Name('sys'), 'executable'), Name('args'), Name('new_environ')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('is_ignored'), [Name('file_path'), Getattr(Name('self'), 'ignore_patterns')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Compare(Name('translators_comment_start'), [('is not', Name('None'))]), Compare(Name('lineno'), [('>=', Name('translators_comment_start'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Assign([AssTuple([AssName('path', 'OP_ASSIGN'), AssName('module', 'OP_ASSIGN')])], CallFunc(Getattr(Name('name'), 'rsplit'), [Const('.'), Const(1)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'appendlist'), [Name('key'), Name('value')], None, None))]))
Module(None, Stmt([Class('SafeData', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_HEADING'), [Const('Synchronizing apps without migrations:')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('l', 'OP_ASSIGN')], Lambda(['x'], [], 0, CallFunc(Getattr(Name('self'), 'make_key'), [Name('x'), Keyword('version', Name('version'))], None, None)))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--database'), Keyword('action', Const('store')), Keyword('dest', Const('database')), Keyword('default', Name('DEFAULT_DB_ALIAS')), Keyword('help', Const('Nominates a database to flush. Defaults to the "default" database.'))], None, None))]))
Module(None, Stmt([Function(None, 'save', ['self', 'commit'], [Name('True')], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssName('lib', 'OP_ASSIGN')], CallFunc(Name('get_library'), [Name('taglib')], None, None))]))
Module(None, Stmt([Assign([AssName('m', 'OP_ASSIGN')], Sub((CallFunc(Name('int'), [Name('d')], None, None), Name('d'))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('sys'), 'stderr'), 'write'), [Const("  http://www.saddi.com/software/flup/   If you've already\n")], None, None))]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Unable to add handler %r: %s'), Tuple([Name('h'), Name('e')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Name('CheckboxInput'))]))
Module(None, Stmt([Function(None, '_import_module', ['name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'func', 'OP_ASSIGN')], Name('func'))]))
Module(None, Stmt([If([(Name('pop_context'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('value'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'isdir'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Const('conf'), Const('locale')], None, None)], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'view_name', 'OP_ASSIGN')], CallFunc(Getattr(Const(':'), 'join'), [Add((Getattr(Name('self'), 'namespaces'), List([Name('view_path')])))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'close'), [], None, None))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'json_kwargs'), 'OP_ASSIGN', [Const('separators')])], Tuple([Const(','), Const(': ')]))]))
Module(None, Stmt([Assign([AssName('__delitem__', 'OP_ASSIGN')], Name('complain'))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Getattr(Name('self'), 'form'), 'initial'), 'get'), [Getattr(Name('self'), 'name'), Getattr(Getattr(Name('self'), 'field'), 'initial')], None, None))]))
Module(None, Stmt([Assign([AssName('targets', 'OP_ASSIGN')], List([Tuple([Name('app_label'), Getattr(Name('migration'), 'name')])]))]))
Module(None, Stmt([Assign([AssName('c', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Class('Command', [Name('CheckCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'to_bytes', ['val', 'encoding'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Command'), Name('self')], None, None), 'execute'), [], Name('args'), Name('options')))]))
Module(None, Stmt([From('django.db.migrations.loader', [('AmbiguityError', None)], 0)]))
Module(None, Stmt([Assign([AssName('_cookie_allows_colon_in_names', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([If([(Or([Not(Name('tag')), Compare(Name('current_len'), [('>=', Name('truncate_len'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'pop', ['self', 'key', 'args'], [], 4, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssName('DEFAULT_MAX_NUM', 'OP_ASSIGN')], Const(1000))]))
Module(None, Stmt([Assign([AssName('supports_microseconds', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('empty_label'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_loaders', 'OP_ASSIGN')], Name('loaders'))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), '_delegate_bytes'), Getattr(Name('six'), 'PY2')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('app_config'), 'models_module'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(Yield(Name('node')))]))
Module(None, Stmt([Assign([AssName('messages', 'OP_ASSIGN')], Dict(()))]))
try :
Module(None, Stmt([Assign([AssName('processors', 'OP_ASSIGN')], List(()))]))
else :
Module(None, Stmt([Assign([AssName('location', 'OP_ASSIGN')], Mod((Const('//%s'), CallFunc(Getattr(Name('self'), 'get_full_path'), [], None, None))))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([For(AssName('form', 'OP_ASSIGN'), Name('valid_forms'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('exclude'), 'append'), [Getattr(Name('f'), 'name')], None, None))]))
Module(None, Stmt([Assign([AssName('_assertRaisesRegex', 'OP_ASSIGN')], Const('assertRaisesRegex'))]))
Module(None, Stmt([Raise(CallFunc(Name('AttributeError'), [Const('This QueryDict instance is immutable')], None, None), None, None)]))
Module(None, Stmt([From('django.db', [('connections', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('AttributeError'), [Mod((Const('%s could not be imported '), Getattr(Name('self'), 'name')))], None, None), None, None)]))
Module(None, Stmt([Subscript(Getattr(Name('self'), '_headers'), 'OP_DELETE', [CallFunc(Getattr(Name('header'), 'lower'), [], None, None)])]))
Module(None, Stmt([Assign([AssName('lock', 'OP_ASSIGN')], CallFunc(Name('RLock'), [], None, None))]))
Module(None, Stmt([Return(Mod((Const('%s%02d%02d'), Tuple([Name('sign'), FloorDiv((Name('seconds'), Const(3600))), Mod((FloorDiv((Name('seconds'), Const(60))), Const(60)))]))))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'regex', 'max_length', 'min_length', 'error_message', 'args', 'kwargs'], [Name('None'), Name('None'), Name('None')], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('pieces', 'OP_ASSIGN')], List(()))]))
else :
Module(None, Stmt([If([(Name('domain'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('dot_re'), 'sub'), [Name('char'), Name('src')], None, None))]))
Module(None, Stmt([Return(Name('statements'))]))
Module(None, Stmt([From('django.db', [('connections', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Name('SafeString'), [CallFunc(Name('str'), [Name('s')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([If([(Compare(Const('file_path'), [('in', Name('kwargs'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('title'), Subscript(Name('item'), 'OP_APPLY', [Const('title')])], None, None))]))
Module(None, Stmt([Function(None, 'extract', ['self', 'to_path'], [Const('')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Not(CallFunc(Getattr(Getattr(Name('UserModel'), '_default_manager'), 'exists'), [], None, None)), CallFunc(Getattr(Name('options'), 'get'), [Const('interactive')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'var', 'OP_ASSIGN')], Name('var_obj'))]))
Module(None, Stmt([Assign([AssName('ser_fmt', 'OP_ASSIGN')], Subscript(Name('parts'), 'OP_APPLY', [UnarySub(Const(1))]))]))
Module(None, Stmt([Function(None, 'camel_case_to_spaces', ['value'], [], 0, None, Stmt([Pass()]))]))
finally :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('ExternalReferenceForbidden'), Name('self')], None, None), '__init__'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_done', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Pass()]))
elif issubclass ( klass , logging . handlers . SMTPHandler ) and 'mailhost' in config :
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Discard(CallFunc(Name('file_move_safe'), [Name('tmp_path'), Name('fname'), Keyword('allow_overwrite', Name('True'))], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('fname')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'save_as_new'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('str'), [CallFunc(Getattr(CallFunc(Name('Header'), [Name('value'), Const('utf-8'), Keyword('maxlinelen', Getattr(Name('sys'), 'maxsize'))], None, None), 'encode'), [], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'is_naive', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Function(None, 'create_select', ['self', 'name', 'field', 'value', 'val', 'choices', 'none_value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], Tuple([Const('Field'), Const('CharField'), Const('IntegerField'), Const('DateField'), Const('TimeField'), Const('DateTimeField'), Const('RegexField'), Const('EmailField'), Const('FileField'), Const('ImageField'), Const('URLField'), Const('BooleanField'), Const('NullBooleanField'), Const('ChoiceField'), Const('MultipleChoiceField'), Const('ComboField'), Const('MultiValueField'), Const('FloatField'), Const('DecimalField'), Const('SplitDateTimeField'), Const('IPAddressField'), Const('GenericIPAddressField'), Const('FilePathField'), Const('SlugField'), Const('TypedChoiceField'), Const('TypedMultipleChoiceField')]))]))
try :
Module(None, Stmt([Return(Name('message'))]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('formfield'), 'queryset', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('formfield'), 'queryset'), 'complex_filter'), [Name('limit_choices_to')], None, None))]))
Module(None, Stmt([From('email.mime.base', [('MIMEBase', None)], 0)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'file', 'name'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('relative_dir', 'OP_ASSIGN')], CallFunc(Getattr(Name('path_rest'), 'replace'), [Name('base_name'), Name('name')], None, None))]))
Module(None, Stmt([Assign([AssName('DEFAULT_CACHE_ALIAS', 'OP_ASSIGN')], Const('default'))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('check_for_language'), 'cache_clear'), [], None, None))]))
try :
Module(None, Stmt([Function(None, 'wrapper', ['args', 'kwds'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Getattr(Name('value'), 'pk'))]))
@ register . tag
Module(None, Stmt([Function(None, 'file_complete', ['self', 'file_size'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('create_bound_method', 'OP_ASSIGN')], Getattr(Name('types'), 'MethodType'))]))
Module(None, Stmt([Assign([AssName('debugs', 'OP_ASSIGN')], ListComp(Name('e'), [ListCompFor(AssName('e', 'OP_ASSIGN'), Name('all_issues'), [ListCompIf(And([Compare(Getattr(Name('e'), 'level'), [('<', Getattr(Name('checks'), 'INFO'))]), Not(CallFunc(Getattr(Name('e'), 'is_silenced'), [], None, None))]))])]))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('SimpleTemplateResponse'), Name('self')], None, None), '__iter__'), [], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('EmptyPage'), [Const('That page number is less than 1')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('file', 'OP_ASSIGN')], CallFunc(Getattr(Name('data'), 'temporary_file_path'), [], None, None))]))
Module(None, Stmt([Import([('logging.handlers', None)])]))
elif args [ 1 ] [ 0 ] == '3' :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'test_runner', 'OP_ASSIGN')], Slice(Name('arg'), 'OP_APPLY', CallFunc(Name('len'), [Name('option')], None, None), None))]))
finally :
Module(None, Stmt([Subscript(Getattr(Name('self'), '_expire_info'), 'OP_DELETE', [Name('key')])]))
Module(None, Stmt([For(AssName('f', 'OP_ASSIGN'), Name('fields'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('work_file', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Getattr(Name('self'), 'dirpath'), Name('thefile')], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Class('NullBooleanSelect', [Name('Select')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_cache'), 'delete_multi'), [CallFunc(Name('map'), [Name('l'), Name('keys')], None, None)], None, None))]))
except ( TypeError , AttributeError ) :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'literal', 'OP_ASSIGN')], Name('None'))]))
try :
Module(None, Stmt([Assign([AssName('retval', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'tokens'), 'OP_APPLY', [Getattr(Name('self'), 'pos')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('FloatField'), Name('self')], None, None), 'validate'), [Name('value')], None, None))]))
else :
strip_prefix = lambda s : s [ 1 : ] if s . startswith ( "u'" ) else s
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('form'), 'is_valid'), [], None, None)), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('c'), 'load'), [Name('cookie')], None, None))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], Dict([(Const('model'), CallFunc(Name('smart_text'), [Getattr(Name('obj'), '_meta')], None, None)), (Const('fields'), Getattr(Name('self'), '_current'))]))]))
Module(None, Stmt([Assign([AssName('line', 'OP_ASSIGN')], Slice(Name('line'), 'OP_APPLY', Name('space'), None))]))
Module(None, Stmt([Assign([AssName('decompress', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '__bytes_cast'), [], None, None))]))
Module(None, Stmt([Assign([AssName('length', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('arg')], None, None))]))
Module(None, Stmt([Assign([AssName('cc', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(CallFunc(Name('_to_tuple'), [Name('el')], None, None), [GenExprFor(AssName('el', 'OP_ASSIGN'), CallFunc(Getattr(Name('cc_delim_re'), 'split'), [Subscript(Name('response'), 'OP_APPLY', [Const('Cache-Control')])], None, None), [])]))], None, None))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'message_context'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('app_config'), 'label'), [('in', Getattr(Name('loader'), 'migrated_apps'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('path_info', 'OP_ASSIGN')], Const('/'))]))
Module(None, Stmt([Assign([AssName('parent_name', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'compile_filter'), [Subscript(Name('bits'), 'OP_APPLY', [Const(1)])], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'connector', 'OP_ASSIGN')], Name('conn_type'))]))
Module(None, Stmt([From('django.core.mail.backends.base', [('BaseEmailBackend', None)], 0)]))
Module(None, Stmt([Return(Const('\\"'))]))
Module(None, Stmt([Function(None, 'extract', ['path', 'to_path'], [Const('')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('sql_files'), 'append'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('app_dir'), Mod((Const('%s.%s.sql'), Tuple([Getattr(Name('opts'), 'model_name'), Name('backend_name')])))], None, None)], None, None))]))
Module(None, Stmt([Return(Getattr(Name('unbound'), 'im_func'))]))
Module(None, Stmt([Function(None, 'check_model_signals', ['app_configs', 'kwargs'], [Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('LOCK_EX', 'OP_ASSIGN')], Getattr(Name('fcntl'), 'LOCK_EX'))]))
Module(None, Stmt([Subscript(Getattr(Name('self'), '_cache'), 'OP_DELETE', [Name('key')])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('sites'), 'append'), [Name('j')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'setlist'), [Name('key'), Name('value')], None, None))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Assign([AssName('_mutable', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('dict'), '__setitem__'), [Name('self'), Name('key'), Name('M')], None, None))]))
Module(None, Stmt([If([(Compare(Name('resource_string'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('thefile', 'OP_ASSIGN')], Getattr(Name('self'), 'file'))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Const('  You should commit this migration but leave the old ones in place;')], None, None))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'endElement'), [Const('feed')], None, None))]))
Module(None, Stmt([Class('InvalidPage', [Name('Exception')], None, Stmt([Pass()]), None)]))
try :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'buffer', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Const('You can only use --pks option with one model')], None, None), None, None)]))
Module(None, Stmt([Function(None, 'accessed_time', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('invalid_apps'), 'append'), [Name('app_name')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'require_all_fields', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('require_all_fields'), Name('True')], None, None))]))
else :
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('_active'), Const('value'), Name('None')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'bad_cookies'), 'add'), [Name('key')], None, None))]))
Module(None, Stmt([From('django.core.cache', [('caches', None)], 0)]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('self'), '_isdst'), [Name('dt')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('urlconf'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'parse_color_setting', ['config_string'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('using_sysrandom', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([From('django.core.files.uploadedfile', [('TemporaryUploadedFile', None), ('InMemoryUploadedFile', None)], 0)]))
Module(None, Stmt([From('django.utils.safestring', [('SafeData', None), ('EscapeData', None)], 0)]))
Module(None, Stmt([Class('DebugParser', [Name('Parser')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('min_length'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
except IndexError :
Module(None, Stmt([Function(None, 'u', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('to_unicode', 'OP_ASSIGN')], Lambda(['s'], [], 0, CallFunc(Name('force_text'), [Name('s'), Keyword('strings_only', Name('True'))], None, None)))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Getattr(Name('self'), 'user_regex'), 'match'), [Name('user_part')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('RuntimeError'), [Const('The method to extend accepted command-line arguments by the test management command has changed in Django 1.8. Please create an add_arguments class method to achieve this.')], None, None), None, None)]))
@ deconstructible
Module(None, Stmt([Discard(CallFunc(Getattr(Name('shown'), 'add'), [Name('plan_node')], None, None))]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([Function(None, '_get_page', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('data'), 'get'), [Name('name'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssName('new_operations', 'OP_ASSIGN')], CallFunc(Getattr(Name('optimizer'), 'optimize'), [Name('operations'), Getattr(Name('migration'), 'app_label')], None, None))]))
Module(None, Stmt([Return(Tuple([Name('args'), Name('kwargs')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'seek'), [Const(0)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('file'), 'seek'), [Name('file_pos')], None, None))]))
Module(None, Stmt([Function(None, 'pretty_name', ['name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('kwargs'))]))
try :
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('label')])], Subscript(Name('labels'), 'OP_APPLY', [Getattr(Name('f'), 'name')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'handle_field'), [Name('obj'), Name('field')], None, None))]))
Module(None, Stmt([Function(None, 'mark_for_escaping', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('usage', 'OP_ASSIGN')], List([Const(''), Mod((Const("Type '%s help <subcommand>' for help on a specific subcommand."), Getattr(Name('self'), 'prog_name'))), Const(''), Const('Available subcommands:')]))]))
Module(None, Stmt([Import([('socket', None)])]))
else :
Module(None, Stmt([Assign([AssName('cmatch', 'OP_ASSIGN')], CallFunc(Getattr(Name('constant_re'), 'match'), [Subscript(Name('parts'), 'OP_APPLY', [Const(0)])], None, None))]))
Module(None, Stmt([If([(Compare(Name('finder'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('cache', 'OP_ASSIGN')], Subscript(Name('caches'), 'OP_APPLY', [Getattr(Name('settings'), 'CACHE_MIDDLEWARE_ALIAS')]))]))
Module(None, Stmt([Class('DateFormat', [Name('TimeFormat')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Name('DateInput'))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], CallFunc(Getattr(Name('hashlib'), 'md5'), [CallFunc(Name('force_bytes'), [Name('key')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('get_text_list', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('get_text_list'), Getattr(Name('six'), 'text_type')], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('language_code_re'), 'search'), [Name('lang_code')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('SortedDict'), Name('self')], None, None), '__setitem__'), [Name('key'), Name('value')], None, None))]))
Module(None, Stmt([Function(None, 'clean', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('pop', 'OP_ASSIGN')], Name('complain'))]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'filter_expr', 'OP_ASSIGN'), AssAttr(Name('self'), 'nodelist', 'OP_ASSIGN')])], Tuple([Name('filter_expr'), Name('nodelist')]))]))
Module(None, Stmt([Assign([AssName('module_values', 'OP_ASSIGN')], CallFunc(Name('set'), [CallFunc(Getattr(Getattr(Name('sys'), 'modules'), 'values'), [], None, None)], None, None))]))
Module(None, Stmt([Import([('codecs', None)])]))
Module(None, Stmt([Assign([AssName('last', 'OP_ASSIGN')], Mod((Getattr(Getattr(Name('self'), 'data'), 'day'), Const(10))))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(Name('json'), 'dumps'), [Name('data'), Keyword('cls', Name('encoder'))], None, None))]))
Module(None, Stmt([Function(None, 'get_dump_object', ['self', 'obj'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('field_notes'), 'append'), [Const("Field renamed because it wasn't a valid Python identifier.")], None, None))]))
else :
Module(None, Stmt([Function(None, 'validate', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([For(AssName('file', 'OP_ASSIGN'), Subscript(Name('options'), 'OP_APPLY', [Const('files')]), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('requires_system_checks', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssName('_localtime', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'active_readers'), '-=', Const(1))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('middle'), 'endswith'), [Name('punctuation')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'timezone'), CallFunc(Getattr(Getattr(Name('self'), 'timezone'), 'dst'), [Getattr(Name('self'), 'data')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('locations'), 'extend'), [GenExpr(GenExprInner(Tuple([Name('dirpath'), Name('f')]), [GenExprFor(AssName('f', 'OP_ASSIGN'), Name('filenames'), [GenExprIf(CallFunc(Getattr(Name('f'), 'endswith'), [Const('.po')], None, None))])]))], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'context', 'base', 'sysid', 'pubid'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('number', 'OP_ASSIGN')], CallFunc(Getattr(Const(''), 'join'), [CallFunc(Name('reversed'), [Name('digits')], None, None)], None, None))]))
Module(None, Stmt([AugAssign(Name('weight'), '+=', Const(2))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, '_has_changed', ['self', 'initial', 'data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Or([Not(CallFunc(Getattr(Name('fname'), 'startswith'), [Getattr(Name('self'), '_dir')], None, None)), Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('fname')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([AugAssign(Name('templatetags_modules_candidates'), '+=', ListComp(Mod((Const('%s.templatetags'), Getattr(Name('app_config'), 'name'))), [ListCompFor(AssName('app_config', 'OP_ASSIGN'), CallFunc(Getattr(Name('apps'), 'get_app_configs'), [], None, None), [])]))]))
Module(None, Stmt([Function(None, 'represent_decimal', ['self', 'data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('_MovedItems', [Name('_LazyModule')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--no-initial-data'), Keyword('action', Const('store_false')), Keyword('dest', Const('load_initial_data')), Keyword('default', Name('True')), Keyword('help', Const('Tells Django not to load any initial data after database synchronization.'))], None, None))]))
Module(None, Stmt([If([(Getattr(Getattr(Name('self'), 'field'), 'cache_choices'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('e'), 'errno'), [('!=', Getattr(Name('errno'), 'ENOENT'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'takes_context', 'args', 'kwargs', 'target_var'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_boundary', 'OP_ASSIGN')], Name('boundary'))]))
Module(None, Stmt([Return(CallFunc(Name('quote'), [CallFunc(Getattr(CallFunc(Name('force_bytes'), [Name('path')], None, None), 'replace'), [Const('\\'), Const('/')], None, None), Keyword('safe', Const("/~!*()'"))], None, None))]))
Module(None, Stmt([Assign([AssName('j', 'OP_ASSIGN')], Power((Const(36), Name('factor'))))]))
try :
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'loopvars', 'OP_ASSIGN'), AssAttr(Name('self'), 'sequence', 'OP_ASSIGN')])], Tuple([Name('loopvars'), Name('sequence')]))]))
Module(None, Stmt([Assign([Subscript(Name('extra_params'), 'OP_ASSIGN', [Const('primary_key')])], Name('True'))]))
try :
finally :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('orig_vars'), 'pop'), [Const('__weakref__'), Name('None')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('all_files'), 'append'), [CallFunc(Name('TranslatableFile'), [Name('dirpath'), Name('filename'), Name('locale_dir')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('common_prefix', 'OP_ASSIGN')], Name('prefix'))]))
Module(None, Stmt([For(AssTuple([AssName('accessor_name', 'OP_ASSIGN'), AssName('object_list', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('self'), 'm2m_data'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.forms.widgets', [('HiddenInput', None)], 0)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'number'), [('==', Getattr(Getattr(Name('self'), 'paginator'), 'num_pages'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('options'), 'get'), [Const('no_color')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('cgi', None)])]))
try :
Module(None, Stmt([Assign([AssName('encoding', 'OP_ASSIGN')], Or([Getattr(Name('self'), 'encoding'), Getattr(Name('settings'), 'DEFAULT_CHARSET')]))]))
try :
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('number')])], Name('number'))]))
Module(None, Stmt([If([(Compare(Name('check'), [('not in', Getattr(Name('self'), 'registered_checks'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Subscript(Getattr(Name('sys'), 'modules'), 'OP_APPLY', [Name('name')]))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'ignore'), Compare(Name('field_name'), [('not in', Name('model_fields'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('output_transaction', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('hextets', 'OP_ASSIGN')], CallFunc(Getattr(Name('ip_str'), 'split'), [Const(':')], None, None))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Const('\n'), 'join'), [Name('inputs')], None, None)], None, None))]))
except InputStreamExhausted :
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Mod((Const('%s<li>%s%s</li>'), Tuple([Name('indent'), CallFunc(Name('escaper'), [CallFunc(Name('force_text'), [Name('title')], None, None)], None, None), Name('sublist')])))], None, None))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('NoArgsCommand'), Name('self')], None, None), '__init__'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'dup2'), [CallFunc(Getattr(Name('si'), 'fileno'), [], None, None), CallFunc(Getattr(Getattr(Name('sys'), 'stdin'), 'fileno'), [], None, None)], None, None))]))
Module(None, Stmt([If([(And([Getattr(Name('field'), 'rel'), CallFunc(Name('isinstance'), [Getattr(Name('field'), 'rel'), Getattr(Name('models'), 'ManyToManyRel')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [CallFunc(Getattr(Getattr(Name('self'), 'style'), 'NOTICE'), [Const("Run 'python manage.py migrate' to apply them.\n")], None, None)], None, None))]))
except KeyError :
Module(None, Stmt([Function(None, '__init__', ['self', 'streaming_content', 'args', 'kwargs'], [Tuple(())], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('param', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')])], Subscript(CallFunc(Name('list'), [CallFunc(Getattr(Name('six'), 'iteritems'), [Name('kwarg')], None, None)], None, None), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Return(Getattr(Name('self'), 'id'))]))
Module(None, Stmt([Class('IfParser', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'tag'), [Name('function_name'), Name('compile_func')], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'validators'), 'remove'), [Getattr(Name('self'), '_regex_validator')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('repr'), [Getattr(Name('self'), 'value')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'using', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('database')], None, None))]))
self . _exception_middleware . insert ( 0 , mw_instance . process_exception )
Module(None, Stmt([For(AssName('i', 'OP_ASSIGN'), CallFunc(Name('range'), [Const(0), CallFunc(Getattr(Name('self'), 'total_form_count'), [], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Const('()'), [('in', Name('config'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('ch'), [('in', Const('*?+'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('old_field_name', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('member'), 'isdir'), [], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(Yield(Mod((Const('from %s import models'), Getattr(Name('self'), 'db_module')))))]))
Module(None, Stmt([Return(Name('template'))]))
Module(None, Stmt([Assign([AssName('day', 'OP_ASSIGN')], CallFunc(Name('int'), [CallFunc(Getattr(Name('m'), 'group'), [Const('day')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'find_template_loader', ['loader'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('Extracting %s\n'), Name('filename')))], None, None))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('original_path', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('tmpdir'), Const('original')], None, None))]))
elif ch != 'P' :
Module(None, Stmt([Assign([AssName('buffer_', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Return(CallFunc(Name('getattr'), [Name('trans'), Name('real_name')], None, None))]))
Module(None, Stmt([If([(Name('id_'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('response'))]))
Module(None, Stmt([If([(Not(Name('data')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('DTDForbidden'), [Name('name'), Name('sysid'), Name('pubid')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('qs', 'OP_ASSIGN')], CallFunc(Getattr(Name('f'), 'value_from_object'), [Name('instance')], None, None))]))
Module(None, Stmt([Return(Compare(Name('item'), [('in', Getattr(Name('self'), 'dict'))]))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('path'), 'exists'), [Name('absolute_path')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('`MergeDict` is deprecated, use `dict.update()` instead.'), Name('RemovedInDjango19Warning'), Const(2)], None, None))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('sys'), 'modules'), 'OP_ASSIGN', [Add((Add((Name('__name__'), Const('.moves.'))), Getattr(Name('attr'), 'name')))])], Name('attr'))]))
else :
Module(None, Stmt([If([(CallFunc(Getattr(Name('imatch'), 'group'), [Const(2)], None, None), Stmt([Pass()]))], None)]))
except ImportError :
Module(None, Stmt([If([(Name('param'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('IPython.Shell', [('IPShell', None)], 0)]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], CallFunc(Name('_'), [Const('Ensure this value is less than or equal to %(limit_value)s.')], None, None))]))
Module(None, Stmt([If([(And([Name('auto_id'), Compare(Const('%s'), [('in', CallFunc(Name('smart_text'), [Name('auto_id')], None, None))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('min_value'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('logger'), 'propagate', 'OP_ASSIGN')], Name('propagate'))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('options'), 'get'), [Const('list'), Name('False')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.middleware.csrf', [('get_token', None)], 0)]))
Module(None, Stmt([Function(None, '_sanitize_ipv4_mapping', ['ip_str'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'fed', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None), ('CommandError', None)], 0)]))
Module(None, Stmt([AugAssign(Name('doy'), '+=', Const(1))]))
Module(None, Stmt([Assign([AssName('month', 'OP_ASSIGN')], Subscript(Name('months'), 'OP_APPLY', [Sub((Getattr(Name('date'), 'month'), Const(1)))]))]))
Module(None, Stmt([Assign([AssName('defaults', 'OP_ASSIGN')], CallFunc(Name('dict'), [Getattr(Name('defaults'), '__dict__')], None, Name('options')))]))
Module(None, Stmt([Return(Add((Name('time_str'), Const('-0000'))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_name'), [Name('project_name'), Const('project')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('stream'), 'unget'), [Slice(Name('chunk'), 'OP_APPLY', Add((Name('header_end'), Const(4))), None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'can_write'), 'release'), [], None, None))]))
Module(None, Stmt([AugAssign(Name('nesting'), '+=', Const(1))]))
Module(None, Stmt([Return(Name('check'))]))
Module(None, Stmt([Assign([AssName('args_check', 'OP_ASSIGN')], CallFunc(Name('staticmethod'), [Name('args_check')], None, None))]))
except Exception :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'chmod'), [Name('path'), Getattr(Name('stat'), 'S_IWRITE')], None, None))]))
try :
Module(None, Stmt([Raise(Name('ImportError'), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_non_form_errors', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'error_class'), [], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'regex', 'message', 'code', 'inverse_match', 'flags'], [Name('None'), Name('None'), Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
elif bytes < TB :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'attach'), [Name('filename'), Name('content'), Name('mimetype')], None, None))]))
except ImportError :
Module(None, Stmt([Class('SsiNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'save_new', ['self', 'form', 'commit'], [Name('True')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('Token', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('p', 'OP_ASSIGN')], CallFunc(Getattr(Name('language'), 'find'), [Const('-')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('tpl'), 'format'), [Getattr(Name('self'), 'name'), Getattr(Name('self'), 'sysid'), Getattr(Name('self'), 'pubid')], None, None))]))
Module(None, Stmt([If([(Compare(Name('count'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('obj_pk', 'OP_ASSIGN')], CallFunc(Getattr(Name('obj'), '_get_pk_val'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Getattr(Name('datetime'), 'time')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('url_fields', 'OP_ASSIGN')], CallFunc(Name('split_url'), [CallFunc(Name('urlunsplit'), [Name('url_fields')], None, None)], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'for' tag received an invalid argument: %s"), Getattr(Name('token'), 'contents')))], None, None), None, None)]))
else :
Module(None, Stmt([Function(None, 'initial_forms', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('app', 'OP_ASSIGN')], Getattr(Getattr(Name('model'), '_meta'), 'app_label'))]))
Module(None, Stmt([Assign([AssName('compare_to', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('var'), 'resolve'), [Name('context'), Name('True')], None, None), [ListCompFor(AssName('var', 'OP_ASSIGN'), Getattr(Name('self'), '_varlist'), [])]))]))
Module(None, Stmt([Assign([AssTuple([AssName('directories', 'OP_ASSIGN'), AssName('files', 'OP_ASSIGN')])], Tuple([List(()), List(())]))]))
try :
Module(None, Stmt([From('django.core.mail', [('get_connection', None)], 0)]))
Module(None, Stmt([For(AssName('cache_alias', 'OP_ASSIGN'), Getattr(Name('settings'), 'CACHES'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('number'), Name('int')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('value')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Const('No conflicts detected to merge.')], None, None))]))
Module(None, Stmt([Assign([AssName('data_set', 'OP_ASSIGN')], CallFunc(Name('set'), [GenExpr(GenExprInner(CallFunc(Name('force_text'), [Name('value')], None, None), [GenExprFor(AssName('value', 'OP_ASSIGN'), Name('data'), [])]))], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('parent'), Const('render')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], Add((Add((List([Const('msguniq')]), Getattr(Name('self'), 'msguniq_options'))), List([Name('potfile')]))))]))
Module(None, Stmt([Assign([AssName('raw_cookie', 'OP_ASSIGN')], CallFunc(Name('get_str_from_wsgi'), [Getattr(Name('self'), 'environ'), Const('HTTP_COOKIE'), Const('')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('s'), 'serialize'), [Name('queryset')], None, Name('options')))]))
Module(None, Stmt([Function(None, 'clear', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Assign([AssName('git_log', 'OP_ASSIGN')], CallFunc(Getattr(Name('subprocess'), 'Popen'), [Const('git log --pretty=format:%ct --quiet -1 HEAD'), Keyword('stdout', Getattr(Name('subprocess'), 'PIPE')), Keyword('stderr', Getattr(Name('subprocess'), 'PIPE')), Keyword('shell', Name('True')), Keyword('cwd', Name('repo_dir')), Keyword('universal_newlines', Name('True'))], None, None))]))
try :
Module(None, Stmt([If([(CallFunc(Name('has_bom'), [Name('po_path')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('StringIO', None)])]))
Module(None, Stmt([Function(None, 'content', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Return(Mod((Name('TEMPLATE_FRAGMENT_KEY_TEMPLATE'), Tuple([Name('fragment_name'), CallFunc(Getattr(Name('args'), 'hexdigest'), [], None, None)]))))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('source'), Name('NonCapture')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Slice(Name('args'), 'OP_ASSIGN', Const(1), Const(2))], ListComp(Mod((Const('"%s"'), Name('arg'))), [ListCompFor(AssName('arg', 'OP_ASSIGN'), CallFunc(Getattr(Subscript(Name('args'), 'OP_APPLY', [Const(1)]), 'split'), [Const(',')], None, None), [])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Mod((Const('SELECT cache_key FROM %s WHERE cache_key = %%s and expires > %%s'), Name('table'))), List([Name('key'), CallFunc(Getattr(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'ops'), 'value_to_db_datetime'), [Name('now')], None, None)])], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('field_params'), 'OP_ASSIGN', [Const('db_column')])], Name('col_name'))]))
Module(None, Stmt([Assign([AssName('chunk_size', 'OP_ASSIGN')], Getattr(Name('self'), 'DEFAULT_CHUNK_SIZE'))]))
elif piece :
Module(None, Stmt([Function(None, 'create_variable_node', ['self', 'filter_expression'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([AugAssign(Name('num'), '+=', Const(1))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('slots'), Name('str')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('token'), 'token_type'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'forms'), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('base', 'OP_ASSIGN'), CallFunc(Name('reversed'), [Getattr(Name('new_class'), '__mro__')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('dec'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('migration_name'), Keyword('help', Const('Migration name to print the SQL for.'))], None, None))]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'TEMPLATE_DEBUG'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'from_current_timezone', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('widget'), 'id_for_label'), [Name('id_')], None, None))]))
except Exception as e :
Module(None, Stmt([Return(Name('attrs'))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Name('errors')], None, None), None, None)]))
Module(None, Stmt([Return(CallFunc(Name('number_format'), [Name('value'), Keyword('use_l10n', Name('use_l10n'))], None, None))]))
Module(None, Stmt([Function(None, '__hash__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([If([(Name('bit'), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([AugAssign(Name('new_name'), '+=', Const('_field'))]))
else :
Module(None, Stmt([Class('ImmutableList', [Name('tuple')], None, Stmt([Pass()]), None)]))
try :
try :
Module(None, Stmt([If([(Compare(Name('end'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Tuple([Name('template'), Name('None')]))]))
Module(None, Stmt([Function(None, 'management_form', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of Widget must provide a render() method')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('statements', 'OP_ASSIGN')], CallFunc(Name('sql_all'), [Name('app_config'), Getattr(Name('self'), 'style'), Name('connection')], None, None))]))
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], Name('file_name'))]))
Module(None, Stmt([Assign([AssName('replaces', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([If([(Not(Name('cls')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--dry-run'), Keyword('action', Const('store_true')), Keyword('dest', Const('dry_run')), Keyword('default', Name('False')), Keyword('help', Const("Just show what migrations would be made; don't actually write them."))], None, None))]))
Module(None, Stmt([If([(And([CallFunc(Name('hasattr'), [Name('value'), Const('__iter__')], None, None), Not(CallFunc(Name('isinstance'), [Name('value'), Getattr(Name('six'), 'text_type')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Getattr(Name('six'), 'PY3'), CallFunc(Name('isinstance'), [Name('val1'), Name('bytes')], None, None), CallFunc(Name('isinstance'), [Name('val2'), Name('bytes')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Subscript(Getattr(Name('sys'), 'version_info'), 'OP_APPLY', [Const(1)]), [('<=', Const(1))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Return(CallFunc(Getattr(Name('formats'), 'time_format'), [Name('value'), Name('arg')], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('SortedDict'), Name('self')], None, None), 'popitem'), [], None, None))]))
Module(None, Stmt([Assign([AssName('dirs', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('basedir'), Name('l'), Const('LC_MESSAGES')], None, None), [ListCompFor(AssName('l', 'OP_ASSIGN'), Name('locales'), [])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('SortedDict is deprecated and will be removed in Django 1.9.'), Name('RemovedInDjango19Warning'), Keyword('stacklevel', Const(2))], None, None))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([For(AssTuple([AssName('state', 'OP_ASSIGN'), AssName('rules', 'OP_ASSIGN')]), CallFunc(Getattr(Name('states'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('stream_or_string'), Name('bytes')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('subcommand_cls'), 'use_argparse'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('possible_sizes', 'OP_ASSIGN')], ListComp(Getattr(Name('x'), 'chunk_size'), [ListCompFor(AssName('x', 'OP_ASSIGN'), Name('upload_handlers'), [ListCompIf(Getattr(Name('x'), 'chunk_size'))])]))]))
Module(None, Stmt([Function(None, 'build_instance', ['Model', 'data', 'db'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Return(Mod((Const('<Block Node: %s. Contents: %r>'), Tuple([Getattr(Name('self'), 'name'), Getattr(Name('self'), 'nodelist')]))))]))
Module(None, Stmt([Assign([AssName('values', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'sequence'), 'resolve'), [Name('context'), Name('True')], None, None))]))
Module(None, Stmt([If([(And([Name('submod'), Not(CallFunc(Name('module_has_submodule'), [CallFunc(Name('import_module'), [Name('parentmod')], None, None), Name('submod')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(Name('ImportError'), None, None)]))
except zlib . error as e :
else :
Module(None, Stmt([Assign([AssName('end', 'OP_ASSIGN')], Name('index'))]))
Module(None, Stmt([Function(None, 'validate', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Function(None, 'widget_attrs', ['self', 'widget'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('jan1_weekday'), [('>', Const(4))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('format'), [('not in', Name('_serializers'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'file_path', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('file_path')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('SimpleTemplateResponse'), Name('self')], None, None), '__init__'), [Const(''), Name('content_type'), Name('status')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('map'), [Name('force_text'), Name('value')], None, None))]))
Module(None, Stmt([If([(Compare(Name('doublecolon_start'), [('==', UnarySub(Const(1)))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'value_from_datadict', ['self', 'data', 'files', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'chdir'), [Name('our_home_dir')], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Name('cache_get'), [Name('key'), Name('root')], None, None))]))
Module(None, Stmt([Assign([AssName('seconds', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'Z'), [], None, None))]))
except KeyError :
Module(None, Stmt([Assign([AssAttr(Name('_prefixes'), 'value', 'OP_ASSIGN')], Name('prefix'))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Function(None, 'total_error_count', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([For(AssName('migration', 'OP_ASSIGN'), Name('migrations_to_squash'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(Name('bits')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('basetype', 'OP_ASSIGN'), AssName('subtype', 'OP_ASSIGN')])], CallFunc(Getattr(Name('mimetype'), 'split'), [Const('/'), Const(1)], None, None))]))
Module(None, Stmt([Function(None, 'Deserializer', ['stream_or_string', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('ugettext', 'OP_ASSIGN')], Name('gettext'))]))
Module(None, Stmt([Assign([AssName('meta', 'OP_ASSIGN')], CallFunc(Name('type'), [CallFunc(Name('str'), [Const('Meta')], None, None), Tuple([Name('object')]), Dict(())], None, None))]))
Module(None, Stmt([If([(Name('to_lower'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([CallFunc(Name('hasattr'), [Name('response'), Const('render')], None, None), CallFunc(Name('callable'), [Getattr(Name('response'), 'render')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('There is no system check with the "%s" tag.'), Name('invalid_tag')))], None, None), None, None)]))
Module(None, Stmt([Raise(CallFunc(Name('KeyError'), [Name('key')], None, None), None, None)]))
Module(None, Stmt([If([(And([Name('error_messages'), Compare(Getattr(Name('f'), 'name'), [('in', Name('error_messages'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('BaseEmailBackend', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Mod((Name('candidate_pat'), Name('candidate_subs'))))]))
Module(None, Stmt([Return(Mod((Const('{%s}'), CallFunc(Getattr(Const(', '), 'join'), [GenExpr(GenExprInner(Mod((Const('%r: %r'), Tuple([Name('k'), Name('v')]))), [GenExprFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('six'), 'iteritems'), [Name('self')], None, None), [])]))], None, None))))]))
try :
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Function(None, 'lazy', ['func', 'resultclasses'], [], 4, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.translation', [('ugettext', None), ('ungettext', None)], 0)]))
Module(None, Stmt([Assign([AssName('choices', 'OP_ASSIGN')], Tuple([Tuple([Const('1'), CallFunc(Name('ugettext_lazy'), [Const('Unknown')], None, None)]), Tuple([Const('2'), CallFunc(Name('ugettext_lazy'), [Const('Yes')], None, None)]), Tuple([Const('3'), CallFunc(Name('ugettext_lazy'), [Const('No')], None, None)])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('existing'), 'remove'), [Name('name')], None, None))]))
Module(None, Stmt([Assign([AssName('safe', 'OP_ASSIGN')], CallFunc(Name('isinstance'), [Name('value'), Name('SafeData')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('start_response'), [CallFunc(Name('force_str'), [Name('status')], None, None), Name('response_headers')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'table'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'add_error', ['self', 'field', 'error'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.functional', [('cached_property', None)], 0)]))
Module(None, Stmt([From('django.core.mail', [('get_connection', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'addr', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Getattr(Name('token'), 'split_contents'), [], None, None))]))
Module(None, Stmt([Function(None, '__copy__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'verbose_name_plural', 'OP_ASSIGN')], Const('cache entries'))]))
Module(None, Stmt([If([(Name('not_installed_models'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'end_serialization', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('proxy'))]))
try :
Module(None, Stmt([Return(Getattr(Name('self'), '_choices'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Deserializer'), Name('self')], None, None), '__init__'), [Name('stream_or_string')], None, Name('options')))]))
Module(None, Stmt([Return(Name('inner'))]))
Module(None, Stmt([Assign([AssName('additional_headers', 'OP_ASSIGN')], ListComp(Name('newheader'), [ListCompFor(AssName('newheader', 'OP_ASSIGN'), Name('newheaders'), [ListCompIf(Compare(CallFunc(Getattr(Name('newheader'), 'lower'), [], None, None), [('not in', Name('existing_headers'))]))])]))]))
Module(None, Stmt([If([(Compare(Name('last'), [('==', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('migration'), 'replaces'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Name('method'), [Name('self')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('xreadlines', 'OP_ASSIGN')], CallFunc(Name('property'), [Lambda(['self'], [], 0, Getattr(Getattr(Name('self'), 'file'), 'xreadlines'))], None, None))]))
Module(None, Stmt([Assign([AssName('prec', 'OP_ASSIGN')], Add((Add((CallFunc(Name('abs'), [Name('p')], None, None), Name('units'))), Const(1))))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('unicodedata'), 'combining'), [Name('char')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('ns_pattern', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([From('django.utils.encoding', [('iri_to_uri', None), ('force_bytes', None), ('force_text', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('p'), [('>=', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('all_models', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Import([('time', '_time')])]))
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Getattr(Getattr(Name('self'), 'field'), 'widget'))]))
Module(None, Stmt([Function(None, 'send_messages', ['self', 'email_messages'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('safe_data'), 'OP_ASSIGN', [Name('key')])], Name('value'))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('potfile')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'm2m_data', 'OP_ASSIGN')], Name('m2m_data'))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('required')]), Keyword('code', Const('required'))], None, None), None, None)]))
self . widgets = [ w ( ) if isinstance ( w , type ) else w for w in widgets ]
Module(None, Stmt([Return(Subscript(Name('ip_address_validator_map'), 'OP_APPLY', [CallFunc(Getattr(Name('protocol'), 'lower'), [], None, None)]))]))
Module(None, Stmt([Assign([AssTuple([AssName('dir_name', 'OP_ASSIGN'), AssName('file_name', 'OP_ASSIGN')])], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'split'), [Name('name')], None, None))]))
Module(None, Stmt([From('django.utils.formats', [('localize', None)], 0)]))
Module(None, Stmt([Pass()]))
else :
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('self'), Name('real_name'), CallFunc(Name('getattr'), [Name('trans'), Name('real_name')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_encoding', 'OP_ASSIGN')], Name('value'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'handle_starttag'), [Name('tag'), Name('attrs')], None, None))]))
Module(None, Stmt([Function(None, 'parse_name', ['self', 'fixture_name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('headerlist'), 'append'), [Add((Const('HTTP_'), Name('header')))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_option'), [Const('--no-color'), Keyword('action', Const('store_true')), Keyword('dest', Const('no_color')), Keyword('default', Name('False')), Keyword('help', Const("Don't colorize the command output."))], None, None))]))
Module(None, Stmt([Return(Name('dec'))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('url'), 'startswith'), [Const('///')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(Name('bytes')), Stmt([Pass()]))], None)]))
except VariableDoesNotExist :
Module(None, Stmt([Function(None, 'back', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Assign([AssName('__D2', 'OP_ASSIGN')], Const('(?P<day>[ \\d]\\d)'))]))
Module(None, Stmt([If([(Not(Name('chunk_size')), Stmt([Pass()]))], None)]))
if hasattr ( mw_instance , 'process_exception' ) :
Module(None, Stmt([Return(Getattr(Name('self'), '_callback'))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([For(AssName('renamed_method', 'OP_ASSIGN'), Getattr(Name('cls'), 'renamed_methods'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Const('-'), [('not in', Name('lang_code'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('url', 'OP_ASSIGN')], CallFunc(Name('reverse'), [Name('view_name'), Keyword('args', Name('args')), Keyword('kwargs', Name('kwargs')), Keyword('current_app', Getattr(Name('context'), 'current_app'))], None, None))]))
Module(None, Stmt([Assign([AssName('fks_to_parent', 'OP_ASSIGN')], ListComp(Name('f'), [ListCompFor(AssName('f', 'OP_ASSIGN'), Getattr(Name('opts'), 'fields'), [ListCompIf(And([CallFunc(Name('isinstance'), [Name('f'), Name('ForeignKey')], None, None), Or([Compare(Getattr(Getattr(Name('f'), 'rel'), 'to'), [('==', Name('parent_model'))]), Compare(Getattr(Getattr(Name('f'), 'rel'), 'to'), [('in', CallFunc(Getattr(Getattr(Name('parent_model'), '_meta'), 'get_parent_list'), [], None, None))])])]))])]))]))
Module(None, Stmt([Assign([AssName('_urllib_robotparser_moved_attributes', 'OP_ASSIGN')], List([CallFunc(Name('MovedAttribute'), [Const('RobotFileParser'), Const('robotparser'), Const('urllib.robotparser')], None, None)]))]))
Module(None, Stmt([Assign([AssName('DOTS', 'OP_ASSIGN')], List([Const('&middot;'), Const('*'), Const('\\u2022'), Const('&#149;'), Const('&bull;'), Const('&#8226;')]))]))
Module(None, Stmt([If([(Compare(Add((Name('i'), Const(1))), [('<', CallFunc(Name('len'), [Name('chunks')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'proxy', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Return(CallFunc(Name('TemplateTagNode'), [Name('tag')], None, None))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([With(CallFunc(Getattr(Getattr(Name('self'), '_lock'), 'writer'), [], None, None), None, Stmt([Pass()]))]))
elif not isinstance ( end , str ) :
Module(None, Stmt([Function(None, 'decode', ['self', 's'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(ListComp(Getattr(Name('form'), 'cleaned_data'), [ListCompFor(AssName('form', 'OP_ASSIGN'), Getattr(Name('self'), 'forms'), [])]))]))
Module(None, Stmt([If([(Compare(Name('m'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('posixpath', None)])]))
remaining = self . _remaining if size is None else size
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('dig2'), 'update'), [CallFunc(Getattr(Name('dig1'), 'digest'), [], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], ListComp(CallFunc(Name('conditional_escape'), [Name('v')], None, None), [ListCompFor(AssName('v', 'OP_ASSIGN'), Name('value'), [])]))]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None), ('CommandError', None), ('CommandParser', None), ('handle_default_options', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Name('force_bytes'), [Name('s'), Name('encoding'), Name('strings_only'), Name('errors')], None, None))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'cache_key'), [Name('name'), Name('dirs')], None, None))]))
Module(None, Stmt([Return(Name('new_class'))]))
Module(None, Stmt([Assign([AssName('base64d', 'OP_ASSIGN')], CallFunc(Name('b64_encode'), [Name('data')], None, None))]))
Module(None, Stmt([AugAssign(Name('objects_in_fixture'), '+=', Const(1))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('base'), 'DeserializedObject'), [Name('obj'), Name('m2m_data')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Const("second argument to 'regroup' tag must be 'by'")], None, None), None, None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('hmac'), 'compare_digest'), [CallFunc(Name('force_bytes'), [Name('val1')], None, None), CallFunc(Name('force_bytes'), [Name('val2')], None, None)], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('self'), 'validate_domain_part'), [Name('domain_part')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'add_item_elements'), [Name('handler'), Name('item')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_option'), [Name('opt')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stream'), 'flush'), [], None, None))]))
Module(None, Stmt([Printnl([Name('opt_label')], None)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Name('force_text'), [CallFunc(Name('unquote_plus'), [CallFunc(Name('force_str'), [Name('quoted_url')], None, None)], None, None)], None, None))]))
else :
Module(None, Stmt([Function(None, 'blankout', ['src', 'char'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('ext_list'), 'OP_ASSIGN', [Name('i')])], Mod((Const('.%s'), Subscript(Name('ext_list'), 'OP_APPLY', [Name('i')]))))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('TimeField'), Name('self')], None, None), 'to_python'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('valid_forms', 'OP_ASSIGN')], ListComp(Name('form'), [ListCompFor(AssName('form', 'OP_ASSIGN'), Getattr(Name('self'), 'forms'), [ListCompIf(And([CallFunc(Getattr(Name('form'), 'is_valid'), [], None, None), Compare(Name('form'), [('not in', Name('forms_to_delete'))])]))])]))]))
@ property
Module(None, Stmt([Assign([AssName('values', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('DateTimeBaseInput'), Name('self')], None, None), '__init__'), [Name('attrs')], None, None))]))
Module(None, Stmt([Function(None, 'add_move', ['move'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('pk', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'data'), 'OP_APPLY', [Name('pk_key')]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'file', 'OP_ASSIGN')], Name('file'))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Function(None, 'extend_nodelist', ['self', 'nodelist', 'node', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([AugAssign(Name('message'), '%=', Getattr(Name('error'), 'params'))]))
except Exception as e :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'delete'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Assign([AssName('db', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'pop'), [Const('using'), Name('DEFAULT_DB_ALIAS')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'months', 'OP_ASSIGN')], Name('MONTHS'))]))
Module(None, Stmt([If([(Not(Name('value')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('content_length', 'OP_ASSIGN')], CallFunc(Name('int'), [Subscript(CallFunc(Getattr(Name('meta_data'), 'get'), [Const('content-length')], None, None), 'OP_APPLY', [Const(0)])], None, None))]))
elif auto_id :
finally :
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('digits'), 'append'), [Const('0')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'mode', 'OP_ASSIGN')], Getattr(Name('file'), 'mode'))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('errors happened while running msgattrib\n%s'), Name('errors')))], None, None), None, None)]))
Module(None, Stmt([Class('TemporaryFileUploadHandler', [Name('FileUploadHandler')], None, Stmt([Pass()]), None)]))
except LookupError :
Module(None, Stmt([Function(None, 'n', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('absolute_max', 'OP_ASSIGN')], Add((Name('max_num'), Name('DEFAULT_MAX_NUM'))))]))
Module(None, Stmt([Assign([AssName('pop_context', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'name', 'old', 'new'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('memo'), 'OP_ASSIGN', [CallFunc(Name('id'), [Name('self')], None, None)])], Name('self'))]))
Module(None, Stmt([Import([('sys', None)])]))
try :
Module(None, Stmt([Assign([AssName('k', 'OP_ASSIGN')], CallFunc(Name('force_bytes'), [Name('k'), Getattr(Name('self'), 'encoding')], None, None))]))
Module(None, Stmt([Return(Name('exclude'))]))
meta = ( pformat ( META_override )  if META_override is not None  else pformat ( request . META ) )
Module(None, Stmt([From('django.utils.encoding', [('force_str', None), ('force_text', None)], 0)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'to_field'), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('node', 'OP_ASSIGN'), Getattr(Name('self'), 'nodelist'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('name'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('ChoiceField'), Name('self')], None, None), '__deepcopy__'), [Name('memo')], None, None))]))
Module(None, Stmt([For(AssName('dirname', 'OP_ASSIGN'), Slice(Name('dirnames'), 'OP_APPLY', None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('loaded_objects_in_fixture', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('_time'), 'daylight'), Stmt([Pass()]))], None)]))
finally :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_load_post_and_files'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('len'), [Name('tablenames')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('pickle', None)])]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'can_import_settings')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('accept', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('request'), 'META'), 'get'), [Const('HTTP_ACCEPT_LANGUAGE'), Const('')], None, None))]))
Module(None, Stmt([If([(Or([CallFunc(Name('isinstance'), [Name('pk'), Name('OneToOneField')], None, None), CallFunc(Name('isinstance'), [Name('pk'), Name('ForeignKey')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('urlconf_repr', 'OP_ASSIGN')], CallFunc(Name('repr'), [Getattr(Name('self'), 'urlconf_name')], None, None))]))
Module(None, Stmt([Function(None, 'make_style', ['opts', 'kwargs'], [Tuple(())], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('namespaces'), 'OP_ASSIGN', [Getattr(Name('pattern'), 'namespace')])], Tuple([Name('p_pattern'), Name('pattern')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Getattr(Name('models'), 'signals'), 'post_syncdb'), 'send'), [Keyword('sender', Getattr(Name('app_config'), 'models_module')), Keyword('app', Getattr(Name('app_config'), 'models_module')), Keyword('created_models', Name('created_models')), Keyword('verbosity', Name('verbosity')), Keyword('interactive', Name('interactive')), Keyword('db', Name('db'))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'orphans', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('orphans')], None, None))]))
Module(None, Stmt([For(AssName('alternative', 'OP_ASSIGN'), Getattr(Name('self'), 'alternatives'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'level', 'OP_ASSIGN')], Name('level'))]))
Module(None, Stmt([Assign([AssName('view', 'OP_ASSIGN')], CallFunc(CallFunc(Getattr(Name('transaction'), 'atomic'), [Keyword('using', Getattr(Name('db'), 'alias'))], None, None), [Name('view')], None, None))]))
Module(None, Stmt([For(AssName('f', 'OP_ASSIGN'), CallFunc(Name('sorted'), [Add((Add((Getattr(Name('opts'), 'concrete_fields'), Name('sortable_virtual_fields'))), Getattr(Name('opts'), 'many_to_many')))], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'smart_urlquote', ['url'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('builtins'), 'append'), [CallFunc(Name('import_library'), [Name('module')], None, None)], None, None))]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None)], 0)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Class('NonCapture', [Name('list')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_func_path', 'OP_ASSIGN')], CallFunc(Getattr(Const('.'), 'join'), [List([Getattr(Getattr(Name('func'), '__class__'), '__module__'), Getattr(Getattr(Name('func'), '__class__'), '__name__')])], None, None))]))
else :
Module(None, Stmt([If([(Compare(Name('value'), [('in', Tuple([Name('None'), Const('')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('importlib', None)])]))
Module(None, Stmt([Assign([AssName('checks', 'OP_ASSIGN')], Getattr(Name('self'), 'registered_checks'))]))
Module(None, Stmt([Function(None, 'allow_lazy', ['func', 'resultclasses'], [], 4, None, Stmt([Pass()]))]))
