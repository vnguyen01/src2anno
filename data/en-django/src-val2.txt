Module(None, Stmt([If([(Not(Getattr(Name('e'), 'connection_reset')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'attachments'), 'append'), [Name('filename')], None, None))]))
@ register . filter ( is_safe = True )
Module(None, Stmt([Assign([AssName('d', 'OP_ASSIGN')], Subscript(Name('d'), 'OP_APPLY', [Name('idx')]))]))
Module(None, Stmt([Assign([AssName('_dict', 'OP_ASSIGN')], CallFunc(Name('func'), [], Name('resolved_args'), Name('resolved_kwargs')))]))
Module(None, Stmt([If([(Getattr(Name('self'), '_leftover'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Subscript(Getattr(Getattr(Name('self'), '_caches'), 'caches'), 'OP_APPLY', [Name('alias')]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('message_context', 'OP_ASSIGN')], CallFunc(Getattr(Name('context_match'), 'group'), [Const(1)], None, None))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Returns a list of the SQL statements required to return all tables in the database to the state they were in just after they were installed.'))]))
Module(None, Stmt([Assign([AssName('numbers', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('MigrationAutodetector'), 'parse_number'), [Getattr(Name('migration'), 'name')], None, None), [ListCompFor(AssName('migration', 'OP_ASSIGN'), Name('merge_migrations'), [])]))]))
Module(None, Stmt([Function(None, 'render', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('words')], None, None), [('>', Name('length'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'required')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'reader_leaves'), [], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('dig1', 'OP_ASSIGN'), AssName('dig2', 'OP_ASSIGN')])], Tuple([CallFunc(Getattr(Name('inner'), 'copy'), [], None, None), CallFunc(Getattr(Name('outer'), 'copy'), [], None, None)]))]))
Module(None, Stmt([Function(None, '_findall', ['text', 'substr'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('app_config'), 'models_module'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('_cached_filenames'))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '_namespace_dict'), 'OP_ASSIGN', [Name('language_code')])], Name('namespaces'))]))
Module(None, Stmt([From('django.utils.http', [('http_date', None)], 0)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Class('Loader', [Name('BaseLoader')], None, Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Assign([AssName('acceptable_endblocks', 'OP_ASSIGN')], Tuple([Const('endblock'), Mod((Const('endblock %s'), Name('block_name')))]))]))
Module(None, Stmt([Function(None, 'display', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'convert_old_style_list', ['list_'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssName('dirs', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'max_value', 'min_value', 'max_digits', 'decimal_places', 'args', 'kwargs'], [Name('None'), Name('None'), Name('None'), Name('None')], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('result'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('dirname', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'dirname'), [Name('filename')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'domain', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('domain')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Getattr(Name('self'), 'instance'), 'pk'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('\n'), 'join'), [Name('usage')], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('self'), '_iteritems'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'characters'), [Name('contents')], None, None))]))
Module(None, Stmt([Assign([AssName('base', 'OP_ASSIGN')], Getattr(Name('sup_cls'), 'media'))]))
Module(None, Stmt([From('django.utils', [('formats', None)], 0)]))
elif bytes < GB :
Module(None, Stmt([Return(CallFunc(Name('bytes'), [Tuple([Name('i')])], None, None))]))
Module(None, Stmt([Assign([AssName('attrs', 'OP_ASSIGN')], Dict([(Const('form'), Name('form')), (Const('extra'), Name('extra')), (Const('can_order'), Name('can_order')), (Const('can_delete'), Name('can_delete')), (Const('min_num'), Name('min_num')), (Const('max_num'), Name('max_num')), (Const('absolute_max'), Name('absolute_max')), (Const('validate_min'), Name('validate_min')), (Const('validate_max'), Name('validate_max'))]))]))
Module(None, Stmt([Assign([AssName('created_models', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([For(AssName('node', 'OP_ASSIGN'), Getattr(Name('compiled_parent'), 'nodelist'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('sys'), 'stderr'), 'write'), [Mod((Const('ERROR: %s\n'), Name('e')))], None, None))]))
Module(None, Stmt([Assign([AssName('po_path', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('dirpath'), Name('f')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('settings'), 'is_overridden'), [Const('ADMINS')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('key'), [('in', Name('dict_'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('args', 'OP_ASSIGN'), AssName('varargs', 'OP_ASSIGN'), AssName('varkw', 'OP_ASSIGN'), AssName('defaults', 'OP_ASSIGN')])], CallFunc(Name('getargspec'), [Name('func')], None, None))]))
except UnicodeDecodeError :
Module(None, Stmt([Assign([AssName('text_value', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('value')], None, None))]))
Module(None, Stmt([From('django.utils.encoding', [('force_str', None)], 0)]))
Module(None, Stmt([Return(Add((Add((Name('sign'), Name('int_part'))), Name('dec_part'))))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, 'valid_ident', ['s'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('BaseInlineFormSet'), Name('self')], None, None), 'initial_form_count'), [], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('self'), 'OP_ASSIGN', [Name('k')])], Name('v'))]))
Module(None, Stmt([Assign([AssName('filename', 'OP_ASSIGN')], Add((Slice(Name('filename'), 'OP_APPLY', None, UnarySub(Const(9))), Const('.py'))))]))
Module(None, Stmt([Assign([AssName('new_path', 'OP_ASSIGN')], Slice(Name('path'), 'OP_APPLY', CallFunc(Getattr(Name('match'), 'end'), [], None, None), None))]))
elif g [ 0 ] == "'" :
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([If([(And([Not(Name('ext')), Name('content_type')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('zfile'), 'close'), [], None, None))]))
Module(None, Stmt([Assign([AssName('utility', 'OP_ASSIGN')], CallFunc(Name('ManagementUtility'), [Name('argv')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'new_method_name', 'OP_ASSIGN')], Name('new_method_name'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Function(None, 'id_for_label', ['self', 'id_'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('BUILTIN_SERIALIZERS', 'OP_ASSIGN')], Dict([(Const('xml'), Const('django.core.serializers.xml_serializer')), (Const('python'), Const('django.core.serializers.python')), (Const('json'), Const('django.core.serializers.json')), (Const('yaml'), Const('django.core.serializers.pyyaml'))]))]))
Module(None, Stmt([Assign([AssName('slug_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^[-a-zA-Z0-9_]+$')], None, None))]))
Module(None, Stmt([Function(None, 'auto_id', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Not(CallFunc(Getattr(Name('self'), '_is_expired'), [Name('f')], None, None)))]))
Module(None, Stmt([From('django.forms.models', [('*', None)], 0)]))
Module(None, Stmt([Return(Name('new_value'))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_errors'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('safe')])], Name('safe'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'reason_phrase', 'OP_ASSIGN')], CallFunc(Getattr(Name('REASON_PHRASES'), 'get'), [Getattr(Name('self'), 'status_code'), Const('UNKNOWN STATUS CODE')], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('response'), 'has_header'), [Const('Cache-Control')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'cc', 'OP_ASSIGN')], CallFunc(Name('list'), [Name('cc')], None, None))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([If([(Compare(Subscript(Name('options'), 'OP_APPLY', [Const('verbosity')]), [('>', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'tagtype', 'OP_ASSIGN')], Name('tagtype'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'startElement'), [Const('object'), Name('attrs')], None, None))]))
Module(None, Stmt([From('django.core', [('serializers', None)], 0)]))
Module(None, Stmt([Assign([AssName('recipients', 'OP_ASSIGN')], ListComp(CallFunc(Name('sanitize_address'), [Name('addr'), Getattr(Name('email_message'), 'encoding')], None, None), [ListCompFor(AssName('addr', 'OP_ASSIGN'), CallFunc(Getattr(Name('email_message'), 'recipients'), [], None, None), [])]))]))
Module(None, Stmt([Assign([AssName('prefix', 'OP_ASSIGN')], Mod((Const('django_%s_template_'), Getattr(Name('self'), 'app_or_project'))))]))
Module(None, Stmt([If([(And([Compare(Const('/'), [('in', Name('path'))]), Or([And([Compare(Const('\\'), [('in', Name('path'))]), Compare(CallFunc(Getattr(Name('path'), 'find'), [Const('/')], None, None), [('<', CallFunc(Getattr(Name('path'), 'find'), [Const('\\')], None, None))])]), Compare(Const('\\'), [('not in', Name('path'))])])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([With(Name('lock'), None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'name', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([Assign([Slice(Name('hextets'), 'OP_ASSIGN', Name('best_doublecolon_start'), Name('best_doublecolon_end'))], List([Const('')]))]))
else :
Module(None, Stmt([Discard(CallFunc(Name('logging_config_func'), [Name('DEFAULT_LOGGING')], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('MultiValueField'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssAttr(Name('instance'), 'keyOrder', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(CallFunc(Name('urljoin'), [Getattr(Name('self'), 'base_url'), CallFunc(Name('filepath_to_uri'), [Name('name')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('curs'), 'execute'), [Name('statement')], None, None))]))
Module(None, Stmt([If([(Name('value'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], CallFunc(Name('ungettext_lazy'), [Const('Ensure this value has at least %(limit_value)d character (it has %(show_value)d).'), Const('Ensure this value has at least %(limit_value)d characters (it has %(show_value)d).'), Const('limit_value')], None, None))]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'TEMPLATE_DEBUG'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils._os', [('safe_join', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Name('getattr'), [Subscript(Name('caches'), 'OP_APPLY', [Name('DEFAULT_CACHE_ALIAS')]), Name('name')], None, None))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('logger'), 'removeHandler'), [Name('handler')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('str'), [Name('self')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Const('\n'), 'join'), [Name('output')], None, None)], None, None))]))
except signing . BadSignature :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--plain'), Keyword('action', Const('store_true')), Keyword('dest', Const('plain')), Keyword('help', Const('Tells Django to use plain Python, not IPython or bpython.'))], None, None))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'sysid', 'OP_ASSIGN')], Name('sysid'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--noinput'), Keyword('action', Const('store_false')), Keyword('dest', Const('interactive')), Keyword('default', Name('True')), Keyword('help', Const('Tells Django to NOT prompt the user for input of any kind.'))], None, None))]))
else :
Module(None, Stmt([Assign([AssName('common_prefix', 'OP_ASSIGN')], Name('None'))]))
else :
Module(None, Stmt([Class('TypedMultipleChoiceField', [Name('MultipleChoiceField')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssTuple([AssName('end', 'OP_ASSIGN'), AssName('next', 'OP_ASSIGN')])], Name('boundary'))]))
Module(None, Stmt([Assign([AssName('last', 'OP_ASSIGN')], CallFunc(Name('max'), [Const(0), Sub((Name('end'), Const(1)))], None, None))]))
Module(None, Stmt([For(AssName('widget', 'OP_ASSIGN'), CallFunc(Getattr(Name('self'), 'get_renderer'), [Name('name'), Name('value'), Name('attrs'), Name('choices')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'value', 'OP_ASSIGN')], Name('value'))]))
Module(None, Stmt([Return(Name('output'))]))
Module(None, Stmt([Assign([AssName('now', 'OP_ASSIGN')], CallFunc(Getattr(Name('timezone'), 'now'), [], None, None))]))
Module(None, Stmt([Assign([AssName('digit', 'OP_ASSIGN')], Mod((Name('x'), CallFunc(Name('len'), [Name('to_digits')], None, None))))]))
Module(None, Stmt([If([(Name('illegal_formatting'), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([If([(Compare(Name('opname'), [('not in', Name('roots'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('app_labels', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('app_labels')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('IfChangedNode'), [Name('nodelist_true'), Name('nodelist_false')], Name('values'), None))]))
Module(None, Stmt([Function(None, 'get_date_error_message', ['self', 'date_check'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Name('m')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('e'))]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('fields', 'OP_ASSIGN')], Add((CallFunc(Name('list'), [CallFunc(Getattr(Name('six'), 'iteritems'), [Getattr(Name('base'), 'base_fields')], None, None)], None, None), Name('fields'))))]))
Module(None, Stmt([Assign([AssName('default_error_messages', 'OP_ASSIGN')], Dict([(Const('invalid_image'), CallFunc(Name('_'), [Const('Upload a valid image. The file you uploaded was either not an image or a corrupted image.')], None, None))]))]))
else :
Module(None, Stmt([If([(And([Name('run_syncdb'), Getattr(Getattr(Name('executor'), 'loader'), 'unmigrated_apps')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('val', 'OP_ASSIGN'), AssName('encoded', 'OP_ASSIGN')])], CallFunc(Getattr(CallFunc(Name('super'), [Name('SimpleCookie'), Name('self')], None, None), 'value_encode'), [Name('val')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'remove_potfiles'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('logging'), 'captureWarnings'), [Name('True')], None, None))]))
Module(None, Stmt([Class('SafeBytes', [Name('bytes'), Name('SafeData')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('regex', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Name('regex'), Getattr(Name('re'), 'UNICODE')], None, None))]))
else :
Module(None, Stmt([Function(None, 'make_writeable', ['self', 'filename'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('ch'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('SafeMIMEMessage', [Name('MIMEMixin'), Name('MIMEMessage')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'items', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [Mod((Name('template'), Name('substitutions')))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('BaseCache'), '__init__'), [Name('self')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('WEEKDAYS_ABBR', 'OP_ASSIGN')], Dict([(Const(0), CallFunc(Name('_'), [Const('Mon')], None, None)), (Const(1), CallFunc(Name('_'), [Const('Tue')], None, None)), (Const(2), CallFunc(Name('_'), [Const('Wed')], None, None)), (Const(3), CallFunc(Name('_'), [Const('Thu')], None, None)), (Const(4), CallFunc(Name('_'), [Const('Fri')], None, None)), (Const(5), CallFunc(Name('_'), [Const('Sat')], None, None)), (Const(6), CallFunc(Name('_'), [Const('Sun')], None, None))]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const(''), 'join'), [Name('output')], None, None))]))
Module(None, Stmt([Assign([AssName('ULONG_PTR', 'OP_ASSIGN')], Name('c_ulong'))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("Incompatible values of 'leave_locale_alone' (%s) and 'can_import_settings' (%s) command options."), Tuple([Getattr(Name('self'), 'leave_locale_alone'), Getattr(Name('self'), 'can_import_settings')])))], None, None), None, None)]))
Module(None, Stmt([Class('Parser', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(And([Name('y'), Name('m'), Name('d')]), Stmt([Pass()]))], None)]))
if self . settings_exception is not None :
Module(None, Stmt([Assign([AssName('max_entries', 'OP_ASSIGN')], CallFunc(Getattr(Name('params'), 'get'), [Const('max_entries'), CallFunc(Getattr(Name('options'), 'get'), [Const('MAX_ENTRIES'), Const(300)], None, None)], None, None))]))
Module(None, Stmt([Return(Name('usage'))]))
Module(None, Stmt([Assign([AssName('fixture_dirs', 'OP_ASSIGN')], List([CallFunc(Getattr(Getattr(Name('os'), 'path'), 'dirname'), [Name('fixture_name')], None, None)]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('fp'), 'getvalue'), [], None, None))]))
Module(None, Stmt([If([(Compare(Name('regex'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'conditions_nodelists', 'OP_ASSIGN')], Name('conditions_nodelists'))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'merge'), Not(Name('conflicts'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('final_attrs', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'build_attrs'), [Name('attrs')], None, None))]))
Module(None, Stmt([Assign([AssName('basedirs', 'OP_ASSIGN')], List([CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Const('conf'), Const('locale')], None, None), Const('locale')]))]))
Module(None, Stmt([Assign([AssName('rendering_attrs', 'OP_ASSIGN')], List([Const('template_name'), Const('context_data'), Const('_post_render_callbacks')]))]))
@ content . setter
Module(None, Stmt([Assign([AssAttr(Name('self'), 'flo', 'OP_ASSIGN')], Name('flo'))]))
elif isinstance ( o , decimal . Decimal ) :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_meta', 'OP_ASSIGN')], Name('META'))]))
Module(None, Stmt([Class('RWLock', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([From('django.utils.encoding', [('smart_text', None), ('force_text', None)], 0)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([If([(And([Compare(Name('param'), [('not in', Name('params'))]), Compare(Name('varkw'), [('is', Name('None'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'extend_nodelist', ['self', 'nodelist', 'node', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'upath', ['path'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
reversed_text = ' reversed' if self . is_reversed else ''
Module(None, Stmt([If([(Compare(Getattr(Name('f'), 'name'), [('in', Name('cleaned_data'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('child_nodelists', 'OP_ASSIGN')], Tuple([Const('nodelist_true'), Const('nodelist_false')]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_pk_field'), [('==', Getattr(Name('self'), 'fk'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('BaseInlineFormSet'), Name('self')], None, None), '__init__'), [Name('data'), Name('files'), Keyword('prefix', Name('prefix')), Keyword('queryset', Name('qs'))], None, Name('kwargs')))]))
Module(None, Stmt([Function(None, 'write_message', ['self', 'message'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('data'), 'OP_ASSIGN', [Getattr(Name('field'), 'attname')])], Name('value'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'language'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'file'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('hidden_fields'), 'append'), [CallFunc(Getattr(Name('six'), 'text_type'), [Name('bf')], None, None)], None, None))]))
Module(None, Stmt([Class('SerializerDoesNotExist', [Name('KeyError')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('time_format'), [Name('value'), Name('arg')], None, None))]))
Module(None, Stmt([Assign([AssName('seen_models', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('connection'), 'introspection'), 'installed_models'), [Name('tables')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('new_name'), 'startswith'), [Const('_')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('month', 'OP_ASSIGN')], Add((CallFunc(Getattr(Name('MONTHS'), 'index'), [CallFunc(Getattr(CallFunc(Getattr(Name('m'), 'group'), [Const('mon')], None, None), 'lower'), [], None, None)], None, None), Const(1))))]))
Module(None, Stmt([Assign([AssName('created_models', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'sync_apps'), [Name('connection'), Getattr(Getattr(Name('executor'), 'loader'), 'unmigrated_apps')], None, None))]))
Module(None, Stmt([Function(None, 'getvalue', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--database'), Keyword('default', Name('DEFAULT_DB_ALIAS')), Keyword('help', Const('Nominates a database to print the SQL for. Defaults to the "default" database.'))], None, None))]))
Module(None, Stmt([If([(Name('PY3'), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Return(Subscript(Name('LANG_INFO'), 'OP_APPLY', [Name('lang_code')]))]))
except ( ValueError , TypeError ) :
Module(None, Stmt([Return(Getattr(Name('self'), 'new_objects'))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'namespaces', 'OP_ASSIGN')], ListComp(Name('x'), [ListCompFor(AssName('x', 'OP_ASSIGN'), Name('namespaces'), [ListCompIf(Name('x'))])]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'limit_value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'previous_page_number', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('first_item', 'OP_ASSIGN'), AssName('second_item', 'OP_ASSIGN')])], Name('list_'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('-v'), Const('--verbosity'), Keyword('action', Const('store')), Keyword('dest', Const('verbosity')), Keyword('default', Const('1')), Keyword('type', Name('int')), Keyword('choices', List([Const(0), Const(1), Const(2), Const(3)])), Keyword('help', Const('Verbosity level; 0=minimal output, 1=normal output, 2=verbose output, 3=very verbose output'))], None, None))]))
Module(None, Stmt([Assign([AssName('tok', 'OP_ASSIGN')], Subscript(Name('toks'), 'OP_APPLY', [Name('name')]))]))
Module(None, Stmt([Assign([AssName('cache_timeout', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Assign([AssName('cursor', 'OP_ASSIGN')], CallFunc(Getattr(Name('connection'), 'cursor'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_reset_dicts'), [Name('dict_')], None, None))]))
except ValueError :
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('s'), Getattr(Name('six'), 'string_types')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'get_digit', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
return localtime ( value ) if should_convert else value
Module(None, Stmt([Assign([Slice(Name('root'), 'OP_ASSIGN', None, None)], List([Name('root'), Name('root'), Name('None'), Name('None')]))]))
in_index = - 3 if is_reversed else - 2
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, '__nonzero__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [CallFunc(Getattr(Getattr(Name('self'), 'style'), 'NOTICE'), [Const("  Your models have changes that are not yet reflected in a migration, and so won't be applied.")], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], Add((Add((List([Getattr(Name('self'), 'program')]), Getattr(Name('self'), 'program_options'))), List([Const('-o'), CallFunc(Name('npath'), [Add((Name('base_path'), Const('.mo')))], None, None), CallFunc(Name('npath'), [Add((Name('base_path'), Const('.po')))], None, None)]))))]))
Module(None, Stmt([Raise(CallFunc(Name('SerializerDoesNotExist'), [Name('format')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('sign', 'OP_ASSIGN'), AssName('digits', 'OP_ASSIGN'), AssName('exponent', 'OP_ASSIGN')])], CallFunc(Getattr(CallFunc(Getattr(Name('d'), 'quantize'), [Name('exp'), Name('ROUND_HALF_UP'), CallFunc(Name('Context'), [Keyword('prec', Name('prec'))], None, None)], None, None), 'as_tuple'), [], None, None))]))
Module(None, Stmt([Return(Name('func'))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Name('StringIO'), [], None, None))]))
Module(None, Stmt([Class('MultiPartParser', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('A secure pseudo-random number generator is not available on your system. Falling back to Mersenne Twister.')], None, None))]))
try :
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], Getattr(Name('match'), 'lastgroup'))]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'initial_forms')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'%s' received some positional argument(s) after some keyword argument(s)"), Name('name')))], None, None), None, None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'stream', 'limit', 'buf_size'], [Mul((Mul((Const(64), Const(1024))), Const(1024)))], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('construct'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('self'), Const('error_dict')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('scheme', 'OP_ASSIGN'), AssName('netloc', 'OP_ASSIGN'), AssName('path', 'OP_ASSIGN'), AssName('query', 'OP_ASSIGN'), AssName('fragment', 'OP_ASSIGN')])], CallFunc(Name('urlsplit'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('num_loopvars', 'OP_ASSIGN')], CallFunc(Name('len'), [Getattr(Name('self'), 'loopvars')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Mod((CallFunc(Name('ungettext'), [Const('%(size)d byte'), Const('%(size)d bytes'), Const(0)], None, None), Dict([(Const('size'), Const(0))]))))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'represent_scalar'), [Const('tag:yaml.org,2002:str'), CallFunc(Name('str'), [Name('data')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('cur_lineno', 'OP_ASSIGN')], Add((Getattr(Name('t'), 'lineno'), CallFunc(Getattr(Getattr(Name('t'), 'contents'), 'count'), [Const('\n')], None, None))))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('\n\n'), 'join'), [Name('paras')], None, None))]))
Module(None, Stmt([Function(None, 'list', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('csrf_token'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'push', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssTuple([AssName('ch', 'OP_ASSIGN'), AssName('escaped', 'OP_ASSIGN')])], CallFunc(Name('next'), [Name('pattern_iter')], None, None))]))
Module(None, Stmt([Assign([AssName('form', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'form'), [Keyword('auto_id', Getattr(Name('self'), 'auto_id')), Keyword('prefix', CallFunc(Getattr(Name('self'), 'add_prefix'), [Const('__prefix__')], None, None)), Keyword('empty_permitted', Name('True'))], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('getattr'), [Name('ev'), Const('filename'), Name('None')], None, None), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Name('walk_to_end'), [Name('ch'), Name('pattern_iter')], None, None))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Compiles .po files to .mo files for use with builtin gettext support.'))]))
try :
else :
norm_patterns = [ p [ : - len ( dir_suffix ) ] if p . endswith ( dir_suffix ) else p for p in self . ignore_patterns ]
Module(None, Stmt([Return(CallFunc(Getattr(Const(''), 'join'), [Getattr(Name('self'), 'fed')], None, None))]))
Module(None, Stmt([Function(None, 'xreadlines', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'clear', ['self'], [], 0, None, Stmt([Pass()]))]))
finally :
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('base'), Name('new_method_name'), Name('old_method')], None, None))]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Mod((Const("No fixture data found for '%s'. (File format may be invalid.)"), Name('fixture_name'))), Name('RuntimeWarning')], None, None))]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_create_message'), [Name('msg')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('cache'), Name('BaseDatabaseCache')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('guts', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'sub'), [Const('\\\\.|.'), Name('escape_quotes'), Slice(Name('tok'), 'OP_APPLY', Const(1), UnarySub(Const(1)))], None, None))]))
Module(None, Stmt([Return(Const('StopUpload: Halt current upload.'))]))
Module(None, Stmt([Discard(CallFunc(CallFunc(Name('getattr'), [Name('combined'), Add((Const('add_'), Name('name')))], None, None), [CallFunc(Name('getattr'), [Name('other'), Add((Const('_'), Name('name'))), Name('None')], None, None)], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Name('e')], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'default_validators', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(Name('validators'), 'ip_address_validators'), [Name('protocol'), Name('unpack_ipv4')], None, None), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Assign([AssTuple([AssName('base', 'OP_ASSIGN'), AssName('ext', 'OP_ASSIGN')])], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'splitext'), [Name('base')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'conditions_nodelists'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'registered_checks'), 'append'), [Name('check')], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'append'), [CallFunc(Name('Group'), [Tuple([Mod((Const('%%(%s)s'), Name('param'))), Name('None')])], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_setup'), [], None, None))]))
handler . endElement ( "entry" )
Module(None, Stmt([Discard(CallFunc(Getattr(Name('logger'), 'warning'), [Const('Forbidden (Permission denied): %s'), Getattr(Name('request'), 'path'), Keyword('extra', Dict([(Const('status_code'), Const(403)), (Const('request'), Name('request'))]))], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const(''), 'join'), [Name('c')], None, None))]))
Module(None, Stmt([Function(None, 'is_silenced', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'options'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'write_po_file'), [Name('potfile'), Name('locale')], None, None))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'is_localized'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('j', 'OP_ASSIGN')], Add((Add((Name('day_of_year'), Sub((Const(7), Name('weekday'))))), Sub((Name('jan1_weekday'), Const(1))))))]))
Module(None, Stmt([Assert(Compare(CallFunc(Name('len'), [Name('version')], None, None), [('==', Const(5))]), None)]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'i'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(Yield(Const('#   * Make sure each model has one field with primary_key=True')))]))
Module(None, Stmt([Function(None, 'created_time', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__deepcopy__', ['self', 'memo'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([With(Getattr(Name('self'), 'mutex'), None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('ugettext_lazy'), [Name('value')], None, None))]))
try :
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('shutdown_message', 'OP_ASSIGN')], Mod((Const('\nServer stopped.\nNote that the test database, %r, has not been deleted. You can explore it on your own.'), Name('db_name'))))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('value'), 'replace'), [Const('\\\\'), Const('\\')], None, None), 'replace'), [Const('\\"'), Const('"')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('self'), '_isdst'), [Name('dt')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Getattr(Name('self'), 'token'))]))
Module(None, Stmt([Return(Name('output'))]))
Module(None, Stmt([For(AssName('format', 'OP_ASSIGN'), Getattr(Name('self'), 'input_formats'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([Subscript(Name('config'), 'OP_ASSIGN', [Const('fmt')])], CallFunc(Getattr(Name('config'), 'pop'), [Const('format')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('obj'), 'widgets', 'OP_ASSIGN')], CallFunc(Getattr(Name('copy'), 'deepcopy'), [Getattr(Name('self'), 'widgets')], None, None))]))
Module(None, Stmt([Function(None, 'catalog', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('__Y', 'OP_ASSIGN')], Const('(?P<year>\\d{4})'))]))
Module(None, Stmt([Return(Subscript(Tuple([Getattr(Name('self'), 'func'), Getattr(Name('self'), 'args'), Getattr(Name('self'), 'kwargs')]), 'OP_APPLY', [Name('index')]))]))
Module(None, Stmt([Assign([AssName('signed_value', 'OP_ASSIGN')], CallFunc(Name('force_str'), [Name('signed_value')], None, None))]))
Module(None, Stmt([Function(None, 'clean', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'old_timezone', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('_active'), Const('value'), Name('None')], None, None))]))
Module(None, Stmt([Class('HttpResponseRedirect', [Name('HttpResponseRedirectBase')], None, Stmt([Pass()]), None)]))
except ( ValueError , TypeError , OverflowError ) :
Module(None, Stmt([Function(None, 'tzname', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Subscript(Name('item'), 'OP_APPLY', [Const('ttl')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
except ImportError :
Module(None, Stmt([Assign([AssName('match', 'OP_ASSIGN')], Or([Compare(Name('pattern'), [('==', Const('*'))]), And([CallFunc(Getattr(Name('pattern'), 'startswith'), [Const('.')], None, None), Or([CallFunc(Getattr(Name('host'), 'endswith'), [Name('pattern')], None, None), Compare(Name('host'), [('==', Slice(Name('pattern'), 'OP_APPLY', Const(1), None))])])]), Compare(Name('pattern'), [('==', Name('host'))])]))]))
Module(None, Stmt([Return(Const('<WithNode>'))]))
Module(None, Stmt([Raise(CallFunc(Name('InvalidCacheBackendError'), [Mod((Const("Could not find backend '%s': %s"), Tuple([Name('backend'), Name('e')])))], None, None), None, None)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Class('_LazyModule', [Getattr(Name('types'), 'ModuleType')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('attachment', 'OP_ASSIGN')], CallFunc(Name('SafeMIMEText'), [Name('content'), Name('subtype'), Name('encoding')], None, None))]))
Module(None, Stmt([If([(Name('locations'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('file', 'OP_ASSIGN')], CallFunc(Name('open'), [Name('file_or_path'), Const('rb')], None, None))]))
Module(None, Stmt([Break()]))
elif getattr ( current , 'alters_data' , False ) :
Module(None, Stmt([Assign([AssName('orig_file', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Getattr(Name('self'), 'dirpath'), Getattr(Name('self'), 'file')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('test_runner_class'), 'add_arguments'), [Name('parser')], None, None))]))
Module(None, Stmt([While(Compare(Getattr(Name('field'), 'rel'), [('is not', Name('None'))]), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('full_path', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'path'), [Name('name')], None, None))]))
try :
Module(None, Stmt([Return(CallFunc(Getattr(Name('json'), 'dumps'), [DictComp(Name('f'), CallFunc(Getattr(Name('e'), 'get_json_data'), [Name('escape_html')], None, None), [ListCompFor(AssTuple([AssName('f', 'OP_ASSIGN'), AssName('e', 'OP_ASSIGN')]), CallFunc(Getattr(Name('self'), 'items'), [], None, None), [])])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--pythonpath'), Keyword('help', Const('A directory to add to the Python path, e.g. "/home/djangoprojects/myproject".'))], None, None))]))
Module(None, Stmt([Assign([AssName('f', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('root'), Name('f')], None, None))]))
Module(None, Stmt([Assign([AssName('current_expires', 'OP_ASSIGN')], CallFunc(Name('typecast_timestamp'), [CallFunc(Name('str'), [Name('current_expires')], None, None)], None, None))]))
Module(None, Stmt([Discard(Yield(Subscript(Name('self'), 'OP_APPLY', [Name('key')])))]))
Module(None, Stmt([Assign([AssTuple([AssName('_', 'OP_ASSIGN'), AssName('ser_fmt', 'OP_ASSIGN'), AssName('cmp_fmt', 'OP_ASSIGN')])], CallFunc(Getattr(Name('self'), 'parse_name'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'basename'), [Name('fixture_file')], None, None)], None, None))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '_current'), 'OP_ASSIGN', [Getattr(Name('field'), 'name')])], CallFunc(Getattr(Name('field'), 'value_to_string'), [Name('obj')], None, None))]))
try :
Module(None, Stmt([Assign([AssName('resolver_match', 'OP_ASSIGN')], CallFunc(Getattr(Name('resolver'), 'resolve'), [Getattr(Name('request'), 'path_info')], None, None))]))
Module(None, Stmt([Import([('datetime', None)])]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Assign([AssName('base_lang', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(CallFunc(Name('get_language'), [], None, None), 'split'), [Const('-')], None, None), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Assign([AssTuple([AssName('attrname', 'OP_ASSIGN'), AssName('rest', 'OP_ASSIGN'), AssName('attrvalue', 'OP_ASSIGN')])], CallFunc(Getattr(Name('m'), 'group'), [Const(1), Const(2), Const(3)], None, None))]))
Module(None, Stmt([Assign([AssName('creation_counter', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Assign([AssName('regex', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^(?:[a-z0-9\\.\\-]*)://(?:(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\\.)+(?:[A-Z]{2,6}\\.?|[A-Z0-9-]{2,}(?<!-)\\.?)|localhost|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\[?[A-F0-9]*:[A-F0-9:]+\\]?)(?::\\d+)?(?:/?|[/?]\\S+)$'), Getattr(Name('re'), 'IGNORECASE')], None, None))]))
Module(None, Stmt([Function(None, 'E', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.template', [('loader', None), ('Context', None), ('RequestContext', None)], 0)]))
Module(None, Stmt([Assign([AssName('tables', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('connection'), 'introspection'), 'table_names'), [], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('t'), 'token_type'), [('!=', Name('TOKEN_COMMENT'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Not(Or([Compare(Name('v'), [('is', Name('False'))]), Compare(Name('v'), [('is', Name('None'))]), Compare(Name('v'), [('==', Const(''))])])))]))
Module(None, Stmt([Function(None, 'clear', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('RemovedInDjango19Warning', [Name('DeprecationWarning')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Class('QueryDict', [Name('MultiValueDict')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('digits'), 'append'), [Const('-')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("Invalid filter: '%s'"), Name('filter_name')))], None, None), None, None)]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([From('django.utils', [('lru_cache', None)], 0)]))
Module(None, Stmt([Function(None, 'open', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('check_for_language', 'OP_ASSIGN')], Lambda(['x'], [], 0, Name('True')))]))
Module(None, Stmt([For(AssName('form', 'OP_ASSIGN'), Name('valid_forms'), Stmt([Pass()]), None)]))
except http_cookies . CookieError :
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('tupl', 'OP_ASSIGN')], CallFunc(Getattr(Name('d'), 'as_tuple'), [], None, None))]))
Module(None, Stmt([Function(None, 'delete', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([From('functools', [('total_ordering', None)], 0)]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('max_age')])], CallFunc(Name('min'), [CallFunc(Name('int'), [Subscript(Name('cc'), 'OP_APPLY', [Const('max-age')])], None, None), Subscript(Name('kwargs'), 'OP_APPLY', [Const('max_age')])], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_urlconf_module'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'choices', 'OP_ASSIGN')], Name('choices'))]))
Module(None, Stmt([Assign([AssName('incomment', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssName('_default', 'OP_ASSIGN')], CallFunc(Name('translation'), [Getattr(Name('settings'), 'LANGUAGE_CODE')], None, None))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'end_index', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('ord'), [Subscript(Name('bs'), 'OP_APPLY', [Const(0)])], None, None))]))
finally :
Module(None, Stmt([If([(Compare(Name('i'), [('>=', CallFunc(Name('len'), [Name('subject')], None, None))]), Stmt([Pass()]))], None)]))
@ register . filter ( is_safe = True )
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('f'), 'save_form_data'), [Name('instance'), Subscript(Name('cleaned_data'), 'OP_APPLY', [Getattr(Name('f'), 'name')])], None, None))]))
Module(None, Stmt([Assign([AssName('app_config', 'OP_ASSIGN')], CallFunc(Getattr(Name('apps'), 'get_app_config'), [Name('app_label')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--noinput'), Keyword('action', Const('store_false')), Keyword('dest', Const('interactive')), Keyword('default', Name('True')), Keyword('help', Const('Tells Django to NOT prompt the user for input of any kind.'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('date'), [CallFunc(Getattr(Name('datetime'), 'now'), [Keyword('tz', Name('tzinfo'))], None, None), Getattr(Name('self'), 'format_string')], None, None))]))
except KeyError :
Module(None, Stmt([Function(None, 'get_resolved_arguments', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [Name('DeserializationError'), CallFunc(Name('DeserializationError'), [Name('e')], None, None), Subscript(CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), 'OP_APPLY', [Const(2)])], None, None))]))
Module(None, Stmt([Function(None, 'has_key', ['self', 'key', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('context'), 'render_context'), 'push'), [], None, None))]))
Module(None, Stmt([AugAssign(Name('weight'), '+=', Const(1))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Name('msg')], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'bcc', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssAttr(Getattr(Name('self'), 'widget'), 'choices', 'OP_ASSIGN')], Getattr(Name('self'), 'choices'))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY2'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Assign([AssName('lbp', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Assign([AssName('MONTHS', 'OP_ASSIGN')], Dict([(Const(1), CallFunc(Name('_'), [Const('January')], None, None)), (Const(2), CallFunc(Name('_'), [Const('February')], None, None)), (Const(3), CallFunc(Name('_'), [Const('March')], None, None)), (Const(4), CallFunc(Name('_'), [Const('April')], None, None)), (Const(5), CallFunc(Name('_'), [Const('May')], None, None)), (Const(6), CallFunc(Name('_'), [Const('June')], None, None)), (Const(7), CallFunc(Name('_'), [Const('July')], None, None)), (Const(8), CallFunc(Name('_'), [Const('August')], None, None)), (Const(9), CallFunc(Name('_'), [Const('September')], None, None)), (Const(10), CallFunc(Name('_'), [Const('October')], None, None)), (Const(11), CallFunc(Name('_'), [Const('November')], None, None)), (Const(12), CallFunc(Name('_'), [Const('December')], None, None))]))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Return(CallFunc(Name('date'), [Getattr(Name('d'), 'year'), Getattr(Name('d'), 'month'), Getattr(Name('d'), 'day')], None, None))]))
Module(None, Stmt([Assign([AssName('_wrapped', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
raise CommandError ( "%r conflicts with the name of an existing "  "Python module and cannot be used as a "  "project name. Please try another name." %  project_name )
finally :
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), '_cache'), 'incr'), [Name('key'), UnarySub(Name('delta'))], None, None))]))
Module(None, Stmt([If([(And([Not(CallFunc(Name('isinstance'), [Name('value'), Name('ConvertingDict')], None, None)), CallFunc(Name('isinstance'), [Name('value'), Name('dict')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Command'), Name('self')], None, None), 'add_arguments'), [Name('parser')], None, None))]))
@ register . filter ( is_safe = False )
Module(None, Stmt([Assign([AssAttr(Name('Module_six_moves_urllib_request'), '_moved_attributes', 'OP_ASSIGN')], Name('_urllib_request_moved_attributes'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('NullBooleanSelect'), Name('self')], None, None), '__init__'), [Name('attrs'), Name('choices')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(Name('six'), 'text_type'), [Name('s')], None, None), 'encode'), [Name('encoding'), Name('errors')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Name('key'), Subscript(Name('self'), 'OP_APPLY', [Name('key')])]), [GenExprFor(AssName('key', 'OP_ASSIGN'), Name('self'), [])]))], None, None))]))
else :
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '__dict__'), 'OP_ASSIGN', [Const('_setupfunc')])], Name('func'))]))
nodelist = parser . parse ( ( 'elif' , 'else' , 'endif' ) )
Module(None, Stmt([If([(Name('m'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('sort', 'OP_ASSIGN')], Name('complain'))]))
else :
Module(None, Stmt([Function(None, 'full_clean', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__new__', ['cls', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssName('filter_name', 'OP_ASSIGN')], CallFunc(Getattr(Name('match'), 'group'), [Const('filter_name')], None, None))]))
Module(None, Stmt([Import([('django.core.checks.model_checks', None)])]))
Module(None, Stmt([From('django.db', [('connections', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('lookup_view'), [('in', Getattr(Name('self'), '_callback_strs'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('stream'), 'unget'), [Name('chunk')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('context'), 'OP_ASSIGN', [Getattr(Name('self'), 'var_name')])], ListComp(Dict([(Const('grouper'), Name('key')), (Const('list'), CallFunc(Name('list'), [Name('val')], None, None))]), [ListCompFor(AssTuple([AssName('key', 'OP_ASSIGN'), AssName('val', 'OP_ASSIGN')]), CallFunc(Name('groupby'), [Name('obj_list'), Lambda(['obj'], [], 0, CallFunc(Getattr(Name('self'), 'resolve_expression'), [Name('obj'), Name('context')], None, None))], None, None), [])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Const('Cleaning up temporary files.\n')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'compress'), [List(())], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('AttributeError'), [Mod((Const("'%s' object has no attribute 'cleaned_data'"), Getattr(Getattr(Name('self'), '__class__'), '__name__')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Name('HiddenInput'))]))
Module(None, Stmt([If([(And([Name('tags'), CallFunc(Name('any'), [GenExpr(GenExprInner(Not(CallFunc(Getattr(Name('checks'), 'tag_exists'), [Name('tag')], None, None)), [GenExprFor(AssName('tag', 'OP_ASSIGN'), Name('tags'), [])]))], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('comment_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const("^((?:'[^']*'|[^'])*?)--.*$")], None, None))]))
Module(None, Stmt([Function(None, 'ngettext_lazy', ['singular', 'plural', 'number'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('ch', 'OP_ASSIGN'), AssName('escaped', 'OP_ASSIGN')])], CallFunc(Name('next'), [Name('input_iter')], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Name('ungettext'), [Name('singular'), Name('plural'), Name('number')], None, None))]))
else :
Module(None, Stmt([Return(Add((CallFunc(Name('int'), [Name('value')], None, None), CallFunc(Name('int'), [Name('arg')], None, None))))]))
Module(None, Stmt([Assign([AssName('cull_num', 'OP_ASSIGN')], FloorDiv((Name('num'), Getattr(Name('self'), '_cull_frequency'))))]))
Module(None, Stmt([Assign([AssTuple([AssName('neg', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')])], CallFunc(Getattr(Name('self'), 'convert'), [Name('i'), Getattr(Name('self'), 'decimal_digits'), Getattr(Name('self'), 'digits'), Const('-')], None, None))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'asvar'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('initLock', 'OP_ASSIGN')], CallFunc(Name('Lock'), [], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'filter_expression'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('widget'), 'is_localized', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('_mtimes', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Import([('mimetypes', None)])]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('file_name'), Name('Template')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Or([Compare(Name('plen'), [('<', Sub((Name('alen'), Name('dlen'))))]), Compare(Name('plen'), [('>', Name('alen'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('week_number', 'OP_ASSIGN')], Const(1))]))
Module(None, Stmt([Raise(CallFunc(Name('InvalidTemplateLibrary'), [Mod((Const('ImportError raised loading %s: %s'), Tuple([Name('taglib_module'), Name('e')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('BLOCK_CONTEXT_KEY', 'OP_ASSIGN')], Const('block_context'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'timeout', 'OP_ASSIGN')], Name('timeout'))]))
Module(None, Stmt([Return(ListComp(CallFunc(Name('format_html'), [Const('<script type="text/javascript" src="{0}"></script>'), CallFunc(Getattr(Name('self'), 'absolute_path'), [Name('path')], None, None)], None, None), [ListCompFor(AssName('path', 'OP_ASSIGN'), Getattr(Name('self'), '_js'), [])]))]))
Module(None, Stmt([From('django.utils.translation', [('ugettext_lazy', None), ('ugettext', '_'), ('pgettext', None)], 0)]))
Module(None, Stmt([Return(Mod((Getattr(Name('self'), 'msg'), CallFunc(Name('tuple'), [GenExpr(GenExprInner(CallFunc(Name('force_text'), [Name('p'), Keyword('errors', Const('replace'))], None, None), [GenExprFor(AssName('p', 'OP_ASSIGN'), Getattr(Name('self'), 'params'), [])]))], None, None))))]))
Module(None, Stmt([Function(None, 'set_cookie', ['self', 'key', 'value', 'max_age', 'expires', 'path', 'domain', 'secure', 'httponly'], [Const(''), Name('None'), Name('None'), Const('/'), Name('None'), Name('False'), Name('False')], 0, None, Stmt([Pass()]))]))
states = {   'div' : both_before + [  Tok ( "punct" , literals ( "/= /" ) , next = 'reg' ) ,  ] + both_after ,    'reg' : both_before + [  Tok ( "regex" ,  r"""                     /                       # opening slash                     # First character is..                     (   [^*\\/[]            # anything but * \ / or [                     |   \\.                 # or an escape sequence                     |   \[                  # or a class, which has                             (   [^\]\\]     #   anything but \ or ]                             |   \\.         #   or an escape sequence                             )*              #   many times                         \]                     )                     # Following characters are same, except for excluding a star                     (   [^\\/[]             # anything but \ / or [                     |   \\.                 # or an escape sequence                     |   \[                  # or a class, which has                             (   [^\]\\]     #   anything but \ or ]                             |   \\.         #   or an escape sequence                             )*              #   many times                         \]                     )*                      # many times                     /                       # closing slash                     [a-zA-Z0-9]*            # trailing flags                 """ , next = 'div' ) ,  ] + both_after ,  }
Module(None, Stmt([If([(Compare(Name('lang'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('file'), Const('mode')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--ignorenonexistent'), Const('-i'), Keyword('action', Const('store_true')), Keyword('dest', Const('ignore')), Keyword('default', Name('False')), Keyword('help', Const('Ignores entries in the serialized data for fields that do not currently exist on the model.'))], None, None))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('id'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('id')])], None, None))]))
Module(None, Stmt([Class('Truncator', [Name('SimpleLazyObject')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'value', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Getattr(Name('self'), 'value')], None, None))]))
Module(None, Stmt([Return(Name('html'))]))
Module(None, Stmt([Function(None, 'read', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('strip_entities', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('strip_entities'), Getattr(Name('six'), 'text_type')], None, None))]))
Module(None, Stmt([Assign([AssName('formfield_callback', 'OP_ASSIGN')], CallFunc(Getattr(Name('attrs'), 'pop'), [Const('formfield_callback'), Name('None')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('config'), 'OP_ASSIGN', [Const('target')])], Subscript(Subscript(Getattr(Name('self'), 'config'), 'OP_APPLY', [Const('handlers')]), 'OP_APPLY', [Subscript(Name('config'), 'OP_APPLY', [Const('target')])]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'verbosity', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('verbosity')], None, None))]))
Module(None, Stmt([Function(None, '__text_cast', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('integer_types', 'OP_ASSIGN')], Tuple([Name('int')]))]))
Module(None, Stmt([Return(Getattr(Name('self'), 'parent_instance'))]))
Module(None, Stmt([Function(None, 'delete', ['self', 'key', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
elif name == 'string' :
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'endElement'), [Const('object')], None, None))]))
except ( OSError , NotImplementedError , AttributeError ) :
Module(None, Stmt([Assign([AssName('RESET', 'OP_ASSIGN')], Const('0'))]))
Module(None, Stmt([Function(None, '__iter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('encoding', 'OP_ASSIGN')], Getattr(Name('self'), '_encoding'))]))
Module(None, Stmt([Assign([AssName('output_transaction', 'OP_ASSIGN')], Name('True'))]))
try :
else :
Module(None, Stmt([Assign([AssName('rest', 'OP_ASSIGN')], Slice(Name('rest'), 'OP_APPLY', CallFunc(Getattr(Name('m'), 'end'), [], None, None), None))]))
Module(None, Stmt([If([(Name('top_errors'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('i', 'OP_ASSIGN')], Add((Name('j'), Const(1))))]))
else :
Module(None, Stmt([Continue()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'port', 'OP_ASSIGN')], Or([Name('port'), Getattr(Name('settings'), 'EMAIL_PORT')]))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('_active'), Const('value')], None, None), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([If([(Compare(Name('terminal_char'), [('!=', Const(')'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('request'), 'resolver_match', 'OP_ASSIGN')], Name('resolver_match'))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Assign([AssName('CONVERT_PATTERN', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^(?P<prefix>[a-z]+)://(?P<suffix>.*)$')], None, None))]))
Module(None, Stmt([Return(CallFunc(Subscript(Subscript(Getattr(Name('self'), '__dispatch'), 'OP_APPLY', [Name('t')]), 'OP_APPLY', [Name('funcname')]), [Name('res')], Name('args'), Name('kw')))]))
Module(None, Stmt([From('django.core.management', [('call_command', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const('EMAIL_USE_TLS/EMAIL_USE_SSL are mutually exclusive, so only set one of those settings to True.')], None, None), None, None)]))
else :
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('required')]), Keyword('code', Const('required'))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('VARIABLE_TAG_START', 'OP_ASSIGN')], Const('{{'))]))
Module(None, Stmt([Function(None, '_proxy_method', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
@ property
Module(None, Stmt([Assign([AssName('param', 'OP_ASSIGN')], Subscript(Name('elt'), 'OP_APPLY', [Const(1)]))]))
except ValueError :
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'queryset'), 'get'), [], None, Dict([(Name('key'), Name('value'))])))]))
Module(None, Stmt([Assign([Subscript(Name('last'), 'OP_ASSIGN', [Name('NEXT')]), Subscript(Name('root'), 'OP_ASSIGN', [Name('PREV')]), Subscript(Name('cache'), 'OP_ASSIGN', [Name('key')])], Name('link'))]))
Module(None, Stmt([Function(None, 'add', ['self', 'key', 'value', 'timeout', 'version'], [Name('DEFAULT_TIMEOUT'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('EmailBackend'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([AugAssign(Name('new_ip'), '+=', CallFunc(Getattr(Subscript(Name('hextet'), 'OP_APPLY', [Const(1)]), 'split'), [Const(':')], None, None))]))
Module(None, Stmt([Import([('random', 'random_module')])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('lookups'), 'appendlist'), [Getattr(Name('pattern'), 'name'), Tuple([Name('bits'), Name('p_pattern'), Getattr(Name('pattern'), 'default_args')])], None, None))]))
Module(None, Stmt([Function(None, 'ungettext_lazy', ['singular', 'plural', 'number'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'is_valid', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assert(Name('name'), Const('The name argument is not allowed to be empty.'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_js'), 'append'), [Name('path')], None, None))]))
except IOError :
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('-o'), Const('--output'), Keyword('default', Name('None')), Keyword('dest', Const('output')), Keyword('help', Const('Specifies file to which the output is written.'))], None, None))]))
Module(None, Stmt([If([(Name('new_conn_created'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(CallFunc(Getattr(Name('gettext_module'), 'find'), [Const('django'), Name('path'), List([CallFunc(Name('to_locale'), [Name('lang_code')], None, None)])], None, None), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('tf'), 'format'), [Name('format_string')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '__text_cast'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('f'), 'close'), [], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'func'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core.management.base', [('AppCommand', None)], 0)]))
Module(None, Stmt([Assign([AssName('label', 'OP_ASSIGN')], Or([CallFunc(Getattr(Name('bf'), 'label_tag'), [Name('label')], None, None), Const('')]))]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None), ('CommandError', None)], 0)]))
else :
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Name('SelectMultiple'))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_request_middleware'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(Name('changed')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('lang', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Return(Name('obj'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'pubid', 'OP_ASSIGN')], Name('pubid'))]))
Module(None, Stmt([Raise(CallFunc(Name('MultiPartParserError'), [Mod((Const('Invalid boundary in multipart: %s'), Name('boundary')))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'startElement'), [Const('author'), Dict(())], None, None))]))
Module(None, Stmt([If([(And([Compare(Name('value'), [('is', Name('None'))]), Compare(Name('attr'), [('in', Name('declared_fields'))])]), Stmt([Pass()]))], None)]))
elif args [ - 2 ] == "as" :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_cached_loaders', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('CheckboxChoiceInput'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('none_model_fields', 'OP_ASSIGN')], ListComp(Name('k'), [ListCompFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('six'), 'iteritems'), [Name('fields')], None, None), [ListCompIf(Not(Name('v')))])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'mkdir'), [Name('target_dir')], None, None))]))
Module(None, Stmt([Import([('signal', None)])]))
Module(None, Stmt([Function(None, 'add_fields', ['self', 'form', 'index'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('EMPTY_VALUES', 'OP_ASSIGN')], Tuple([Name('None'), Const(''), List(()), Tuple(()), Dict(())]))]))
@ property
else :
Module(None, Stmt([Function(None, 'handle_extensions', ['extensions', 'ignored'], [Tuple([Const('html')]), Tuple([Const('py')])], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('required')]), Keyword('code', Const('required'))], None, None), None, None)]))
Module(None, Stmt([Class('WidthRatioNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'copy', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'content', 'OP_ASSIGN')], Getattr(Name('self'), 'rendered_content'))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Assign([AssAttr(Name('nodelist'), 'contains_nontext', 'OP_ASSIGN')], Name('True'))]))
else :
Module(None, Stmt([If([(Name('i'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(CallFunc(Getattr(Name('value'), 'replace'), [Const('\\'), Const('\\\\')], None, None), 'replace'), [Const('"'), Const('\\"')], None, None), 'replace'), [Const("'"), Const("\\'")], None, None))]))
Module(None, Stmt([If([(Compare(Name('fields'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
except ( ValueError , TypeError ) :
Module(None, Stmt([Assign([AssName('iterator', 'OP_ASSIGN')], CallFunc(Name('ChunkIter'), [Name('stream_or_iterable'), Const(16384)], None, None))]))
Module(None, Stmt([Assign([AssName('clean_data', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([Subscript(Name('final_attrs'), 'OP_ASSIGN', [Const('value')])], CallFunc(Name('force_text'), [CallFunc(Getattr(Name('self'), '_format_value'), [Name('value')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'modified_time', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('Http404', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('plural', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(Name('instance'))]))
else :
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('callback'), Getattr(Name('types'), 'FunctionType')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('force_str', 'OP_ASSIGN')], Name('force_bytes'))]))
Module(None, Stmt([Class('Choice', [Name('list')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('max_age'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('BaseModelFormSet', [Name('BaseFormSet')], None, Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Function(None, '_get_media', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('inplural', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssName('f', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('p'), Name('cmd')], None, None))]))
Module(None, Stmt([Function(None, 'reader_leaves', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('source', 'OP_ASSIGN'), AssName('display_name', 'OP_ASSIGN')])], CallFunc(Name('loader'), [Name('name'), Name('dirs')], None, None))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'merge', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('merge'), Name('False')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Const('You must supply at least one app label when using --empty.')], None, None), None, None)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'is_bound'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Not(CallFunc(Name('bool'), [Getattr(Name('self'), 'option_list')], None, None)))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('obj'), Getattr(Getattr(Name('models'), 'signals'), 'ModelSignal')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('BadSignature'), [Mod((Const('Signature "%s" does not match'), Name('sig')))], None, None), None, None)]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('compressed')], None, None), [('<', Sub((CallFunc(Name('len'), [Name('data')], None, None), Const(1))))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Compare(Name('field'), [('==', Name('NON_FIELD_ERRORS'))]), Getattr(Name('opts'), 'error_messages'), Compare(Name('NON_FIELD_ERRORS'), [('in', Getattr(Name('opts'), 'error_messages'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'inotify_code_changed', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'callback'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Name('strict')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__lt__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(1))]), Stmt([Pass()]))], None)]))
elif intrans :
else :
Module(None, Stmt([If([(Compare(Name('path'), [('not in', Getattr(Name('self'), '_js'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('Page', [Getattr(Name('collections'), 'Sequence')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'timeuntil_filter', ['value', 'arg'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'translate', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([From('django.utils.deconstruct', [('deconstructible', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('confirm'), [('==', Const('yes'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('avoid_wrapping'), [CallFunc(Name('ugettext'), [Const('0 minutes')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('total_forms', 'OP_ASSIGN')], Add((CallFunc(Name('max'), [Name('initial_forms'), Getattr(Name('self'), 'min_num')], None, None), Getattr(Name('self'), 'extra'))))]))
Module(None, Stmt([Return(Compare(CallFunc(Name('force_text'), [CallFunc(Getattr(Name('self'), 'prepare_value'), [Name('initial_value')], None, None)], None, None), [('!=', CallFunc(Name('force_text'), [Name('data_value')], None, None))]))]))
Module(None, Stmt([Assign([AssName('connection', 'OP_ASSIGN')], Subscript(Name('connections'), 'OP_APPLY', [CallFunc(Getattr(Name('options'), 'get'), [Const('database')], None, None)]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_stream', 'OP_ASSIGN')], Name('stream'))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Assign([AssName('display_url', 'OP_ASSIGN')], Add((Name('tmp'), Const('/'))))]))
Module(None, Stmt([Assign([AssName('content', 'OP_ASSIGN')], CallFunc(Getattr(Name('template_file'), 'read'), [], None, None))]))
Module(None, Stmt([For(AssName('cat', 'OP_ASSIGN'), Subscript(Name('item'), 'OP_APPLY', [Const('categories')]), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('table', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'ops'), 'quote_name'), [Getattr(Name('self'), '_table')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('translation'), '_catalog', 'OP_ASSIGN')], Dict(()))]))
else :
Module(None, Stmt([Assign([AssName('taglib', 'OP_ASSIGN')], Subscript(Name('bits'), 'OP_APPLY', [UnarySub(Const(1))]))]))
Module(None, Stmt([Return(Getattr(Getattr(Name('self'), 'file'), 'size'))]))
Module(None, Stmt([Return(CallFunc(Name('bool'), [Getattr(Name('self'), 'name')], None, None))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'validate', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'localtime', ['value', 'timezone'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'can_write'), 'release'), [], None, None))]))
Module(None, Stmt([Class('IncludeNode', [Name('Node')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--version'), Keyword('action', Const('version')), Keyword('version', CallFunc(Getattr(Name('self'), 'get_version'), [], None, None))], None, None))]))
Module(None, Stmt([Assign([AssName('base62', 'OP_ASSIGN')], CallFunc(Name('BaseConverter'), [Name('BASE62_ALPHABET')], None, None))]))
Module(None, Stmt([Assign([AssName('changed', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Discard(Yield(Tuple([Name('ch'), Name('False')])))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('sys'), 'stdout'), 'write'), [Add((CallFunc(Getattr(Name('django'), 'get_version'), [], None, None), Const('\n')))], None, None))]))
Module(None, Stmt([For(AssName('option', 'OP_ASSIGN'), Name('option_label'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'cmd', 'OP_ASSIGN')], Name('cmd'))]))
Module(None, Stmt([Return(Const(None))]))
try :
Module(None, Stmt([Assign([AssName('left', 'OP_ASSIGN')], CallFunc(Getattr(Name('t'), 'nud'), [Name('self')], None, None))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'invalid_block_tag'), [Name('endblock'), Const('endblock'), Name('acceptable_endblocks')], None, None))]))
Module(None, Stmt([Assign([AssName('ignored', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'warning', 'OP_ASSIGN')], Name('warning'))]))
Module(None, Stmt([Assign([Subscript(Name('options'), 'OP_ASSIGN', [Const('secret_key')])], CallFunc(Name('get_random_string'), [Const(50), Name('chars')], None, None))]))
Module(None, Stmt([Discard(Yield(CallFunc(Getattr(Name('buf'), 'read'), [], None, None)))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Name('urlsplit'), [Name('location')], None, None))]))
Module(None, Stmt([Class('Deserializer', [Getattr(Name('six'), 'Iterator')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_text_chars'), [Name('length'), Name('truncate'), Name('text'), Name('truncate_len')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('datetime'), 'time'), [], None, Name('kw')))]))
Module(None, Stmt([Assign([AssName('path', 'OP_ASSIGN')], List([Name('path')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_key'), [Name('key')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_resolve_lookup'), [Name('context')], None, None))]))
except UnicodeError :
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'close_called')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Return(Getattr(Name('self'), 'content'))]))
Module(None, Stmt([From('decimal', [('Decimal', None), ('InvalidOperation', None), ('Context', None), ('ROUND_HALF_UP', None)], 0)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('signing'), 'get_cookie_signer'), [Keyword('salt', Add((Name('key'), Name('salt'))))], None, None), 'unsign'), [Name('cookie_value'), Keyword('max_age', Name('max_age'))], None, None))]))
Module(None, Stmt([Function(None, 'compile_func', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('RemovedInNextVersionWarning', 'OP_ASSIGN')], Name('RemovedInDjango19Warning'))]))
@ deconstructible
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Const('  all instances of the codebase have applied the migrations you squashed,')], None, None))]))
else :
Module(None, Stmt([Assign([AssName('ADDRESS_HEADERS', 'OP_ASSIGN')], CallFunc(Name('set'), [List([Const('from'), Const('sender'), Const('reply-to'), Const('to'), Const('cc'), Const('bcc'), Const('resent-from'), Const('resent-sender'), Const('resent-to'), Const('resent-cc'), Const('resent-bcc')])], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('supported_code'), 'startswith'), [Add((Name('generic_lang_code'), Const('-')))], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'humanize', ['dirname'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_long_to_bin', ['x', 'hex_format_string'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('tok', 'OP_ASSIGN'), Name('rules'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'config'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssName('d', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([For(AssName('field_name', 'OP_ASSIGN'), Getattr(Name('self'), 'fields'), Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Not a string literal: %r'), Name('s')))], None, None), None, None)]))
Module(None, Stmt([Function(None, '_clean_fields', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('obj', 'OP_ASSIGN'), CallFunc(Getattr(Getattr(Name('self'), 'queryset'), 'all'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'tagtype'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'reset_cache', ['kwargs'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('attr', 'OP_ASSIGN'), Name('_urllib_error_moved_attributes'), Stmt([Pass()]), None)]))
Module(None, Stmt([Continue()]))
except AttributeError :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'msguniq_options', 'OP_ASSIGN')], Add((Slice(Getattr(Name('self'), 'msguniq_options'), 'OP_APPLY', None, None), List([Const('--no-location')]))))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'connection', 'OP_ASSIGN')], Name('connection'))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Squashes an existing set of migrations (from first until specified) into a single new one.'))]))
Module(None, Stmt([Assign([AssName('instance', 'OP_ASSIGN')], CallFunc(Name('construct_instance'), [Name('form'), Name('instance'), Name('fields'), Name('exclude')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('id'), Name('unique_id')], None, None))]))
else :
@ property
else :
Module(None, Stmt([Return(Name('retval'))]))
Module(None, Stmt([Assign([AssName('biggest_number', 'OP_ASSIGN')], Const(1))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'file'), 'close'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('app_dirs'), 'append'), [Name('old_app_dir')], None, None))]))
Module(None, Stmt([Class('RegexURLPattern', [Name('LocaleRegexProvider')], None, Stmt([Pass()]), None)]))
try :
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('value'), 'encode'), [Name('charset')], None, None))]))
Module(None, Stmt([Function(None, 'spaceless', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('saved_instances', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Compare(Name('response'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const(None))]))
localpart , domain = addr . split ( '@' , 1 )
Module(None, Stmt([Assign([AssName('language_code', 'OP_ASSIGN')], CallFunc(Name('get_language'), [], None, None))]))
Module(None, Stmt([Assign([AssName('full_module_name', 'OP_ASSIGN')], Add((Add((Name('package_name'), Const('.'))), Name('module_name'))))]))
Module(None, Stmt([If([(Compare(Name('log'), [('in', Name('child_loggers'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('formatter', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'pop'), [Const('formatter'), Name('None')], None, None))]))
Module(None, Stmt([If([(Compare(Name('m'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('templatetags_modules_candidates', 'OP_ASSIGN')], List([Const('django.templatetags')]))]))
Module(None, Stmt([Assign([AssName('validate_ipv4_address', 'OP_ASSIGN')], CallFunc(Name('RegexValidator'), [Name('ipv4_re'), CallFunc(Name('_'), [Const('Enter a valid IPv4 address.')], None, None), Const('invalid')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('opts'), 'fields', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('rawdata', 'OP_ASSIGN')], CallFunc(Name('force_str'), [Name('rawdata')], None, None))]))
try :
Module(None, Stmt([Class('ErrorDict', [Name('dict')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Const('  Installing indexes...\n')], None, None))]))
Module(None, Stmt([If([(Compare(Name('last'), [('==', Const(3))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('idstring'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'base_fields'), 'OP_ASSIGN', [Name('TOTAL_FORM_COUNT')])], CallFunc(Name('IntegerField'), [Keyword('widget', Name('HiddenInput'))], None, None))]))
Module(None, Stmt([Assign([AssName('parsed', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'%s' received unexpected keyword argument '%s'"), Tuple([Name('name'), Name('param')])))], None, None), None, None)]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('form'), 'fields'), 'OP_ASSIGN', [Name('ORDERING_FIELD_NAME')])], CallFunc(Name('IntegerField'), [Keyword('label', CallFunc(Name('_'), [Const('Order')], None, None)), Keyword('initial', Add((Name('index'), Const(1)))), Keyword('required', Name('False'))], None, None))]))
Module(None, Stmt([Discard(Yield(Name('buffer_')))]))
Module(None, Stmt([Function(None, 'configure_handler', ['self', 'config'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('dot_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('\\S')], None, None))]))
Module(None, Stmt([Import([('tempfile', None)])]))
Module(None, Stmt([Assign([AssName('parser', 'OP_ASSIGN')], CallFunc(Getattr(Name('command'), 'create_parser'), [Const(''), Name('name')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('FastCGI support has been deprecated and will be removed in Django 1.9.'), Name('RemovedInDjango19Warning')], None, None))]))
Module(None, Stmt([Assign([AssName('__call__', 'OP_ASSIGN')], Getattr(Name('type'), '__call__'))]))
Module(None, Stmt([From('pprint', [('pformat', None)], 0)]))
Module(None, Stmt([Assign([AssName('safe', 'OP_ASSIGN')], CallFunc(Name('force_bytes'), [Name('safe'), Getattr(Name('self'), 'encoding')], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'configure_custom'), [Name('config')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'timeout'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'get_language', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('sys', None)])]))
except LookupError :
elif isinstance ( o , datetime . time ) :
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Introspects the database tables in the given database and outputs a Django model module.'))]))
Module(None, Stmt([If([(Compare(Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('author_email')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid_pk_value')]), Keyword('code', Const('invalid_pk_value')), Keyword('params', Dict([(Const('pk'), Name('pk'))]))], None, None), None, None)]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([From('gzip', [('GzipFile', None)], 0)]))
Module(None, Stmt([From('lib2to3.pgen2', [('token', None)], 0)]))
try :
Module(None, Stmt([Assign([AssName('extra_classes', 'OP_ASSIGN')], CallFunc(Name('set'), [Or([Name('extra_classes'), List(())])], None, None))]))
Module(None, Stmt([If([(Name('unpack_ipv4'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'get_tag_uri', ['url', 'date'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(List(()))]))
Module(None, Stmt([Function(None, '_close_files', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], CallFunc(Name('localize'), [Name('output'), Keyword('use_l10n', Getattr(Name('context'), 'use_l10n'))], None, None))]))
Module(None, Stmt([For(AssName('app_config', 'OP_ASSIGN'), CallFunc(Name('reversed'), [CallFunc(Name('list'), [CallFunc(Getattr(Name('apps'), 'get_app_configs'), [], None, None)], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('rights'), Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('feed_copyright')])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('Using SplitDateTimeWidget with DateTimeField is deprecated. Use SplitDateTimeField instead.'), Name('RemovedInDjango19Warning'), Keyword('stacklevel', Const(2))], None, None))]))
Module(None, Stmt([If([(Compare(Name('content_length'), [('>', Getattr(Name('settings'), 'FILE_UPLOAD_MAX_MEMORY_SIZE'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('length', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('arg')], None, None))]))
Module(None, Stmt([Assign([AssName('ip_str', 'OP_ASSIGN')], CallFunc(Name('_explode_shorthand_ip_string'), [Name('ip_str')], None, None))]))
Module(None, Stmt([From('lib2to3.pytree', [('Leaf', None), ('Node', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Name('force_str'), [Mod((Const('<%s %s %s>'), Tuple([Getattr(Getattr(Name('self'), '__class__'), '__name__'), Getattr(Name('self'), 'name'), Getattr(Getattr(Name('self'), 'regex'), 'pattern')])))], None, None))]))
Module(None, Stmt([Assign([AssName('x', 'OP_ASSIGN')], Add((Mul((Name('x'), CallFunc(Name('len'), [Name('from_digits')], None, None))), CallFunc(Getattr(Name('from_digits'), 'index'), [Name('digit')], None, None))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('lookups'), 'appendlist'), [Name('name'), Tuple([Name('new_matches'), Add((Name('p_pattern'), Name('pat'))), CallFunc(Name('dict'), [Name('defaults')], None, Getattr(Name('pattern'), 'default_kwargs'))])], None, None))]))
except Model . DoesNotExist :
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--app'), Keyword('action', Const('store')), Keyword('dest', Const('app_label')), Keyword('default', Name('None')), Keyword('help', Const('Only look for fixtures in the specified app.'))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('args'), Keyword('metavar', Const('table_name')), Keyword('nargs', Const('*')), Keyword('help', Const('Optional table names. Otherwise, settings.CACHES is used to find cache tables.'))], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('VariableDoesNotExist'), [Const('Failed lookup for key [%s] in %r'), Tuple([Name('bit'), Name('current')])], None, None), None, None)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('!=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('obj'), '__class__', 'OP_ASSIGN')], Name('cls'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'error_list', 'OP_ASSIGN')], List([Name('self')]))]))
Module(None, Stmt([Function(None, '_dec', ['func'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('options'), 'get'), [Const('addrport')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('shutil'), 'copymode'), [Name('old_path'), Name('new_path')], None, None))]))
Module(None, Stmt([Import([('logging', None)])]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], CallFunc(Name('next'), [Getattr(Name('self'), '_producer')], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('!=', Const(2))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([Return(Subscript(CallFunc(Getattr(Name('ip_str'), 'rsplit'), [Const(':'), Const(1)], None, None), 'OP_APPLY', [Const(1)]))]))
Module(None, Stmt([Function(None, 'add_initial_prefix', ['self', 'field_name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('ChoiceFieldRenderer', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('DNS_NAME', 'OP_ASSIGN')], CallFunc(Name('CachedDnsName'), [], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'path', 'OP_ASSIGN'), AssAttr(Name('self'), 'match', 'OP_ASSIGN'), AssAttr(Name('self'), 'recursive', 'OP_ASSIGN')])], Tuple([Name('path'), Name('match'), Name('recursive')]))]))
Module(None, Stmt([Class('datetime', [Name('real_datetime')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('ignored'), 'append'), [Getattr(Name('f'), 'name')], None, None))]))
elif ch == '(' :
Module(None, Stmt([Return(List([Tuple([Const(''), List(())])]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Name('str')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Compare(Name('field'), [('in', Getattr(Name('self'), 'errors'))]))]))
Module(None, Stmt([Assign([AssName('cache_key', 'OP_ASSIGN')], CallFunc(Name('_generate_cache_header_key'), [Name('key_prefix'), Name('request')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'endChannelElement'), [Name('handler')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([From('django.core.serializers.base', [('DeserializationError', None)], 0)]))
Module(None, Stmt([Function(None, '_convert_to_charset', ['self', 'value', 'charset', 'mime_encode'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('output', 'OP_ASSIGN'), AssName('errors', 'OP_ASSIGN')])], CallFunc(Getattr(Name('p'), 'communicate'), [], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of Storage must provide a size() method')], None, None), None, None)]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('The django.forms.util module has been renamed. Use django.forms.utils instead.'), Name('RemovedInDjango19Warning'), Keyword('stacklevel', Const(2))], None, None))]))
Module(None, Stmt([Return(Name('_dec'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_cache'), 'set'), [Name('key'), Name('value'), CallFunc(Getattr(Name('self'), 'get_backend_timeout'), [Name('timeout')], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Subscript(Name('parts'), 'OP_APPLY', [UnarySub(Const(1))]), [('in', Getattr(Name('self'), 'serialization_formats'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Function(None, '__init__', ['self'], [], 0, None, Stmt([Pass()]))]))
elif not options [ "socket" ] and not options [ "host" ] and not options [ "port" ] :
Module(None, Stmt([For(AssTuple([AssName('result', 'OP_ASSIGN'), AssName('params', 'OP_ASSIGN')]), Name('possibility'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('old_method', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('base'), '__dict__'), 'get'), [Name('old_method_name')], None, None))]))
Module(None, Stmt([AugAssign(Name('start'), '+=', CallFunc(Name('len'), [Name('toktext')], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('fks_to_parent')], None, None), [('==', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('localized_fields'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('NowNode'), [Name('format_string')], None, None))]))
else :
Module(None, Stmt([Return(CallFunc(Getattr(Name('calendar'), 'timegm'), [CallFunc(Getattr(Name('result'), 'utctimetuple'), [], None, None)], None, None))]))
try :
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'loaded_object_count'), '+=', Name('loaded_objects_in_fixture'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Subscript(Name('MONTHS_3'), 'OP_APPLY', [Getattr(Getattr(Name('self'), 'data'), 'month')]), 'title'), [], None, None))]))
Module(None, Stmt([Return(Compare(Name('other'), [('in', Getattr(Name('self'), 'children'))]))]))
Module(None, Stmt([From('django.utils.encoding', [('smart_text', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('zfile'), 'close'), [], None, None))]))
Module(None, Stmt([If([(Compare(Name('default'), [('is not', Name('RAISE_ERROR'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'handle', ['self', 'app_or_project', 'name', 'target', 'options'], [Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], CallFunc(Getattr(Name('s'), 'split'), [Const('='), Const(1)], None, None))]))
Module(None, Stmt([Assign([AssName('p_pattern', 'OP_ASSIGN')], Slice(Name('p_pattern'), 'OP_APPLY', Const(1), None))]))
Module(None, Stmt([Assign([AssName('opts', 'OP_ASSIGN')], Getattr(Name('instance'), '_meta'))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('allow_cascade', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('allow_cascade'), Name('False')], None, None))]))
else :
else :
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([Function(None, 'rfc3339_date', ['date'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'r', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('deps'), 'append'), [Name('rel_model')], None, None))]))
Module(None, Stmt([Assign([AssName('literal_regex', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('\\[([A-f0-9:\\.]+)\\]$'), Getattr(Name('re'), 'IGNORECASE')], None, None))]))
Module(None, Stmt([If([(Compare(Slice(Getattr(Name('sys'), 'version_info'), 'OP_APPLY', None, Const(2)), [('==', Tuple([Const(3), Const(2)]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(Name('extra_context')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('self'), '_isdst'), [Name('dt')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Name('getcallargs'), [Name('current')], None, None))]))
Module(None, Stmt([If([(Compare(Name('last'), [('==', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Name('last_row')], None, None))]))
Module(None, Stmt([If([(Not(Getattr(Name('response'), 'streaming')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('directory_created', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('input_val'))]))
Module(None, Stmt([Assign([AssName('hidden_widget', 'OP_ASSIGN')], CallFunc(Getattr(Name('field'), 'hidden_widget'), [], None, None))]))
except ImportError :
Module(None, Stmt([Return(Subscript(Name('list_'), 'OP_APPLY', [UnarySub(Const(1))]))]))
Module(None, Stmt([Assign([AssName('_empty_value', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([If([(Getattr(Name('self'), 'no_obsolete'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const(None))]))
except UnicodeError :
Module(None, Stmt([Function(None, 'render', ['self', 'name', 'value', 'attrs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('default_error_messages', 'OP_ASSIGN')], Dict([(Const('invalid_choice'), CallFunc(Name('_'), [Const('Select a valid choice. %(value)s is not one of the available choices.')], None, None)), (Const('invalid_list'), CallFunc(Name('_'), [Const('Enter a list of values.')], None, None))]))]))
Module(None, Stmt([Function(None, 'next', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('AssignmentNode'), Name('self')], None, None), '__init__'), [Name('takes_context'), Name('args'), Name('kwargs')], None, None))]))
Module(None, Stmt([Assign([AssName('trans_bit', 'OP_ASSIGN')], List([Name('bit')]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_charset', 'OP_ASSIGN')], Getattr(Name('settings'), 'DEFAULT_CHARSET'))]))
Module(None, Stmt([Function(None, '_iterkeys', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("couldn't download URL %s to %s: %s"), Tuple([Name('url'), Name('filename'), Name('e')])))], None, None), None, None)]))
Module(None, Stmt([AugAssign(Name('title'), '+=', Mod((Const(' (%s squashed migrations)'), CallFunc(Name('len'), [Getattr(Subscript(Getattr(Name('graph'), 'nodes'), 'OP_APPLY', [Name('plan_node')]), 'replaces')], None, None))))]))
Module(None, Stmt([Function(None, 'id_for_label', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('match', 'OP_ASSIGN')], CallFunc(Getattr(Name('tagfind'), 'match'), [Name('rawdata'), Add((Name('i'), Const(1)))], None, None))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('readline'), 'set_completer'), [Getattr(CallFunc(Getattr(Name('rlcompleter'), 'Completer'), [Name('imported_objects')], None, None), 'complete')], None, None))]))
Module(None, Stmt([Function(None, 'entity_decl', ['self', 'name', 'is_parameter_entity', 'value', 'base', 'sysid', 'pubid', 'notation_name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Name('required'), Compare(Name('initial'), [('is not', Name('None'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_set'), [Name('key'), Name('pickled'), Name('timeout')], None, None))]))
Module(None, Stmt([Function(None, 'get_block', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('classonlymethod'), Name('self')], None, None), '__get__'), [Name('instance'), Name('owner')], None, None))]))
Module(None, Stmt([If([(Name('is_relation'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('os'), 'name'), [('==', Const('nt'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_save', ['self', 'name', 'content'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('model_list', 'OP_ASSIGN')], List(()))]))
except ( ValueError , InvalidOperation , TypeError , UnicodeEncodeError ) :
Module(None, Stmt([Assign([Subscript(Name('words'), 'OP_ASSIGN', [Name('i')])], CallFunc(Name('mark_safe'), [Name('word')], None, None))]))
Module(None, Stmt([Import([('io', None)])]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'name', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_queryset'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_create_attachments'), [CallFunc(Getattr(Name('self'), '_create_alternatives'), [Name('msg')], None, None)], None, None))]))
Module(None, Stmt([For(AssName('smigration', 'OP_ASSIGN'), Name('migrations_to_squash'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Getattr(Name('self'), 'warning'), Name('Exception')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('new_name', 'OP_ASSIGN')], Mod((Const('%sfield'), Name('new_name'))))]))
Module(None, Stmt([Class('AppCommand', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('related'), 'natural_key'), [], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('>', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('current_len'), [('==', Name('truncate_len'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'name', 'params'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([CallFunc(Name('hasattr'), [Name('value'), Const('__iter__')], None, None), Not(CallFunc(Name('isinstance'), [Name('value'), Getattr(Name('six'), 'text_type')], None, None)), Not(CallFunc(Name('hasattr'), [Name('value'), Const('_meta')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('f', 'OP_ASSIGN'), Name('files'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('total_forms', 'OP_ASSIGN')], Name('initial_forms'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('models'), 'add'), [Name('model')], None, None))]))
Module(None, Stmt([Assign([AssName('header_end', 'OP_ASSIGN')], CallFunc(Getattr(Name('chunk'), 'find'), [Const('\r\n\r\n')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('AttributeError'), [Const('This method is available only on the view class.')], None, None), None, None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'cyclevars', 'variable_name', 'silent'], [Name('None'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('str_number', 'OP_ASSIGN')], CallFunc(Getattr(Name('six'), 'text_type'), [Name('number')], None, None))]))
Module(None, Stmt([Assign([AssName('MONTHS_3_REV', 'OP_ASSIGN')], Dict([(Const('jan'), Const(1)), (Const('feb'), Const(2)), (Const('mar'), Const(3)), (Const('apr'), Const(4)), (Const('may'), Const(5)), (Const('jun'), Const(6)), (Const('jul'), Const(7)), (Const('aug'), Const(8)), (Const('sep'), Const(9)), (Const('oct'), Const(10)), (Const('nov'), Const(11)), (Const('dec'), Const(12))]))]))
Module(None, Stmt([If([(Compare(Subscript(Name('tzinfo'), 'OP_APPLY', [Const(0)]), [('==', Const('-'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Const("'firstof' statement requires at least one argument")], None, None), None, None)]))
Module(None, Stmt([Function(None, '__new__', ['cls', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('addr'), 'encode'), [Const('ascii')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_done', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([While(Compare(CallFunc(Name('len'), [Name('digits')], None, None), [('<=', CallFunc(Name('abs'), [Name('exponent')], None, None))]), Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(Name('AttributeError'), None, None)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_LABEL'), [Mod((Const('  Branch %s'), Getattr(Name('migration'), 'name')))], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('cached', 'OP_ASSIGN')], Subscript(Name('_format_cache'), 'OP_APPLY', [Name('cache_key')]))]))
else :
Module(None, Stmt([Import([('keyword', None)])]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('simple_url_re'), 'match'), [Name('middle')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('FixUnicode', [Getattr(Name('fixer_base'), 'BaseFix')], None, Stmt([Pass()]), None)]))
except KeyError :
Module(None, Stmt([From('django.core', [('validators', None)], 0)]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), '_is_rendered')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('is_required', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Import([('socket', None)])]))
Module(None, Stmt([Function(None, 'fetch_command', ['self', 'subcommand'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('warnings', 'OP_ASSIGN')], ListComp(Name('e'), [ListCompFor(AssName('e', 'OP_ASSIGN'), Name('all_issues'), [ListCompIf(And([Compare(Getattr(Name('checks'), 'WARNING'), [('<=', Getattr(Name('e'), 'level')), ('<', Getattr(Name('checks'), 'ERROR'))]), Not(CallFunc(Getattr(Name('e'), 'is_silenced'), [], None, None))]))])]))]))
Module(None, Stmt([Function(None, 'delete', ['self', 'key', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'include_html', 'OP_ASSIGN')], Name('include_html'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'tag'), [Name('function_name'), Name('compile_func')], None, None))]))
Module(None, Stmt([If([(Compare(Subscript(Subscript(Name('args'), 'OP_APPLY', [Const(1)]), 'OP_APPLY', [Const(0)]), [('==', Const('2'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('ipv4_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)(\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}$')], None, None))]))
Module(None, Stmt([If([(Name('match'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssTuple([AssName('base', 'OP_ASSIGN'), AssName('tail_ext', 'OP_ASSIGN')])], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'splitext'), [CallFunc(Getattr(Name('filename'), 'lower'), [], None, None)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('_dec'), '_decorated_function', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('func'), Const('_decorated_function'), Name('func')], None, None))]))
Module(None, Stmt([Return(Name('func'))]))
Module(None, Stmt([For(AssName('bytes', 'OP_ASSIGN'), Name('stream'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('week_number', 'OP_ASSIGN')], Const(52))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Getattr(Name('self'), 'file'), Const('name')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('default_error_messages', 'OP_ASSIGN')], Dict([(Const('required'), CallFunc(Name('_'), [Const('This field is required.')], None, None))]))]))
Module(None, Stmt([Function(None, 'new_datetime', ['d'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('NoArgsCommand class is deprecated and will be removed in Django 2.0. Use BaseCommand instead, which takes no arguments by default.'), Name('RemovedInDjango20Warning')], None, None))]))
Module(None, Stmt([Assign([AssName('FIELD', 'OP_ASSIGN')], Const('field'))]))
Module(None, Stmt([AugAssign(Name('remaining'), '-=', CallFunc(Name('len'), [Name('emitting')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('WSGIServer'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Class('ArchiveException', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('len_item', 'OP_ASSIGN')], Const(1))]))
else :
Module(None, Stmt([If([(Compare(Name('model'), [('in', Name('created_models'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([If([(Getattr(Name('self'), '_varlist'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('hashlib', None)])]))
except KeyError :
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Const('other_dict must be a mapping (dictionary-like) object.')], None, None), None, None)]))
@ staticmethod
Module(None, Stmt([With(CallFunc(Getattr(Getattr(Name('self'), '_lock'), 'writer'), [], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'get_version', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('default'))]))
Module(None, Stmt([Assign([AssName('retval', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'expression'), [], None, None))]))
Module(None, Stmt([From('django.utils.functional', [('lazy', None)], 0)]))
Module(None, Stmt([Function(None, 'lock', ['f', 'flags'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Tuple([Subscript(Name('result'), 'OP_APPLY', [Const(0)]), Subscript(Name('result'), 'OP_APPLY', [Const(1)])]))]))
Module(None, Stmt([Assign([AssAttr(Name('func'), '__doc__', 'OP_ASSIGN')], Name('doc'))]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'TEMPLATE_DEBUG'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const(0))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Function(None, 'strptime', ['self', 'value', 'format'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core.management.base', [('AppCommand', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateEncodingError'), [Const('Templates can only be constructed from unicode or UTF-8 strings.')], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('logging'), '_handlers'), 'clear'), [], None, None))]))
Module(None, Stmt([Assign([AssName('language_code', 'OP_ASSIGN')], CallFunc(Name('get_language'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('avoid_wrapping'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Mod((CallFunc(Name('ungettext'), [Const('%(size)d byte'), Const('%(size)d bytes'), Name('bytes')], None, None), Dict([(Const('size'), Name('bytes'))]))))]))
Module(None, Stmt([Assign([AssName('d', 'OP_ASSIGN')], Mod((Const(',%s'), CallFunc(Getattr(CallFunc(Getattr(Name('datetime_safe'), 'new_datetime'), [Name('date')], None, None), 'strftime'), [Const('%Y-%m-%d')], None, None))))]))
else :
Module(None, Stmt([Function(None, 'update_error_dict', ['self', 'error_dict'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssName('inner_html', 'OP_ASSIGN')], Const('<li>{choice_value}{sub_widgets}</li>'))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Class('Form', [CallFunc(Getattr(Name('six'), 'with_metaclass'), [Name('DeclarativeFieldsMetaclass'), Name('BaseForm')], None, None)], None, Stmt([Pass()]), None)]))
try :
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Const('sep must be None or a string')], None, None), None, None)]))
Module(None, Stmt([If([(Getattr(Getattr(Getattr(Getattr(Name('field'), 'rel'), 'through'), '_meta'), 'auto_created'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('f'), Const('save_form_data')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('missing_args_message', 'OP_ASSIGN')], Const('No database fixture specified. Please provide the path of at least one fixture in the command line.'))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of FileUploadHandler must provide a receive_data_chunk() method')], None, None), None, None)]))
Module(None, Stmt([Import([('argparse', None)])]))
Module(None, Stmt([Assign([AssName('instance', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('SortedDict'), Name('cls')], None, None), '__new__'), [Name('cls')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([If([(Name('use_reloader'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.core.mail.backends.console', [('EmailBackend', 'ConsoleEmailBackend')], 0)]))
Module(None, Stmt([If([(Getattr(Name('settings'), 'TEMPLATE_STRING_IF_INVALID'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Mod((Const('<Page %s of %s>'), Tuple([Getattr(Name('self'), 'number'), Getattr(Getattr(Name('self'), 'paginator'), 'num_pages')]))))]))
Module(None, Stmt([If([(Compare(Name('item_type'), [('==', Name('FIELD'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('base64', None)])]))
Module(None, Stmt([Import([('datetime', None)])]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('datetime'), 'fromtimestamp'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'getatime'), [CallFunc(Getattr(Name('self'), 'path'), [Name('name')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('_urllib_request_moved_attributes', 'OP_ASSIGN')], List([CallFunc(Name('MovedAttribute'), [Const('urlopen'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('install_opener'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('build_opener'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('pathname2url'), Const('urllib'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('url2pathname'), Const('urllib'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('getproxies'), Const('urllib'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('Request'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('OpenerDirector'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('HTTPDefaultErrorHandler'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('HTTPRedirectHandler'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('HTTPCookieProcessor'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('ProxyHandler'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('BaseHandler'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('HTTPPasswordMgr'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('HTTPPasswordMgrWithDefaultRealm'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('AbstractBasicAuthHandler'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('HTTPBasicAuthHandler'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('ProxyBasicAuthHandler'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('AbstractDigestAuthHandler'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('HTTPDigestAuthHandler'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('ProxyDigestAuthHandler'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('HTTPHandler'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('HTTPSHandler'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('FileHandler'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('FTPHandler'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('CacheFTPHandler'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('UnknownHandler'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('HTTPErrorProcessor'), Const('urllib2'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('urlretrieve'), Const('urllib'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('urlcleanup'), Const('urllib'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('URLopener'), Const('urllib'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('FancyURLopener'), Const('urllib'), Const('urllib.request')], None, None), CallFunc(Name('MovedAttribute'), [Const('proxy_bypass'), Const('urllib'), Const('urllib.request')], None, None)]))]))
try :
Module(None, Stmt([If([(Compare(Name('decimal_pos'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('setattr'), [Subscript(Name('caches'), 'OP_APPLY', [Name('DEFAULT_CACHE_ALIAS')]), Name('name'), Name('value')], None, None))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([If([(Compare(Subscript(Name('bits'), 'OP_APPLY', [Name('in_index')]), [('!=', Const('in'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('attr', 'OP_ASSIGN'), Getattr(Name('self'), 'rendering_attrs'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('res', 'OP_ASSIGN')], Add((Subscript(Name('to_digits'), 'OP_APPLY', [Name('digit')]), Name('res'))))]))
self . model_name = 'cacheentry'
Module(None, Stmt([For(AssTuple([AssName('opening', 'OP_ASSIGN'), AssName('closing', 'OP_ASSIGN')]), Name('WRAPPING_PUNCTUATION'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], Slice(Name('bits'), 'OP_APPLY', Const(2), None))]))
Module(None, Stmt([If([(Compare(Name('_globs_'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('ext'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('HttpResponse'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('obj', 'OP_ASSIGN')], Getattr(Name('form'), 'instance'))]))
Module(None, Stmt([Assign([AssName('errors', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('piece', 'OP_ASSIGN')], CallFunc(Getattr(Const(''), 'join'), [Slice(Name('source'), 'OP_APPLY', Name('last'), Name('pos'))], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'%s' takes one argument"), Subscript(Name('bits'), 'OP_APPLY', [Const(0)])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('expanded_template', 'OP_ASSIGN')], CallFunc(Getattr(Name('path'), 'normpath'), [Name('expanded_template')], None, None))]))
Module(None, Stmt([From('argparse', [('ArgumentParser', None)], 0)]))
Module(None, Stmt([Class('SyndicationFeed', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('daemonize', 'OP_ASSIGN')], Compare(Subscript(Name('wsgi_opts'), 'OP_APPLY', [Const('bindAddress')]), [('is not', Name('None'))]))]))
Module(None, Stmt([Return(Name('attachment'))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Assign([AssAttr(Name('parser'), 'ExternalEntityRefHandler', 'OP_ASSIGN')], Getattr(Name('self'), 'external_entity_ref_handler'))]))
Module(None, Stmt([Assign([AssName('wsgi_opts', 'OP_ASSIGN')], Dict([(Const('maxSpare'), CallFunc(Name('int'), [Subscript(Name('options'), 'OP_APPLY', [Const('maxspare')])], None, None)), (Const('minSpare'), CallFunc(Name('int'), [Subscript(Name('options'), 'OP_APPLY', [Const('minspare')])], None, None)), (Const('maxThreads'), CallFunc(Name('int'), [Subscript(Name('options'), 'OP_APPLY', [Const('maxchildren')])], None, None))]))]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'fixture_object_count'), '+=', Name('objects_in_fixture'))]))
Module(None, Stmt([Discard(Yield(CallFunc(Getattr(Name('self'), 'choice'), [Name('obj')], None, None)))]))
else :
elif timeout == 0 :
Module(None, Stmt([Class('ModelFormMetaclass', [Name('DeclarativeFieldsMetaclass')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('kwarg', 'OP_ASSIGN')], CallFunc(Name('token_kwargs'), [List([Name('bit')]), Name('parser')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('seen_data'), 'add'), [Name('row_data')], None, None))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Assign([AssAttr(Name('cls'), '__str__', 'OP_ASSIGN')], Getattr(Name('cls'), '__text_cast'))]))
Module(None, Stmt([Assign([AssName('c', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('text')], None, None))]))
Module(None, Stmt([Assign([AssName('qs', 'OP_ASSIGN')], Getattr(Name('self'), 'queryset'))]))
else :
Module(None, Stmt([Return(CallFunc(Name('metaclass'), [Const('temporary_class'), Name('None'), Dict(())], None, None))]))
Module(None, Stmt([If([(Or([Not(Name('value')), Not(ListComp(Name('v'), [ListCompFor(AssName('v', 'OP_ASSIGN'), Name('value'), [ListCompIf(Compare(Name('v'), [('not in', Getattr(Name('self'), 'empty_values'))]))])]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Name('_urlize'), [Name('value'), Keyword('trim_url_limit', CallFunc(Name('int'), [Name('limit')], None, None)), Keyword('nofollow', Name('True')), Keyword('autoescape', Name('autoescape'))], None, None)], None, None))]))
Module(None, Stmt([From('django.utils.translation', [('ugettext_lazy', '_'), ('ugettext', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('BaseModelForm'), Name('self')], None, None), '__init__'), [Name('data'), Name('files'), Name('auto_id'), Name('prefix'), Name('object_data'), Name('error_class'), Name('label_suffix'), Name('empty_permitted')], None, None))]))
Module(None, Stmt([For(AssName('pattern', 'OP_ASSIGN'), Getattr(Name('self'), 'url_patterns'), Stmt([Pass()]), None)]))
Module(None, Stmt([AugAssign(Name('current_len'), '+=', Const(1))]))
Module(None, Stmt([Return(Getattr(Name('EventHandler'), 'modified_code'))]))
Module(None, Stmt([Return(Name('message'))]))
except TypeError :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'style_func', 'OP_ASSIGN')], Name('style_func'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'object_list', 'number', 'paginator'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('functools', [('lru_cache', None)], 0)]))
@ register . tag ( 'if' )
Module(None, Stmt([Discard(CallFunc(Getattr(Name('replaces'), 'append'), [Tuple([Getattr(Name('migration'), 'app_label'), Getattr(Name('migration'), 'name')])], None, None))]))
Module(None, Stmt([If([(Compare(Name('TYPE'), [('==', Name('RAW'))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([AssName('sublist', 'OP_ASSIGN')], Mod((Const('\n%s<ul>\n%s\n%s</ul>\n%s'), Tuple([Name('indent'), Name('sublist'), Name('indent'), Name('indent')]))))]))
Module(None, Stmt([If([(Name('alter_sql'), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('Module_six_moves_urllib_robotparser'), Getattr(Name('attr'), 'name'), Name('attr')], None, None))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '_errors'), 'OP_ASSIGN', [Name('field')])], CallFunc(Getattr(Name('self'), 'error_class'), [], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('unique_checks', 'OP_ASSIGN'), AssName('date_checks', 'OP_ASSIGN')])], CallFunc(Getattr(Getattr(Name('form'), 'instance'), '_get_unique_checks'), [Keyword('exclude', Name('exclude'))], None, None))]))
Module(None, Stmt([Assign([AssName('db', 'OP_ASSIGN')], CallFunc(Getattr(Name('router'), 'db_for_write'), [Getattr(Name('self'), 'cache_model_class')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'value', 'OP_ASSIGN')], Name('value'))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'm2m_data'), Name('save_m2m')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('data'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('length', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('num')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_delete'), [CallFunc(Getattr(Name('self'), '_key_to_file'), [Name('key'), Name('version')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('loader', 'OP_ASSIGN')], CallFunc(Name('MigrationLoader'), [Name('connection')], None, None))]))
try :
Module(None, Stmt([Assign([AssName('rest', 'OP_ASSIGN')], Slice(Name('rest'), 'OP_APPLY', CallFunc(Getattr(Name('m'), 'end'), [], None, None), None))]))
try :
Module(None, Stmt([Import([('copy', None)])]))
Module(None, Stmt([Assign([Subscript(Name('oldroot'), 'OP_ASSIGN', [Name('KEY')])], Name('key'))]))
Module(None, Stmt([Assign([AssName('new_environ', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'environ'), 'copy'), [], None, None))]))
Module(None, Stmt([Assign([AssName('ERRORS', 'OP_ASSIGN')], Dict([(Getattr(Name('errno'), 'EACCES'), Const("You don't have permission to access that port.")), (Getattr(Name('errno'), 'EADDRINUSE'), Const('That port is already in use.')), (Getattr(Name('errno'), 'EADDRNOTAVAIL'), Const("That IP address can't be assigned-to."))]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'html_name', 'OP_ASSIGN')], CallFunc(Getattr(Name('form'), 'add_prefix'), [Name('name')], None, None))]))
Module(None, Stmt([For(AssName('key', 'OP_ASSIGN'), Getattr(Name('self'), 'keyOrder'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'b', ['s'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'connection'), 'quit'), [], None, None))]))
Module(None, Stmt([If([(And([Compare(Name('m'), [('is not', Name('None'))]), Compare(Name('n'), [('is not', Name('None'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('to_py', 'OP_ASSIGN')], Getattr(CallFunc(Name('super'), [Name('ModelMultipleChoiceField'), Name('self')], None, None), 'to_python'))]))
else :
Module(None, Stmt([If([(Compare(Name('buffer_'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('HttpResponseNotAllowed'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([For(AssName('key', 'OP_ASSIGN'), CallFunc(Name('sorted'), [Name('user_settings')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Name('start_ipython'), [Keyword('argv', List(()))], None, None))]))
Module(None, Stmt([If([(Name('bcc'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('LocaleRegexURLResolver'), Name('self')], None, None), '__init__'), [Name('None'), Name('urlconf_name'), Name('default_kwargs'), Name('app_name'), Name('namespace')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('OrderedDict'), [Name('fields')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Return(Name('default'))]))
Module(None, Stmt([If([(Not(Name('chunk_size')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'ugettext', ['message'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Compare(Getattr(Name('self'), 'decimal_places'), [('is not', Name('None'))]), Compare(Name('decimals'), [('>', Getattr(Name('self'), 'decimal_places'))])]), Stmt([Pass()]))], None)]))
handler . startElement ( "entry" , self . item_attributes ( item ) )
Module(None, Stmt([If([(Getattr(Name('self'), 'require_all_fields'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('chunk_size', 'OP_ASSIGN')], Const(1024))]))
Module(None, Stmt([For(AssTuple([AssName('lineno', 'OP_ASSIGN'), AssName('line', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [CallFunc(Getattr(Name('content'), 'splitlines'), [Name('True')], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Class('SkipFile', [Name('UploadFileException')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(And([CallFunc(Name('isinstance'), [Name('field'), Getattr(Name('models'), 'TimeField')], None, None), Compare(CallFunc(Name('getattr'), [Name('obj'), Getattr(Name('field'), 'name')], None, None), [('is not', Name('None'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('type'), [Name('self')], None, None), '__bool__'), [Name('self')], None, None))]))
Module(None, Stmt([Assign([AssName('_iterkeys', 'OP_ASSIGN')], Const('iterkeys'))]))
Module(None, Stmt([Return(Name('text'))]))
Module(None, Stmt([If([(Name('incomment'), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([With(CallFunc(Name('open'), [Subscript(Name('options'), 'OP_APPLY', [Const('pidfile')]), Const('w')], None, None), AssName('fp', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'exit_command'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('callable'), [Name('limit_choices_to')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_truncate_html'), [Name('length'), Name('truncate'), Getattr(Name('self'), '_wrapped'), Name('length'), Name('True')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('path'), 'split'), [Const('\\'), Const(1)], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('ch', 'OP_ASSIGN'), AssName('escaped', 'OP_ASSIGN')])], CallFunc(Name('next'), [Name('pattern_iter')], None, None))]))
Module(None, Stmt([Assign([AssName('template', 'OP_ASSIGN')], CallFunc(Name('get_template'), [Name('template')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'allow_files', 'OP_ASSIGN'), AssAttr(Name('self'), 'allow_folders', 'OP_ASSIGN')])], Tuple([Name('allow_files'), Name('allow_folders')]))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([If([(Compare(Name('iso_input'), [('not in', Name('val'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('match', 'OP_ASSIGN'), CallFunc(Getattr(Name('tag_re'), 'finditer'), [Getattr(Name('self'), 'template_string')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(Name('old_style_list')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'addQuickElement'), [Const('None')], None, None))]))
except ValueError :
Module(None, Stmt([Function(None, 'byte2int', ['bs'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Subscript(Getattr(Name('django'), 'VERSION'), 'OP_APPLY', [UnarySub(Const(2))]), [('!=', Const('final'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Import([('importlib', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'handle_fk_field'), [Name('obj'), Name('field')], None, None))]))
Module(None, Stmt([Assign([AssName('func', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('func'), Const('_decorated_function'), Name('func')], None, None))]))
Module(None, Stmt([If([(Name('name'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('dummy_threading', 'threading')])]))
Module(None, Stmt([If([(Or([Not(Getattr(Name('self'), 'use_natural_primary_keys')), Not(CallFunc(Name('hasattr'), [Name('obj'), Const('natural_key')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'resolve_variable', ['path', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'write_message'), [Name('message')], None, None))]))
try :
Module(None, Stmt([Assign([AssName('i', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Assign([AssName('filter_func', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'find_filter'), [Name('filter_name')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'default_timeout', 'OP_ASSIGN')], Name('timeout'))]))
Module(None, Stmt([Class('warn_about_renamed_method', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('split'), 'append'), [Name('bit')], None, None))]))
Module(None, Stmt([If([(Compare(Name('option'), [('in', Name('options'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('unencoded_ampersands_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('&(?!(\\w+|#\\d+);)')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'sysid', 'OP_ASSIGN')], Name('sysid'))]))
Module(None, Stmt([If([(Name('can_fail'), Stmt([Pass()]))], None)]))
except AttributeError :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'endElement'), [Const('field')], None, None))]))
Module(None, Stmt([From('django.http.cookie', [('SimpleCookie', None), ('parse_cookie', None)], 0)]))
Module(None, Stmt([Assign([AssName('target_app_labels_only', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Import([('os', None)])]))
elif t . contents == 'comment' :
Module(None, Stmt([Assign([AssName('level', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'get'), [Const('level'), Name('None')], None, None))]))
Module(None, Stmt([Function(None, 'loads', ['self', 'data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('program', 'OP_ASSIGN')], Const('msgfmt'))]))
Module(None, Stmt([From('django.utils.encoding', [('force_str', None), ('force_text', None), ('iri_to_uri', None)], 0)]))
Module(None, Stmt([Function(None, 'time_format', ['value', 'format', 'use_l10n'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'close', ['self', 'kwargs'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([From('', [('Error', None), ('Tags', None), ('register', None)], 1)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('value'), 'astimezone'), [Name('timezone')], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('app_config', 'OP_ASSIGN'), AssName('model_list', 'OP_ASSIGN')]), Name('app_list'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Assign([AssName('nonlocal_root', 'OP_ASSIGN')], List([Name('root')]))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '_current'), 'OP_ASSIGN', [Getattr(Name('field'), 'name')])], ListComp(CallFunc(Name('m2m_value'), [Name('related')], None, None), [ListCompFor(AssName('related', 'OP_ASSIGN'), CallFunc(Getattr(CallFunc(Name('getattr'), [Name('obj'), Getattr(Name('field'), 'name')], None, None), 'iterator'), [], None, None), [])]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'fields', 'OP_ASSIGN')], CallFunc(Getattr(Name('copy'), 'deepcopy'), [Getattr(Name('self'), 'base_fields')], None, None))]))
Module(None, Stmt([Return(Tuple([Name('name'), Name('ser_fmt'), Name('cmp_fmt')]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('template_localtime'), [Name('value'), Keyword('use_tz', Getattr(Name('context'), 'use_tz'))], None, None))]))
Module(None, Stmt([If([(Name('app_names'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'invoked_for_django', 'OP_ASSIGN')], Name('True'))]))
try :
else :
Module(None, Stmt([Assign([AssName('connection', 'OP_ASSIGN')], Subscript(Name('connections'), 'OP_APPLY', [Subscript(Name('options'), 'OP_APPLY', [Const('database')])]))]))
Module(None, Stmt([Return(Tuple([CallFunc(Getattr(CallFunc(Getattr(Name('fp'), 'read'), [], None, None), 'decode'), [Getattr(Name('settings'), 'FILE_CHARSET')], None, None), Name('filepath')]))]))
Module(None, Stmt([Assign([AssName('__getitem__', 'OP_ASSIGN')], CallFunc(Name('new_method_proxy'), [Getattr(Name('operator'), 'getitem')], None, None))]))
Module(None, Stmt([Return(Mod((Const('%s-%s-%s'), Tuple([Name('y'), Name('m'), Name('d')]))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'flush'), [], None, None))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('form'), 'fields'), 'OP_ASSIGN', [Name('DELETION_FIELD_NAME')])], CallFunc(Name('BooleanField'), [Keyword('label', CallFunc(Name('_'), [Const('Delete')], None, None)), Keyword('required', Name('False'))], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('lineno', 'OP_ASSIGN'), AssName('offset', 'OP_ASSIGN')])], CallFunc(Getattr(Name('self'), 'getpos'), [], None, None))]))
try :
Module(None, Stmt([Assign([AssName('writer', 'OP_ASSIGN')], CallFunc(Name('MigrationWriter'), [Name('new_migration')], None, None))]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], Slice(Name('s'), 'OP_APPLY', Const(1), None))]))
Module(None, Stmt([Function(None, 'smart_split', ['text'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'delete_first_token'), [], None, None))]))
elif field . rel and isinstance ( field . rel , models . ManyToOneRel ) :
Module(None, Stmt([Import([('io', None)])]))
Module(None, Stmt([Function(None, 'chunks', ['self', 'chunk_size'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Assign([AssName('link_target_attribute_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('(<a [^>]*?)target=[^\\s>]+')], None, None))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('_trans'), 'deactivate_all'), [], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('attrs'), 'OP_ASSIGN', [Const('error_messages')])], Name('error_messages'))]))
Module(None, Stmt([Assign([AssName('lookup_view', 'OP_ASSIGN')], CallFunc(Name('get_callable'), [Name('lookup_view'), Name('True')], None, None))]))
Module(None, Stmt([Assign([AssName('process_all', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('all')], None, None))]))
Module(None, Stmt([If([(Compare(Name('version'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('errors', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('model'), 'check'), [], None, Name('kwargs')), [ListCompFor(AssName('model', 'OP_ASSIGN'), CallFunc(Getattr(Name('apps'), 'get_models'), [], None, None), [ListCompIf(Or([Compare(Name('app_configs'), [('is', Name('None'))]), Compare(Getattr(Getattr(Name('model'), '_meta'), 'app_config'), [('in', Name('app_configs'))])]))])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('kwargs'), 'update'), [Getattr(Name('self'), 'default_args')], None, None))]))
Module(None, Stmt([If([(Compare(Name('sub_tried'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('use_reloader', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('use_reloader')], None, None))]))
Module(None, Stmt([If([(Compare(Name('start'), [('>', Name('upto'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'required', 'widget', 'label', 'initial', 'help_text', 'error_messages', 'show_hidden_initial', 'validators', 'localize', 'label_suffix'], [Name('True'), Name('None'), Name('None'), Name('None'), Const(''), Name('None'), Name('False'), List(()), Name('False'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Name('exclude'), Compare(Getattr(Name('f'), 'name'), [('in', Name('exclude'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('addr', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('Header'), [Name('addr'), Name('encoding')], None, None), 'encode'), [], None, None))]))
Module(None, Stmt([Return(Name('data'))]))
Module(None, Stmt([Function(None, 'find_commands', ['management_dir'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([AugAssign(Subscript(Name('attrs_plus'), 'OP_APPLY', [Const('id')]), '+=', CallFunc(Getattr(Const('_{0}'), 'format'), [Name('i')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('attrs'), 'OP_ASSIGN', [Const('fields')])], Name('fields'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'old_language', 'OP_ASSIGN')], CallFunc(Name('get_language'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('TemporaryUploadedFile'), Name('self')], None, None), '__init__'), [Name('file'), Name('name'), Name('content_type'), Name('size'), Name('charset'), Name('content_type_extra')], None, None))]))
Module(None, Stmt([For(AssName('basedir', 'OP_ASSIGN'), Name('basedirs'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'get_serializer_formats', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('msg_count'))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const("The protocol '%s' is unknown. Supported: %s"), Tuple([Name('protocol'), CallFunc(Name('list'), [Name('ip_address_validator_map')], None, None)])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('can_import_settings', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("Only 'silent' flag is allowed after cycle's name, not '%s'."), Subscript(Name('args'), 'OP_APPLY', [UnarySub(Const(1))])))], None, None), None, None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('self'), 'options'), 'get'), [Const('indent')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('message'), Name('ValidationError')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('not_installed_models', 'OP_ASSIGN')], CallFunc(Name('set'), [CallFunc(Getattr(Name('pending_references'), 'keys'), [], None, None)], None, None))]))
@ register . filter ( is_safe = True , needs_autoescape = True )
Module(None, Stmt([If([(Not(Name('lib')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'argv', 'OP_ASSIGN')], Or([Name('argv'), Slice(Getattr(Name('sys'), 'argv'), 'OP_APPLY', None, None)]))]))
Module(None, Stmt([While(Compare(CallFunc(Getattr(Name('new_name'), 'find'), [Const('__')], None, None), [('>=', Const(0))]), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('warn_msg', 'OP_ASSIGN')], Mod((Const("The translator-targeted comment '%s' (%sline %d) was ignored, because it wasn't the last item on the line."), Tuple([Name('c'), Name('filemsg'), Name('comment_lineno_cache')]))))]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('translation'), 'activate'), [Const('en-us')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('signals'), 'request_finished'), 'send'), [Keyword('sender', Getattr(Name('self'), '_handler_class'))], None, None))]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('    Processing %s.%s model\n'), Tuple([Name('app_name'), Getattr(Getattr(Name('model'), '_meta'), 'object_name')])))], None, None))]))
Module(None, Stmt([Assign([AssName('translators_comment_start', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('_active', 'OP_ASSIGN')], CallFunc(Name('local'), [], None, None))]))
Module(None, Stmt([Assign([AssName('parent_pat', 'OP_ASSIGN')], Getattr(Getattr(Name('pattern'), 'regex'), 'pattern'))]))
Module(None, Stmt([Class('SuspiciousFileOperation', [Name('SuspiciousOperation')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssTuple([AssName('_', 'OP_ASSIGN'), AssName('params', 'OP_ASSIGN')])], CallFunc(Getattr(Name('cgi'), 'parse_header'), [Name('content_disposition')], None, None))]))
Module(None, Stmt([Function(None, 'unclosed_block_tag', ['self', 'parse_until'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'error'), [Mod((Const('junk characters in start tag: %r'), Tuple([Slice(Slice(Name('rawdata'), 'OP_APPLY', Name('k'), Name('endpos')), 'OP_APPLY', None, Const(20))])))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('validate_ipv4_address'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'tokens', 'OP_ASSIGN')], Name('tokens'))]))
Module(None, Stmt([Function(None, '__getitem__', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], Getattr(Name('content'), 'name'))]))
elif isinstance ( template , six . string_types ) :
Module(None, Stmt([Function(None, '_split_statements', ['content'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('related'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('created_models'))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'position', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'lineno', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'full_clean'), [], None, None))]))
except ValueError :
Module(None, Stmt([Return(CallFunc(Name('DefusedExpatParser'), [], None, None))]))
Module(None, Stmt([Function(None, 'indent', ['self', 'level'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(CallFunc(Getattr(Name('unicodedata'), 'normalize'), [Const('NFKD'), Name('value')], None, None), 'encode'), [Const('ascii'), Const('ignore')], None, None), 'decode'), [Const('ascii')], None, None))]))
Module(None, Stmt([If([(Not(Getattr(Name('settings'), 'configured')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('random'), 'seed'), [CallFunc(Getattr(CallFunc(Getattr(Name('hashlib'), 'sha256'), [CallFunc(Getattr(Mod((Const('%s%s%s'), Tuple([CallFunc(Getattr(Name('random'), 'getstate'), [], None, None), CallFunc(Getattr(Name('time'), 'time'), [], None, None), Getattr(Name('settings'), 'SECRET_KEY')]))), 'encode'), [Const('utf-8')], None, None)], None, None), 'digest'), [], None, None)], None, None))]))
Module(None, Stmt([From('django.template.loader', [('BaseLoader', None)], 0)]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'nodelist_true', 'OP_ASSIGN'), AssAttr(Name('self'), 'nodelist_false', 'OP_ASSIGN')])], Tuple([Name('nodelist_true'), Name('nodelist_false')]))]))
@ register . filter ( is_safe = False )
Module(None, Stmt([Function(None, 'handle', ['self', 'fixture_labels', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('settings'), 'STATIC_URL'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('dirname', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'dirname'), [Name('filename')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'nodelist_empty', 'OP_ASSIGN')], CallFunc(Name('NodeList'), [], None, None))]))
Module(None, Stmt([For(AssName('field', 'OP_ASSIGN'), Getattr(Name('self'), 'fields'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'use_ipv6', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('URLField'), Name('self')], None, None), 'to_python'), [Name('value')], None, None))]))
Module(None, Stmt([Return(Name('new_class'))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of Storage must provide a url() method')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('space', 'OP_ASSIGN')], Add((CallFunc(Getattr(Slice(Name('line'), 'OP_APPLY', None, Add((Name('max_width'), Const(1)))), 'rfind'), [Const(' ')], None, None), Const(1))))]))
Module(None, Stmt([Assign([AssName('tempdir', 'OP_ASSIGN')], CallFunc(Getattr(Name('tempfile'), 'mkdtemp'), [Keyword('prefix', Name('prefix')), Keyword('suffix', Const('_download'))], None, None))]))
Module(None, Stmt([For(AssName('format', 'OP_ASSIGN'), Getattr(Name('settings'), 'SERIALIZATION_MODULES'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'get_default_prefix', ['cls'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('stream', 'OP_ASSIGN')], CallFunc(Name('StringIO'), [Name('stream_or_string')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'objects'), 'append'), [CallFunc(Getattr(Name('self'), 'get_dump_object'), [Name('obj')], None, None)], None, None))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'sysid', 'OP_ASSIGN')], Name('sysid'))]))
Module(None, Stmt([Assign([AssName('timezone', 'OP_ASSIGN')], CallFunc(Name('get_current_timezone'), [], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('datetime'), 'datetime'), 'combine'), [], Name('data_list'), None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'cyclevars', 'OP_ASSIGN')], Name('cyclevars'))]))
Module(None, Stmt([Assign([AssName('new', 'OP_ASSIGN')], Add((Const('#: '), Name('orig_file'))))]))
Module(None, Stmt([Assign([AssName('code', 'OP_ASSIGN')], Const('invalid'))]))
Module(None, Stmt([Function(None, '__cast', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'enter_command', ['self', 'command', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('widget_value', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('mod', 'OP_ASSIGN')], CallFunc(Name('import_module'), [Name('taglib_module')], None, None))]))
Module(None, Stmt([Assign([AssName('callback', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('urls'), Mod((Const('handler%s'), Name('view_type')))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'extend'), [CallFunc(Getattr(Getattr(Name('connection'), 'ops'), 'prepare_sql_script'), [CallFunc(Getattr(Name('fp'), 'read'), [], None, None), Keyword('_allow_fallback', Name('True'))], None, None)], None, None))]))
Module(None, Stmt([If([(Name('logging_config'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('requires_system_checks', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssName('out', 'OP_ASSIGN')], CallFunc(Name('StringIO'), [Const('')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('sys'), 'path'), 'insert'), [Const(0), Getattr(Name('options'), 'pythonpath')], None, None))]))
return value if six . PY2 else value . encode ( ISO_8859_1 ) . decode ( UTF_8 )
Module(None, Stmt([Assign([AssName('checkbox_id', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'clear_checkbox_id'), [Name('checkbox_name')], None, None))]))
else :
Module(None, Stmt([Assign([AssName('etags', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(CallFunc(Getattr(Name('e'), 'encode'), [Const('ascii')], None, None), 'decode'), [Const('unicode_escape')], None, None), [ListCompFor(AssName('e', 'OP_ASSIGN'), Name('etags'), [])]))]))
Module(None, Stmt([Assign([AssName('resolved_path', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('handler', 'OP_ASSIGN')], CallFunc(Getattr(Name('logging'), 'StreamHandler'), [], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('s'))]))
Module(None, Stmt([Assign([AssName('filename', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('to_path'), Name('name')], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('unique_check')], None, None), [('==', Const(1))]), Stmt([Pass()]))], None)]))
else :
@ stringfilter
Module(None, Stmt([Function(None, 'clear_script_prefix', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('\r\n'), 'join'), [Name('headers')], None, None))]))
Module(None, Stmt([If([(Compare(Name('field_type'), [('==', Const('BooleanField('))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'add', ['self', 'key', 'value', 'timeout', 'version'], [Name('DEFAULT_TIMEOUT'), Name('None')], 0, None, Stmt([Pass()]))]))
@ register . filter ( is_safe = False )
Module(None, Stmt([Assign([AssName('all_date_checks', 'OP_ASSIGN')], CallFunc(Getattr(Name('all_date_checks'), 'union'), [CallFunc(Name('set'), [Name('date_checks')], None, None)], None, None))]))
Module(None, Stmt([If([(Name('retval'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('id_'), Stmt([Pass()]))], None)]))
except UnicodeDecodeError :
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), '__dict__'), 'OP_ASSIGN', [Const('_wrapped')])], Name('value'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('options'), 'update'), [Name('kwargs')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('%s. Are you sure your INSTALLED_APPS setting is correct?'), Name('e')))], None, None), None, None)]))
Module(None, Stmt([Pass()]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_delete'), [Name('fname')], None, None))]))
else :
Module(None, Stmt([Return(Name('res'))]))
Module(None, Stmt([Assign([AssName('potfile', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('path'), Mod((Const('%s.pot'), CallFunc(Name('str'), [Getattr(Name('self'), 'domain')], None, None)))], None, None))]))
Module(None, Stmt([Assign([AssName('input_type', 'OP_ASSIGN')], Const('email'))]))
Module(None, Stmt([If([(CallFunc(Name('callable'), [Name('key_func')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Getattr(Name('six'), 'PY2'), CallFunc(Name('isinstance'), [Name('rawdata'), Getattr(Name('six'), 'text_type')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('Meta', 'OP_ASSIGN')], CallFunc(Name('type'), [CallFunc(Name('str'), [Const('Meta')], None, None), Name('parent'), Name('attrs')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('name', 'OP_ASSIGN'), AssName('val', 'OP_ASSIGN')])], CallFunc(Name('forbid_multi_line_headers'), [Name('name'), Name('val'), Getattr(Name('self'), 'encoding')], None, None))]))
Module(None, Stmt([Assign([AssName('year_days', 'OP_ASSIGN')], List([Name('None'), Const(0), Const(31), Const(59), Const(90), Const(120), Const(151), Const(181), Const(212), Const(243), Const(273), Const(304), Const(334)]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'source'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('force_text'), [Name('url')], None, None))]))
Module(None, Stmt([Function(None, 'render', ['self', 'name', 'value', 'attrs', 'choices'], [Name('None'), Tuple(())], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Assign([AssName('compare', 'OP_ASSIGN')], Lambda(['self', 'a', 'b'], [], 0, Compare(Name('a'), [('>', Name('b'))])))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('known_models'), 'add'), [Name('model')], None, None))]))
Module(None, Stmt([If([(Compare(Name('mimetype'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
except DecimalException :
Module(None, Stmt([From('django.core.management.templates', [('TemplateCommand', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('self'), Name('attr'), Name('value')], None, None))]))
else :
msg += "System check identified %s (%s silenced)." % (  "no issues" if visible_issue_count == 0 else  "1 issue" if visible_issue_count == 1 else  "%s issues" % visible_issue_count ,  len ( all_issues ) - visible_issue_count ,  )
Module(None, Stmt([If([(Or([And([Getattr(Name('self'), 'validate_max'), Compare(Sub((CallFunc(Getattr(Name('self'), 'total_form_count'), [], None, None), CallFunc(Name('len'), [Getattr(Name('self'), 'deleted_forms')], None, None))), [('>', Getattr(Name('self'), 'max_num'))])]), Compare(Subscript(Getattr(Getattr(Name('self'), 'management_form'), 'cleaned_data'), 'OP_APPLY', [Name('TOTAL_FORM_COUNT')]), [('>', Getattr(Name('self'), 'absolute_max'))])]), Stmt([Pass()]))], None)]))
except InputStreamExhausted :
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([If([(Compare(Name('block_context'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'writer_leaves'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('NodeList'), [], None, None))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([If([(Getattr(Name('self'), '_is_rendered'), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([Subscript(Name('defaults'), 'OP_ASSIGN', [Const('files')])], Getattr(Name('self'), 'files'))]))
except ValueError :
@ register . filter ( is_safe = False )
Module(None, Stmt([Function(None, 'add_truncation_text', ['self', 'text', 'truncate'], [Name('None')], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Function(None, 'prepare_value', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY2'), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('model', 'OP_ASSIGN'), CallFunc(Getattr(Name('router'), 'get_migratable_models'), [Name('app_config'), Getattr(Name('connection'), 'alias'), Keyword('include_auto_created', Name('True'))], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Name('result'), [('is not', Name('root'))]), Stmt([Pass()]))], None)]))
initial_value = initial if initial is not None else ''
Module(None, Stmt([Function(None, 'open', ['self', 'mode'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('d', 'OP_ASSIGN'), Getattr(Name('self'), 'dicts'), Stmt([Pass()]), None)]))
Module(None, Stmt([While(And([Compare(Name('i'), [('<', CallFunc(Name('len'), [Name('subject')], None, None))]), Compare(Subscript(Name('subject'), 'OP_APPLY', [Name('i')]), [('!=', Name('c'))])]), Stmt([Pass()]), None)]))
Module(None, Stmt([With(CallFunc(Getattr(Name('io'), 'open'), [Name('potfile'), Const('r'), Keyword('encoding', Const('utf-8'))], None, None), AssName('fp', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'custom_sql_for_model', ['model', 'style', 'connection'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('node', 'OP_ASSIGN'), Name('self'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'startElement'), [Const('feed'), CallFunc(Getattr(Name('self'), 'root_attributes'), [], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'cache_info', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'save_existing', ['self', 'form', 'instance', 'commit'], [Name('True')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'changed_objects', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('filters', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'get'), [Const('filters'), Name('EMPTY_DICT')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_start_relational_field'), [Name('field')], None, None))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), 'keep_pot')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('obj_pk'))]))
Module(None, Stmt([Assign([AssName('SINGLE_BRACE_START', 'OP_ASSIGN')], Const('{'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('QueryDict'), Name('self')], None, None), '__delitem__'), [Name('key')], None, None))]))
try :
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'read'), [Name('chunk_size')], None, None))]))
Module(None, Stmt([Assign([AssName('date_data', 'OP_ASSIGN')], Tuple([CallFunc(Name('getattr'), [Subscript(Getattr(Name('form'), 'cleaned_data'), 'OP_APPLY', [Name('unique_for')]), Name('lookup')], None, None)]))]))
Module(None, Stmt([Function(None, '__setitem__', ['self', 'header', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('self'), Mod((Const('clean_%s'), Name('name')))], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('BaseModelFormSet'), Name('self')], None, None), 'initial_form_count'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'code', 'OP_ASSIGN')], Name('code'))]))
Module(None, Stmt([Return(Subscript(CallFunc(Getattr(Getattr(Name('self'), '_headers'), 'get'), [CallFunc(Getattr(Name('header'), 'lower'), [], None, None), Tuple([Name('None'), Name('alternate')])], None, None), 'OP_APPLY', [Const(1)]))]))
elif options [ 'method' ] in ( 'thread' , 'threaded' ) :
Module(None, Stmt([If([(Compare(Getattr(Name('opts'), 'fields'), [('==', Name('ALL_FIELDS'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__bool__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('input_type', 'OP_ASSIGN')], Const('hidden'))]))
elif not isinstance ( file_name , six . string_types ) and is_iterable ( file_name ) :
Module(None, Stmt([Return(Name('klass'))]))
Module(None, Stmt([From('django.core.mail.message', [('EmailMessage', None), ('EmailMultiAlternatives', None), ('SafeMIMEText', None), ('SafeMIMEMultipart', None), ('DEFAULT_ATTACHMENT_MIME_TYPE', None), ('make_msgid', None), ('BadHeaderError', None), ('forbid_multi_line_headers', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'endElement'), [Const('field')], None, None))]))
Module(None, Stmt([Assign([AssName('date_value', 'OP_ASSIGN')], CallFunc(Getattr(Name('datetime_safe'), 'new_date'), [Name('date_value')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'get_fqdn'), [], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('formats'), 'sanitize_separators'), [Name('value')], None, None))]))
Module(None, Stmt([From('django.template.base', [('TemplateDoesNotExist', None)], 0)]))
Module(None, Stmt([Assign([AssName('isatty', 'OP_ASSIGN')], CallFunc(Name('property'), [Lambda(['self'], [], 0, Getattr(Getattr(Name('self'), 'file'), 'isatty'))], None, None))]))
except ( IndexError ,  ValueError ,  KeyError ,  TypeError ) :
Module(None, Stmt([AugAssign(Name('i'), '+=', Const(1))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Mod((Const('Cache key contains characters that will cause errors if used with memcached: %r'), Name('key'))), Name('CacheKeyWarning')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'deleted_objects', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'sanitize_address', ['addr', 'encoding'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('dict'), 'pop'), [Name('self'), Name('key'), Name('default')], None, None))]))
Module(None, Stmt([Assign([AssName('serializers', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Function(None, '__call__', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('t'), 'token_type'), [('==', Name('TOKEN_BLOCK'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('old_path', 'OP_ASSIGN')], CallFunc(Getattr(Name('path'), 'join'), [Name('root'), Name('filename')], None, None))]))
Module(None, Stmt([For(AssName('ext', 'OP_ASSIGN'), Name('extensions'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Subscript(Getattr(Name('self'), 'forms'), 'OP_APPLY', [Const(0)]), 'is_multipart'), [], None, None))]))
Module(None, Stmt([Assign([AssName('request_started', 'OP_ASSIGN')], CallFunc(Name('Signal'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('sys'), 'exit'), [Const(0)], None, None))]))
Module(None, Stmt([Function(None, 'extra_forms', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Add((Const('-'), Name('value'))))]))
Module(None, Stmt([Return(CallFunc(Name('force_str'), [Mod((Const('<%s\npath:%s,\nGET:%s,\nPOST:%s,\nCOOKIES:%s,\nMETA:%s>'), Tuple([Getattr(Getattr(Name('request'), '__class__'), '__name__'), Name('path'), CallFunc(Getattr(Name('six'), 'text_type'), [Name('get')], None, None), CallFunc(Getattr(Name('six'), 'text_type'), [Name('post')], None, None), CallFunc(Getattr(Name('six'), 'text_type'), [Name('cookies')], None, None), CallFunc(Getattr(Name('six'), 'text_type'), [Name('meta')], None, None)])))], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('KeyError'), [Mod((Const("Key %r not found in '%s'"), Tuple([Name('name'), Getattr(Getattr(Name('self'), '__class__'), '__name__')])))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('MIMEText'), '__init__'), [Name('self'), Name('text'), Name('subtype'), Name('None')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('node'), 'source', 'OP_ASSIGN')], Getattr(Name('token'), 'source'))]))
Module(None, Stmt([Return(CallFunc(Name('timedelta'), [Const(0)], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('view_name', 'OP_ASSIGN')], Getattr(Name('callback'), '__name__'))]))
Module(None, Stmt([For(AssName('basedir', 'OP_ASSIGN'), Name('basedirs'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'dst', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'connection'), 'login'), [Getattr(Name('self'), 'username'), Getattr(Name('self'), 'password')], None, None))]))
Module(None, Stmt([Assign([AssName('migrations_directory', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'dirname'), [Getattr(Name('writer'), 'path')], None, None))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Return(CallFunc(Name('smart_text'), [Or([Getattr(Name('self'), 'name'), Const('')])], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('force_text'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssTuple([AssName('ch', 'OP_ASSIGN'), AssName('escaped', 'OP_ASSIGN')])], CallFunc(Name('next'), [Name('pattern_iter')], None, None))]))
except AttributeError :
Module(None, Stmt([Assign([AssName('new_matches', 'OP_ASSIGN')], CallFunc(Name('normalize'), [Add((Name('parent_pat'), Name('pat')))], None, None))]))
Module(None, Stmt([Return(Name('t'))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('io'), 'open'), [Name('work_file'), Const('w'), Keyword('encoding', Const('utf-8'))], None, None), AssName('fp', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'can_write'), 'acquire'), [], None, None))]))
Module(None, Stmt([Assign([AssName('namemap', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('with'), Dict(())], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid_choice')]), Keyword('code', Const('invalid_choice'))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('table_names', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const("Cache table '%s' created."), Name('tablename')))], None, None))]))
Module(None, Stmt([Assign([AssName('domain_part', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('domain_part'), 'encode'), [Const('idna')], None, None), 'decode'), [Const('ascii')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'endElement'), [Const('rss')], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('self'), Const('_deleted_form_indexes')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([While(Name('RUN_RELOADER'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'widget_attrs', ['self', 'widget'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('filename'), 'encode'), [Const('ascii')], None, None))]))
Module(None, Stmt([Function(None, '__prepare_class__', ['cls'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('post_sql_fields', 'OP_ASSIGN')], ListComp(Name('f'), [ListCompFor(AssName('f', 'OP_ASSIGN'), Getattr(Name('opts'), 'local_fields'), [ListCompIf(CallFunc(Name('hasattr'), [Name('f'), Const('post_create_sql')], None, None))])]))]))
Module(None, Stmt([If([(And([CallFunc(Name('isinstance'), [Name('value'), Getattr(Name('six'), 'string_types')], None, None), Compare(Name('value'), [('!=', Name('ALL_FIELDS'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Unknown level: %r'), Name('level')))], None, None), None, None)]))
Module(None, Stmt([If([(Name('value'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('compare', 'OP_ASSIGN')], Lambda(['self', 'a', 'b'], [], 0, Compare(Name('a'), [('>', Name('b'))])))]))
except ValidationError :
Module(None, Stmt([Assign([AssName('MONTHS_3', 'OP_ASSIGN')], Dict([(Const(1), CallFunc(Name('_'), [Const('jan')], None, None)), (Const(2), CallFunc(Name('_'), [Const('feb')], None, None)), (Const(3), CallFunc(Name('_'), [Const('mar')], None, None)), (Const(4), CallFunc(Name('_'), [Const('apr')], None, None)), (Const(5), CallFunc(Name('_'), [Const('may')], None, None)), (Const(6), CallFunc(Name('_'), [Const('jun')], None, None)), (Const(7), CallFunc(Name('_'), [Const('jul')], None, None)), (Const(8), CallFunc(Name('_'), [Const('aug')], None, None)), (Const(9), CallFunc(Name('_'), [Const('sep')], None, None)), (Const(10), CallFunc(Name('_'), [Const('oct')], None, None)), (Const(11), CallFunc(Name('_'), [Const('nov')], None, None)), (Const(12), CallFunc(Name('_'), [Const('dec')], None, None))]))]))
Module(None, Stmt([Return(Name('self'))]))
Module(None, Stmt([Subscript(Getattr(Name('self'), 'tokens'), 'OP_DELETE', [Const(0)])]))
Module(None, Stmt([Assign([AssName('usage', 'OP_ASSIGN')], Mod((Const('%%prog %s [options] %s'), Tuple([Name('subcommand'), Getattr(Name('self'), 'args')]))))]))
Module(None, Stmt([If([(Compare(Subscript(Name('bits'), 'OP_APPLY', [Const(4)]), [('!=', Const('as'))]), Stmt([Pass()]))], None)]))
for middleware_method in self . _exception_middleware :
Module(None, Stmt([If([(CallFunc(Getattr(Name('fd'), 'isatty'), [], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Subscript(Name('text'), 'OP_APPLY', [Const(0)]), [('==', Const('#'))]), Stmt([Pass()]))], None)]))
if token . contents == 'else' :
Module(None, Stmt([Function(None, 'chars', ['self', 'num', 'truncate', 'html'], [Name('None'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assert(Compare(Name('content'), [('is', Name('None'))]), None)]))
Module(None, Stmt([Discard(CallFunc(Name('write'), [Name('sep')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('map'), [Getattr(Name('self'), 'make_bytes'), Getattr(Name('self'), '_iterator')], None, None))]))
Module(None, Stmt([Assign([AssName('chunks', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'run_shell', ['self', 'shell'], [Name('None')], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([If([(Compare(Name('ch'), [('not in', Tuple([Const('<'), Const('=')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'to_locale', ['language'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'add', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('obj_dict', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), '__dict__'), 'copy'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'token', 'OP_ASSIGN')], Name('token'))]))
except ( TypeError , VariableDoesNotExist ) :
Module(None, Stmt([From('django.db', [('connection', None)], 0)]))
Module(None, Stmt([If([(Compare(Subscript(Name('config'), 'OP_APPLY', [Const('version')]), [('!=', Const(1))]), Stmt([Pass()]))], None)]))
response = self . handle_uncaught_exception ( request , resolver , sys . exc_info ( ) )
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Runs over the entire source tree of the current directory and pulls out all strings marked for translation. It creates (or updates) a message file in the conf/locale (in the django tree) or locale (for projects and applications) directory.\n\nYou must run this command with one of either the --locale, --exclude or --all options.'))]))
try :
Module(None, Stmt([Assign([AssName('replacement', 'OP_ASSIGN')], CallFunc(Getattr(Name('_BROWSERS_DEPRECATED_LOCALES'), 'get'), [Name('lang_code')], None, None))]))
Module(None, Stmt([Assign([AssName('transfer_encoding', 'OP_ASSIGN')], CallFunc(Getattr(Name('meta_data'), 'get'), [Const('content-transfer-encoding')], None, None))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
try :
Module(None, Stmt([For(AssName('path', 'OP_ASSIGN'), Name('data'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('option', 'OP_ASSIGN')], Const('--testrunner='))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('_module'), Name('attr')], None, None))]))
Module(None, Stmt([If([(Compare(Name('language_code'), [('not in', Getattr(Name('self'), '_regex_dict'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Compare(Getattr(Name('self'), 'value'), [('==', Getattr(Name('self'), 'choice_value'))]))]))
Module(None, Stmt([Function(None, '_iterlists', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'print_help'), [], None, None))]))
Module(None, Stmt([Function(None, 'get_current_timezone', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('invalid_apps', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('cc', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Name('value')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Const('max-age'), [('in', Name('cc'))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('e'), Const('django_template_source')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('errors'), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([From('django.core', [('signals', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('widgets'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('stat', 'OP_ASSIGN')], CallFunc(Getattr(Name('os'), 'stat'), [Name('filename')], None, None))]))
Module(None, Stmt([Assign([AssName('prefixed', 'OP_ASSIGN')], Add((Name('name'), Const('.'))))]))
Module(None, Stmt([If([(Name('termios'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'to_locale', ['language'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('matches', 'OP_ASSIGN')], CallFunc(Getattr(Name('filter_re'), 'finditer'), [Name('token')], None, None))]))
Module(None, Stmt([Return(Name('None'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'stream', 'OP_ASSIGN')], CallFunc(Name('open'), [CallFunc(Getattr(Name('self'), '_get_filename'), [], None, None), Const('ab')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('iter'), [CallFunc(CallFunc(Name('getattr'), [Name('d'), Name('_iteritems')], None, None), [], None, Name('kw'))], None, None))]))
Module(None, Stmt([Return(Compare(CallFunc(Name('bool'), [Name('initial')], None, None), [('!=', CallFunc(Name('bool'), [Name('data')], None, None))]))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], Name('s1'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'name', 'old_mod', 'new_mod', 'old_attr', 'new_attr'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Const("'autoescape' argument should be 'on' or 'off'")], None, None), None, None)]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'get_valid_name', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('number')])], Name('number_value'))]))
@ python_2_unicode_compatible
Module(None, Stmt([Assign([AssName('content', 'OP_ASSIGN')], CallFunc(Name('message_from_string'), [Name('content')], None, None))]))
except KeyError :
Module(None, Stmt([Assign([AssName('tok', 'OP_ASSIGN')], CallFunc(Getattr(Name('tok'), 'replace'), [Const('\\'), Const('U')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('trans_bit'), 'append'), [Name('bit')], None, None))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_get_model', ['model_identifier'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('filter_func'), Name('attr'), Name('value')], None, None))]))
Module(None, Stmt([Return(Name('obj_pk'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('IPAddressField'), Name('self')], None, None), '__init__'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([AugAssign(Name('chunk'), '+=', Name('over_chunk'))]))
else :
else :
Module(None, Stmt([Function(None, 'pluralize', ['value', 'arg'], [Const('s')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Name('bytes')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('_templatetags_modules'), 'append'), [Name('templatetag_module')], None, None))]))
Module(None, Stmt([Assign([AssName('f', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('ImageField'), Name('self')], None, None), 'to_python'), [Name('data')], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], Name('new_result'))]))
Module(None, Stmt([Assign([AssName('template_source_loaders', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('start', 'OP_ASSIGN')], CallFunc(Getattr(Name('non_capturing_groups'), 'pop'), [], None, None))]))
Module(None, Stmt([Return(Name('value'))]))
finally :
Module(None, Stmt([Return(Name('obj_dict'))]))
Module(None, Stmt([If([(Name('has_bz2'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('format_html'), [Const('<input{0} />'), CallFunc(Name('flatatt'), [Name('final_attrs')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('TOKEN_COMMENT', 'OP_ASSIGN')], Const(3))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'extend'), [CallFunc(Name('custom_sql_for_model'), [Name('model'), Name('style'), Name('connection')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('dir_suffix', 'OP_ASSIGN')], Mod((Const('%s*'), Getattr(Name('os'), 'sep'))))]))
Module(None, Stmt([Function(None, 'get_language_info', ['lang_code'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('template', 'OP_ASSIGN')], CallFunc(Name('get_template_from_string'), [Name('source'), Name('origin'), Name('template_name')], None, None))]))
Module(None, Stmt([Function(None, 'end_object', ['self', 'obj'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Name('auto_id'), Compare(Const('id'), [('not in', Name('attrs'))]), Compare(Const('id'), [('not in', Getattr(Name('widget'), 'attrs'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(Name('self')), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Function(None, 'striptags', ['value'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([If([(And([Not(Name('new_method')), Name('old_method')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Assign([AssName('TestRunner', 'OP_ASSIGN')], CallFunc(Name('get_runner'), [Name('settings'), CallFunc(Getattr(Name('options'), 'get'), [Const('testrunner')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Assign([AssName('rendering_attrs', 'OP_ASSIGN')], Add((Getattr(Name('SimpleTemplateResponse'), 'rendering_attrs'), List([Const('_request'), Const('_current_app')]))))]))
Module(None, Stmt([Assign([AssName('expiry', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'get_backend_timeout'), [Name('timeout')], None, None))]))
Module(None, Stmt([Return(ListComp(CallFunc(Name('to_py'), [Name('val')], None, None), [ListCompFor(AssName('val', 'OP_ASSIGN'), Name('value'), [])]))]))
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Slice(Name('p'), 'OP_APPLY', Add((Name('i'), Const(1))), None), 'strip'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('urlresolvers'), 'set_urlconf'), [Name('urlconf')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('self'), 'OP_ASSIGN', [Const('Location')])], CallFunc(Name('iri_to_uri'), [Name('redirect_to')], None, None))]))
Module(None, Stmt([Discard(Tuple([CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--liveserver'), Keyword('action', Const('store')), Keyword('dest', Const('liveserver')), Keyword('default', Name('None')), Keyword('help', Const('Overrides the default address where the live server (used with LiveServerTestCase) is expected to run from. The default value is localhost:8081.'))], None, None)]))]))
Module(None, Stmt([Assign([AssName('form', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'forms'), 'OP_APPLY', [Name('i')]))]))
elif isinstance ( message , list ) :
Module(None, Stmt([Assign([AssName('fp', 'OP_ASSIGN')], CallFunc(Getattr(Name('six'), 'BytesIO'), [], None, None))]))
Module(None, Stmt([Raise(CallFunc(Getattr(Name('parser'), 'error_class'), [Mod((Const("Not expecting '%s' as infix operator in if tag."), Getattr(Name('self'), 'id')))], None, None), None, None)]))
Module(None, Stmt([For(AssName('location', 'OP_ASSIGN'), Name('format_locations'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'validators'), 'append'), [CallFunc(Getattr(Name('validators'), 'MaxValueValidator'), [Name('max_value')], None, None)], None, None))]))
Module(None, Stmt([Pass()]))
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('args'), Keyword('nargs', Const('*'))], None, None))]))
Module(None, Stmt([Assign([AssName('commands_dict', 'OP_ASSIGN')], CallFunc(Getattr(Name('collections'), 'defaultdict'), [Lambda((), (), 0, List(()))], None, None))]))
Module(None, Stmt([Return(Name('encoding'))]))
Module(None, Stmt([Assign([AssAttr(Name('f'), 'required', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('Field'), 'validate'), [Name('self'), Name('value')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('django'), 'get_version'), [], None, None))]))
Module(None, Stmt([Continue()]))
else :
try :
Module(None, Stmt([Raise(CallFunc(Name('InvalidTemplateLibrary'), [Const('Unsupported arguments to Library.filter: (%r, %r)'), Tuple([Name('name'), Name('filter_func')])], None, None), None, None)]))
try :
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Name('errors')], None, None), None, None)]))
Module(None, Stmt([Return(Subscript(CallFunc(Getattr(Getattr(Name('self'), 'data'), 'isocalendar'), [], None, None), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([If([(And([Compare(Name('i'), [('>=', CallFunc(Getattr(Name('self'), 'initial_form_count'), [], None, None))]), Not(CallFunc(Getattr(Name('form'), 'has_changed'), [], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'startElement'), [Const('item'), CallFunc(Getattr(Name('self'), 'item_attributes'), [Name('item')], None, None)], None, None))]))
Module(None, Stmt([With(CallFunc(Name('open'), [Getattr(Name('writer'), 'path'), Const('wb')], None, None), AssName('fh', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('filter_expression', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'compile_filter'), [Getattr(Name('token'), 'contents')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('parser'), 'parse'), [], None, None))]))
Module(None, Stmt([Assign([AssName('bf_errors', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'error_class'), [ListComp(CallFunc(Name('conditional_escape'), [Name('error')], None, None), [ListCompFor(AssName('error', 'OP_ASSIGN'), Getattr(Name('bf'), 'errors'), [])])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('%s\n'), CallFunc(Getattr(Name('writer'), 'as_string'), [], None, None)))], None, None))]))
Module(None, Stmt([Function(None, 'make_key', ['self', 'key', 'version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('formats'), 'sanitize_separators'), [Name('value')], None, None))]))
try :
Module(None, Stmt([Function(None, '__init__', ['self', 'iterable'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('replaces'), 'extend'), [Getattr(Name('migration'), 'replaces')], None, None))]))
Module(None, Stmt([Assign([AssName('sql_list', 'OP_ASSIGN')], CallFunc(Name('sql_flush'), [Getattr(Name('self'), 'style'), Name('connection'), Keyword('only_django', Name('True')), Keyword('reset_sequences', Name('reset_sequences')), Keyword('allow_cascade', Name('allow_cascade'))], None, None))]))
Module(None, Stmt([Assign([AssName('normalize_newlines', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('normalize_newlines'), Getattr(Name('six'), 'text_type')], None, None))]))
Module(None, Stmt([Return(Name('self'))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Assign([AssAttr(Name('f'), 'required', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Return(Getattr(Name('self'), 'name'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('fh'), 'write'), [Name('migration_string')], None, None))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Function(None, 'ugettext', ['message'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('options', 'OP_ASSIGN')], CallFunc(Getattr(Name('FASTCGI_OPTIONS'), 'copy'), [], None, None))]))
Module(None, Stmt([Assign([AssName('f', 'OP_ASSIGN')], Slice(Name('s'), 'OP_APPLY', None, Name('end')))]))
Module(None, Stmt([Assign([AssName('attachment', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_create_mime_attachment'), [Name('content'), Name('mimetype')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Const('Lazy object returned unexpected type.')], None, None), None, None)]))
Module(None, Stmt([Function(None, 'create_token', ['self', 'token_string', 'source', 'in_tag'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('dec'))]))
Module(None, Stmt([If([(Or([And([CallFunc(Getattr(Name('ip_str'), 'startswith'), [Const(':')], None, None), Not(CallFunc(Getattr(Name('ip_str'), 'startswith'), [Const('::')], None, None))]), And([CallFunc(Getattr(Name('ip_str'), 'endswith'), [Const(':')], None, None), Not(CallFunc(Getattr(Name('ip_str'), 'endswith'), [Const('::')], None, None))])]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([AssAttr(Name('parser'), '_namedCycleNodes', 'OP_ASSIGN')], Dict(()))]))
try :
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('self'), '_is_expired'), [Name('f')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('ch'), [('in', Const('iLmsu#'))]), Stmt([Pass()]))], None)]))
@ property
Module(None, Stmt([Assign([AssName('lang_code', 'OP_ASSIGN')], CallFunc(Name('get_language_from_path'), [Getattr(Name('request'), 'path_info')], None, None))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('force_text'), [Name('value')], None, None), [('!=', CallFunc(Name('force_text'), [Name('orig')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'full_clean'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'delete_first_token'), [], None, None))]))
Module(None, Stmt([If([(Name('file_obj'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('Creating %s\n'), Name('new_path')))], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('getattr'), [Name('self'), Const('nodelist'), Name('False')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('valid', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([If([(Compare(Name('subcommand'), [('in', Name('no_settings_commands'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('Installed %d object(s) (of %d) from %d fixture(s)'), Tuple([Getattr(Name('self'), 'loaded_object_count'), Getattr(Name('self'), 'fixture_object_count'), Getattr(Name('self'), 'fixture_count')])))], None, None))]))
try :
Module(None, Stmt([Assign([AssName('weekday', 'OP_ASSIGN')], Add((CallFunc(Getattr(Getattr(Name('self'), 'data'), 'weekday'), [], None, None), Const(1))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('known_models'), 'append'), [CallFunc(Name('table2model'), [Name('table_name')], None, None)], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Name('key')])], CallFunc(Getattr(Name('parser'), 'compile_filter'), [Name('value')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateDoesNotExist'), [Name('name')], None, None), None, None)]))
raise CommandError ( "you must provide %s %s name" % (  "an" if app_or_project == "app" else "a" , app_or_project ) )
else :
Module(None, Stmt([If([(Getattr(Name('record'), 'exc_info'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'c', ['self'], [], 0, None, Stmt([Pass()]))]))
from django . core . exceptions import ImproperlyConfigured
Module(None, Stmt([Return(Name('lookup_view'))]))
Module(None, Stmt([If([(Name('value'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'COOKIES', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Return(Name('kwargs'))]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [CallFunc(Getattr(Const('\n'), 'join'), [CallFunc(Name('chain'), [], ListComp(CallFunc(CallFunc(Name('getattr'), [Name('self'), Add((Const('render_'), Name('name')))], None, None), [], None, None), [ListCompFor(AssName('name', 'OP_ASSIGN'), Name('MEDIA_TYPES'), [])]), None)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('compile_func'), '__doc__', 'OP_ASSIGN')], Getattr(Name('func'), '__doc__'))]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None), ('DEFAULT_LOCALE_ENCODING', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const("Key '%s' not found"), Name('key')))], None, None), None, None)]))
Module(None, Stmt([For(AssName('field', 'OP_ASSIGN'), CallFunc(Getattr(Getattr(Name('self'), 'fields'), 'values'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('tell', 'OP_ASSIGN')], CallFunc(Name('property'), [Lambda(['self'], [], 0, Getattr(Getattr(Name('self'), 'file'), 'tell'))], None, None))]))
Module(None, Stmt([Return(Name('errors'))]))
Module(None, Stmt([Function(None, 'sql_destroy_indexes', ['app_config', 'style', 'connection'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'tokens'), 'pop'), [Const(0)], None, None))]))
Module(None, Stmt([Assign([AssName('d', 'OP_ASSIGN')], Subscript(Name('d'), 'OP_APPLY', [Name('idx')]))]))
Module(None, Stmt([Return(Getattr(Getattr(Name('self'), 'data'), 'hour'))]))
Module(None, Stmt([Assign([AssName('attrs', 'OP_ASSIGN')], Or([Name('attrs'), Dict(())]))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
nodelist_loop = parser . parse ( ( 'else' , end_tag ) )
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
elif name in lib . filters :
Module(None, Stmt([If([(CallFunc(Name('any'), [GenExpr(GenExprInner(And([CallFunc(Getattr(Name('e'), 'is_serious'), [], None, None), Not(CallFunc(Getattr(Name('e'), 'is_silenced'), [], None, None))]), [GenExprFor(AssName('e', 'OP_ASSIGN'), Name('all_issues'), [])]))], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('AttributeError'), [Const('You cannot set content to a 304 (Not Modified) response')], None, None), None, None)]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([Assign([AssName('decode', 'OP_ASSIGN')], CallFunc(Name('curry'), [Name('_proxy_method'), Keyword('method', Getattr(Name('bytes'), 'decode'))], None, None))]))
Module(None, Stmt([Assert(Name('match'), Const('unexpected call to parse_starttag()'))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('self'), 'is_valid'), [], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('database', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('database')], None, None))]))
Module(None, Stmt([AssName('X', 'OP_DELETE')]))
Module(None, Stmt([For(AssName('k', 'OP_ASSIGN'), Name('doomed'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('__delslice__', 'OP_ASSIGN')], Name('complain'))]))
@ property
Module(None, Stmt([Assign([AssName('logger', 'OP_ASSIGN')], CallFunc(Getattr(Name('logging'), 'getLogger'), [Const('django.request')], None, None))]))
Module(None, Stmt([Assign([AssName('i', 'OP_ASSIGN')], CallFunc(Name('next_space_index'), [Name('subject'), Name('i')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('type'), [Name('self')], None, None), '__bool__'), [Name('self')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('context'), 'OP_ASSIGN', [Getattr(Name('self'), 'target_var')])], CallFunc(Name('func'), [], Name('resolved_args'), Name('resolved_kwargs')))]))
Module(None, Stmt([From('django.core.cache.backends.base', [('BaseCache', None), ('DEFAULT_TIMEOUT', None)], 0)]))
Module(None, Stmt([For(AssName('w', 'OP_ASSIGN'), Getattr(Name('self'), 'widgets'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'close', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Creates new migration(s) for apps.'))]))
Module(None, Stmt([Return(Name('wrapper'))]))
Module(None, Stmt([If([(Compare(Name('alias'), [('not in', Getattr(Name('settings'), 'CACHES'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('SortedDict'), Name('self')], None, None), '__init__'), [Name('data')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('attrs'), 'OP_ASSIGN', [Const('help_texts')])], Name('help_texts'))]))
except Exception :
Module(None, Stmt([Assign([Subscript(Name('defaults'), 'OP_ASSIGN', [Const('initial')])], Subscript(Getattr(Name('self'), 'initial'), 'OP_APPLY', [Name('i')]))]))
Module(None, Stmt([Assign([AssName('callback', 'OP_ASSIGN')], Getattr(Name('pattern'), '_callback'))]))
Module(None, Stmt([Function(None, 'start_serialization', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Getattr(Getattr(Name('self'), 'data'), 'hour'))]))
try :
Module(None, Stmt([Assign([AssName('RAISE_ERROR', 'OP_ASSIGN')], CallFunc(Name('object'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'empty_block_tag'), [Name('token')], None, None))]))
Module(None, Stmt([Assign([AssName('POST', 'OP_ASSIGN')], CallFunc(Name('property'), [Name('_get_post'), Name('_set_post')], None, None))]))
Module(None, Stmt([From('email', [('charset', 'Charset'), ('encoders', 'Encoders'), ('message_from_string', None), ('generator', None)], 0)]))
Module(None, Stmt([Assign([AssName('capfirst', 'OP_ASSIGN')], Lambda(['x'], [], 0, And([Name('x'), Add((CallFunc(Getattr(Subscript(CallFunc(Name('force_text'), [Name('x')], None, None), 'OP_APPLY', [Const(0)]), 'upper'), [], None, None), Slice(CallFunc(Name('force_text'), [Name('x')], None, None), 'OP_APPLY', Const(1), None)))])))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'close_called', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Function(None, 'clean', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('executor', 'OP_ASSIGN')], CallFunc(Name('MigrationExecutor'), [Subscript(Name('connections'), 'OP_APPLY', [Name('DEFAULT_DB_ALIAS')])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'writer_enters'), [], None, None))]))
Module(None, Stmt([Assign([AssName('extensions', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('extensions')], None, None))]))
Module(None, Stmt([Assign([AssName('sublist_item', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'META', 'input_data', 'upload_handlers', 'encoding'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.translation', [('ugettext_lazy', None), ('pgettext_lazy', None)], 0)]))
Module(None, Stmt([Return(Compare(CallFunc(Name('list'), [Name('self')], None, None), [('!=', Name('other'))]))]))
Module(None, Stmt([Discard(CallFunc(Name('exhaust'), [Name('stream')], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'find_template_cache'), 'OP_APPLY', [Name('key')]))]))
Module(None, Stmt([Assign([AssName('logger', 'OP_ASSIGN')], CallFunc(Getattr(Name('logging'), 'getLogger'), [Const('py.warnings')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'reset'), [], None, None))]))
Module(None, Stmt([If([(And([Or([And([Getattr(Name('self'), 'allow_files'), CallFunc(Getattr(Getattr(Name('os'), 'path'), 'isfile'), [Name('full_file')], None, None)]), And([Getattr(Name('self'), 'allow_folders'), CallFunc(Getattr(Getattr(Name('os'), 'path'), 'isdir'), [Name('full_file')], None, None)])]), Or([Compare(Getattr(Name('self'), 'match'), [('is', Name('None'))]), CallFunc(Getattr(Getattr(Name('self'), 'match_re'), 'search'), [Name('f')], None, None)])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([AugAssign(Name('options'), '+=', ListComp(Tuple([Name('k'), Const(1)]), [ListCompFor(AssName('k', 'OP_ASSIGN'), Name('FASTCGI_OPTIONS'), [])]))]))
Module(None, Stmt([Function(None, 'activate', ['language'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('DictWrapper'), Name('self')], None, None), '__init__'), [Name('data')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'attrs', 'OP_ASSIGN')], Name('attrs'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'template_name', 'OP_ASSIGN')], Name('template'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'nodelist_true'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_producer', 'OP_ASSIGN')], Name('producer'))]))
Module(None, Stmt([Assign([AssName('LOCK_NB', 'OP_ASSIGN')], Getattr(Name('fcntl'), 'LOCK_NB'))]))
Module(None, Stmt([Assign([AssName('callback', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Getattr(Name('self'), 'urlconf_module'), Mod((Const('handler%s'), Name('view_type'))), Name('None')], None, None))]))
Module(None, Stmt([Function(None, 'subwidgets', ['self', 'name', 'value', 'attrs', 'choices'], [Name('None'), Tuple(())], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Getattr(Name('self'), '__offset'))]))
Module(None, Stmt([Class('JsonResponse', [Name('HttpResponse')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'parse_header', ['line'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'setLevel'), [CallFunc(Name('_checkLevel'), [Name('level')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'as_bytes', ['self', 'unixfrom'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'value', ['self'], [], 0, None, Stmt([Pass()]))]))
except KeyboardInterrupt :
Module(None, Stmt([If([(Name('keys'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('pieces'), 'append'), [CallFunc(Name('force_text'), [CallFunc(CallFunc(Name('getattr'), [Name('self'), Name('piece')], None, None), [], None, None)], None, None)], None, None))]))
Module(None, Stmt([Function(None, '__getattr__', ['self', 'real_name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(ListComp(CallFunc(Name('Warning'), [Const('BooleanField does not have a default value.'), Keyword('hint', Const('Django 1.6 changed the default value of BooleanField from False to None. See https://docs.djangoproject.com/en/1.6/ref/models/fields/#booleanfield for more information.')), Keyword('obj', Name('field')), Keyword('id', Const('1_6.W002'))], None, None), [ListCompFor(AssName('field', 'OP_ASSIGN'), Name('problem_fields'), [])]))]))
Module(None, Stmt([Return(Slice(Name('chunk'), 'OP_APPLY', None, Name('end')))]))
Module(None, Stmt([Assign([AssName('_func_defaults', 'OP_ASSIGN')], Const('func_defaults'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('nodelist'), 'append'), [CallFunc(Getattr(Name('node'), 'render'), [Name('context')], None, None)], None, None))]))
Module(None, Stmt([Return(Const(None))]))
elif total_forms > self . max_num >= 0 :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'app_label', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('app_label')], None, None))]))
else :
Module(None, Stmt([Assign([AssName('TOKEN_TEXT', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('args')], None, None), [('<', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('time_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('(?P<hour>\\d{1,2}):(?P<minute>\\d{1,2})(?::(?P<second>\\d{1,2})(?:\\.(?P<microsecond>\\d{1,6})\\d{0,6})?)?')], None, None))]))
Module(None, Stmt([If([(Name('errors'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Subscript(Name('results'), 'OP_APPLY', [CallFunc(Name('predicate'), [Name('item')], None, None)]), 'append'), [Name('item')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('settings'), 'is_overridden'), [Const('TEMPLATE_LOADERS')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('ignoring directory %s\n'), Name('dirname')))], None, None))]))
Module(None, Stmt([If([(Name('plan'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('logging', None)])]))
Module(None, Stmt([Assign([AssName('remove_tags', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('remove_tags'), Getattr(Name('six'), 'text_type')], None, None))]))
Module(None, Stmt([Function(None, 'prefix', ['bp', 'func'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'parse_boundary_stream', ['stream', 'max_header_size'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [CallFunc(Name('blankout'), [Name('part'), Const('S')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('obj'), Getattr(Name('self'), 'name'), Name('result')], None, None))]))
Module(None, Stmt([Return(Name('obj'))]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Assign([AssName('prefix', 'OP_ASSIGN')], Subscript(Name('d'), 'OP_APPLY', [Const('prefix')]))]))
Module(None, Stmt([Function(None, '_construct_form', ['self', 'i', 'kwargs'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Assign([AssName('compare', 'OP_ASSIGN')], Lambda(['self', 'a', 'b'], [], 0, Compare(Name('a'), [('<', Name('b'))])))]))
Module(None, Stmt([Class('JsLexer', [Name('Lexer')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(Name('widget')), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('site', 'OP_ASSIGN'), Name('sites'), Stmt([Pass()]), None)]))
try :
Module(None, Stmt([Assign([AssName('opts', 'OP_ASSIGN')], Getattr(Name('self'), '_meta'))]))
Module(None, Stmt([Pass()]))
except ValidationError :
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'isabs'), [Name('fixture_name')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.core.management.color', [('no_style', None)], 0)]))
Module(None, Stmt([Assign([AssName('retval', 'OP_ASSIGN')], Name('newretval'))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_out'), 'write'), [CallFunc(Name('force_str'), [CallFunc(Name('style_func'), [Name('msg')], None, None)], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Const('\n'), [('in', Getattr(Name('self'), '__starttag_text'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('char', 'OP_ASSIGN'), CallFunc(Getattr(Name('self'), 'add_truncation_text'), [Const(''), Name('truncate')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__ne__', ['self', 'other'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('connection'), 'ops'), 'start_transaction_sql'), [], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('all'), [GenExpr(GenExprInner(Getattr(Name('w'), 'is_hidden'), [GenExprFor(AssName('w', 'OP_ASSIGN'), Getattr(Name('self'), 'widgets'), [])]))], None, None))]))
Module(None, Stmt([Return(Name('errors'))]))
Module(None, Stmt([Discard(CallFunc(Name('_load_serializers'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'attrs', 'OP_ASSIGN')], CallFunc(Getattr(Name('attrs'), 'copy'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Getattr(Name('self'), 'setlistdefault'), [Name('key')], None, None), 'append'), [Name('value')], None, None))]))
Module(None, Stmt([Class('Serializer', [Getattr(Name('base'), 'Serializer')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('router'), 'allow_migrate'), [Getattr(Name('self'), 'using'), Getattr(Getattr(Name('obj'), 'object'), '__class__')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('colors'), 'reverse'), [], None, None))]))
Module(None, Stmt([Assign([AssName('_iteritems', 'OP_ASSIGN')], Const('items'))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([If([(Not(Name('_serializers')), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.db.migrations.autodetector', [('MigrationAutodetector', None)], 0)]))
Module(None, Stmt([Assign([AssName('year', 'OP_ASSIGN')], Getattr(Name('dt'), 'year'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'connection'), 'sendmail'), [Name('from_email'), Name('recipients'), CallFunc(Getattr(Name('message'), 'as_bytes'), [], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'to_python', ['self', 'data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('item', 'OP_ASSIGN'), Getattr(Name('self'), 'items'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'get'), [Const('name'), Const('')], None, None))]))
Module(None, Stmt([For(AssName('app_config', 'OP_ASSIGN'), CallFunc(Getattr(Name('apps'), 'get_app_configs'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'limit_value', 'OP_ASSIGN')], Name('limit_value'))]))
Module(None, Stmt([Assign([AssName('logger', 'OP_ASSIGN')], Subscript(Getattr(Getattr(Name('root'), 'manager'), 'loggerDict'), 'OP_APPLY', [Name('log')]))]))
Module(None, Stmt([Function(None, 'save_m2m', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Name('strings_only'), CallFunc(Name('is_protected_type'), [Name('s')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'template_parser', 'OP_ASSIGN')], Name('parser'))]))
Module(None, Stmt([Assign([AssName('fn', 'OP_ASSIGN')], Name('inotify_code_changed'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('re'), 'sub'), [Const('\\d([A-Z])'), Lambda(['m'], [], 0, CallFunc(Getattr(CallFunc(Getattr(Name('m'), 'group'), [Const(0)], None, None), 'lower'), [], None, None)), Name('t')], None, None))]))
Module(None, Stmt([Assign([AssName('_format_modules_cache', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([If([(Name('template_dirs'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('ipv4_unpacked'), Stmt([Pass()]))], None)]))
except KeyError as key :
Module(None, Stmt([Import([('types', None)])]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('c', 'OP_ASSIGN')], Name('cookie'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'msgmerge_options', 'OP_ASSIGN')], Add((Slice(Getattr(Name('self'), 'msgmerge_options'), 'OP_APPLY', None, None), List([Const('--no-wrap')]))))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([If([(Compare(Name('objects_in_fixture'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('app_label'), [('not in', Getattr(Getattr(Name('executor'), 'loader'), 'migrated_apps'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('p', 'OP_ASSIGN')], Name('i'))]))
Module(None, Stmt([Function(None, 'templatize', ['src', 'origin'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'context', 'OP_ASSIGN')], Name('context'))]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('style'), Name('role'), CallFunc(Getattr(Name('termcolors'), 'make_style'), [], None, Name('format'))], None, None))]))
Module(None, Stmt([For(AssName('p', 'OP_ASSIGN'), Slice(Name('parts'), 'OP_APPLY', Const(1), None), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('utility'), 'execute'), [], None, None))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([From('django.template.base', [('TemplateSyntaxError', None), ('Library', None), ('Node', None), ('TextNode', None), ('token_kwargs', None), ('Variable', None)], 0)]))
Module(None, Stmt([Assign([AssName('content', 'OP_ASSIGN')], CallFunc(Getattr(Name('content'), 'decode'), [Const('utf-8')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_regex_validator', 'OP_ASSIGN')], CallFunc(Getattr(Name('validators'), 'RegexValidator'), [Keyword('regex', Name('regex'))], None, None))]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None), ('python_2_unicode_compatible', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_library'), [Name('lib')], None, None))]))
Module(None, Stmt([Function(None, '__dir__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('h', 'OP_ASSIGN'), Name('handlers'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Compare(Name('base_lang'), [('in', Getattr(Name('settings'), 'LANGUAGES_BIDI'))]))]))
Module(None, Stmt([If([(And([CallFunc(Name('hasattr'), [Name('e'), Const('code')], None, None), Compare(Getattr(Name('e'), 'code'), [('in', Getattr(Name('self'), 'error_messages'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('s'), Getattr(Name('six'), 'memoryview')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('field_type', 'OP_ASSIGN')], Mod((Const('ForeignKey(%s'), Name('rel_to'))))]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], Tuple([Const('BaseForm'), Const('Form')]))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('app_path', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('settings'), Const('WSGI_APPLICATION')], None, None))]))
Module(None, Stmt([Function(None, 'add_filters', ['self', 'filterer', 'filters'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('new_ip', 'OP_ASSIGN')], CallFunc(Getattr(Name('ip_str'), 'split'), [Const(':')], None, None))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY2'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'load_label'), [Name('fixture_label')], None, None))]))
Module(None, Stmt([For(AssName('model', 'OP_ASSIGN'), Name('app_models'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('model_fields', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('Model'), '_meta'), 'get_all_field_names'), [], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('app_config'), 'models_module'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('_func_code', 'OP_ASSIGN')], Const('__code__'))]))
Module(None, Stmt([Class('Textarea', [Name('Widget')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'regex', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('data'), 'OP_ASSIGN', [Getattr(Getattr(Getattr(Name('Model'), '_meta'), 'pk'), 'attname')])], CallFunc(Getattr(Getattr(Getattr(Name('Model'), '_meta'), 'pk'), 'to_python'), [CallFunc(Getattr(Name('d'), 'get'), [Const('pk'), Name('None')], None, None)], None, None))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'use_natural_foreign_keys'), CallFunc(Name('hasattr'), [Getattr(Getattr(Name('field'), 'rel'), 'to'), Const('natural_key')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([From('ctypes.wintypes', [('BOOL', None), ('DWORD', None), ('HANDLE', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [Name('CommandError'), CallFunc(Name('CommandError'), [Name('new_msg')], None, None), Subscript(CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), 'OP_APPLY', [Const(2)])], None, None))]))
finally :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Getattr(Name('apps'), 'setdefault'), [Getattr(Name('pattern'), 'app_name'), List(())], None, None), 'append'), [Getattr(Name('pattern'), 'namespace')], None, None))]))
Module(None, Stmt([Assign([AssName('last_row', 'OP_ASSIGN')], Subscript(Name('output'), 'OP_APPLY', [UnarySub(Const(1))]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'endElement'), [Const('natural')], None, None))]))
Module(None, Stmt([Class('ManagementForm', [Name('Form')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Class('Serializer', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('SplitHiddenDateTimeWidget'), Name('self')], None, None), '__init__'), [Name('attrs'), Name('date_format'), Name('time_format')], None, None))]))
Module(None, Stmt([Function(None, 'get_meta', ['self', 'table_name'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssName('ALL_FIELDS', 'OP_ASSIGN')], Const('__all__'))]))
Module(None, Stmt([Function(None, 'close', ['self'], [], 0, None, Stmt([Pass()]))]))
else :
try :
Module(None, Stmt([Assign([AssName('view_func', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('mod'), Name('func_name')], None, None))]))
Module(None, Stmt([Assign([AssName('d', 'OP_ASSIGN')], Subscript(Name('d'), 'OP_APPLY', [Subscript(CallFunc(Getattr(Name('m'), 'groups'), [], None, None), 'OP_APPLY', [Const(0)])]))]))
Module(None, Stmt([If([(And([CallFunc(Getattr(Name('middle'), 'endswith'), [Name('closing')], None, None), Compare(CallFunc(Getattr(Name('middle'), 'count'), [Name('closing')], None, None), [('==', Add((CallFunc(Getattr(Name('middle'), 'count'), [Name('opening')], None, None), Const(1))))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(Tuple([CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--testrunner'), Keyword('action', Const('store')), Keyword('dest', Const('testrunner')), Keyword('help', Const('Tells Django to use specified test runner class instead of the one specified by the TEST_RUNNER setting.'))], None, None)]))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Name('iter'), [CallFunc(Name('smart_split'), [Getattr(Name('self'), 'contents')], None, None)], None, None))]))
Module(None, Stmt([From('email.header', [('Header', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('func'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([AssName('location', 'OP_ASSIGN')], CallFunc(Name('urljoin'), [Name('current_uri'), Name('location')], None, None))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Getattr(Name('host'), 'rsplit'), [Const(':'), Const(1)], None, None))]))
Module(None, Stmt([Assign([AssName('templatetags_modules', 'OP_ASSIGN')], Name('_templatetags_modules'))]))
@ receiver ( setting_changed )
try :
Module(None, Stmt([Discard(CallFunc(Name('exhaust'), [Name('field_stream')], None, None))]))
Module(None, Stmt([Assign([AssName('second_item', 'OP_ASSIGN')], Name('new_second_item'))]))
Module(None, Stmt([From('django.db', [('connections', None), ('router', None), ('transaction', None), ('DEFAULT_DB_ALIAS', None), ('IntegrityError', None), ('DatabaseError', None)], 0)]))
Module(None, Stmt([For(AssName('model', 'OP_ASSIGN'), Name('model_list'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('current_uri', 'OP_ASSIGN')], CallFunc(Getattr(Const('{scheme}://{host}{path}'), 'format'), [Keyword('scheme', Getattr(Name('self'), 'scheme')), Keyword('host', CallFunc(Getattr(Name('self'), 'get_host'), [], None, None)), Keyword('path', Getattr(Name('self'), 'path'))], None, None))]))
Module(None, Stmt([Assign([AssName('media', 'OP_ASSIGN')], CallFunc(Name('sorted'), [CallFunc(Getattr(Getattr(Name('self'), '_css'), 'keys'), [], None, None)], None, None))]))
else :
Module(None, Stmt([Function(None, 'add_fields', ['self', 'form', 'index'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('type'), [Name('field_type')], None, None), [('is', Name('tuple'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('m', 'OP_ASSIGN')], Add((Name('m'), Subscript(Name('base'), 'OP_APPLY', [Name('medium')]))))]))
Module(None, Stmt([Assign([AssName('count', 'OP_ASSIGN')], CallFunc(Name('property'), [Name('_get_count')], None, None))]))
Module(None, Stmt([Function(None, 'filter', ['self', 'record'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('s'), [('==', Const('"'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('props'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('__future__', [('absolute_import', None)], 0)]))
try :
else :
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], CallFunc(Name('func'), [Name('request'), Name('response')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [Mod((Const(' _(%s) '), CallFunc(Getattr(Name('cmatch'), 'group'), [Const(1)], None, None)))], None, None))]))
Module(None, Stmt([Assign([AssName('year', 'OP_ASSIGN')], CallFunc(Name('int'), [CallFunc(Getattr(Name('m'), 'group'), [Const('year')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'clean', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'validate', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Unable to configure handler %r: %s'), Tuple([Name('name'), Name('e')])))], None, None), None, None)]))
Module(None, Stmt([Return(Compare(Mod((Add((Name('evens'), Name('odds'))), Const(10))), [('==', Const(0))]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('f'), 'process'), [Name('self'), Getattr(Name('self'), 'domain')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Unable to configure filter %r: %s'), Tuple([Name('name'), Name('e')])))], None, None), None, None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('node'), 'getElementsByTagName'), [Const('None')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('klass'), '__new__', 'OP_ASSIGN')], CallFunc(Name('staticmethod'), [Name('__new__')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'empty_label', 'OP_ASSIGN')], Name('empty_label'))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(Getattr(Name('datetime'), 'datetime'), 'strptime'), [CallFunc(Name('force_str'), [Name('value')], None, None), Name('format')], None, None), 'date'), [], None, None))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([If([(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Name('pofile')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'filepath', 'OP_ASSIGN')], Name('filepath'))]))
Module(None, Stmt([Assign([AssName('slugify', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('slugify'), Getattr(Name('six'), 'text_type')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('bool'), [Getattr(Name('self'), 'dict')], None, None))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Function(None, 'handle', ['self', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_errors', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Function(None, 'escape', ['text'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'blocks', 'OP_ASSIGN')], CallFunc(Name('defaultdict'), [Name('list')], None, None))]))
Module(None, Stmt([Assign([AssName('base64d', 'OP_ASSIGN')], Add((Const('.'), Name('base64d'))))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_encoding', 'OP_ASSIGN')], Name('val'))]))
Module(None, Stmt([Assign([AssName('middle', 'OP_ASSIGN')], Slice(Name('middle'), 'OP_APPLY', None, UnarySub(CallFunc(Name('len'), [Name('punctuation')], None, None))))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Class('HttpResponseGone', [Name('HttpResponse')], None, Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Return(CallFunc(Name('str'), [Add((Name('major'), Name('sub')))], None, None))]))
Module(None, Stmt([If([(Compare(Name('t'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('root', 'OP_ASSIGN'), Subscript(Name('nonlocal_root'), 'OP_ASSIGN', [Const(0)])], Subscript(Name('oldroot'), 'OP_APPLY', [Name('NEXT')]))]))
Module(None, Stmt([Return(Name('ZERO'))]))
Module(None, Stmt([Function(None, '__init__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '__args', 'OP_ASSIGN')], Name('args'))]))
Module(None, Stmt([Function(None, '_iteritems', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('ErrorList', [Name('UserList'), Name('list')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('quant'), 'append'), [Name('ch')], None, None))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
except AmbiguityError :
Module(None, Stmt([Assign([Subscript(Name('final_attrs'), 'OP_ASSIGN', [Const('value')])], CallFunc(Name('force_text'), [Name('value')], None, None))]))
Module(None, Stmt([For(AssName('app_dir', 'OP_ASSIGN'), Name('app_dirs'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('EndToken', 'OP_ASSIGN')], CallFunc(Name('EndToken'), [], None, None))]))
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], CallFunc(Name('get_template'), [Name('file_name')], None, None))]))
except KeyError :
Module(None, Stmt([Assign([AssName('answer', 'OP_ASSIGN')], CallFunc(Getattr(Subscript(Name('answer'), 'OP_APPLY', [Const(0)]), 'lower'), [], None, None))]))
Module(None, Stmt([Function(None, 'module_has_submodule', ['package', 'module_name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('substitutions'), 'OP_ASSIGN', [Const('clear')])], CallFunc(Getattr(CallFunc(Name('CheckboxInput'), [], None, None), 'render'), [Name('checkbox_name'), Name('False'), Keyword('attrs', Dict([(Const('id'), Name('checkbox_id'))]))], None, None))]))
Module(None, Stmt([Assign([AssName('input_val', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('text')], None, None))]))
Module(None, Stmt([Return(CallFunc(CallFunc(Name('lazy'), [Name('func')], Name('resultclasses'), None), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Slice(Name('language'), 'OP_APPLY', Add((Name('p'), Const(1))), None)], None, None), [('>', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('count2'), [('!=', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([From('django.db', [('connections', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
key = make_key ( args , kwds , typed ) if kwds or typed else args
Module(None, Stmt([Return(Getattr(Name('self'), '__offset'))]))
Module(None, Stmt([Assign([AssName('src', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('src'), Getattr(Name('settings'), 'FILE_CHARSET')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'pos'), [('>=', CallFunc(Name('len'), [Getattr(Name('self'), 'tokens')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('consume_next', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Function(None, 'pgettext', ['context', 'message'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('\n'), 'join'), [Name('statements')], None, None))]))
Module(None, Stmt([If([(Not(Name('args')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('fk_name'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('settings'), '_setup'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_key'), [Name('key')], None, None))]))
Module(None, Stmt([Global(['template_source_loaders'])]))
Module(None, Stmt([Function(None, '__init__', ['self', 'queryset', 'empty_label', 'cache_choices', 'required', 'widget', 'label', 'initial', 'help_text', 'to_field_name', 'limit_choices_to', 'args', 'kwargs'], [Const('---------'), Name('None'), Name('True'), Name('None'), Name('None'), Name('None'), Const(''), Name('None'), Name('None')], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of Storage must provide a delete() method')], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'message', 'OP_ASSIGN')], Name('message'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('tpl'), 'format'), [Getattr(Name('self'), 'sysid'), Getattr(Name('self'), 'pubid')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('__import__'), [Name('name')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'importer'), [Name('used')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('nodelist'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--database'), Keyword('action', Const('store')), Keyword('dest', Const('database')), Keyword('default', Name('DEFAULT_DB_ALIAS')), Keyword('help', Const('Nominates a database to synchronize. Defaults to the "default" database.'))], None, None))]))
Module(None, Stmt([From('django.core.cache.backends.base', [('BaseCache', None), ('DEFAULT_TIMEOUT', None)], 0)]))
else :
Module(None, Stmt([If([(And([CallFunc(Name('isinstance'), [Subscript(Name('args'), 'OP_APPLY', [Const(0)]), Name('SafeData')], None, None), CallFunc(Name('getattr'), [Getattr(Name('_dec'), '_decorated_function'), Const('is_safe'), Name('False')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('BooleanField'), Name('self')], None, None), 'to_python'), [Name('value')], None, None))]))
Module(None, Stmt([Return(Tuple([Name('callback'), Const('')]))]))
Module(None, Stmt([Function(None, 'save_new_objects', ['self', 'commit'], [Name('True')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('line'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Subscript(Getattr(Name('self'), 'cookies'), 'OP_APPLY', [Name('key')]), 'OP_ASSIGN', [Const('max-age')])], Name('max_age'))]))
Module(None, Stmt([Assign([AssName('attrs', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('DecimalField'), Name('self')], None, None), 'widget_attrs'), [Name('widget')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('getattr'), [Name('func'), Const('expects_localtime'), Name('False')], None, None), Stmt([Pass()]))], None)]))
@ stringfilter
Module(None, Stmt([Return(Dict([(Const('STATIC_URL'), Getattr(Name('settings'), 'STATIC_URL'))]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'content_length', 'OP_ASSIGN')], Name('content_length'))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('html_message'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'attachments', 'OP_ASSIGN')], Or([Name('attachments'), List(())]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'redirect_to', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('out'), 'write'), [Mod((Const(' ngettext(%r, %r, count) '), Tuple([CallFunc(Name('join_tokens'), [Name('singular'), Name('trimmed')], None, None), CallFunc(Name('join_tokens'), [Name('plural'), Name('trimmed')], None, None)])))], None, None))]))
elif not base_url . endswith ( '/' ) :
Module(None, Stmt([Function(None, '__init__', ['self', 'args', 'kw'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("Cannot find a migration matching '%s' from app '%s'."), Tuple([Name('migration_name'), Name('app_label')])))], None, None), None, None)]))
try :
Module(None, Stmt([For(AssName('i', 'OP_ASSIGN'), CallFunc(Name('range'), [CallFunc(Name('len'), [Name('result')], None, None)], None, None), Stmt([Pass()]), None)]))
@ register . filter ( is_safe = False )
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Command'), Name('self')], None, None), 'handle'), [Const('app'), Name('app_name'), Name('target')], None, Name('options')))]))
Module(None, Stmt([If([(And([Compare(Getattr(Name('opts'), 'fields'), [('is', Name('None'))]), Compare(Getattr(Name('opts'), 'exclude'), [('is', Name('None'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('_'), [Const('p.m.')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('MultiPartParserError'), [Mod((Const('Invalid Content-Type: %s'), Name('content_type')))], None, None), None, None)]))
except UnicodeError as e :
Module(None, Stmt([Assign([AssName('out', 'OP_ASSIGN')], Slice(Name('text'), 'OP_APPLY', None, Name('end_text_pos')))]))
Module(None, Stmt([Raise(CallFunc(Getattr(Name('base'), 'DeserializationError'), [Mod((Const("<%s> node is missing the required '%s' attribute"), Tuple([Getattr(Name('node'), 'nodeName'), Name('attr')])))], None, None), None, None)]))
Module(None, Stmt([If([(Getattr(Name('cls'), '_delegate_text'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('encode', 'OP_ASSIGN')], Lambda(['k', 'v'], [], 0, CallFunc(Name('urlencode'), [Dict([(Name('k'), Name('v'))])], None, None)))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'nodelist_loop', 'OP_ASSIGN')], Name('nodelist_loop'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'write_items'), [Name('handler')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('SimpleCookie'), Name('self')], None, None), 'load'), [Name('rawdata')], None, None))]))
Module(None, Stmt([For(AssName('loader', 'OP_ASSIGN'), Name('template_source_loaders'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const("No changes detected in apps '%s'"), CallFunc(Getattr(Const("', '"), 'join'), [Name('app_labels')], None, None)))], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('message'), Name('SafeData')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('signals'), 'request_finished'), 'connect'), [Name('close_caches')], None, None))]))
Module(None, Stmt([If([(Compare(Name('o'), [('in', Name('opt_dict'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('html'), 'OP_ASSIGN', [Const('month')])], CallFunc(Getattr(Name('self'), 'create_select'), [Name('name'), Getattr(Name('self'), 'month_field'), Name('value'), Name('month_val'), Name('choices'), Getattr(Name('self'), 'month_none_value')], None, None))]))
else :
elif _locs_ is None :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('outer'), 'update'), [CallFunc(Getattr(Name('password'), 'translate'), [Getattr(Name('hmac'), 'trans_5C')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('op', 'OP_ASSIGN')], Subscript(Name('OPERATORS'), 'OP_APPLY', [Name('token')]))]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('field_params', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'startElement'), [Const('rss'), CallFunc(Getattr(Name('self'), 'rss_attributes'), [], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'as_hidden', ['self', 'attrs', 'kwargs'], [Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('bit', 'OP_ASSIGN'), Getattr(Name('self'), 'lookups'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('fixture_name', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'basename'), [Name('fixture_name')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('args'), 'append'), [Getattr(Name('self'), 'choices')], None, None))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Assign([AssName('over_bytes', 'OP_ASSIGN')], Mod((CallFunc(Name('len'), [Name('chunk')], None, None), Const(4))))]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None)], 0)]))
try :
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Function(None, 'extract', ['self', 'to_path'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'interesting', 'OP_ASSIGN')], Getattr(Name('_html_parser'), 'interesting_normal'))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'choices', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY2'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'get_nodes_by_type', ['self', 'nodetype'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Name('templatetags_modules')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('escape', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('escape'), Getattr(Name('six'), 'text_type')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('SafeText'), [Name('s')], None, None))]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None), ('CommandError', None)], 0)]))
Module(None, Stmt([Assign([Subscript(Name('palette'), 'OP_ASSIGN', [Name('role')])], Name('definition'))]))
Module(None, Stmt([Function(None, '_get_foreign_key', ['parent_model', 'model', 'fk_name', 'can_fail'], [Name('None'), Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('model_list'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('args'), Keyword('metavar', Const('app_label')), Keyword('nargs', Const('*')), Keyword('help', Const('Specify the app label(s) to create migrations for.'))], None, None))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Getattr(Name('token'), 'split_contents'), [], None, None))]))
Module(None, Stmt([Return(Name('wrapped'))]))
Module(None, Stmt([If([(And([Compare(CallFunc(Name('getattr'), [Name('Meta'), Const('fields'), Name('None')], None, None), [('is', Name('None'))]), Compare(CallFunc(Name('getattr'), [Name('Meta'), Const('exclude'), Name('None')], None, None), [('is', Name('None'))])]), Stmt([Pass()]))], None)]))
return "'%s'" % dirname if dirname else 'absolute path'
except Exception as e :
Module(None, Stmt([Continue()]))
Module(None, Stmt([If([(CallFunc(Name('contains'), [Subscript(Name('result'), 'OP_APPLY', [UnarySub(Const(1))]), Name('Group')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'exhaust', ['stream_or_iterable'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'setup_environ'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const("Custom SQL location '<app_label>/models/sql' is deprecated, use '<app_label>/sql' instead."), Name('RemovedInDjango19Warning')], None, None))]))
from django . views . debug import ExceptionReporter , get_exception_reporter_filter
Module(None, Stmt([Assign([AssName('final_attrs', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'build_attrs'), [Name('attrs'), Keyword('name', Name('name'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('bool'), [Name('ret')], None, None))]))
try :
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Assign([AssName('start', 'OP_ASSIGN')], CallFunc(Getattr(Name('match'), 'start'), [], None, None))]))
Module(None, Stmt([Return(Compare(CallFunc(Getattr(Name('self'), '__cast'), [], None, None), [('!=', Name('other'))]))]))
Module(None, Stmt([Assign([AssName('l', 'OP_ASSIGN')], UnarySub(FloorDiv((UnarySub(Name('dklen')), Name('hlen')))))]))
Module(None, Stmt([Assign([AssName('objects', 'OP_ASSIGN')], CallFunc(Getattr(Name('serializers'), 'deserialize'), [Name('ser_fmt'), Name('fixture'), Keyword('using', Getattr(Name('self'), 'using')), Keyword('ignorenonexistent', Getattr(Name('self'), 'ignore'))], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('sys'), 'platform'), [('==', Const('win32'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__exit__', ['self', 'exc_type', 'exc_value', 'tb'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'name', 'content', 'content_type'], [Const('text/plain')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('datetime'), 'now'), [], None, None))]))
if os . path . isdir ( os . path . join ( path , entry ) ) :
Module(None, Stmt([Function(None, '_text_words', ['self', 'length', 'truncate'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('sublist_item', 'OP_ASSIGN')], Name('title'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_unget_history', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'build_request_repr', ['request', 'path_override', 'GET_override', 'POST_override', 'COOKIES_override', 'META_override'], [Name('None'), Name('None'), Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('s'), Tuple([Getattr(Name('six'), 'text_type'), Name('Promise')])], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([AugAssign(Name('out'), '+=', Name('truncate_text'))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'setting'), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('statement', 'OP_ASSIGN'), Name('index_output'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'reverse_dict', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Compare(Getattr(Name('self'), 'path'), [('==', Getattr(Name('other'), 'path'))]))]))
Module(None, Stmt([Assign([AssName('values', 'OP_ASSIGN')], Dict([(Const('true'), Name('True')), (Const('false'), Name('False'))]))]))
Module(None, Stmt([Discard(CallFunc(Name('fn'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Name('mark_safe'), [Name('contents')], None, None))]))
Module(None, Stmt([Assign([AssName('proxy', 'OP_ASSIGN')], CallFunc(CallFunc(Name('lazy'), [Name('func'), Name('resultclass')], None, None), [], None, Name('kwargs')))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_separator', 'OP_ASSIGN')], Add((Const('--'), Name('boundary'))))]))
Module(None, Stmt([If([(Compare(Name('self'), [('not in', Name('state_frame'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Class('NowNode', [Name('Node')], None, Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Function(None, 'start_object', ['self', 'obj'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('value'), [('is not', Name('result'))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([If([(Compare(Slice(Name('block_content'), 'OP_APPLY', None, Const(9)), [('in', Tuple([Const('verbatim'), Const('verbatim ')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('value'))]))
else :
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Prints the SQL statements for resetting sequences for the given app name(s).'))]))
Module(None, Stmt([Function(None, 'supports_color', (), (), 0, None, Stmt([Pass()]))]))
signals . got_request_exception . send ( sender = self . __class__ , request = request )
Module(None, Stmt([Assign([AssName('text', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('text')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('widget'), 'input_type', 'OP_ASSIGN')], Const('hidden'))]))
Module(None, Stmt([Function(None, 'split_leading_dir', ['self', 'path'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('ChoiceField'), Name('self')], None, None), 'validate'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('now', 'OP_ASSIGN')], CallFunc(Getattr(Name('datetime'), 'datetime'), [Getattr(Name('now'), 'year'), Getattr(Name('now'), 'month'), Getattr(Name('now'), 'day')], None, None))]))
Module(None, Stmt([Assign([AssName('count2', 'OP_ASSIGN')], FloorDiv((Sub((Name('since'), Mul((Name('seconds'), Name('count'))))), Name('seconds2'))))]))
Module(None, Stmt([Function(None, 'handle_app_config', ['self', 'app_config', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'content', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Function(None, 'parse_file_upload', ['self', 'META', 'post_data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const('Unknown command: %r'), Name('name')))], None, None), None, None)]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Return(Mod((Const('ValidationError(%s)'), Name('self'))))]))
try :
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'max_value'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('node', 'OP_ASSIGN')], CallFunc(Name('CycleNode'), [Name('values')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('loader'), 'select_template'), [Name('template')], None, None))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Assign([Subscript(Name('loop_dict'), 'OP_ASSIGN', [Const('first')])], Compare(Name('i'), [('==', Const(0))]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'callback', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'args'), Stmt([Pass()]))], None)]))
Module(None, Stmt([While(Compare(Name('start'), [('<', Name('end'))]), Stmt([Pass()]), None)]))
Module(None, Stmt([For(AssTuple([AssName('name', 'OP_ASSIGN'), AssName('field', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('self'), 'fields'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('trimmed', 'OP_ASSIGN')], Compare(Const('trimmed'), [('in', CallFunc(Getattr(Name('t'), 'split_contents'), [], None, None))]))]))
Module(None, Stmt([If([(And([Getattr(Name('six'), 'PY2'), Not(CallFunc(Name('isinstance'), [Name('path'), Getattr(Name('six'), 'text_type')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__deepcopy__', ['self', 'memo'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'bad_cookies', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))]))
Module(None, Stmt([Function(None, 'get_declared_fields', ['bases', 'attrs', 'with_base_fields'], [Name('True')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('server'), Getattr(Name('six'), 'string_types')], None, None), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([For(AssName('key', 'OP_ASSIGN'), Name('self'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('kw', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(Tuple([Name('k'), CallFunc(Name('int'), [Name('v')], None, None)]), [GenExprFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('six'), 'iteritems'), [CallFunc(Getattr(Name('match'), 'groupdict'), [], None, None)], None, None), [])]))], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('filename'), 'endswith'), [Tuple([Const('/'), Const('\\')])], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Tuple([Const(3), Const(2)]), [('<', Getattr(Name('sys'), 'version_info')), ('<', Tuple([Const(3), Const(3), Const(4)]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('existing'), 'sort'), [], None, None))]))
Module(None, Stmt([Assign([AssName('table_output', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(Yield(Name('obj')))]))
Module(None, Stmt([Assign([AssName('nodes', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('ret_ip'), 'append'), [CallFunc(Getattr(Add((Mul((Const('0'), Sub((Const(4), CallFunc(Name('len'), [Name('hextet')], None, None))))), Name('hextet'))), 'lower'), [], None, None)], None, None))]))
try :
Module(None, Stmt([Import([('unicodedata', None)])]))
Module(None, Stmt([Return(Name('attrs'))]))
Module(None, Stmt([Assign([AssAttr(Name('Module_six_moves_urllib_response'), '_moved_attributes', 'OP_ASSIGN')], Name('_urllib_response_moved_attributes'))]))
else :
Module(None, Stmt([Assign([AssName('inplural', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([If([(Compare(Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('feed_url')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssTuple([AssName('event', 'OP_ASSIGN'), AssName('node', 'OP_ASSIGN')]), Getattr(Name('self'), 'event_stream'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Const('  Installing custom SQL...\n')], None, None))]))
Module(None, Stmt([Assign([AssName('values', 'OP_ASSIGN')], Name('_itervalues'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'setlist'), [CallFunc(Getattr(Name('copy'), 'deepcopy'), [Name('key'), Name('memo')], None, None), CallFunc(Getattr(Name('copy'), 'deepcopy'), [Name('value'), Name('memo')], None, None)], None, None))]))
elif action == "unapply_success" :
Module(None, Stmt([Return(Name('s'))]))
Module(None, Stmt([If([(Or([Not(Name('value')), CallFunc(Name('isinstance'), [Name('value'), Tuple([Name('list'), Name('tuple')])], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('node'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([Assign([AssName('found', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'importer'), [Name('used')], None, None))]))
except Exception :
Module(None, Stmt([Function(None, 'handle_raw_input', ['self', 'input_data', 'META', 'content_length', 'boundary', 'encoding'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'path'), [Name('name')], None, None))]))
Module(None, Stmt([Return(Const(None))]))
except LookupError :
Module(None, Stmt([Assign([AssName('msg_count', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([From('django.utils.html', [('conditional_escape', None), ('format_html', None)], 0)]))
Module(None, Stmt([Assign([AssName('repr_attr', 'OP_ASSIGN')], Getattr(Name('self'), '_wrapped'))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
elif not isinstance ( content , Message ) :
Module(None, Stmt([From('django.core.mail.backends.base', [('BaseEmailBackend', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('k'), [('==', Const('fg'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'nodelist'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([Function(None, '__deepcopy__', ['self', 'memo'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('context_extras'))]))
Module(None, Stmt([Function(None, 'scheme', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'close', ['self', 'kwargs'], [], 8, None, Stmt([Pass()]))]))
except ( AttributeError , UnsupportedOperation ) :
cookies = ( pformat ( COOKIES_override )  if COOKIES_override is not None  else pformat ( request . COOKIES ) )
else :
Module(None, Stmt([Assign([AssName('content', 'OP_ASSIGN')], CallFunc(Getattr(Const(''), 'join'), [Name('comment')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'environ', 'OP_ASSIGN')], Name('environ'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'add_item_elements'), [Name('handler'), Name('item')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('self'), 'check_test'), [Name('value')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('obj'))]))
try :
Module(None, Stmt([Assign([AssName('f', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('root'), Name('f')], None, None))]))
Module(None, Stmt([Function(None, 'save_new', ['self', 'form', 'commit'], [Name('True')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('__wrapper__'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('dirs'), 'extend'), [CallFunc(Name('list'), [Getattr(Name('settings'), 'FIXTURE_DIRS')], None, None)], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'attrs', 'years', 'months', 'empty_label'], [Name('None'), Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('status', 'OP_ASSIGN')], Mod((Const('%s %s'), Tuple([Getattr(Name('response'), 'status_code'), Getattr(Name('response'), 'reason_phrase')]))))]))
Module(None, Stmt([Function(None, 'configure_custom', ['self', 'config'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('offset', 'OP_ASSIGN')], FloorDiv((Getattr(Getattr(Name('self'), '__offset'), 'seconds'), Const(60))))]))
Module(None, Stmt([Assign([AssName('changeset', 'OP_ASSIGN')], CallFunc(Getattr(Name('timestamp'), 'strftime'), [Const('%Y%m%d%H%M%S')], None, None))]))
@ deconstructible
Module(None, Stmt([Assign([Subscript(Getattr(Getattr(Name('self'), '_caches'), 'caches'), 'OP_ASSIGN', [Name('alias')])], Name('cache'))]))
Module(None, Stmt([Return(Mod((Add((CallFunc(Getattr(Getattr(Name('self'), 'data'), 'weekday'), [], None, None), Const(1))), Const(7))))]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'required'), Not(Name('value'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.forms.fields', [('*', None)], 0)]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], CallFunc(Getattr(Name('token'), 'split_contents'), [], None, None))]))
else :
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('tt', 'OP_ASSIGN')], CallFunc(Getattr(Name('time'), 'localtime'), [Name('stamp')], None, None))]))
Module(None, Stmt([For(AssName('item', 'OP_ASSIGN'), CallFunc(Getattr(Name('six'), 'iteritems'), [Name('dict_')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('sys'), 'stderr'), 'write'), [Mod((Const('fork #2 failed: (%d) %s\n'), Tuple([Getattr(Name('e'), 'errno'), Getattr(Name('e'), 'strerror')])))], None, None))]))
Module(None, Stmt([Function(None, 'endChannelElement', ['self', 'handler'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'stderr', 'OP_ASSIGN')], CallFunc(Name('OutputWrapper'), [CallFunc(Getattr(Name('options'), 'get'), [Const('stderr'), Getattr(Name('sys'), 'stderr')], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Name('template_tuple'), [('is', Name('TemplateDoesNotExist'))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Return(CallFunc(Getattr(Name('path'), 'encode'), [Name('fs_encoding')], None, None))]))
Module(None, Stmt([Assign([AssName('state_frame', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_get_context_stack_frame'), [Name('context')], None, None))]))
Module(None, Stmt([Function(None, 'get_complete_version', ['version'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('Command', [Name('BaseCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'domain'), [('==', Const('djangojs'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'setLevel'), [CallFunc(Name('_checkLevel'), [Name('level')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'FILES', 'OP_ASSIGN')], CallFunc(Name('MultiValueDict'), [], None, None))]))
Module(None, Stmt([Function(None, 'I', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('endpos'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'stream', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('alen', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('args')], None, None))]))
Module(None, Stmt([Assign([AssName('__iter__', 'OP_ASSIGN')], Name('xreadlines'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_changed_data'), 'append'), [Name('name')], None, None))]))
Module(None, Stmt([From('django.core.management.utils', [('handle_extensions', None)], 0)]))
Module(None, Stmt([Class('BaseInlineFormSet', [Name('BaseModelFormSet')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_assert_mutable'), [], None, None))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Assign([AssName('memoryview', 'OP_ASSIGN')], Name('buffer'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'clear'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('utf8_charset'), 'body_encoding', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Function(None, 'new_file', ['self', 'field_name', 'file_name', 'content_type', 'content_length', 'charset', 'content_type_extra'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('items', 'OP_ASSIGN')], Name('_iteritems'))]))
Module(None, Stmt([Assign([AssName('i', 'OP_ASSIGN')], Const(365))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'deprecation_warning', 'OP_ASSIGN')], Name('deprecation_warning'))]))
Module(None, Stmt([Return(Subscript(Getattr(Name('self'), 'filters'), 'OP_APPLY', [Name('filter_name')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'addQuickElement'), [Const('object'), Keyword('attrs', Dict([(Const('pk'), CallFunc(Name('smart_text'), [CallFunc(Getattr(Name('value'), '_get_pk_val'), [], None, None)], None, None))]))], None, None))]))
Module(None, Stmt([Function(None, 'getInnerText', ['node'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssTuple([AssName('ch', 'OP_ASSIGN'), AssName('escaped', 'OP_ASSIGN')])], CallFunc(Name('next'), [Name('pattern_iter')], None, None))]))
Module(None, Stmt([Assign([AssName('ugettext_noop', 'OP_ASSIGN')], Name('gettext_noop'))]))
else :
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [CallFunc(Getattr(Name('item'), 'get'), [Const('unique_id_is_permalink')], None, None), Name('bool')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('ns', 'OP_ASSIGN')], Const('http://www.w3.org/2005/Atom'))]))
Module(None, Stmt([Assign([AssName('current', 'OP_ASSIGN')], Getattr(Name('settings'), 'TEMPLATE_STRING_IF_INVALID'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('_ExpatParser'), '__init__'), [Name('self')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([For(AssName('attr', 'OP_ASSIGN'), Name('_urllib_robotparser_moved_attributes'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('file_'), 'close'), [], None, None))]))
Module(None, Stmt([Return(Const('NOTPROVIDED'))]))
try :
Module(None, Stmt([Pass()]))
Module(None, Stmt([Return(Name('self'))]))
Module(None, Stmt([Assign([AssAttr(Name('result'), 'validators', 'OP_ASSIGN')], Slice(Getattr(Name('self'), 'validators'), 'OP_APPLY', None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('UnicodeDecodeError: skipped file %s in %s'), Tuple([Getattr(Name('f'), 'file'), Getattr(Name('f'), 'dirpath')])))], None, None))]))
Module(None, Stmt([If([(Name('nodelist'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'name', 'OP_ASSIGN')], Name('name'))]))
Module(None, Stmt([Function(None, 'symlinks_supported', (), (), 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('msg_count', 'OP_ASSIGN')], Const(0))]))
try :
@ python_2_unicode_compatible
Module(None, Stmt([Assign([AssAttr(Name('LockFileEx'), 'restype', 'OP_ASSIGN')], Name('BOOL'))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
else :
Module(None, Stmt([Assign([AssName('len_values', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('values')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('force_text'), [CallFunc(Name('quote_plus'), [CallFunc(Name('force_str'), [Name('url')], None, None), CallFunc(Name('force_str'), [Name('safe')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('int'), [Name('value')], None, None))]))
Module(None, Stmt([Function(None, 'capfirst', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('number'), [('>', Getattr(Name('self'), 'num_pages'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('changes'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('save_instance'), [Name('self'), Getattr(Name('self'), 'instance'), Getattr(Getattr(Name('self'), '_meta'), 'fields'), Name('fail_message'), Name('commit'), Getattr(Getattr(Name('self'), '_meta'), 'exclude'), Keyword('construct', Name('False'))], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('context_extras'), 'OP_ASSIGN', [Const('LANGUAGE_CODE')])], CallFunc(Getattr(Name('translation'), 'get_language'), [], None, None))]))
Module(None, Stmt([Assign([AssName('d', 'OP_ASSIGN')], Subscript(Name('d'), 'OP_APPLY', [Name('n')]))]))
Module(None, Stmt([Pass()]))
try :
Module(None, Stmt([Class('Module_six_moves_urllib_robotparser', [Name('_LazyModule')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Return(Name('__wrapper__'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'prefix', 'OP_ASSIGN')], Name('prefix'))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('Truncator'), [Name('value')], None, None), 'words'), [Name('length'), Keyword('truncate', Const(' ...'))], None, None))]))
try :
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'error_dict'), 'OP_ASSIGN', [Name('field')])], Getattr(Name('messages'), 'error_list'))]))
Module(None, Stmt([While(Const(1), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'interactive', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('interactive')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'file_path', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('settings'), Const('EMAIL_FILE_PATH'), Name('None')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of Serializer must provide an handle_m2m_field() method')], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'file_path', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'abspath'), [Getattr(Name('self'), 'file_path')], None, None))]))
Module(None, Stmt([If([(Compare(Name('key'), [('in', Name('d'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('fixture_label', 'OP_ASSIGN'), Name('fixture_labels'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Getattr(Name('settings'), 'DEBUG'))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('localize'), [Name('value'), Keyword('use_l10n', Getattr(Name('context'), 'use_l10n'))], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_resolve'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('_trans'), 'gettext_noop'), [Name('message')], None, None))]))
Module(None, Stmt([Import([('os', None)])]))
except ( TypeError , ValueError , UnicodeDecodeError ) :
Module(None, Stmt([Return(Add((CallFunc(Getattr(Name('self'), 'as_widget'), [], None, None), CallFunc(Getattr(Name('self'), 'as_hidden'), [Keyword('only_initial', Name('True'))], None, None))))]))
finally :
Module(None, Stmt([Assign([AssName('encoded', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('encoded'), 'replace'), [Const(';'), Const('\\073')], None, None), 'replace'), [Const(','), Const('\\054')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_assert_mutable'), [], None, None))]))
available_shells = [ shell ] if shell else self . shells
else :
else :
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([If([(CallFunc(Name('module_has_submodule'), [Getattr(Name('app_config'), 'module'), Name('module_to_search')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('MultiPartParserError'), [Mod((Const('Invalid content length: %r'), Name('content_length')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('content_subtype', 'OP_ASSIGN')], Const('plain'))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Removes ALL DATA from the database, including data added during migrations. Unmigrated apps will also have their initial_data fixture reloaded. Does not achieve a "fresh install" state.'))]))
Module(None, Stmt([Assign([AssName('cache', 'OP_ASSIGN')], CallFunc(Name('BaseDatabaseCache'), [Name('tablename'), Dict(())], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('style'), 'ERROR_OUTPUT', 'OP_ASSIGN')], Getattr(Name('style'), 'ERROR'))]))
for level in zip ( * [ m . ancestry for m in merge_migrations ] ) :
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(CallFunc(Name('RelatedObject'), [Getattr(Getattr(Getattr(Name('cls'), 'fk'), 'rel'), 'to'), Getattr(Name('cls'), 'model'), Getattr(Name('cls'), 'fk')], None, None), 'get_accessor_name'), [], None, None), 'replace'), [Const('+'), Const('')], None, None))]))
except TypeError :
Module(None, Stmt([Import([('django', None)])]))
Module(None, Stmt([Class('EmailMessage', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Or([Not(Getattr(Name('self'), 'file')), Getattr(Getattr(Name('self'), 'file'), 'closed')]))]))
Module(None, Stmt([Assign([AssName('streaming', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const(''), 'join'), [Name('inner_text')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('response'), 'has_header'), [Const('Vary')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('curr', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_current', 'OP_ASSIGN')], Name('None'))]))
if token . contents == 'else' :
Module(None, Stmt([Discard(CallFunc(Name('_add_doc'), [Name('u'), Const('Text literal')], None, None))]))
Module(None, Stmt([Return(Mod((CallFunc(Name('smart_text'), [Name('auto_id')], None, None), Getattr(Name('self'), 'html_name'))))]))
Module(None, Stmt([From('django.core.management.sql', [('sql_create', None)], 0)]))
Module(None, Stmt([Assign([AssName('state', 'OP_ASSIGN')], Getattr(Name('tok'), 'next'))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Const('widthratio final argument must be a number')], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('child_loggers'), 'append'), [Subscript(Name('existing'), 'OP_APPLY', [Name('i')])], None, None))]))
Module(None, Stmt([If([(Name('pks'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'keep_pot', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('keep_pot')], None, None))]))
except ( LookupError , ImportError ) as e :
Module(None, Stmt([Assign([AssName('options', 'OP_ASSIGN')], CallFunc(Getattr(Name('params'), 'get'), [Const('OPTIONS'), Dict(())], None, None))]))
Module(None, Stmt([If([(Compare(Name('cache_choices'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Const('()'), [('in', Name('config'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('QueryDict'), Name('self')], None, None), 'appendlist'), [Name('key'), Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('file_field_list', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(Name('response'))]))
Module(None, Stmt([Assign([AssName('plist', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([While(Name('True'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'default_kwargs', 'OP_ASSIGN')], Or([Name('default_kwargs'), Dict(())]))]))
Module(None, Stmt([Function(None, 'main_help_text', ['self', 'commands_only'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Compare(Name('code'), [('in', Name('_supported'))]), CallFunc(Name('check_for_language'), [Name('code')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('widget')])], Subscript(Name('widgets'), 'OP_APPLY', [Getattr(Name('f'), 'name')]))]))
try :
Module(None, Stmt([Discard(Yield(CallFunc(Name('import_module'), [Mod((Const('%s.formats'), Mod((Name('location'), Name('loc')))))], None, None)))]))
Module(None, Stmt([Return(CallFunc(Name('reversed'), [Getattr(Name('self'), 'keyOrder')], None, None))]))
except ImportError as e :
Module(None, Stmt([If([(Compare(Name('p'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('base64'), 'urlsafe_b64decode'), [CallFunc(Getattr(Name('s'), 'ljust'), [Add((CallFunc(Name('len'), [Name('s')], None, None), Mod((CallFunc(Name('len'), [Name('s')], None, None), Const(4))))), Const('=')], None, None)], None, None))]))
@ staticmethod
Module(None, Stmt([Class('MiddlewareNotUsed', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_cull'), [], None, None))]))
Module(None, Stmt([If([(Name('last_bit'), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Function(None, 'getlist', ['self', 'key', 'default'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('constant'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'connection'), 'ehlo'), [], None, None))]))
else :
Module(None, Stmt([Assign([AssTuple([AssName('content_type', 'OP_ASSIGN'), AssName('content_type_extra', 'OP_ASSIGN')])], CallFunc(Getattr(Name('meta_data'), 'get'), [Const('content-type'), Tuple([Const(''), Dict(())])], None, None))]))
Module(None, Stmt([Assign([AssName('plural', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(List([Name('etag_str')]))]))
Module(None, Stmt([Return(CallFunc(Name('render_value_in_context'), [Name('value'), Name('context')], None, None))]))
try :
Module(None, Stmt([Function(None, 'root_attributes', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('buffer_', 'OP_ASSIGN')], Name('line'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('args'), 'append'), [Name('work_file')], None, None))]))
Module(None, Stmt([From('collections', [('OrderedDict', None)], 0)]))
Module(None, Stmt([For(AssTuple([AssName('node_app', 'OP_ASSIGN'), AssName('node_name', 'OP_ASSIGN')]), Getattr(Name('migration'), 'branch'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('self'), 'token_type', 'OP_ASSIGN'), AssAttr(Name('self'), 'contents', 'OP_ASSIGN')])], Tuple([Name('token_type'), Name('contents')]))]))
Module(None, Stmt([Class('BaseTemporalField', [Name('Field')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Getattr(Getattr(Name('self'), 'field'), 'localize'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('seen_data'), 'add'), [Name('data')], None, None))]))
Module(None, Stmt([Function(None, 'listdir', ['self', 'path'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('response'), '_closable_objects'), 'append'), [Name('request')], None, None))]))
Module(None, Stmt([If([(And([CallFunc(Name('isinstance'), [Name('number'), Name('int')], None, None), Not(Name('use_grouping')), Not(Name('decimal_pos'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('list_', 'OP_ASSIGN')], ListComp(CallFunc(Name('bytes_to_text'), [Name('elt'), Getattr(Name('self'), 'encoding')], None, None), [ListCompFor(AssName('elt', 'OP_ASSIGN'), Name('list_'), [])]))]))
@ register . filter ( is_safe = True , needs_autoescape = True )
Module(None, Stmt([Assign([Subscript(Getattr(Name('sys'), 'modules'), 'OP_ASSIGN', [Add((Name('__name__'), Const('.moves.urllib_parse')))]), Subscript(Getattr(Name('sys'), 'modules'), 'OP_ASSIGN', [Add((Name('__name__'), Const('.moves.urllib.parse')))])], CallFunc(Name('Module_six_moves_urllib_parse'), [Add((Name('__name__'), Const('.moves.urllib_parse')))], None, None))]))
Module(None, Stmt([Function(None, 'get', ['self', 'key', 'default', 'version'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Assign([AssName('label_for', 'OP_ASSIGN')], CallFunc(Name('format_html'), [Const(' for="{0}"'), Getattr(Name('self'), 'id_for_label')], None, None))]))
else :
try :
Module(None, Stmt([Function(None, 'absolute_path', ['self', 'path', 'prefix'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('ext', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Name('ext_list')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Name('data'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'field', 'OP_ASSIGN')], Name('field'))]))
Module(None, Stmt([Assign([AssName('current', 'OP_ASSIGN')], Getattr(Name('settings'), 'TEMPLATE_STRING_IF_INVALID'))]))
Module(None, Stmt([Assign([AssName('is_a_tty', 'OP_ASSIGN')], And([CallFunc(Name('hasattr'), [Getattr(Name('sys'), 'stdout'), Const('isatty')], None, None), CallFunc(Getattr(Getattr(Name('sys'), 'stdout'), 'isatty'), [], None, None)]))]))
Module(None, Stmt([If([(Compare(Name('key'), [('not in', Name('self'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
else :
Module(None, Stmt([Function(None, 'super', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('django', None)])]))
else :
Module(None, Stmt([Return(CallFunc(Getattr(Name('_trans'), 'npgettext'), [Name('context'), Name('singular'), Name('plural'), Name('number')], None, None))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('context'), 'push'), [], None, Name('values')), None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('requires_system_checks', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Class('ContentNotRenderedError', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('force_text'), [CallFunc(Name('gettext'), [Name('message')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'reload', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('parent', 'OP_ASSIGN')], Tuple([Getattr(Name('form'), 'Meta'), Name('object')]))]))
Module(None, Stmt([Assign([AssName('val', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([If([(Compare(Name('num_repl'), [('>', Const(0))]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(CallFunc(Getattr(Slice(Name('p'), 'OP_APPLY', None, Name('i')), 'strip'), [], None, None), 'lower'), [], None, None), 'decode'), [Const('ascii')], None, None))]))
Module(None, Stmt([From('importlib', [('import_module', None)], 0)]))
Module(None, Stmt([Assign([AssName('format_type', 'OP_ASSIGN')], CallFunc(Name('force_str'), [Name('format_type')], None, None))]))
Module(None, Stmt([Assign([AssName('plural_forms_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^(?P<value>"Plural-Forms.+?\\\\n")\\s*$'), Bitor([Getattr(Name('re'), 'MULTILINE'), Getattr(Name('re'), 'DOTALL')])], None, None))]))
Module(None, Stmt([Function(None, '__enter__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('attrs', 'OP_ASSIGN')], Dict(()))]))
except VariableDoesNotExist :
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('fname', 'OP_ASSIGN'), CallFunc(Getattr(Name('self'), '_list_cache_files'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Class('BaseConverter', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Class('CommandError', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Class('TimeField', [Name('BaseTemporalField')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('output'))]))
Module(None, Stmt([Assign([AssName('option_value', 'OP_ASSIGN')], CallFunc(Name('force_text'), [Name('option_value')], None, None))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Assign([AssName('top', 'OP_ASSIGN')], Getattr(Name('self'), 'count'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('six'), 'unichr'), [Name('c')], None, None))]))
Module(None, Stmt([Class('FilePathField', [Name('ChoiceField')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('chunk', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_read_limited'), [], None, None))]))
Module(None, Stmt([Import([('re', None)])]))
@ lru_cache . lru_cache ( maxsize = None )
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('slots', 'OP_ASSIGN')], List([Name('slots')]))]))
except ( OSError , TypeError ) :
Module(None, Stmt([Assign([Subscript(Getattr(Name('form'), '_errors'), 'OP_ASSIGN', [Name('NON_FIELD_ERRORS')])], CallFunc(Getattr(Name('self'), 'error_class'), [List([CallFunc(Getattr(Name('self'), 'get_form_error'), [], None, None)])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Add((CallFunc(Getattr(Getattr(Name('self'), 'style'), 'MIGRATE_LABEL'), [Const('  Synchronize unmigrated apps: ')], None, None), CallFunc(Getattr(Const(', '), 'join'), [Getattr(Getattr(Name('executor'), 'loader'), 'unmigrated_apps')], None, None)))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_count', 'OP_ASSIGN')], CallFunc(Name('len'), [Getattr(Name('self'), 'object_list')], None, None))]))
Module(None, Stmt([Return(Name('endpos'))]))
Module(None, Stmt([Assign([AssName('content_length', 'OP_ASSIGN')], CallFunc(Name('int'), [CallFunc(Getattr(Name('environ'), 'get'), [Const('CONTENT_LENGTH')], None, None)], None, None))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('unifunc'), 'replace'), [Name('strfunc')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('_MovedItems'), Getattr(Name('attr'), 'name'), Name('attr')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('app'), 'start'), [], None, None))]))
try :
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('translation'), Const('_catalog')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([While(Name('model_dependencies'), Stmt([Pass()]), None)]))
Module(None, Stmt([Class('Options', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([With(CallFunc(Getattr(Getattr(Name('self'), '_lock'), 'writer'), [], None, None), None, Stmt([Pass()]))]))
return I18N_MODIFIED if filename . endswith ( '.mo' ) else FILE_MODIFIED
Module(None, Stmt([Assign([AssName('sub_ul_renderer', 'OP_ASSIGN')], CallFunc(Name('ChoiceFieldRenderer'), [Keyword('name', Getattr(Name('self'), 'name')), Keyword('value', Getattr(Name('self'), 'value')), Keyword('attrs', Name('attrs_plus')), Keyword('choices', Name('choice_label'))], None, None))]))
Module(None, Stmt([While(Const(1), Stmt([Pass()]), None)]))
Module(None, Stmt([Import([('datetime', None)])]))
Module(None, Stmt([Assign([AssName('initial', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('args'), 'append'), [Name('work_file')], None, None))]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
except TemplateDoesNotExist as e :
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('f'), 'close'), [], None, None))]))
except KeyError :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'event_stream'), 'expandNode'), [Name('node')], None, None))]))
Module(None, Stmt([Assign([AssName('_builtin_context_processors', 'OP_ASSIGN')], Tuple([Const('django.core.context_processors.csrf')]))]))
Module(None, Stmt([If([(Compare(Name('name'), [('==', Const('_wrapped'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('exp', 'OP_ASSIGN')], CallFunc(Name('Decimal'), [Const(1)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('fp'), 'write'), [Name('msgs')], None, None))]))
Module(None, Stmt([Assign([AssName('excluded_models', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'add_fallback'), [Name('default_translation')], None, None))]))
except ( ValueError , TypeError ) :
Module(None, Stmt([Assign([AssName('frame', 'OP_ASSIGN')], CallFunc(Getattr(Name('sys'), '_getframe'), [Const(1)], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'max_length', 'min_length', 'args', 'kwargs'], [Name('None'), Name('None')], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'first', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Function(None, '__bool__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('func'), [Name('context'), Getattr(Name('self'), 'first')], None, None))]))
Module(None, Stmt([Assign([AssName('urlconf', 'OP_ASSIGN')], Getattr(Name('request'), 'urlconf'))]))
Module(None, Stmt([Assign([AssName('exp', 'OP_ASSIGN')], Getattr(Name('datetime'), 'max'))]))
else :
Module(None, Stmt([Return(CallFunc(Name('force_text'), [CallFunc(Getattr(Name('name'), 'replace'), [Const('\\'), Const('/')], None, None)], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("Second (optional) argument to %s tag must be 'parsed'"), Subscript(Name('bits'), 'OP_APPLY', [Const(0)])))], None, None), None, None)]))
Module(None, Stmt([Return(Tuple([Or([Name('path'), Mod((Const('%s.%s'), Tuple([Getattr(Getattr(Name('obj'), '__class__'), '__module__'), Getattr(Getattr(Name('obj'), '__class__'), '__name__')])))]), Subscript(Getattr(Name('obj'), '_constructor_args'), 'OP_APPLY', [Const(0)]), Subscript(Getattr(Name('obj'), '_constructor_args'), 'OP_APPLY', [Const(1)])]))]))
Module(None, Stmt([Assign([AssName('fk', 'OP_ASSIGN')], Subscript(Name('fks_to_parent'), 'OP_APPLY', [Const(0)]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'field'), 'prepare_value'), [Name('data')], None, None))]))
Module(None, Stmt([Assign([AssName('i', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Assign([AssName('is_usable', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Class('PermissionDenied', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'waiting_writers', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Assign([AssName('new_class', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('DeclarativeFieldsMetaclass'), Name('mcs')], None, None), '__new__'), [Name('mcs'), Name('name'), Name('bases'), Name('attrs')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'is_reversed', 'OP_ASSIGN')], Name('is_reversed'))]))
Module(None, Stmt([Function(None, 'handle', ['self', 'app_labels', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('locks'), 'lock'), [Name('fd'), Getattr(Name('locks'), 'LOCK_EX')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('FormSet'), 'fk', 'OP_ASSIGN')], Name('fk'))]))
Module(None, Stmt([Assign([AssName('app_name', 'OP_ASSIGN')], Subscript(Name('commands'), 'OP_APPLY', [Name('subcommand')]))]))
Module(None, Stmt([Function(None, 'write_message', ['self', 'message'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Getattr(Name('parser'), 'error_class'), [Mod((Const("Not expecting '%s' in this position in if tag."), Getattr(Name('self'), 'id')))], None, None), None, None)]))
Module(None, Stmt([If([(Getattr(Getattr(Name('self'), 'field'), 'show_hidden_initial'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'read', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'dst', ['self', 'dt'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('attrs'), 'OP_ASSIGN', [Const('exclude')])], Name('exclude'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'getsize'), [Getattr(Getattr(Name('self'), 'file'), 'name')], None, None))]))
else :
Module(None, Stmt([From('django.template.base', [('ALLOWED_VARIABLE_CHARS', None), ('BLOCK_TAG_END', None), ('BLOCK_TAG_START', None), ('COMMENT_TAG_END', None), ('COMMENT_TAG_START', None), ('FILTER_ARGUMENT_SEPARATOR', None), ('FILTER_SEPARATOR', None), ('SINGLE_BRACE_END', None), ('SINGLE_BRACE_START', None), ('TOKEN_BLOCK', None), ('TOKEN_COMMENT', None), ('TOKEN_TEXT', None), ('TOKEN_VAR', None), ('TRANSLATOR_COMMENT_MARK', None), ('UNKNOWN_SOURCE', None), ('VARIABLE_ATTRIBUTE_SEPARATOR', None), ('VARIABLE_TAG_END', None), ('VARIABLE_TAG_START', None), ('filter_re', None), ('tag_re', None)], 0)]))
Module(None, Stmt([Assign([AssName('current', 'OP_ASSIGN')], Name('context'))]))
Module(None, Stmt([Assign([AssName('contains_nontext', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([If([(Compare(Name('extend'), [('is', Name('True'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('context', 'OP_ASSIGN')], CallFunc(Name('Context'), [CallFunc(Name('dict'), [Name('options')], None, Dict([(Name('base_name'), Name('name')), (Name('base_directory'), Name('top_dir')), (Const('docs_version'), Name('docs_version'))])), Keyword('autoescape', Name('False'))], None, None))]))
Module(None, Stmt([Assign([AssName('pk_field', 'OP_ASSIGN')], Getattr(Getattr(Getattr(Name('self'), 'model'), '_meta'), 'pk'))]))
else :
except TypeError :
Module(None, Stmt([Assign([AssName('lookup_view_s', 'OP_ASSIGN')], Mod((Const('%s.%s'), Tuple([Name('m'), Name('n')]))))]))
Module(None, Stmt([For(AssTuple([AssName('option_value', 'OP_ASSIGN'), AssName('option_label', 'OP_ASSIGN')]), CallFunc(Name('chain'), [Getattr(Name('self'), 'choices'), Name('choices')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(And([CallFunc(Name('issubclass'), [Name('klass'), Getattr(Getattr(Name('logging'), 'handlers'), 'MemoryHandler')], None, None), Compare(Const('target'), [('in', Name('config'))])]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([If([(Not(Name('cleaned_line')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'sign', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'is_hidden', ['self'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Function(None, 'led', ['self', 'left', 'parser'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Function(None, '__init__', ['self', 'schemes', 'kwargs'], [Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('%r is not in a valid HTTP date format'), Name('date')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('strfunc', 'OP_ASSIGN')], CallFunc(Name('Name'), [Const('__str__'), Keyword('prefix', Getattr(Name('unifunc'), 'prefix'))], None, None))]))
Module(None, Stmt([Assign([AssName('token', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('DebugLexer'), Name('self')], None, None), 'create_token'), [Name('token_string'), Name('in_tag')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), '_stream'), 'readline'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([From('django.utils', [('translation', None)], 0)]))
Module(None, Stmt([Return(Name('url'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_cache'), 'set_multi'), [Name('safe_data'), CallFunc(Getattr(Name('self'), 'get_backend_timeout'), [Name('timeout')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('connection', 'OP_ASSIGN')], Subscript(Name('connections'), 'OP_APPLY', [Subscript(Name('options'), 'OP_APPLY', [Const('database')])]))]))
else :
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([From('django.db.models.fields.related', [('ManyToManyField', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('|'), 'join'), [GenExpr(GenExprInner(Add((Add((Name('prefix'), CallFunc(Getattr(Name('re'), 'escape'), [Name('c')], None, None))), Name('suffix'))), [GenExprFor(AssName('c', 'OP_ASSIGN'), CallFunc(Getattr(Name('choices'), 'split'), [], None, None), [])]))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '__kw', 'OP_ASSIGN')], Name('kw'))]))
Module(None, Stmt([From('django.utils.jslex', [('prepare_js_for_gettext', None)], 0)]))
Module(None, Stmt([Assign([AssName('targets', 'OP_ASSIGN')], ListComp(Name('key'), [ListCompFor(AssName('key', 'OP_ASSIGN'), CallFunc(Getattr(Getattr(Getattr(Name('executor'), 'loader'), 'graph'), 'leaf_nodes'), [], None, None), [ListCompIf(Compare(Subscript(Name('key'), 'OP_APPLY', [Const(0)]), [('==', Name('app_label'))]))])]))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('value'), Const('close')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('stream_or_string'), Getattr(Name('six'), 'string_types')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('widget', 'OP_ASSIGN'), Getattr(Name('self'), 'widgets'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('klass'))]))
elif options [ 'app_label' ] :
elif callable ( func ) :
Module(None, Stmt([Discard(Yield(Name('obj')))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('mail'), 'attach_alternative'), [Name('html_message'), Const('text/html')], None, None))]))
Module(None, Stmt([Return(Name('msg'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'cookies', 'OP_ASSIGN')], CallFunc(Name('SimpleCookie'), [], None, None))]))
Module(None, Stmt([Return(Name('plural_suffix'))]))
Module(None, Stmt([From('django.utils.functional', [('allow_lazy', None), ('SimpleLazyObject', None)], 0)]))
Module(None, Stmt([With(CallFunc(Getattr(Name('io'), 'open'), [Name('potfile'), Const('a'), Keyword('encoding', Const('utf-8'))], None, None), AssName('fp', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('site', 'OP_ASSIGN'), Name('sites1'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('path', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Getattr(Name('os'), 'environ'), 'get'), [Const('PATH'), Const('')], None, None), 'split'), [Getattr(Name('os'), 'pathsep')], None, None))]))
Module(None, Stmt([Return(Subscript(Getattr(Name('parser'), '_namedCycleNodes'), 'OP_APPLY', [Name('name')]))]))
Module(None, Stmt([Function(None, 'pop', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('name'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.conf', [('settings', None)], 0)]))
Module(None, Stmt([Assign([AssName('attrs', 'OP_ASSIGN')], Dict([(Const('model'), Name('model'))]))]))
Module(None, Stmt([Assign([AssName('default_error_messages', 'OP_ASSIGN')], Dict([(Const('invalid_date'), CallFunc(Name('_'), [Const('Enter a valid date.')], None, None)), (Const('invalid_time'), CallFunc(Name('_'), [Const('Enter a valid time.')], None, None))]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('Rendering %s template files with extensions: %s\n'), Tuple([Name('app_or_project'), CallFunc(Getattr(Const(', '), 'join'), [Name('extensions')], None, None)])))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--all'), Keyword('action', Const('store_true')), Keyword('dest', Const('all')), Keyword('default', Name('False')), Keyword('help', Const('Display all settings, regardless of their value. Default values are prefixed by "###".'))], None, None))]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], Mod((Const('Could not decode base64 data: %r'), Name('e'))))]))
Module(None, Stmt([For(AssName('char', 'OP_ASSIGN'), Name('fmt'), Stmt([Pass()]), None)]))
Module(None, Stmt([With(CallFunc(Getattr(Getattr(Name('self'), '_lock'), 'writer'), [], None, None), None, Stmt([Pass()]))]))
except IndexError :
Module(None, Stmt([Assign([AssName('root', 'OP_ASSIGN')], CallFunc(Getattr(Name('logging'), 'getLogger'), [], None, None))]))
Module(None, Stmt([Assign([AssName('MAX_NUM_FORM_COUNT', 'OP_ASSIGN')], Const('MAX_NUM_FORMS'))]))
Module(None, Stmt([Assign([AssName('exp', 'OP_ASSIGN')], CallFunc(Getattr(Name('exp'), 'replace'), [Keyword('microsecond', Const(0))], None, None))]))
Module(None, Stmt([If([(Compare(Name('csrf_token'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('root', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'get'), [Const('root'), Name('None')], None, None))]))
else :
Module(None, Stmt([Assign([AssName('url', 'OP_ASSIGN')], CallFunc(Name('urlunsplit'), [Tuple([Name('scheme'), Name('netloc'), Name('path'), Name('query'), Name('fragment')])], None, None))]))
Module(None, Stmt([Assign([AssName('gettext_noop', 'OP_ASSIGN'), AssName('gettext_lazy', 'OP_ASSIGN'), AssName('_', 'OP_ASSIGN')], Name('gettext'))]))
Module(None, Stmt([Assign([AssName('dklen', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([If([(Compare(Subscript(Name('kwargs'), 'OP_APPLY', [Const('setting')]), [('in', Tuple([Const('LANGUAGES'), Const('LANGUAGE_CODE')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('len'), [Getattr(Name('self'), 'children')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), '_cache'), 'decr'), [Name('key'), UnarySub(Name('delta'))], None, None))]))
Module(None, Stmt([Return(Name('default'))]))
Module(None, Stmt([Assign([AssName('_locks', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('dir_name'), Mod((Const('%s_%s%s'), Tuple([Name('file_root'), CallFunc(Name('next'), [Name('count')], None, None), Name('file_ext')])))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('list'), [CallFunc(Name('zip'), [], CallFunc(Name('flatten_result'), [Name('result')], None, None), None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('node'), 'replace'), [Name('decorated')], None, None))]))
try :
Module(None, Stmt([If([(Getattr(Name('self'), 'show_traceback'), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('middleware'), Const('process_template_response')], None, None), Stmt([Pass()]))], None)]))
except ImportError :
Module(None, Stmt([Return(Tuple([CallFunc(Name('get_callable'), [Name('callback')], None, None), Dict(())]))]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], Getattr(Name('error'), 'message'))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'parsed'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('lib'))]))
Module(None, Stmt([If([(Compare(Subscript(Getattr(Name('e'), 'args'), 'OP_APPLY', [Const(0)]), [('not in', Name('not_found'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Subscript(Getattr(Name('self'), 'cookies'), 'OP_APPLY', [Name('key')]), 'OP_ASSIGN', [Const('httponly')])], Name('True'))]))
else :
Module(None, Stmt([Assign([AssName('template_dir', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Getattr(Name('app_config'), 'path'), Const('templates')], None, None))]))
Module(None, Stmt([Return(Name('out'))]))
Module(None, Stmt([Assign([AssAttr(Name('duplicate'), 'dicts', 'OP_ASSIGN')], Slice(Getattr(Name('self'), 'dicts'), 'OP_APPLY', None, None))]))
Module(None, Stmt([Import([('zlib', None)])]))
Module(None, Stmt([If([(Compare(Name('error_messages'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Prints the SQL statements for the named migration.'))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'cleaned_data', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([If([(Or([Compare(CallFunc(Getattr(Name('var'), 'find'), [Add((Name('VARIABLE_ATTRIBUTE_SEPARATOR'), Const('_')))], None, None), [('>', UnarySub(Const(1)))]), Compare(Subscript(Name('var'), 'OP_APPLY', [Const(0)]), [('==', Const('_'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('match', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwarg_re'), 'match'), [Subscript(Name('bits'), 'OP_APPLY', [Const(0)])], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('key', 'OP_ASSIGN'), AssName('value', 'OP_ASSIGN')]), CallFunc(Name('parse_qsl'), [Or([Name('query_string'), Const('')]), Keyword('keep_blank_values', Name('True'))], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('format_html'), [Const('')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'attr', 'OP_ASSIGN')], Name('new_attr'))]))
Module(None, Stmt([Class('DictConfigurator', [Name('BaseConfigurator')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('resolver', 'OP_ASSIGN')], CallFunc(Getattr(Name('urlresolvers'), 'RegexURLResolver'), [Const('^/'), Name('urlconf')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'add_fields'), [Name('form'), Name('i')], None, None))]))
Module(None, Stmt([Assign([AssName('ESCAPE_MAPPINGS', 'OP_ASSIGN')], Dict([(Const('A'), Name('None')), (Const('b'), Name('None')), (Const('B'), Name('None')), (Const('d'), Const('0')), (Const('D'), Const('x')), (Const('s'), Const(' ')), (Const('S'), Const('x')), (Const('w'), Const('x')), (Const('W'), Const('!')), (Const('Z'), Name('None'))]))]))
else :
else :
try :
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'file'), 'seek'), [Const(0), Getattr(Name('os'), 'SEEK_END')], None, None))]))
Module(None, Stmt([Assign([AssName('max_num', 'OP_ASSIGN')], Name('DEFAULT_MAX_NUM'))]))
Module(None, Stmt([Function(None, 'add_root_elements', ['self', 'handler'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'get_objects', (), (), 0, None, Stmt([Pass()]))]))
except AttributeError :
Module(None, Stmt([Return(Name('id_'))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'render'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('datetime'), 'fromtimestamp'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'getmtime'), [CallFunc(Getattr(Name('self'), 'path'), [Name('name')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'is_aware', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Getattr(Name('self'), 'data'), 'hour'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(Yield(Name('item')))]))
Module(None, Stmt([Return(Name('self'))]))
Module(None, Stmt([Assign([AssName('t', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('_active'), Const('value'), Name('None')], None, None))]))
Module(None, Stmt([Function(None, 'add', ['self', 'key', 'value', 'timeout', 'version'], [Name('DEFAULT_TIMEOUT'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('hashlib', None)])]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("'%s' is decorated with takes_context=True so it must have a first argument of 'context'"), Name('name')))], None, None), None, None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Getattr(Name('six'), 'string_types')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('initial'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('list_')], None, None), [('==', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Name('add_to_builtins'), [Const('django.template.loader_tags')], None, None))]))
Module(None, Stmt([Import([('tempfile', None)])]))
Module(None, Stmt([Return(Name('output'))]))
else :
Module(None, Stmt([Assign([AssName('parser', 'OP_ASSIGN')], CallFunc(Name('CommandParser'), [Name('self'), Keyword('prog', Mod((Const('%s %s'), Tuple([CallFunc(Getattr(Getattr(Name('os'), 'path'), 'basename'), [Name('prog_name')], None, None), Name('subcommand')])))), Keyword('description', Or([Getattr(Name('self'), 'help'), Name('None')]))], None, None))]))
Module(None, Stmt([Assign([AssName('error', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'data'), 'OP_APPLY', [Name('i')]))]))
Module(None, Stmt([If([(Name('css_classes'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Or([CallFunc(Name('isinstance'), [Name('s'), Name('bytes')], None, None), And([CallFunc(Name('isinstance'), [Name('s'), Name('Promise')], None, None), Getattr(Name('s'), '_delegate_bytes')])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('middleware_method', 'OP_ASSIGN'), Getattr(Name('self'), '_view_middleware'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('answer', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('six'), 'moves'), 'input'), [Const('Do you wish to proceed? [yN] ')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('_active'), 'value', 'OP_ASSIGN')], CallFunc(Getattr(Name('pytz'), 'timezone'), [Name('timezone')], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'verbosity'), [('>=', Const(3))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_resolve', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'unparsed_entity_decl', ['self', 'name', 'base', 'sysid', 'pubid', 'notation_name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('domain', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('domain'), 'encode'), [Const('idna')], None, None), 'decode'), [Const('ascii')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('six'), 'unichr'), [Subscript(Getattr(Name('html_entities'), 'name2codepoint'), 'OP_APPLY', [Name('text')])], None, None))]))
Module(None, Stmt([Assign([AssName('pofile', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('basedir'), Mod((Const('%s.po'), CallFunc(Name('str'), [Getattr(Name('self'), 'domain')], None, None)))], None, None))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(Name('base64'), 'b64decode'), [Name('raw_data')], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), CallFunc(Getattr(Name('defaults'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('upto', 'OP_ASSIGN')], Name('start'))]))
Module(None, Stmt([Raise(CallFunc(Getattr(Name('self'), 'error'), [Name('None'), Mod((Const('Unclosed tags: %s '), CallFunc(Getattr(Const(', '), 'join'), [Name('parse_until')], None, None)))], None, None), None, None)]))
Module(None, Stmt([Function(None, 'handle', ['self', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'configure_filter', ['self', 'config'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("Conflicting migrations detected (%s).\nTo fix them run 'python manage.py makemigrations --merge'"), Name('name_str')))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Name('runfastcgi'), [Slice(Getattr(Name('sys'), 'argv'), 'OP_APPLY', Const(1), None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('field_notes'), 'append'), [Const("Field renamed because it ended with '_'.")], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_app_dict', 'OP_ASSIGN')], Dict(()))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'pointer', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'backout'), 'pop'), [], None, None))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Function(None, 'attach_alternative', ['self', 'content', 'mimetype'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('value'), [('!=', Getattr(Name('self'), 'empty_value'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(Name('file_name')), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Or([Compare(Getattr(Name('self'), 'match'), [('is', Name('None'))]), CallFunc(Getattr(Getattr(Name('self'), 'match_re'), 'search'), [Name('f')], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('row', 'OP_ASSIGN')], CallFunc(Getattr(Name('cursor'), 'fetchone'), [], None, None))]))
Module(None, Stmt([Function(None, 'check_for_migrations', ['app_config', 'connection'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('sql_file', 'OP_ASSIGN'), Name('sql_files'), Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInNextVersionWarning', None)], 0)]))
Module(None, Stmt([If([(Compare(Subscript(Getattr(Name('self'), 'feed'), 'OP_APPLY', [Const('author_name')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('time', None)])]))
except OSError :
Module(None, Stmt([If([(Getattr(Name('six'), 'PY3'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('data'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.core.management.base', [('AppCommand', None)], 0)]))
Module(None, Stmt([If([(Getattr(Name('self'), '_delegate_bytes'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Getattr(Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_meta'), 'pk'), 'rel'), Stmt([Pass()]))], None)]))
except OSError as e :
Module(None, Stmt([Assign([AssAttr(Name('self'), 'key_prefix', 'OP_ASSIGN')], CallFunc(Getattr(Name('params'), 'get'), [Const('KEY_PREFIX'), Const('')], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Raise(CallFunc(Name('SerializerDoesNotExist'), [Name('format')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('urlunquote_plus', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('urlunquote_plus'), Getattr(Name('six'), 'text_type')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Mod((CallFunc(Name('ugettext'), [Const('%s MB')], None, None), CallFunc(Name('filesize_number_format'), [Div((Name('bytes'), Name('MB')))], None, None))))]))
Module(None, Stmt([If([(Compare(Name('level'), [('not in', Getattr(Name('logging'), '_levelNames'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'handle', ['self', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('sublist', 'OP_ASSIGN')], CallFunc(Name('_helper'), [Name('sublist_item'), Add((Name('tabs'), Const(1)))], None, None))]))
Module(None, Stmt([Assign([AssName('model_dependencies', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([From('functools', [('partial', None)], 0)]))
Module(None, Stmt([Function(None, 'fixture_dirs', ['self'], [], 0, None, Stmt([Pass()]))]))
elif self . META . get ( 'CONTENT_TYPE' , '' ) . startswith ( 'application/x-www-form-urlencoded' ) :
try :
Module(None, Stmt([Assign([AssName('nodelist_true_output', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Getattr(Name('self'), 'object'), Name('accessor_name'), Name('object_list')], None, None))]))
from django . core . exceptions import (  ImproperlyConfigured , ValidationError , NON_FIELD_ERRORS , FieldError )
Module(None, Stmt([Return(Mod((Const('<TranslatableFile: %s>'), CallFunc(Getattr(Getattr(Name('os'), 'sep'), 'join'), [List([Getattr(Name('self'), 'dirpath'), Getattr(Name('self'), 'file')])], None, None))))]))
Module(None, Stmt([Function(None, 'python_reloader', ['main_func', 'args', 'kwargs'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('InvalidTemplateLibrary'), [Const('Unsupported arguments to Library.tag: (%r, %r)'), Tuple([Name('name'), Name('compile_function')])], None, None), None, None)]))
Module(None, Stmt([Return(Getattr(CallFunc(Name('ValidationError'), [Getattr(Name('self'), 'data')], None, None), 'error_list'))]))
else :
Module(None, Stmt([From('django.db', [('connections', None), ('router', None), ('transaction', None), ('models', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([Assign([AssName('rel_model', 'OP_ASSIGN')], Getattr(Getattr(Name('field'), 'rel'), 'to'))]))
Module('     Adds (or updates) the "Vary" header in the given HttpResponse object.     newheaders is a list of header names that should be in "Vary". Existing     headers in "Vary" aren\'t removed.     ', Stmt([]))
Module(None, Stmt([Assign([Subscript(Name('memo'), 'OP_ASSIGN', [CallFunc(Name('id'), [Name('self')], None, None)])], Name('result'))]))
Module(None, Stmt([Function(None, 'validate_integer', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of BaseCache must provide a delete() method')], None, None), None, None)]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('_super'), [Name('SimpleLazyObject'), Name('self')], None, None), '__init__'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('ustring_re'), 'sub'), [Name('fix'), Name('s')], None, None))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('options'), 'get'), [Const('load_initial_data')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], Name('raw_data'))]))
Module(None, Stmt([From('decimal', [('Decimal', None), ('DecimalException', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Const("currently makemessages only supports domains 'django' and 'djangojs'")], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Name('TimeInput'))]))
Module(None, Stmt([Function(None, 'reader_enters', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('Command', [Name('TemplateCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Or([Compare(Getattr(Name('self'), '__language'), [('==', Getattr(Name('settings'), 'LANGUAGE_CODE'))]), Compare(Getattr(Name('self'), '__language'), [('==', Const('en-us'))])]), Stmt([Pass()]))], None)]))
@ register . filter ( is_safe = True )
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Getattr(Name('self'), '_wrapped'), Name('name'), Name('value')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'tokens'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core', [('mail', None)], 0)]))
Module(None, Stmt([Assign([AssName('qs', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Getattr(Getattr(Name('pk'), 'rel'), 'to'), '_default_manager'), 'get_queryset'), [], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const(' '), 'join'), [ListComp(CallFunc(Name('force_bytes'), [Name('arg'), Name('encoding'), Name('strings_only'), Name('errors')], None, None), [ListCompFor(AssName('arg', 'OP_ASSIGN'), Name('s'), [])])], None, None))]))
Module(None, Stmt([Assign([AssName('text', 'OP_ASSIGN')], Mod((Const('%s\x1b[%sm'), Tuple([Or([Name('text'), Const('')]), Name('RESET')]))))]))
else :
Module(None, Stmt([Continue()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'connection'), 'starttls'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('timezone'), Name('tzinfo')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Tuple([Name('new_name'), Name('field_params'), Name('field_notes')]))]))
else :
Module(None, Stmt([Function(None, 'update_watch', ['sender', 'kwargs'], [Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('other', 'OP_ASSIGN')], CallFunc(Getattr(Name('other'), '__cast'), [], None, None))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_post'))]))
Module(None, Stmt([If([(Or([Compare(Getattr(Name('self'), 'verbosity'), [('>', Const(0))]), Getattr(Name('self'), 'interactive')]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('name'), 'startswith'), [Const('.')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('json'), 'dumps'), [CallFunc(Getattr(Name('self'), 'get_json_data'), [Name('escape_html')], None, None)], None, None))]))
Module(None, Stmt([Function(None, '_coerce', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__str__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('RawPostDataException'), [Const("You cannot access body after reading from request's data stream")], None, None), None, None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_called_from_command_line', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('server_address', 'OP_ASSIGN')], Tuple([Name('addr'), Name('port')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'close'), [Name('fd')], None, None))]))
Module(None, Stmt([Class('ChoiceInput', [Name('SubWidget')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Name('message'), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([Assign([AssAttr(Name('result'), 'widget', 'OP_ASSIGN')], CallFunc(Getattr(Name('copy'), 'deepcopy'), [Getattr(Name('self'), 'widget'), Name('memo')], None, None))]))
Module(None, Stmt([Function(None, 'non_field_errors', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('data'), 'getlist'), [Name('name')], None, None))]))
is_dst = False if dt is None else self . _isdst ( dt )
Module(None, Stmt([Function(None, 'normalize_col_name', ['self', 'col_name', 'used_column_names', 'is_relation'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.forms.fields', [('IntegerField', None), ('BooleanField', None)], 0)]))
Module(None, Stmt([If([(Name('size'), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'extra_context'), 'OP_ASSIGN', [Name('name')])], Name('var'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Const('\n\n')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('file_or_path'), Const('read')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Name('getattr'), [Name('f'), Const('editable'), Name('False')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'add_library', ['self', 'lib'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('exclude'), 'append'), [Getattr(Name('f'), 'name')], None, None))]))
Module(None, Stmt([Assign([AssName('pk_value', 'OP_ASSIGN')], Getattr(Getattr(Name('form'), 'instance'), 'pk'))]))
Module(None, Stmt([Assign([AssName('default_error_messages', 'OP_ASSIGN')], Dict([(Const('invalid'), CallFunc(Name('_'), [Const('Enter a valid time.')], None, None))]))]))
Module(None, Stmt([Function(None, 'simple_tag', ['self', 'func', 'takes_context', 'name'], [Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('ExtendsError', [Name('Exception')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([With(CallFunc(Name('open'), [Name('filepath'), Const('r')], None, None), AssName('fp', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('slots'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('val', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), '_cache'), 'decr'), [Name('key'), Name('delta')], None, None))]))
Module(None, Stmt([Return(Name('nodelist'))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('Installed %d object(s) from %d fixture(s)'), Tuple([Getattr(Name('self'), 'loaded_object_count'), Getattr(Name('self'), 'fixture_count')])))], None, None))]))
Module(None, Stmt([Assign([AssName('cmd_options', 'OP_ASSIGN')], CallFunc(Name('vars'), [Name('options')], None, None))]))
Module(None, Stmt([Function(None, '__bool__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, '__init__', ['self', 'dir', 'params'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('mail'), 'outbox'), 'extend'), [Name('messages')], None, None))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('context'), Name('Context')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('p', 'OP_ASSIGN')], CallFunc(Getattr(Name('locale'), 'find'), [Const('_')], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], List([Const('')]))]))
Module(None, Stmt([Return(Name('media'))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('qs', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'queryset'), 'filter'), [], None, Dict([(Mod((Const('%s__in'), Name('key'))), Name('value'))])))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('type'), [Name('result')], None, None), [('in', Tuple([Name('ConvertingDict'), Name('ConvertingList'), Name('ConvertingTuple')]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'localize'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.template.base', [('TemplateDoesNotExist', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('CommandError'), [Mod((Const("Multiple fixtures named '%s' in %s. Aborting."), Tuple([Name('fixture_name'), CallFunc(Name('humanize'), [Name('fixture_dir')], None, None)])))], None, None), None, None)]))
Module(None, Stmt([From('django.db.models', [('ForeignKey', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'connection'), 'ehlo'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('DebugParser'), Name('self')], None, None), '__init__'), [Name('lexer')], None, None))]))
Module(None, Stmt([Function(None, 'wrapper', ['args', 'kwds'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
try :
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('get_git_changeset'), Const('cache')], None, None), Stmt([Pass()]))], None)]))
except AttributeError :
Module(None, Stmt([Assign([AssName('new_errors', 'OP_ASSIGN')], CallFunc(Name('check'), [Keyword('app_configs', Name('app_configs'))], None, None))]))
Module(None, Stmt([If([(And([Compare(Getattr(Name('self'), 'active_writers'), [('==', Const(0))]), Compare(Getattr(Name('self'), 'waiting_writers'), [('==', Const(0))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Dict([(Const('2'), Name('True')), (Name('True'), Name('True')), (Const('True'), Name('True')), (Const('3'), Name('False')), (Const('False'), Name('False')), (Name('False'), Name('False'))]), 'get'), [Name('value'), Name('None')], None, None))]))
Module(None, Stmt([Function(None, 'close', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('min_num', 'OP_ASSIGN')], Name('DEFAULT_MIN_NUM'))]))
Module(None, Stmt([Discard(CallFunc(Name('import_module'), [Name('project_name')], None, None))]))
Module(None, Stmt([Return(ListComp(CallFunc(Name('m2m_convert'), [Name('c')], None, None), [ListCompFor(AssName('c', 'OP_ASSIGN'), CallFunc(Getattr(Name('node'), 'getElementsByTagName'), [Const('object')], None, None), [])]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('parser'), 'parse'), [], None, None))]))
Module(None, Stmt([Assign([AssName('db', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('database')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('token'), 'lineno', 'OP_ASSIGN')], Getattr(Name('self'), 'lineno'))]))
Module(None, Stmt([Assign([AssName('orig_file', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Getattr(Name('self'), 'dirpath'), Getattr(Name('self'), 'file')], None, None))]))
Module(None, Stmt([Return(Mod((Const('(%s %r)'), Tuple([Getattr(Name('self'), 'id'), Getattr(Name('self'), 'value')]))))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_coerce'), [Name('value')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('format_html'), [Const('<textarea{0}>\r\n{1}</textarea>'), CallFunc(Name('flatatt'), [Name('final_attrs')], None, None), CallFunc(Name('force_text'), [Name('value')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_key'), [Name('key')], None, None))]))
except AttributeError :
Module(None, Stmt([Assign([AssName('status_code', 'OP_ASSIGN')], Const(404))]))
Module(None, Stmt([If([(Compare(Name('exit_code'), [('<', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('numberformat'), 'format'), [Name('value'), CallFunc(Name('get_format'), [Const('DECIMAL_SEPARATOR'), Name('lang'), Keyword('use_l10n', Name('use_l10n'))], None, None), Name('decimal_pos'), CallFunc(Name('get_format'), [Const('NUMBER_GROUPING'), Name('lang'), Keyword('use_l10n', Name('use_l10n'))], None, None), CallFunc(Name('get_format'), [Const('THOUSAND_SEPARATOR'), Name('lang'), Keyword('use_l10n', Name('use_l10n'))], None, None), Keyword('force_grouping', Name('force_grouping'))], None, None))]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango20Warning', None)], 0)]))
Module(None, Stmt([Assign([Subscript(Name('context'), 'OP_ASSIGN', [Getattr(Name('self'), 'asvar')])], Name('url'))]))
Module(None, Stmt([Function(None, 'get_available_name', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('_super', 'OP_ASSIGN')], Name('super'))]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'isdir'), [Name('directory')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'as_ul', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssTuple([AssName('dirpath', 'OP_ASSIGN'), AssName('dirnames', 'OP_ASSIGN'), AssName('locale_filenames', 'OP_ASSIGN')]), CallFunc(Getattr(Name('os'), 'walk'), [Name('basedir')], None, None), Stmt([Pass()]), None)]))
else :
Module(None, Stmt([Assign([AssName('new_obj', 'OP_ASSIGN')], CallFunc(Name('func'), [Name('obj'), Keyword('autoescape', Getattr(Name('context'), 'autoescape'))], Name('arg_vals'), None))]))
Module(None, Stmt([Function(None, 'setlist', ['self', 'key', 'list_'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([While(Const(1), Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(Name('v'), None, None)]))
Module(None, Stmt([Assign([AssName('caches', 'OP_ASSIGN')], CallFunc(Name('CacheHandler'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('middleware'), Const('process_view')], None, None), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--database'), Keyword('default', Name('DEFAULT_DB_ALIAS')), Keyword('help', Const('Nominates a database to synchronize. Defaults to the "default" database.'))], None, None))]))
Module(None, Stmt([For(AssName('app_label', 'OP_ASSIGN'), Name('app_labels'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'pos', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([If([(Name('namespaces'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'add_filters'), [Name('logger'), Name('filters')], None, None))]))
Module(None, Stmt([If([(Compare(Const('django.middleware.clickjacking.XFrameOptionsMiddleware'), [('not in', CallFunc(Name('set'), [Getattr(Name('settings'), 'MIDDLEWARE_CLASSES')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Name('check_for_migrations'), [Name('app_config'), Name('connection')], None, None))]))
Module(None, Stmt([If([(Name('threading'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('mail', 'OP_ASSIGN')], CallFunc(Name('EmailMultiAlternatives'), [Name('subject'), Name('message'), Name('from_email'), Name('recipient_list'), Keyword('connection', Name('connection'))], None, None))]))
Module(None, Stmt([If([(And([CallFunc(Name('hasattr'), [Getattr(Name('self'), 'cmd'), Const('missing_args_message')], None, None), Not(Or([Name('args'), CallFunc(Name('any'), [ListComp(Not(CallFunc(Getattr(Name('arg'), 'startswith'), [Const('-')], None, None)), [ListCompFor(AssName('arg', 'OP_ASSIGN'), Name('args'), [])])], None, None)]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--noinput'), Keyword('action', Const('store_false')), Keyword('dest', Const('interactive')), Keyword('default', Name('True')), Keyword('help', Const('Tells Django to NOT prompt the user for input of any kind.'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('compiled_parent'), '_render'), [Name('context')], None, None))]))
try :
Module(None, Stmt([Assign([AssName('TRAILING_PUNCTUATION', 'OP_ASSIGN')], List([Const('.'), Const(','), Const(':'), Const(';'), Const('.)'), Const('"'), Const("'")]))]))
Module(None, Stmt([Import([('hashlib', None)])]))
Module(None, Stmt([Function(None, 'filter', ['self', 'record'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('filelist', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_list_cache_files'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'allow_empty_file', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('allow_empty_file'), Name('False')], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('title'), Tuple([Name('list'), Name('tuple')])], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('mark_for_escaping'), [Name('value')], None, None))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([For(AssName('t', 'OP_ASSIGN'), CallFunc(Getattr(CallFunc(Name('Lexer'), [Name('src'), Name('origin')], None, None), 'tokenize'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('output'))]))
else :
Module(None, Stmt([Assign([AssName('objects', 'OP_ASSIGN')], Getattr(Name('model'), '_default_manager'))]))
Module(None, Stmt([If([(Compare(Name('cword'), [('==', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('\n'), 'join'), [Name('statements')], None, None))]))
Module(None, Stmt([Class('SafeMIMEText', [Name('MIMEMixin'), Name('MIMEText')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Compare(Const(','), [('in', Subscript(Name('args'), 'OP_APPLY', [Const(1)]))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('fname', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_key_to_file'), [Name('key'), Name('version')], None, None))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('self'), Const('error_dict')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('get_ns_resolver'), 'cache_clear'), [], None, None))]))
Module(None, Stmt([Assert(Not(And([Getattr(Name('cls'), '_delegate_bytes'), Getattr(Name('cls'), '_delegate_text')])), Const('Cannot call lazy() with both bytes and text return types.'))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Name('ungettext'), [], Name('msgs_with_ctxt'), None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_leftover', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([From('django.utils.safestring', [('mark_safe', None)], 0)]))
Module(None, Stmt([Assign([AssName('new_attr', 'OP_ASSIGN')], Name('old_attr'))]))
Module(None, Stmt([Assign([AssName('ip_address', 'OP_ASSIGN')], CallFunc(Getattr(Name('literal_match'), 'group'), [Const(1)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'addr', 'OP_ASSIGN')], Slice(Getattr(Name('self'), 'addr'), 'OP_APPLY', Const(1), UnarySub(Const(1))))]))
Module(None, Stmt([Assign([Subscript(Name('words'), 'OP_ASSIGN', [Name('i')])], CallFunc(Name('escape'), [Name('word')], None, None))]))
Module(None, Stmt([Assign([AssName('options', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'render_options'), [Name('choices'), Name('value')], None, None))]))
Module(None, Stmt([Function(None, 'tell', ['self'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([AssName('attr', 'OP_DELETE')]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('get_supported_language_variant'), 'cache_clear'), [], None, None))]))
Module(None, Stmt([Return(Name('obj'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--noinput'), Keyword('action', Const('store_false')), Keyword('dest', Const('interactive')), Keyword('default', Name('True')), Keyword('help', Const('Tells Django to NOT prompt the user for input of any kind.'))], None, None))]))
Module(None, Stmt([Assign([AssName('non_capturing_groups', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'model_to_dict', ['instance', 'fields', 'exclude'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'full_clean', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('force_text'), [Name('error')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('ttl'), Subscript(Name('item'), 'OP_APPLY', [Const('ttl')])], None, None))]))
Module(None, Stmt([Class('Command', [Name('AppCommand')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(Yield(Const('')))]))
Module(None, Stmt([Function(None, 'patch_cache_control', ['response', 'kwargs'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('form'))]))
except NoReverseMatch :
super ( PyLibMCCache , self ) . __init__ ( server , params ,  library = pylibmc ,  value_not_found_exception = pylibmc . NotFound )
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('migration_name'), Keyword('help', Const('Migrations will be squashed until and including this migration.'))], None, None))]))
Module(None, Stmt([If([(Compare(Name('inverse_match'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], CallFunc(Name('wrapped_callback'), [Name('request')], Name('callback_args'), Name('callback_kwargs')))]))
except IndexError :
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssName('_assertRegex', 'OP_ASSIGN')], Const('assertRegex'))]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], List([Const('runfastcgi')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Mod((Const('SELECT cache_key, value, expires FROM %s WHERE cache_key = %%s'), Name('table'))), List([Name('key')])], None, None))]))
Module(None, Stmt([Assign([AssName('locales', 'OP_ASSIGN')], Sub((CallFunc(Name('set'), [Name('locales')], None, None), CallFunc(Name('set'), [Name('exclude')], None, None))))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('sql'), 'extend'), [CallFunc(Getattr(Getattr(Name('connection'), 'creation'), 'sql_for_pending_references'), [Name('model'), CallFunc(Name('no_style'), [], None, None), Name('pending_references')], None, None)], None, None))]))
Module(None, Stmt([From('django.core.management.templates', [('TemplateCommand', None)], 0)]))
Module(None, Stmt([If([(Name('remaining_bits'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Getattr(Name('Image'), 'open'), [Name('file')], None, None), 'verify'), [], None, None))]))
Module(None, Stmt([Assign([AssName('objects', 'OP_ASSIGN')], CallFunc(Getattr(Name('json'), 'loads'), [Name('stream_or_string')], None, None))]))
Module(None, Stmt([Class('DefusedExpatParser', [Name('_ExpatParser')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(Name('nesting')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('Info'), Name('self')], None, None), '__init__'), [Name('INFO')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Name('Field')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('model', 'OP_ASSIGN')], Name('None'))]))
except Exception :
Module(None, Stmt([Assign([Subscript(Name('_format_cache'), 'OP_ASSIGN', [Name('cache_key')])], Name('None'))]))
both_before = [  Tok ( "comment" , r"/\*(.|\n)*?\*/" ) ,  Tok ( "linecomment" , r"//.*?$" ) ,  Tok ( "ws" , r"\s+" ) ,  Tok ( "keyword" , literals ( """                            break case catch class const continue debugger                            default delete do else enum export extends                            finally for function if import in instanceof                            new return super switch this throw try typeof                            var void while with                            """ , suffix = r"\b" ) , next = 'reg' ) ,  Tok ( "reserved" , literals ( "null true false" , suffix = r"\b" ) , next = 'div' ) ,  Tok ( "id" , r"""                   ([a-zA-Z_$   ]|\\u[0-9a-fA-Z]{4})   # first char                   ([a-zA-Z_$0-9]|\\u[0-9a-fA-F]{4})*  # rest chars                   """ , next = 'div' ) ,  Tok ( "hnum" , r"0[xX][0-9a-fA-F]+" , next = 'div' ) ,  Tok ( "onum" , r"0[0-7]+" ) ,  Tok ( "dnum" , r"""                     (   (0|[1-9][0-9]*)     # DecimalIntegerLiteral                         \.                  # dot                         [0-9]*              # DecimalDigits-opt                         ([eE][-+]?[0-9]+)?  # ExponentPart-opt                     |                         \.                  # dot                         [0-9]+              # DecimalDigits                         ([eE][-+]?[0-9]+)?  # ExponentPart-opt                     |                         (0|[1-9][0-9]*)     # DecimalIntegerLiteral                         ([eE][-+]?[0-9]+)?  # ExponentPart-opt                     )                     """ , next = 'div' ) ,  Tok ( "punct" , literals ( """                          >>>= === !== >>> <<= >>= <= >= == != << >> &&                          || += -= *= %= &= |= ^=                          """ ) , next = "reg" ) ,  Tok ( "punct" , literals ( "++ -- ) ]" ) , next = 'div' ) ,  Tok ( "punct" , literals ( "{ } ( [ . ; , < > + - * % & | ^ ! ~ ? : =" ) , next = 'reg' ) ,  Tok ( "string" , r'"([^"\\]|(\\(.|\n)))*?"' , next = 'div' ) ,  Tok ( "string" , r"'([^'\\]|(\\(.|\n)))*?'" , next = 'div' ) ,  ]
Module(None, Stmt([Assign([AssAttr(Name('self'), 'file', 'OP_ASSIGN')], CallFunc(Name('BytesIO'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('comment'), 'append'), [Getattr(Name('t'), 'contents')], None, None))]))
Module(None, Stmt([Assign([AssName('use_workaround', 'OP_ASSIGN')], Or([Compare(Name('current_version'), [('<', Tuple([Const(2), Const(7), Const(3)]))]), And([Compare(Name('current_version'), [('>=', Tuple([Const(3), Const(0)]))]), Compare(Name('current_version'), [('<', Tuple([Const(3), Const(2), Const(3)]))])])]))]))
Module(None, Stmt([Class('TimeInput', [Name('DateTimeBaseInput')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('True'))]))
else :
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([If([(And([Compare(Name('field_type'), [('==', Const('CharField'))]), Subscript(Name('row'), 'OP_APPLY', [Const(3)])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('re_tag', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('<(/)?([^ ]+?)(?:(\\s*/)| .*?)?>'), Getattr(Name('re'), 'S')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const("dictionary doesn't specify a version")], None, None), None, None)]))
Module(None, Stmt([Function(None, 'value_from_datadict', ['self', 'data', 'files', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'timezone', 'OP_ASSIGN')], Getattr(Name('obj'), 'tzinfo'))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('s'), Name('bytes')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssTuple([AssName('field', 'OP_ASSIGN'), AssName('error_list', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('self'), 'error_dict'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('literal_match', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'literal_regex'), 'match'), [Name('domain_part')], None, None))]))
Module(None, Stmt([Return(Subscript(Name('MONTHS_AP'), 'OP_APPLY', [Getattr(Getattr(Name('self'), 'data'), 'month')]))]))
Module(None, Stmt([Assign([AssName('_url_drive_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^([a-z])[:|]'), Getattr(Name('re'), 'I')], None, None))]))
Module(None, Stmt([If([(Compare(Name('i'), [('>=', CallFunc(Name('len'), [Name('subject')], None, None))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Function(None, 'load_template_source', ['self', 'template_name', 'template_dirs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('app_models', 'OP_ASSIGN')], CallFunc(Getattr(Name('router'), 'get_migratable_models'), [Name('app_config'), Getattr(Name('connection'), 'alias')], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(CallFunc(Name('getattr'), [Name('self'), Mod((Const('clean_%s'), Name('name')))], None, None), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_archive', 'OP_ASSIGN')], CallFunc(CallFunc(Getattr(Name('self'), '_archive_cls'), [Name('file')], None, None), [Name('file')], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('k2', 'OP_ASSIGN'), AssName('v2', 'OP_ASSIGN')]), Name('v'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('unique_id', 'OP_ASSIGN')], Subscript(Name('item'), 'OP_APPLY', [Const('unique_id')]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('value'), Getattr(Name('datetime'), 'date')], None, None), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Return(CallFunc(Getattr(Const(''), 'join'), [GenExpr(GenExprInner(CallFunc(Getattr(Name('random'), 'choice'), [Name('allowed_chars')], None, None), [GenExprFor(AssName('i', 'OP_ASSIGN'), CallFunc(Name('range'), [Name('length')], None, None), [])]))], None, None))]))
Module(None, Stmt([Assign([AssName('filename', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Name('to_path'), Name('name')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'keyOrder'), 'remove'), [Name('key')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'rename'), [Name('old_file_name'), Name('new_file_name')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'addQuickElement'), [Const('category'), Name('cat')], None, None))]))
Module(None, Stmt([If([(Compare(Name('sep'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('admin', 'OP_ASSIGN')], Const('admin'))]))
Module(None, Stmt([Function(None, 'prepare_js_for_gettext', ['js'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('app_name'), Name('BaseCommand')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('lookup'), [('==', Const('date'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'g'), [], None, None))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Return(Slice(Getattr(Name('self'), 'keyOrder'), 'OP_APPLY', None, None))]))
Module(None, Stmt([Return(Name('filter_func'))]))
Module(None, Stmt([Assign([Subscript(Name('hextets'), 'OP_ASSIGN', [Name('index')])], CallFunc(Getattr(Subscript(Name('hextets'), 'OP_APPLY', [Name('index')]), 'lstrip'), [Const('0')], None, None))]))
Module(None, Stmt([For(AssTuple([AssName('reference', 'OP_ASSIGN'), AssName('receivers', 'OP_ASSIGN')]), CallFunc(Getattr(Getattr(Name('obj'), 'unresolved_references'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('exc_type', 'OP_ASSIGN')], CallFunc(Name('type'), [Name('exc')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'activated', 'OP_ASSIGN')], Name('True'))]))
finally :
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('output')], None, None))]))
Module(None, Stmt([With(CallFunc(Name('open'), [Name('filepath'), Const('rb')], None, None), AssName('fp', 'OP_ASSIGN'), Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'method'), [('!=', Const('POST'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('lib', 'OP_ASSIGN'), Name('builtins'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(And([Compare(Subscript(Name('version'), 'OP_APPLY', [Const(3)]), [('==', Const('alpha'))]), Compare(Subscript(Name('version'), 'OP_APPLY', [Const(4)]), [('==', Const(0))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Getattr(Name('os'), 'path'), 'exists'), [Getattr(Name('self'), '_dir')], None, None)), Stmt([Pass()]))], None)]))
except InvalidOperation :
Module(None, Stmt([Function(None, '__next__', ['self'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Name('super'), [Name('DjangoJSONEncoder'), Name('self')], None, None), 'default'), [Name('o')], None, None))]))
Module(None, Stmt([Function(None, '__contains__', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('f'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('attrs'), 'setdefault'), [Const('step'), Const('any')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'format_string', 'OP_ASSIGN')], Name('format_string'))]))
Module(None, Stmt([From('__future__', [('absolute_import', None)], 0)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('app_labels')], None, None), [('==', Const(1))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Subscript(Name('item'), 'OP_APPLY', [Const('unique_id')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('logger'), 'warning'), [Const('Bad Request (UnicodeDecodeError)'), Keyword('exc_info', CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None)), Keyword('extra', Dict([(Const('status_code'), Const(400))]))], None, None))]))
Module(None, Stmt([Function(None, 'is_library_missing', ['name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('SplitDateTimeWidget', [Name('MultiWidget')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'POST', 'OP_ASSIGN')], CallFunc(Name('QueryDict'), [Keyword('mutable', Name('True'))], None, None))]))
Module(None, Stmt([Function(None, 'infix', ['bp', 'func'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils', [('translation', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'makedirs'), [Name('directory')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--database'), Keyword('default', Name('DEFAULT_DB_ALIAS')), Keyword('help', Const('Nominates a database to print the SQL for. Defaults to the "default" database.'))], None, None))]))
Module(None, Stmt([Assign([AssName('opts', 'OP_ASSIGN')], CallFunc(Name('tuple'), [GenExpr(GenExprInner(Name('s'), [GenExprFor(AssName('s', 'OP_ASSIGN'), Name('styles'), [GenExprIf(Compare(Name('s'), [('in', CallFunc(Getattr(Name('opt_dict'), 'keys'), [], None, None))]))])]))], None, None))]))
Module(None, Stmt([Assign([AssName('plan', 'OP_ASSIGN')], CallFunc(Getattr(Name('executor'), 'migration_plan'), [CallFunc(Getattr(Getattr(Getattr(Name('executor'), 'loader'), 'graph'), 'leaf_nodes'), [], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('handle_m2m'), [Name('relobj')], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('required')]), Keyword('code', Const('required'))], None, None), None, None)]))
Module(None, Stmt([Assign([Slice(Name('root'), 'OP_ASSIGN', None, None)], List([Name('root'), Name('root'), Name('None'), Name('None')]))]))
Module(None, Stmt([Assign([AssName('is_reversed', 'OP_ASSIGN')], Compare(Subscript(Name('bits'), 'OP_APPLY', [UnarySub(Const(1))]), [('==', Const('reversed'))]))]))
Module(None, Stmt([Class('MultipleHiddenInput', [Name('HiddenInput')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('is_usable', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Discard(CallFunc(Name('_load_serializers'), [], None, None))]))
Module(None, Stmt([Function(None, 'check_for_language', ['lang_code'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'phone2numeric', ['phone'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('match', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('_html_parser'), 'endtagfind'), 'match'), [Name('rawdata'), Name('i')], None, None))]))
else :
Module(None, Stmt([Function(None, 'size', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssName('header', 'OP_ASSIGN'), Name('headerlist'), Stmt([Pass()]), None)]))
except ValidationError as e :
Module(None, Stmt([Assign([AssTuple([AssName('year_val', 'OP_ASSIGN'), AssName('month_val', 'OP_ASSIGN'), AssName('day_val', 'OP_ASSIGN')])], Tuple([Getattr(Name('value'), 'year'), Getattr(Name('value'), 'month'), Getattr(Name('value'), 'day')]))]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('==', Const(3))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('basedirs', 'OP_ASSIGN')], List([CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'dirname'), [CallFunc(Getattr(Getattr(Name('os'), 'path'), 'dirname'), [Name('__file__')], None, None)], None, None), Const('conf'), Const('locale')], None, None), Const('locale')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stream'), 'close'), [], None, None))]))
Module(None, Stmt([Function(None, '_handle_fk_field_node', ['self', 'node', 'field'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'jython_reloader', ['main_func', 'args', 'kwargs'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core.servers.fastcgi', [('FASTCGI_HELP', None)], 0)]))
Module(None, Stmt([For(AssName('dirname', 'OP_ASSIGN'), Slice(Name('dirs'), 'OP_APPLY', None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'base', 'OP_ASSIGN')], Name('base'))]))
Module(None, Stmt([If([(CallFunc(Name('getattr'), [Name('e'), Const('silent_variable_failure'), Name('False')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('choice', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'choices'), 'OP_APPLY', [Name('idx')]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'add_root_elements'), [Name('handler')], None, None))]))
Module(None, Stmt([Function(None, 'render', ['self', 'context'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'set'), [Name('key'), Name('value'), Name('timeout'), Name('version')], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('parse_http_date'), [Name('date')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'is_bound', 'OP_ASSIGN')], Or([Compare(Name('data'), [('is not', Name('None'))]), Compare(Name('files'), [('is not', Name('None'))])]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_post_parse_error', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssName('full_file', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Getattr(Name('self'), 'path'), Name('f')], None, None))]))
Module(None, Stmt([Function(None, 'empty_variable', ['self', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('m2m_convert', 'OP_ASSIGN')], Lambda(['n'], [], 0, CallFunc(Getattr(Getattr(Getattr(Getattr(Getattr(Name('field'), 'rel'), 'to'), '_meta'), 'pk'), 'to_python'), [CallFunc(Getattr(Name('n'), 'getAttribute'), [Const('pk')], None, None)], None, None)))]))
Module(None, Stmt([If([(Compare(Name('fdel'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('compile_function'))]))
Module(None, Stmt([Assign([AssName('new_value', 'OP_ASSIGN')], Add((Name('value'), Name('delta'))))]))
Module(None, Stmt([Assign([AssName('app_configs', 'OP_ASSIGN')], ListComp(CallFunc(Getattr(Name('apps'), 'get_app_config'), [Name('app_label')], None, None), [ListCompFor(AssName('app_label', 'OP_ASSIGN'), Name('app_labels'), [])]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_callback_strs'), 'add'), [Getattr(Name('pattern'), '_callback_str')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'params'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'choices', 'OP_ASSIGN')], CallFunc(Name('list'), [Name('choices')], None, None))]))
Module(None, Stmt([Function(None, 'execute', ['self', 'args', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('shell'), 'mainloop'), [], None, None))]))
Module(None, Stmt([Class('BoundField', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('Module_six_moves_urllib_error'), Getattr(Name('attr'), 'name'), Name('attr')], None, None))]))
Module(None, Stmt([Return(Or([CallFunc(Getattr(Getattr(Getattr(Name('self'), 'data'), 'tzinfo'), 'tzname'), [Getattr(Name('self'), 'data')], None, None), Const('')]))]))
else :
Module(None, Stmt([Return(Getattr(Name('self'), '_name'))]))
Module(None, Stmt([Return(CallFunc(Name('int'), [Name('value')], None, None))]))
Module(None, Stmt([From('threading', [('local', None)], 0)]))
Module(None, Stmt([If([(Name('primary_keys'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('lib', 'OP_ASSIGN')], CallFunc(Name('import_library'), [Name('taglib_module')], None, None))]))
Module(None, Stmt([Assign([AssName('__contains__', 'OP_ASSIGN')], CallFunc(Name('new_method_proxy'), [Getattr(Name('operator'), 'contains')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('final_output'), 'append'), [Const('-- The following references should be added but depend on non-existent tables:')], None, None))]))
elif '\\' in path :
Module(None, Stmt([Pass()]))
try :
Module(None, Stmt([Function(None, 'handle', ['self', 'tablenames', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('m'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'do_include', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([For(AssTuple([AssName('app_name', 'OP_ASSIGN'), AssName('model_list', 'OP_ASSIGN')]), CallFunc(Getattr(Name('manifest'), 'items'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--ipv6'), Const('-6'), Keyword('action', Const('store_true')), Keyword('dest', Const('use_ipv6')), Keyword('default', Name('False')), Keyword('help', Const('Tells Django to use an IPv6 address.'))], None, None))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], Or([Getattr(Name('self'), 'to_field_name'), Const('pk')]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [CallFunc(Name('_'), [Const('ManagementForm data is missing or has been tampered with')], None, None), Keyword('code', Const('missing_management_form'))], None, None), None, None)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('new_operations')], None, None), [('==', CallFunc(Name('len'), [Name('operations')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('app_label'), [('not in', Getattr(Getattr(Name('executor'), 'loader'), 'migrated_apps'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([For(AssName('migration_name', 'OP_ASSIGN'), Name('migration_names'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('s'), Name('Promise')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('response_headers'), 'append'), [Tuple([CallFunc(Name('str'), [Const('Set-Cookie')], None, None), CallFunc(Name('str'), [CallFunc(Getattr(Name('c'), 'output'), [Keyword('header', Const(''))], None, None)], None, None)])], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [Name('ImproperlyConfigured'), CallFunc(Name('ImproperlyConfigured'), [Name('msg')], None, None), Subscript(CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), 'OP_APPLY', [Const(2)])], None, None))]))
Module(None, Stmt([If([(And([Compare(Name('index'), [('is not', Name('None'))]), Compare(Name('index'), [('<', CallFunc(Getattr(Name('self'), 'initial_form_count'), [], None, None))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('value'), [('is not', Name('result'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('save'), 'alters_data', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([From('importlib', [('import_module', None)], 0)]))
Module(None, Stmt([Function(None, '__repr__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(CallFunc(Name('get_serializer'), [Name('format')], None, None), [], None, None))]))
Module(None, Stmt([If([(Name('escaped'), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils.crypto', [('get_random_string', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const("Non-reversible reg-exp portion: '(?%s'"), Name('ch')))], None, None), None, None)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Assign([AssName('write', 'OP_ASSIGN')], CallFunc(Name('property'), [Lambda(['self'], [], 0, Getattr(Getattr(Name('self'), 'file'), 'write'))], None, None))]))
Module(None, Stmt([Function(None, 'sort_dependencies', ['app_list'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('_drive_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^([a-z]):'), Getattr(Name('re'), 'I')], None, None))]))
Module(None, Stmt([Function(None, '__getstate__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([If([(And([Not(Name('found')), Or([Not(Name('line')), CallFunc(Getattr(Name('plural_forms_re'), 'search'), [Name('line')], None, None)])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY2'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('cleaned_data', 'OP_ASSIGN')], Getattr(Name('form'), 'cleaned_data'))]))
Module(None, Stmt([Return(Name('self'))]))
Module(None, Stmt([From('io', [('BytesIO', None)], 0)]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(Name('base64'), 'urlsafe_b64encode'), [Name('s')], None, None), 'strip'), [Const('=')], None, None))]))
Module(None, Stmt([If([(Getattr(Name('self'), 'fail_silently'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_add_local_translations'), [], None, None))]))
Module(None, Stmt([If([(Compare(Name('name'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Add((Add((CallFunc(Getattr(Slice(Name('language'), 'OP_APPLY', None, Name('p')), 'lower'), [], None, None), Const('_'))), CallFunc(Getattr(Slice(Name('language'), 'OP_APPLY', Add((Name('p'), Const(1))), None), 'upper'), [], None, None))))]))
Module(None, Stmt([Class('Node', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'linebreaks_filter', ['value', 'autoescape'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Getattr(Name('self'), 'DSTOFFSET'))]))
Module(None, Stmt([Function(None, 'serialize', ['format', 'queryset', 'options'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'format_string'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'umask'), [Name('umask')], None, None))]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None)], 0)]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([For(AssName('pattern', 'OP_ASSIGN'), Name('allowed_hosts'), Stmt([Pass()]), None)]))
try :
Module(None, Stmt([If([(Compare(Name('i'), [('>=', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('location'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'urlconf_name', 'default_kwargs', 'app_name', 'namespace'], [Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('list'), [CallFunc(Getattr(Name('self'), 'itervalues'), [], None, None)], None, None))]))
Module(None, Stmt([Import([('traceback', None)])]))
Module(None, Stmt([Return(LeftShift((Const(1), Const(31))))]))
try :
Module(None, Stmt([Assign([AssName('header', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_convert_to_charset'), [Name('header'), Const('ascii')], None, None))]))
Module(None, Stmt([Function(None, 'lex', ['self', 'text'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [Name('os_err_exc_type'), CallFunc(Name('os_err_exc_type'), [Mod((Const('Error executing %s: %s'), Tuple([Subscript(Name('args'), 'OP_APPLY', [Const(0)]), Name('strerror')])))], None, None), Subscript(CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), 'OP_APPLY', [Const(2)])], None, None))]))
Module(None, Stmt([While(Compare(Name('rbp'), [('<', Getattr(Getattr(Name('self'), 'current_token'), 'lbp'))]), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('response'), 'has_header'), [Const('Vary')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('value'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_clean_form', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('split'))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('form'), 'fields'), 'OP_ASSIGN', [Name('name')])], CallFunc(Name('InlineForeignKeyField'), [Getattr(Name('self'), 'instance')], None, Name('kwargs')))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'data', 'files', 'instance', 'save_as_new', 'prefix', 'queryset', 'kwargs'], [Name('None'), Name('None'), Name('None'), Name('False'), Name('None'), Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('show_traceback'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, '_create_cache', ['backend', 'kwargs'], [], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(Name('json'), 'dumps'), [Name('obj'), Keyword('separators', Tuple([Const(','), Const(':')]))], None, None), 'encode'), [Const('latin-1')], None, None))]))
Module(None, Stmt([Discard(Yield(Const('from __future__ import unicode_literals')))]))
Module(None, Stmt([Assign([AssName('urlconf', 'OP_ASSIGN')], Getattr(Name('settings'), 'ROOT_URLCONF'))]))
Module(None, Stmt([Assign([AssName('parser', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'create_parser'), [Subscript(Name('argv'), 'OP_APPLY', [Const(0)]), Subscript(Name('argv'), 'OP_APPLY', [Const(1)])], None, None))]))
Module(None, Stmt([Assign([AssName('TOTAL_FORM_COUNT', 'OP_ASSIGN')], Const('TOTAL_FORMS'))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Function(None, 'clear', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Class('CheckboxFieldRenderer', [Name('ChoiceFieldRenderer')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('pformat'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('work_file', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Getattr(Name('self'), 'dirpath'), Name('thefile')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('arg_vals'), 'append'), [CallFunc(Name('mark_safe'), [Name('arg')], None, None)], None, None))]))
Module(None, Stmt([Import([('datetime', None)])]))
Module(None, Stmt([If([(Compare(Name('value'), [('in', Getattr(Name('self'), 'empty_values'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of BaseArchive must provide an extract() method')], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('notifier'), 'read_events'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('trans_real'), '_active', 'OP_ASSIGN')], CallFunc(Getattr(Name('threading'), 'local'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('sys'), 'exit'), [Const(2)], None, None))]))
else :
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Const('Malformed arguments to url tag')], None, None), None, None)]))
else :
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'deleted_objects'), 'append'), [Name('obj')], None, None))]))
Module(None, Stmt([Function(None, '_get_validation_exclusions', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_prepare_data', ['self', 'data'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('executor'), 'migrate'), [Name('targets'), Name('plan'), Keyword('fake', CallFunc(Getattr(Name('options'), 'get'), [Const('fake'), Name('False')], None, None))], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('\n'), 'join'), [GenExpr(GenExprInner(Mod((Const('* %s'), Name('e'))), [GenExprFor(AssName('e', 'OP_ASSIGN'), Name('self'), [])]))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'merge'), [Name('translation')], None, None))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'pointer', 'OP_ASSIGN')], Name('i'))]))
Module(None, Stmt([Discard(CallFunc(Name('check_for_migrations'), [Name('app_config'), Name('connection')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'loaddata'), [Name('fixture_labels')], None, None))]))
Module(None, Stmt([Function(None, 'reverse', ['viewname', 'urlconf', 'args', 'kwargs', 'prefix', 'current_app'], [Name('None'), Name('None'), Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Compare(Getattr(Name('self'), 'path'), [('<', Getattr(Name('other'), 'path'))]))]))
Module(None, Stmt([Assign([AssName('error_text', 'OP_ASSIGN')], Subscript(Name('ERRORS'), 'OP_APPLY', [Getattr(Name('e'), 'errno')]))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('Command'), Name('self')], None, None), 'handle'), [], None, Name('options')))]))
Module(None, Stmt([If([(Compare(Subscript(Name('item'), 'OP_APPLY', [Const('author_link')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('locale', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('locale')], None, None))]))
Module(None, Stmt([Function(None, '_update_errors', ['self', 'errors'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('error_msg', 'OP_ASSIGN')], Mod((Const('Tried %s'), Name('tried'))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [CallFunc(Getattr(Name('self'), 'render_option'), [Name('selected_choices')], Name('option'), None)], None, None))]))
else :
except IndexError :
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'unlink'), [Name('work_file')], None, None))]))
Module(None, Stmt([If([(Name('html_message'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Or([Compare(Name('value'), [('==', Getattr(Name('self'), 'empty_value'))]), Compare(Name('value'), [('in', Getattr(Name('self'), 'empty_values'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('%s\n'), Name('line')))], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([For(AssName('message', 'OP_ASSIGN'), Name('email_messages'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssAttr(Name('result'), 'key', 'OP_ASSIGN')], Name('key'))]))
Module(None, Stmt([From('django.utils.datastructures', [('MultiValueDict', None), ('ImmutableList', None)], 0)]))
Module(None, Stmt([Return(Getattr(Name('self'), '_non_form_errors'))]))
except ( ImportError , AttributeError ) :
Module(None, Stmt([If([(Not(CallFunc(Getattr(Name('directory_created'), 'get'), [Name('app_label'), Name('False')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('attrs'), 'OP_ASSIGN', [Const('pk')])], CallFunc(Name('smart_text'), [Name('obj_pk')], None, None))]))
Module(None, Stmt([Break()]))
Module(None, Stmt([Assign([AssName('backend', 'OP_ASSIGN')], CallFunc(Getattr(Name('params'), 'pop'), [Const('BACKEND')], None, None))]))
Module(None, Stmt([If([(Compare(Name('exclude'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Const('st'))]))
Module(None, Stmt([Return(Name('r'))]))
Module(None, Stmt([Assign([AssName('end', 'OP_ASSIGN')], CallFunc(Getattr(Slice(Name('rawdata'), 'OP_APPLY', Name('k'), Name('endpos')), 'strip'), [], None, None))]))
except ( IOError , OSError ) :
Module(None, Stmt([Return(CallFunc(Name('CommentNode'), [], None, None))]))
self . directory_permissions_mode = (  directory_permissions_mode if directory_permissions_mode is not None  else settings . FILE_UPLOAD_DIRECTORY_PERMISSIONS  )
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('field', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [Getattr(Name('self'), 'fields')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Getattr(Name('context'), 'render_context'))]))
Module(None, Stmt([Return(Mod((Const('<%s: %s>'), Tuple([Getattr(Getattr(Name('self'), '__class__'), '__name__'), CallFunc(Getattr(CallFunc(Name('super'), [Name('MultiValueDict'), Name('self')], None, None), '__repr__'), [], None, None)]))))]))
Module(None, Stmt([Pass()]))
else :
Module(None, Stmt([From('django.forms.widgets', [('Widget', None), ('Select', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('TemplateSyntaxError'), [Mod((Const("No named cycles in template. '%s' is not defined"), Name('name')))], None, None), None, None)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('stream_or_string'), Name('bytes')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Name('ch'), [('==', Const('('))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('True'))]))
from django . core . exceptions import AppRegistryNotReady
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('processing locale %s\n'), Name('locale')))], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'verbosity', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('verbosity')], None, None))]))
Module(None, Stmt([Assign([AssName('converter', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('self'), Name('converter')], None, None))]))
Module(None, Stmt([Assign([AssName('match', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('sub', 'OP_ASSIGN')], Const(''))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Assign([AssName('related', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('obj'), Getattr(Name('field'), 'name')], None, None))]))
Module(None, Stmt([If([(Compare(Name('confirm'), [('==', Const('yes'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
else :
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('option_label'), Tuple([Name('list'), Name('tuple')])], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Raise(CallFunc(Name('Exception'), [Mod((Const('This %s instance cannot tell its position'), Getattr(Getattr(Name('self'), '__class__'), '__name__')))], None, None), None, None)]))
Module(None, Stmt([Function(None, '__init__', ['self', 'attrs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('tag', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(Name('match'), 'group'), [Const(1)], None, None), 'strip'), [], None, None))]))
Module(None, Stmt([Assign([AssName('raw_data', 'OP_ASSIGN')], CallFunc(Getattr(Name('field_stream'), 'read'), [], None, None))]))
else :
Module(None, Stmt([Return(CallFunc(CallFunc(Name('getattr'), [Name('t'), Name('translation_function')], None, None), [Name('singular'), Name('plural'), Name('number')], None, None))]))
Module(None, Stmt([Function(None, 'delete', ['self', 'name'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Compare(Getattr(Name('self'), 'max_length'), [('is not', Name('None'))]), Compare(CallFunc(Name('len'), [Name('file_name')], None, None), [('>', Getattr(Name('self'), 'max_length'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('CRITICAL', 'OP_ASSIGN')], Const(50))]))
Module(None, Stmt([Assign([AssName('s', 'OP_ASSIGN')], CallFunc(Name('Select'), [Keyword('choices', Name('choices'))], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('timeuntil'), [Name('value'), Name('arg')], None, None))]))
Module(None, Stmt([Class('RenameMethodsBase', [Name('type')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Name('force_text'), [Subscript(Name('list_'), 'OP_APPLY', [Const(0)])], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'choices', 'OP_ASSIGN')], Name('choices'))]))
else :
Module(None, Stmt([Function(None, 'parse_time', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'ignorableWhitespace'), [Add((Const('\n'), Mul((Mul((Const(' '), CallFunc(Getattr(Getattr(Name('self'), 'options'), 'get'), [Const('indent'), Name('None')], None, None))), Name('level')))))], None, None))]))
Module(None, Stmt([Import([('hmac', None)])]))
Module(None, Stmt([From('django.core.urlresolvers', [('reverse', None), ('NoReverseMatch', None)], 0)]))
Module(None, Stmt([Raise(CallFunc(Name('Resolver404'), [Dict([(Const('tried'), Name('tried')), (Const('path'), Name('new_path'))])], None, None), None, None)]))
Module(None, Stmt([Function(None, '__init__', ['self'], [], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Assign([AssName('args', 'OP_ASSIGN')], Slice(Name('args'), 'OP_APPLY', None, UnarySub(Const(1))))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Getattr(Name('self'), '_regex'), Getattr(Name('six'), 'string_types')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('self'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('``--natural`` is deprecated; use ``--natural-foreign`` instead.'), Name('RemovedInDjango19Warning')], None, None))]))
Module(None, Stmt([Import([('re', None)])]))
Module(None, Stmt([Function(None, 'pbkdf2', ['password', 'salt', 'iterations', 'dklen', 'digest'], [Const(0), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('processing file %s in %s\n'), Tuple([Name('f'), Name('dirpath')])))], None, None))]))
elif not hasattr ( message , 'message' if six . PY3 else 'code' ) :
Module(None, Stmt([For(AssName('name', 'OP_ASSIGN'), CallFunc(Name('dir'), [Getattr(Name('models'), 'signals')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Const('\n'), 'join'), [Name('statements')], None, None))]))
Module(None, Stmt([Assign([AssName('exp', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Subscript(Name('connections'), 'OP_APPLY', [Name('db')]), 'ops'), 'value_to_db_datetime'), [Name('exp')], None, None))]))
Module(None, Stmt([If([(And([CallFunc(Name('isinstance'), [Getattr(Name('self'), 'data'), Getattr(Name('datetime'), 'datetime')], None, None), CallFunc(Name('is_aware'), [Getattr(Name('self'), 'data')], None, None)]), Stmt([Pass()]))], None)]))
else :
Module(None, Stmt([If([(Compare(Name('best_doublecolon_start'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_size', 'OP_ASSIGN')], Name('size'))]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], List([Const('utc'), Const('get_fixed_timezone'), Const('get_default_timezone'), Const('get_default_timezone_name'), Const('get_current_timezone'), Const('get_current_timezone_name'), Const('activate'), Const('deactivate'), Const('override'), Const('localtime'), Const('now'), Const('is_aware'), Const('is_naive'), Const('make_aware'), Const('make_naive')]))]))
Module(None, Stmt([For(AssName('h', 'OP_ASSIGN'), Slice(Getattr(Name('logger'), 'handlers'), 'OP_APPLY', None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY2'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(And([Compare(Getattr(Name('self'), 'count'), [('==', Const(0))]), Not(Getattr(Name('self'), 'allow_empty_first_page'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'get_queryset', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('upto'), [('!=', Name('start'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'code', 'OP_ASSIGN')], Name('code'))]))
Module(None, Stmt([Function(None, 'urlencode', ['query', 'doseq'], [Const(0)], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'start_serialization', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(CallFunc(Name('hasattr'), [Name('template'), Const('render')], None, None)), Stmt([Pass()]))], None)]))
else :
else :
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_cull_frequency'), [('==', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_clean_form'), [], None, None))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Function(None, 'last', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('found', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([If([(Compare(Name('old_handler'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Or([And([Getattr(Name('self'), 'negate'), Compare(Name('val1'), [('!=', Name('val2'))])]), And([Not(Getattr(Name('self'), 'negate')), Compare(Name('val1'), [('==', Name('val2'))])])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Assign([AssAttr(Name('parser'), 'EntityDeclHandler', 'OP_ASSIGN')], Getattr(Name('self'), 'entity_decl'))]))
Module(None, Stmt([From('django.db', [('connections', None), ('router', None), ('transaction', None), ('DEFAULT_DB_ALIAS', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('index_output'), 'append'), [Mod((Const('CREATE %sINDEX %s ON %s (%s);'), Tuple([Name('unique'), CallFunc(Name('qn'), [Mod((Const('%s_%s'), Tuple([Name('tablename'), Getattr(Name('f'), 'name')])))], None, None), CallFunc(Name('qn'), [Name('tablename')], None, None), CallFunc(Name('qn'), [Getattr(Name('f'), 'name')], None, None)])))], None, None))]))
Module(None, Stmt([Assign([AssName('localedir', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('os'), 'path'), 'join'), [Getattr(Name('app_config'), 'path'), Const('locale')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_cull'), [], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), '_count', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'object_list'), 'count'), [], None, None))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('ComboField'), Name('self')], None, None), 'clean'), [Name('value')], None, None))]))
Module(None, Stmt([Assign([AssName('tried_modules', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Return(CallFunc(Getattr(Getattr(Name('self'), 'nodelist'), 'render'), [Name('context')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'to_field_name', 'OP_ASSIGN')], Name('to_field_name'))]))
Module(None, Stmt([If([(Not(Getattr(Name('self'), '_cached_loaders')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('sep', 'OP_ASSIGN')], Name('space'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'json_kwargs'), 'pop'), [Const('stream'), Name('None')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('errors'), 'extend'), [CallFunc(Name('_check_middleware_classes'), [], None, Name('kwargs'))], None, None))]))
Module(None, Stmt([Import([('sys', None)])]))
Module(None, Stmt([From('django.utils.deprecation', [('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([Discard(Yield(Tuple([Const(''), Getattr(Getattr(Name('self'), 'field'), 'empty_label')])))]))
Module(None, Stmt([Assign([AssName('local_attrs', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'build_attrs'), [Keyword('id', Mod((Name('field'), Name('id_'))))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Name('save_m2m'), [], None, None))]))
Module(None, Stmt([From('django.db', [('models', None)], 0)]))
Module(None, Stmt([Assign([AssName('row_data', 'OP_ASSIGN')], GenExpr(GenExprInner(Subscript(Getattr(Name('form'), 'cleaned_data'), 'OP_APPLY', [Name('field')]), [GenExprFor(AssName('field', 'OP_ASSIGN'), Name('unique_check'), [GenExprIf(Compare(Name('field'), [('in', Getattr(Name('form'), 'cleaned_data'))]))])])))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'set'), [Name('key'), Name('value'), Keyword('version', Add((Name('version'), Name('delta'))))], None, None))]))
Module(None, Stmt([If([(Name('leading'), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssTuple([AssName('possibility', 'OP_ASSIGN'), AssName('pattern', 'OP_ASSIGN'), AssName('defaults', 'OP_ASSIGN')]), Name('possibilities'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('form', 'OP_ASSIGN')], Subscript(Getattr(Name('self'), 'forms'), 'OP_APPLY', [Name('i')]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), '_convert_to_charset'), [Name('value'), Const('latin-1'), Keyword('mime_encode', Name('True'))], None, None))]))
Module(None, Stmt([If([(Compare(Subscript(Getattr(Name('connection'), 'settings_dict'), 'OP_APPLY', [Const('ENGINE')]), [('==', Const('django.db.backends.dummy'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('status_code', 'OP_ASSIGN')], Const(200))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('filename'), 'endswith'), [Tuple([Const('.pyo'), Const('.pyc'), Const('.py.class')])], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('locale_dir', 'OP_ASSIGN')], Getattr(Name('self'), 'default_locale_path'))]))
Module(None, Stmt([Function(None, 'build_absolute_uri', ['self', 'location'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('kwargs'), 'OP_ASSIGN', [Const('help_text')])], Subscript(Name('help_texts'), 'OP_APPLY', [Getattr(Name('f'), 'name')]))]))
if '.' in word or '@' in word or ':' in word :
Module(None, Stmt([If([(Compare(Name('timeout'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('hidden_widget', 'OP_ASSIGN')], Name('SplitHiddenDateTimeWidget'))]))
@ register . tag
Module(None, Stmt([Class('TarArchive', [Name('BaseArchive')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Import([('copy', None)])]))
Module(None, Stmt([Return(Name('True'))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Unable to configure root logger: %s'), Name('e')))], None, None), None, None)]))
Module(None, Stmt([Raise(CallFunc(Name('AttributeError'), [Mod((Const('no such move, %r'), Tuple([Name('name')])))], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('\nCreated new merge migration %s'), Getattr(Name('writer'), 'path')))], None, None))]))
else :
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([From('django.core.servers.basehttp', [('get_internal_wsgi_application', None)], 0)]))
Module(None, Stmt([Assign([AssName('msg', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'style'), 'HTTP_NOT_FOUND'), [Name('msg')], None, None))]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('self'), 'template_cache'), 'OP_ASSIGN', [Name('key')])], Tuple([Name('template'), Name('None')]))]))
else :
Module(None, Stmt([Function(None, '_iterkeys', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(And([Name('value'), Add((CallFunc(Getattr(Subscript(Name('value'), 'OP_APPLY', [Const(0)]), 'upper'), [], None, None), Slice(Name('value'), 'OP_APPLY', Const(1), None)))]))]))
except Exception as e :
Module(None, Stmt([Function(None, 'copy', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('field_type', 'OP_ASSIGN')], Const('NullBooleanField('))]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([If([(CallFunc(Name('callable'), [Name('name')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('nodelist'), 'contains_nontext'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('boundary'), Stmt([Pass()]))], None)]))
except ImportError as e :
try :
Module(None, Stmt([Discard(CallFunc(Name('patch_cache_control'), [Name('response'), Keyword('max_age', Name('cache_timeout'))], None, None))]))
except OSError as e :
Module(None, Stmt([Return(Tuple([Name('path'), Const('')]))]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('options'), 'get'), [Const('use_default_ignore_patterns')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('MemoryFileUploadHandler'), Name('self')], None, None), 'new_file'), [], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Return(Name('result'))]))
else :
Module(None, Stmt([Assign([AssAttr(Name('self'), '_urlconf_module', 'OP_ASSIGN')], CallFunc(Name('import_module'), [Getattr(Name('self'), 'urlconf_name')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'validate_key'), [Name('key')], None, None))]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('value'), Name('list')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('tried', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([If([(Compare(Name('endpos'), [('<', Const(0))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('cc', 'OP_ASSIGN')], CallFunc(Name('dict'), [GenExpr(GenExprInner(CallFunc(Name('dictitem'), [Name('el')], None, None), [GenExprFor(AssName('el', 'OP_ASSIGN'), Name('cc'), [])]))], None, None))]))
Module(None, Stmt([From('django.test.utils', [('get_runner', None)], 0)]))
Module(None, Stmt([AugAssign(Name('key'), '+=', CallFunc(Name('tuple'), [GenExpr(GenExprInner(CallFunc(Name('type'), [Name('v')], None, None), [GenExprFor(AssTuple([AssName('k', 'OP_ASSIGN'), AssName('v', 'OP_ASSIGN')]), Name('sorted_items'), [])]))], None, None))]))
Module(None, Stmt([Assign([AssName('absolute_path', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'download'), [Name('template')], None, None))]))
Module(None, Stmt([Assign([AssName('ret', 'OP_ASSIGN')], CallFunc(Getattr(Name('fcntl'), 'flock'), [CallFunc(Name('_fd'), [Name('f')], None, None), Getattr(Name('fcntl'), 'LOCK_UN')], None, None))]))
Module(None, Stmt([Assign([AssName('obj_list', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'target'), 'resolve'), [Name('context'), Name('True')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Name('shutdown_message')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('handler'), 'endElement'), [Const('author')], None, None))]))
Module(None, Stmt([Assign([AssName('host', 'OP_ASSIGN')], CallFunc(Getattr(Name('host'), 'lower'), [], None, None))]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), '_wrapped'), [('is', Name('empty'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'tz', ['request'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Return(Add((Add((Getattr(Name('self'), 'to'), Getattr(Name('self'), 'cc'))), Getattr(Name('self'), 'bcc'))))]))
else :
Module(None, Stmt([Return(Or([CallFunc(Getattr(Name('self'), 'has_previous'), [], None, None), CallFunc(Getattr(Name('self'), 'has_next'), [], None, None)]))]))
Module(None, Stmt([Assign([AssAttr(Name('_dec'), '__name__', 'OP_ASSIGN')], Mod((Const('method_decorator(%s)'), Getattr(Getattr(Name('decorator'), '__class__'), '__name__'))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_archive'), 'close'), [], None, None))]))
Module(None, Stmt([Assign([AssName('lang', 'OP_ASSIGN')], CallFunc(Name('get_language'), [], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Const('``use_natural_keys`` is deprecated; use ``use_natural_foreign_keys`` instead.'), Name('RemovedInDjango19Warning')], None, None))]))
Module(None, Stmt([Assign([AssName('dklen', 'OP_ASSIGN')], Name('hlen'))]))
Module(None, Stmt([Function(None, 'file_complete', ['self', 'file_size'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('super'), [Name('TypedMultipleChoiceField'), Name('self')], None, None), 'clean'), [Name('value')], None, None))]))
Module(None, Stmt([From('django.utils.encoding', [('force_bytes', None)], 0)]))
Module(None, Stmt([Return(DictComp(Name('f'), CallFunc(Getattr(Name('e'), 'as_data'), [], None, None), [ListCompFor(AssTuple([AssName('f', 'OP_ASSIGN'), AssName('e', 'OP_ASSIGN')]), CallFunc(Getattr(Name('self'), 'items'), [], None, None), [])]))]))
Module(None, Stmt([While(Or([Name('escaped'), Compare(Name('ch'), [('!=', Const(']'))])]), Stmt([Pass()]), None)]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'append'), [Mod((Const('%s = %s  ###'), Tuple([Name('key'), Subscript(Name('user_settings'), 'OP_APPLY', [Name('key')])])))], None, None))]))
Module(None, Stmt([Assign([AssName('dot', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('package')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'func', 'args', 'kwargs', 'url_name', 'app_name', 'namespaces'], [Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('date_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('(?P<year>\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2})$')], None, None))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('min', 'OP_ASSIGN')], CallFunc(Name('int'), [CallFunc(Getattr(Name('m'), 'group'), [Const('min')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('formatters', 'OP_ASSIGN')], CallFunc(Getattr(Name('config'), 'get'), [Const('formatters'), Name('EMPTY_DICT')], None, None))]))
Module(None, Stmt([Return(Name('translated'))]))
Module(None, Stmt([Function(None, 'save_existing_objects', ['self', 'commit'], [Name('True')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('logger', 'OP_ASSIGN')], CallFunc(Getattr(Name('logging'), 'getLogger'), [Const('django.request')], None, None))]))
Module(None, Stmt([Assign([AssName('fields', 'OP_ASSIGN')], CallFunc(Name('fields_for_model'), [Getattr(Name('opts'), 'model'), Getattr(Name('opts'), 'fields'), Getattr(Name('opts'), 'exclude'), Getattr(Name('opts'), 'widgets'), Name('formfield_callback'), Getattr(Name('opts'), 'localized_fields'), Getattr(Name('opts'), 'labels'), Getattr(Name('opts'), 'help_texts'), Getattr(Name('opts'), 'error_messages')], None, None))]))
elif hasattr ( s , '__unicode__' ) :
Module(None, Stmt([Break()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('errors'), 'update'), [Subscript(Name('kwargs'), 'OP_APPLY', [Const('error_messages')])], None, None))]))
Module(None, Stmt([Function(None, 'close', ['self'], [], 0, None, Stmt([Pass()]))]))
elif field . rel and isinstance ( field . rel , models . ManyToOneRel ) :
Module(None, Stmt([Assign([AssName('must_be_first', 'OP_ASSIGN')], Name('False'))]))
Module(None, Stmt([Assign([AssName('overlapped', 'OP_ASSIGN')], CallFunc(Name('OVERLAPPED'), [], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('filter_func'), Const('_decorated_function')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stdout'), 'write'), [Mod((Const('Downloading %s\n'), Name('display_url')))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('SplitDateTimeField'), Name('self')], None, None), '__init__'), [Name('fields')], Name('args'), Name('kwargs')))]))
Module(None, Stmt([Assign([AssName('template', 'OP_ASSIGN')], CallFunc(Name('get_template_from_string'), [Name('template'), Name('origin'), Name('template_name')], None, None))]))
Module(None, Stmt([Assign([AssName('DEFAULT_CHUNK_SIZE', 'OP_ASSIGN')], Mul((Const(64), Power((Const(2), Const(10))))))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'url', 'OP_ASSIGN')], CallFunc(Name('iri_to_uri'), [Name('url')], None, None))]))
Module(None, Stmt([Assign([AssName('paths', 'OP_ASSIGN')], ListComp(CallFunc(Name('force_text'), [Name('p')], None, None), [ListCompFor(AssName('p', 'OP_ASSIGN'), Name('paths'), [])]))]))
Module(None, Stmt([Assign([AssName('bits', 'OP_ASSIGN')], Slice(Name('bits'), 'OP_APPLY', None, UnarySub(Const(2))))]))
@ register . filter ( is_safe = True , needs_autoescape = True )
Module(None, Stmt([Assign([AssAttr(Name('self'), '__starttag_text', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Return(Mod((Const('%s:%s:%s'), Tuple([Name('key_prefix'), Name('version'), Name('key')]))))]))
Module(None, Stmt([For(AssName('char', 'OP_ASSIGN'), Name('key'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Name('call_command'), [Const('flush'), Keyword('verbosity', CallFunc(Name('max'), [Sub((Getattr(Name('self'), 'verbosity'), Const(1))), Const(0)], None, None)), Keyword('interactive', Name('False')), Keyword('database', Name('db')), Keyword('reset_sequences', Name('False')), Keyword('inhibit_post_migrate', Name('True'))], None, None))]))
Module(None, Stmt([Assign([AssName('not_found', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(Name('daemonize'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Getattr(Name('parser'), '_namedCycleNodes'), 'OP_ASSIGN', [Name('name')])], Name('node'))]))
Module(None, Stmt([Function(None, '__exit__', ['self', 'exc_type', 'exc_value', 'traceback'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('handle_app'), [Getattr(Name('app_config'), 'models_module')], None, Name('options')))]))
Module(None, Stmt([Function(None, 'lazy_number', ['func', 'resultclass', 'number', 'kwargs'], [Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'start_doctype_decl', ['self', 'name', 'sysid', 'pubid', 'has_internal_subset'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([Function(None, '__init__', ['self', 'lexer'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const("'%s' has no field named '%s'."), Tuple([Getattr(Getattr(Name('self'), '__class__'), '__name__'), Name('field')])))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('error_messages', 'OP_ASSIGN')], Getattr(Subscript(Getattr(Name('self'), 'fields'), 'OP_APPLY', [Name('field')]), 'error_messages'))]))
Module(None, Stmt([If([(Compare(Name('max_age'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
try :
Module(None, Stmt([Assign([AssName('path', 'OP_ASSIGN')], CallFunc(Name('safe_join'), [Getattr(Name('self'), 'location'), Name('name')], None, None))]))
Module(None, Stmt([Assign([AssName('verbosity', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('verbosity')], None, None))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
elif token . token_type == 1 :
self . children = children [ : ] if children else [ ]
Module(None, Stmt([Pass()]))
Module(None, Stmt([Function(None, '__init__', ['self', 'input_formats', 'args', 'kwargs'], [Name('None')], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('warnings'), 'warn'), [Mod((Const('`%s.%s` is deprecated, use `%s` instead.'), Tuple([Getattr(Name('self'), 'class_name'), Getattr(Name('self'), 'old_method_name'), Getattr(Name('self'), 'new_method_name')]))), Getattr(Name('self'), 'deprecation_warning'), Const(2)], None, None))]))
Module(None, Stmt([Discard(Yield(Const(None)))]))
Module(None, Stmt([Function(None, 'unsign', ['self', 'value', 'max_age'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(None, None, None)]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Mod((CallFunc(Name('ugettext'), [Const('%s KB')], None, None), CallFunc(Name('filesize_number_format'), [Div((Name('bytes'), Name('KB')))], None, None))))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Name('ConvertingDict'), [Name('value')], None, None))]))
Module(None, Stmt([If([(Compare(Name('value'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'stream'), 'write'), [Const('\n')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'file', 'field_name', 'name', 'content_type', 'size', 'charset', 'content_type_extra'], [Name('None')], 0, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([Function(None, 'hidden_fields', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Raise(CallFunc(Name('ValidationError'), [Subscript(Getattr(Name('self'), 'error_messages'), 'OP_APPLY', [Const('invalid_date')]), Keyword('code', Const('invalid_date'))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('HTMLParser', 'OP_ASSIGN')], Getattr(Name('_html_parser'), 'HTMLParser'))]))
Module(None, Stmt([For(AssName('line', 'OP_ASSIGN'), Name('chunk_buffer'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, 'content', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('url', 'OP_ASSIGN')], CallFunc(Name('unquote'), [CallFunc(Name('force_str'), [Name('url')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('message', 'OP_ASSIGN')], CallFunc(Getattr(Name('email_message'), 'message'), [], None, None))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_cache'), 'delete'), [Name('key')], None, None))]))
Module(None, Stmt([Raise(Name('e'), None, None)]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Getattr(Name('field'), 'rel'), Const('to')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Getattr(Getattr(Name('self'), 'data'), 'day'))]))
try :
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('make_aware expects a naive datetime, got %s'), Name('value')))], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('targets', 'OP_ASSIGN')], List([Tuple([Name('app_label'), Name('None')])]))]))
Module(None, Stmt([Discard(CallFunc(Name('len'), [CallFunc(Name('X'), [], None, None)], None, None))]))
Module(None, Stmt([Raise(CallFunc(Name('TypeError'), [Const('The argument `field` must be `None` when the `error` argument contains errors for multiple fields.')], None, None), None, None)]))
else :
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'as_widget'), [CallFunc(Name('TextInput'), [], None, None), Name('attrs')], None, Name('kwargs')))]))
Module(None, Stmt([If([(Compare(Name('value'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Mod((Const('<%s token: "%s...">'), Tuple([Name('token_name'), CallFunc(Getattr(Slice(Getattr(Name('self'), 'contents'), 'OP_APPLY', None, Const(20)), 'replace'), [Const('\n'), Const('')], None, None)]))))]))
Module(None, Stmt([Function(None, 'upper', ['value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('date'), [Getattr(Name('self'), 'year'), Getattr(Name('self'), 'month'), Getattr(Name('self'), 'day')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'backout', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, '_cull', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('keys', 'OP_ASSIGN')], CallFunc(Getattr(Name('n'), 'getElementsByTagName'), [Const('natural')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'loopvars', 'sequence', 'is_reversed', 'nodelist_loop', 'nodelist_empty'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('consume_next'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('_default', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([If([(Compare(Getattr(Name('endblock'), 'contents'), [('not in', Name('acceptable_endblocks'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('widget', 'OP_ASSIGN')], Name('SplitDateTimeWidget'))]))
Module(None, Stmt([Return(CallFunc(Name('SafeBytes'), [Name('s')], None, None))]))
Module(None, Stmt([Return(Const(''))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'filter_function'), [Name('func')], None, Name('flags')))]))
Module(None, Stmt([Discard(CallFunc(Name('add_move'), [CallFunc(Name('MovedModule'), [Const('_thread'), Const('thread')], None, None)], None, None))]))
Module(None, Stmt([Function(None, '_format_value', ['self', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('queryset'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('name', 'OP_ASSIGN'), Getattr(Name('pattern'), 'reverse_dict'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('code', 'OP_ASSIGN')], Const('min_value'))]))
Module(None, Stmt([If([(Compare(Const("'stream'"), [('not in', CallFunc(Name('str'), [Name('te')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), 'xml'), 'characters'), [CallFunc(Name('smart_text'), [Name('key_value')], None, None)], None, None))]))
Module(None, Stmt([Function(None, 'filter_function', ['self', 'func', 'flags'], [], 8, None, Stmt([Pass()]))]))
try :
Module(None, Stmt([From('django.utils', [('six', None)], 0)]))
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], CallFunc(Getattr(Name('response'), 'render'), [], None, None))]))
Module(None, Stmt([Assign([AssName('unifunc', 'OP_ASSIGN')], Subscript(Name('results'), 'OP_APPLY', [Const('unifunc')]))]))
Module(None, Stmt([For(AssTuple([AssName('item_type', 'OP_ASSIGN'), AssName('meta_data', 'OP_ASSIGN'), AssName('field_stream', 'OP_ASSIGN')]), CallFunc(Name('Parser'), [Name('stream'), Getattr(Name('self'), '_boundary')], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([While(Getattr(Name('self'), 'tokens'), Stmt([Pass()]), None)]))
Module(None, Stmt([Function(None, '__setitem__', ['self', 'key', 'value'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('importlib', [('import_module', None)], 0)]))
Module(None, Stmt([Function(None, '_get_post', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Name('supported_code'))]))
Module(None, Stmt([Discard(CallFunc(Name('callback'), [Name('self')], None, None))]))
Module(None, Stmt([Assign([AssName('output', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([If([(And([Compare(Getattr(Name('self'), 'max_digits'), [('is not', Name('None'))]), Compare(Getattr(Name('self'), 'decimal_places'), [('is not', Name('None'))]), Compare(Name('whole_digits'), [('>', Sub((Getattr(Name('self'), 'max_digits'), Getattr(Name('self'), 'decimal_places'))))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('custom_sql', 'OP_ASSIGN')], CallFunc(Name('custom_sql_for_model'), [Name('model'), CallFunc(Name('no_style'), [], None, None), Name('connection')], None, None))]))
Module(None, Stmt([Return(Add((Add((Add((CallFunc(Getattr(Slice(Name('language'), 'OP_APPLY', None, Name('p')), 'lower'), [], None, None), Const('_'))), CallFunc(Getattr(Subscript(Name('language'), 'OP_APPLY', [Add((Name('p'), Const(1)))]), 'upper'), [], None, None))), CallFunc(Getattr(Slice(Name('language'), 'OP_APPLY', Add((Name('p'), Const(2))), None), 'lower'), [], None, None))))]))
Module(None, Stmt([Assign([AssName('url', 'OP_ASSIGN')], CallFunc(Name('property'), [Lambda(['self'], [], 0, Subscript(Name('self'), 'OP_APPLY', [Const('Location')]))], None, None))]))
Module(None, Stmt([Assign([AssName('is_usable', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Return(Add((Name('name'), Const('-clear'))))]))
Module(None, Stmt([Return(Dict([(Const('TIME_ZONE'), CallFunc(Getattr(Name('timezone'), 'get_current_timezone_name'), [], None, None))]))]))
while token . contents . startswith ( 'elif' ) :
Module(None, Stmt([For(AssName('closable', 'OP_ASSIGN'), Getattr(Name('self'), '_closable_objects'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('mail'), 'send'), [], None, None))]))
Module(None, Stmt([From('django.utils.safestring', [('mark_safe', None)], 0)]))
Module(None, Stmt([If([(Compare(Getattr(Name('self'), 'file_permissions_mode'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('outfile'), 'write'), [Name('data')], None, None))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([From('django.template.base', [('Origin', None), ('Template', None), ('Context', None), ('TemplateDoesNotExist', None)], 0)]))
Module(None, Stmt([If([(Compare(Name('data'), [('is', Name('False'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('match', 'OP_ASSIGN')], CallFunc(Getattr(Name('condition'), 'eval'), [Name('context')], None, None))]))
else :
Module(None, Stmt([Assign([AssName('token', 'OP_ASSIGN')], Subscript(Name('tokens'), 'OP_APPLY', [Name('i')]))]))
Module(None, Stmt([Return(Getattr(Name('self'), '_encoding'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--natural-primary'), Keyword('action', Const('store_true')), Keyword('dest', Const('use_natural_primary_keys')), Keyword('default', Name('False')), Keyword('help', Const('Use natural primary keys if they are available.'))], None, None))]))
Module(None, Stmt([Assign([AssName('guessed_path', 'OP_ASSIGN')], CallFunc(Getattr(Name('path'), 'join'), [Name('tempdir'), Name('guessed_filename')], None, None))]))
Module(None, Stmt([From('django.utils.six.moves', [('zip', None)], 0)]))
Module(None, Stmt([Import([('zipfile', None)])]))
Module(None, Stmt([Return(Dict([(Const('request'), Name('request'))]))]))
Module(None, Stmt([Assign([AssName('name', 'OP_ASSIGN')], Getattr(Getattr(Name('self'), 'fk'), 'name'))]))
Module(None, Stmt([From('django.core.signals', [('request_finished', None)], 0)]))
Module(None, Stmt([Assign([AssName('response', 'OP_ASSIGN')], CallFunc(Name('middleware_method'), [Name('request'), Name('callback'), Name('callback_args'), Name('callback_kwargs')], None, None))]))
Module(None, Stmt([Function(None, 'start_object', ['self', 'obj'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('form', 'OP_ASSIGN')], CallFunc(Name('ManagementForm'), [Keyword('auto_id', Getattr(Name('self'), 'auto_id')), Keyword('prefix', Getattr(Name('self'), 'prefix')), Keyword('initial', Dict([(Name('TOTAL_FORM_COUNT'), CallFunc(Getattr(Name('self'), 'total_form_count'), [], None, None)), (Name('INITIAL_FORM_COUNT'), CallFunc(Getattr(Name('self'), 'initial_form_count'), [], None, None)), (Name('MIN_NUM_FORM_COUNT'), Getattr(Name('self'), 'min_num')), (Name('MAX_NUM_FORM_COUNT'), Getattr(Name('self'), 'max_num'))]))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('output'), 'insert'), [Const(0), Mod((Name('error_row'), CallFunc(Name('force_text'), [Name('top_errors')], None, None)))], None, None))]))
Module(None, Stmt([Assign([AssName('rawdata', 'OP_ASSIGN')], Getattr(Name('self'), 'rawdata'))]))
Module(None, Stmt([Class('RssUserland091Feed', [Name('RssFeed')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_library'), [Name('temp_lib')], None, None))]))
Module(None, Stmt([For(AssName('relobj', 'OP_ASSIGN'), CallFunc(Getattr(CallFunc(Name('getattr'), [Name('obj'), Getattr(Name('field'), 'name')], None, None), 'iterator'), [], None, None), Stmt([Pass()]), None)]))
elif token_string . startswith ( BLOCK_TAG_START ) :
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Assign([AssName('basedirs', 'OP_ASSIGN')], CallFunc(Name('set'), [CallFunc(Name('map'), [Getattr(Getattr(Name('os'), 'path'), 'abspath'), CallFunc(Name('filter'), [Getattr(Getattr(Name('os'), 'path'), 'isdir'), Name('basedirs')], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Name('serializer'), [], None, None), 'dumps'), [Name('obj')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'setting', 'nodelist'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('url', 'OP_ASSIGN')], CallFunc(Name('smart_urlquote'), [Name('middle')], None, None))]))
Module(None, Stmt([From('django.utils.six.moves', [('input', None)], 0)]))
Module(None, Stmt([Assign([AssName('nodelist', 'OP_ASSIGN')], CallFunc(Getattr(Name('parser'), 'parse'), [], None, None))]))
Module(None, Stmt([Assign([AssName('file_list', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'find_files'), [Const('.')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--empty'), Keyword('action', Const('store_true')), Keyword('dest', Const('empty')), Keyword('default', Name('False')), Keyword('help', Const('Create an empty migration.'))], None, None))]))
Module(None, Stmt([Return(Add((Mul((Getattr(Getattr(Name('self'), 'paginator'), 'per_page'), Sub((Getattr(Name('self'), 'number'), Const(1))))), Const(1))))]))
except HTMLParseError :
Module(None, Stmt([If([(CallFunc(Getattr(Name('re'), 'search'), [Mod((Const('^%s%s'), Tuple([Name('prefix_norm'), Name('pattern')]))), Mod((Name('candidate_pat'), Name('candidate_subs'))), Getattr(Name('re'), 'UNICODE')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('format', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'get'), [Const('format')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'stream', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('stream'), Getattr(Name('sys'), 'stdout')], None, None))]))
Module(None, Stmt([From('django.utils.text', [('get_valid_filename', None)], 0)]))
Module(None, Stmt([Assign([AssName('choices', 'OP_ASSIGN')], ListComp(Tuple([Name('i'), Name('i')]), [ListCompFor(AssName('i', 'OP_ASSIGN'), Getattr(Name('self'), 'years'), [])]))]))
Module(None, Stmt([Pass()]))
else :
Module(None, Stmt([Assign([AssName('id_for_label', 'OP_ASSIGN')], CallFunc(Getattr(Name('widget'), 'id_for_label'), [Name('id_')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('re'), 'sub'), [Const('(?u)[^-\\w.]'), Const(''), Name('s')], None, None))]))
Module(None, Stmt([Class('_LazyDescr', [Name('object')], None, Stmt([Pass()]), None)]))
response = self . handle_uncaught_exception ( request , resolver , sys . exc_info ( ) )
Module(None, Stmt([Function(None, '__init__', ['self', 'stream', 'boundary'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('indexbytes', 'OP_ASSIGN')], Getattr(Name('operator'), 'getitem'))]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Name('call_command'), [Const('loaddata')], Name('fixture_labels'), Dict([(Const('verbosity'), Name('verbosity'))])))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Const('empty_label list/tuple must have 3 elements.')], None, None), None, None)]))
Module(None, Stmt([Assign([AssName('time_str', 'OP_ASSIGN')], CallFunc(Getattr(Name('date'), 'strftime'), [Mod((Const('%s, %%d %s %%Y %%H:%%M:%%S '), Tuple([Name('dow'), Name('month')])))], None, None))]))
Module(None, Stmt([If([(Compare(Name('CONTEXT_SEPARATOR'), [('in', Name('result'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 's', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('transaction'), 'atomic'), [Keyword('using', Name('database')), Keyword('savepoint', Getattr(Getattr(Name('connection'), 'features'), 'can_rollback_ddl'))], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Name('extracted'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Not(CallFunc(Name('isinstance'), [Name('cookie'), Getattr(Name('http_cookies'), 'BaseCookie')], None, None)), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Name('commands_only'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('regex_compiled', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Mod((Const('^%s/'), Name('language_code'))), Getattr(Name('re'), 'UNICODE')], None, None))]))
Module(None, Stmt([Assign([AssName('db', 'OP_ASSIGN')], CallFunc(Getattr(Name('router'), 'db_for_read'), [Getattr(Name('self'), 'cache_model_class')], None, None))]))
Module(None, Stmt([Function(None, '__nonzero__', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('conditions_nodelists'), 'append'), [Tuple([Name('None'), Name('nodelist')])], None, None))]))
Module(None, Stmt([If([(CallFunc(Name('hasattr'), [Name('formfield'), Const('queryset')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'ignore', 'OP_ASSIGN')], CallFunc(Getattr(Name('options'), 'pop'), [Const('ignorenonexistent'), Name('False')], None, None))]))
try :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('seen'), 'add'), [Name('k')], None, None))]))
Module(None, Stmt([For(AssName('formset', 'OP_ASSIGN'), Name('formsets'), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('subcommand', 'OP_ASSIGN')], Const('help'))]))
except TemplateSyntaxError as e :
Module(None, Stmt([Return(Name('s'))]))
elif bmatch :
Module(None, Stmt([Assign([AssName('smart_split_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('     ((?:         [^\\s\'"]*         (?:             (?:"(?:[^"\\\\]|\\\\.)*" | \'(?:[^\'\\\\]|\\\\.)*\')             [^\\s\'"]*         )+     ) | \\S+) '), Getattr(Name('re'), 'VERBOSE')], None, None))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), '_handle_object'), [Name('node')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('state_frame'), 'OP_ASSIGN', [Name('self')])], Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('usage'), 'append'), [Const('')], None, None))]))
Module(None, Stmt([From('django.db.migrations.autodetector', [('MigrationAutodetector', None)], 0)]))
Module(None, Stmt([Assign([AssName('tpl', 'OP_ASSIGN')], Const("ExternalReferenceForbidden(system_id='{}', public_id={})"))]))
Module(None, Stmt([Function(None, 'get_language_from_request', ['request', 'check_path'], [Name('False')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'close', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('code_list', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([Function(None, 'get_connection', ['backend', 'fail_silently', 'kwds'], [Name('None'), Name('False')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Add((Add((CallFunc(Getattr(Slice(Name('language'), 'OP_APPLY', None, Name('p')), 'lower'), [], None, None), Const('_'))), CallFunc(Getattr(Slice(Name('language'), 'OP_APPLY', Add((Name('p'), Const(1))), None), 'upper'), [], None, None))))]))
Module(None, Stmt([For(AssTuple([AssName('condition', 'OP_ASSIGN'), AssName('nodelist', 'OP_ASSIGN')]), Getattr(Name('self'), 'conditions_nodelists'), Stmt([Pass()]), None)]))
Module(None, Stmt([If([(CallFunc(Getattr(Name('self'), '_should_delete_form'), [Name('form')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('django.utils', [('timezone', None)], 0)]))
else :
Module(None, Stmt([Assign([AssName('ALLOWED_VARIABLE_CHARS', 'OP_ASSIGN')], Const('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_.'))]))
else :
Module(None, Stmt([Return(CallFunc(Getattr(CallFunc(Getattr(Name('name'), 'replace'), [Const('_'), Const(' ')], None, None), 'capitalize'), [], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'nodelist_true', 'nodelist_false', 'varlist'], [], 4, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([Subscript(Name('outdict'), 'OP_ASSIGN', [Name('name')])], Tuple([Name('value'), Name('params')]))]))
Module(None, Stmt([If([(And([Not(Getattr(Name('self'), 'is_required')), CallFunc(Getattr(CallFunc(Name('CheckboxInput'), [], None, None), 'value_from_datadict'), [Name('data'), Name('files'), CallFunc(Getattr(Name('self'), 'clear_checkbox_name'), [Name('name')], None, None)], None, None)]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('url_fields', 'OP_ASSIGN')], CallFunc(Name('split_url'), [Name('value')], None, None))]))
Module(None, Stmt([Function(None, '_decorator', ['view_func'], [], 0, None, Stmt([Pass()]))]))
else :
Module(None, Stmt([If([(And([Name('conflicts'), Not(Getattr(Name('self'), 'merge'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'P', ['self'], [], 0, None, Stmt([Pass()]))]))
except IOError as e :
else :
Module(None, Stmt([Return(Or([Compare(Slice(Name('sample'), 'OP_APPLY', None, Const(3)), [('==', Const('\xef\xbb\xbf'))]), CallFunc(Getattr(Name('sample'), 'startswith'), [Getattr(Name('codecs'), 'BOM_UTF16_LE')], None, None), CallFunc(Getattr(Name('sample'), 'startswith'), [Getattr(Name('codecs'), 'BOM_UTF16_BE')], None, None)]))]))
Module(None, Stmt([Assign([AssName('i', 'OP_ASSIGN')], Const(0))]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Import([('warnings', None)])]))
Module(None, Stmt([AssName('attr', 'OP_DELETE')]))
Module(None, Stmt([Assign([AssName('nodelist', 'OP_ASSIGN')], List(()))]))
Module(None, Stmt([From('django.utils.html', [('conditional_escape', None), ('format_html', None)], 0)]))
Module(None, Stmt([From('django.utils.module_loading', [('import_string', None)], 0)]))
Module(None, Stmt([Assign([AssName('text_type', 'OP_ASSIGN')], Name('str'))]))
else :
Module(None, Stmt([From('django.utils.encoding', [('force_text', None)], 0)]))
Module(None, Stmt([Discard(CallFunc(Name('setattr'), [Name('cls'), Name('k'), Name('meth')], None, None))]))
Module(None, Stmt([From('django.utils.translation', [('ugettext', '_')], 0)]))
def handle_uncaught_exception ( self , request , resolver , exc_info ) :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('parser'), 'add_argument'), [Const('--ignore'), Const('-i'), Keyword('action', Const('append')), Keyword('dest', Const('ignore_patterns')), Keyword('default', List(())), Keyword('metavar', Const('PATTERN')), Keyword('help', Const('Ignore files or directories matching this glob-style pattern. Use multiple times to ignore more.'))], None, None))]))
Module(None, Stmt([If([(Compare(Name('f'), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('WidthRatioNode'), [CallFunc(Getattr(Name('parser'), 'compile_filter'), [Name('this_value_expr')], None, None), CallFunc(Getattr(Name('parser'), 'compile_filter'), [Name('max_value_expr')], None, None), CallFunc(Getattr(Name('parser'), 'compile_filter'), [Name('max_width')], None, None), Keyword('asvar', Name('asvar'))], None, None))]))
@ wraps ( func )
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'labels', 'OP_ASSIGN')], CallFunc(Name('getattr'), [Name('options'), Const('labels'), Name('None')], None, None))]))
Module(None, Stmt([Return(Name('result'))]))
Module(None, Stmt([Assign([AssName('class_name', 'OP_ASSIGN')], Getattr(Name('base'), '__name__'))]))
Module(None, Stmt([Return(Add((Name('time_str'), Const('Z'))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('bits'), 'append'), [CallFunc(Name('force_text'), [Name('bit')], None, None)], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'sign', 'OP_ASSIGN')], Name('sign'))]))
Module(None, Stmt([Assign([AssName('is_relation', 'OP_ASSIGN')], Compare(Name('i'), [('in', Name('relations'))]))]))
Module(None, Stmt([Continue()]))
Module(None, Stmt([Raise(CallFunc(Name('NotImplementedError'), [Const('subclasses of Serializer must provide a start_serialization() method')], None, None), None, None)]))
Module(None, Stmt([If([(And([Getattr(Name('self'), 'use_ipv6'), Not(Getattr(Name('socket'), 'has_ipv6'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'negated', 'OP_ASSIGN')], Name('negated'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('declared_fields'), 'update'), [Getattr(Name('base'), 'declared_fields')], None, None))]))
Module(None, Stmt([With(CallFunc(Getattr(Name('context'), 'push'), [], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Getattr(Name('options'), 'settings'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'field'), 'bound_data'), [Getattr(Name('self'), 'data'), CallFunc(Getattr(Getattr(Getattr(Name('self'), 'form'), 'initial'), 'get'), [Getattr(Name('self'), 'name'), Getattr(Getattr(Name('self'), 'field'), 'initial')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('p'), 'feed'), [Name('data')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('fh'), 'write'), [CallFunc(Getattr(Name('writer'), 'as_string'), [], None, None)], None, None))]))
Module(None, Stmt([If([(Compare(Subscript(Name('message_context'), 'OP_APPLY', [Const(0)]), [('==', Const('"'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('MIMEMultipart'), '__setitem__'), [Name('self'), Name('name'), Name('val')], None, None))]))
else :
else :
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'append'), [CallFunc(Getattr(Name('self'), 'create_token'), [Name('bit'), Name('in_tag')], None, None)], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('result'), 'append'), [CallFunc(Getattr(Name('self'), 'create_token'), [Slice(Getattr(Name('self'), 'template_string'), 'OP_APPLY', Name('start'), Name('end')), Tuple([Name('start'), Name('end')]), Name('True')], None, None)], None, None))]))
Module(None, Stmt([Return(CallFunc(Name('len'), [Getattr(Name('self'), 'content')], None, None))]))
Module(None, Stmt([If([(Getattr(Name('six'), 'PY2'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'set'), [Name('key'), Name('new_value'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Return(Tuple([CallFunc(Getattr(Getattr(Name('self'), 'field'), 'prepare_value'), [Name('obj')], None, None), CallFunc(Getattr(Getattr(Name('self'), 'field'), 'label_from_instance'), [Name('obj')], None, None)]))]))
Module(None, Stmt([Discard(CallFunc(Getattr(CallFunc(Name('super'), [Name('SimpleUploadedFile'), Name('self')], None, None), '__init__'), [CallFunc(Name('BytesIO'), [Name('content')], None, None), Name('None'), Name('name'), Name('content_type'), CallFunc(Name('len'), [Name('content')], None, None), Name('None'), Name('None')], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), 'write'), [Name('s'), Name('encoding')], None, None))]))
Module(None, Stmt([Function(None, 'is_valid_path', ['path', 'urlconf'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(And([Compare(Name('BLOCK_CONTEXT_KEY'), [('in', Name('render_context'))]), Compare(CallFunc(Getattr(Subscript(Name('render_context'), 'OP_APPLY', [Name('BLOCK_CONTEXT_KEY')]), 'get_block'), [Getattr(Name('self'), 'name')], None, None), [('is not', Name('None'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Import([('errno', None)])]))
Module(None, Stmt([Return(Add((CallFunc(Getattr(Const(''), 'join'), [Name('T')], None, None), Slice(CallFunc(Name('F'), [Name('l')], None, None), 'OP_APPLY', None, Name('r')))))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('self'), '_mark_post_parse_error'), [], None, None))]))
Module(None, Stmt([Assign([AssName('help', 'OP_ASSIGN')], Const('Checks the entire Django project for potential problems.'))]))
Module(None, Stmt([If([(Or([Compare(Const('\n'), [('in', Name('val'))]), Compare(Const('\r'), [('in', Name('val'))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Name('value'))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('backend_name', 'OP_ASSIGN')], Subscript(CallFunc(Getattr(Subscript(Getattr(Name('connection'), 'settings_dict'), 'OP_APPLY', [Const('ENGINE')]), 'split'), [Const('.')], None, None), 'OP_APPLY', [UnarySub(Const(1))]))]))
Module(None, Stmt([For(AssName('db', 'OP_ASSIGN'), CallFunc(Getattr(Name('connections'), 'all'), [], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('token', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'next_token'), [], None, None))]))
Module(None, Stmt([Assign([AssName('message_context', 'OP_ASSIGN')], CallFunc(Getattr(Name('message_context'), 'strip'), [Const("'")], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('six'), 'reraise'), [Name('ImproperlyConfigured'), CallFunc(Name('ImproperlyConfigured'), [Name('msg')], None, None), Subscript(CallFunc(Getattr(Name('sys'), 'exc_info'), [], None, None), 'OP_APPLY', [Const(2)])], None, None))]))
Module(None, Stmt([Function(None, 'get_host', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.core.management.base', [('BaseCommand', None), ('CommandError', None)], 0)]))
Module(None, Stmt([From('django.utils.deprecation', [('RenameMethodsBase', None), ('RemovedInDjango19Warning', None)], 0)]))
Module(None, Stmt([Return(ListComp(Name('field'), [ListCompFor(AssName('field', 'OP_ASSIGN'), Name('self'), [ListCompIf(Not(Getattr(Name('field'), 'is_hidden')))])]))]))
@ python_2_unicode_compatible
Module(None, Stmt([Return(CallFunc(Name('wrap'), [Name('value'), CallFunc(Name('int'), [Name('arg')], None, None)], None, None))]))
Module(None, Stmt([Return(Name('default'))]))
Module(None, Stmt([Assign([AssName('comment_lineno_cache', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Assign([AssName('cmd_options', 'OP_ASSIGN')], CallFunc(Name('vars'), [Name('options')], None, None))]))
Module(None, Stmt([Assign([AssName('initial', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'initial'), 'get'), [Name('name'), Getattr(Name('field'), 'initial')], None, None))]))
Module(None, Stmt([If([(Compare(Subscript(Name('bits'), 'OP_APPLY', [Const(2)]), [('!=', Const('by'))]), Stmt([Pass()]))], None)]))
@ property
Module(None, Stmt([Assign([AssName('sign', 'OP_ASSIGN')], Const('-'))]))
Module(None, Stmt([Assign([AssTuple([AssAttr(Name('v'), '__cause__', 'OP_ASSIGN'), AssAttr(Name('v'), '__traceback__', 'OP_ASSIGN')])], Tuple([Name('e'), Name('tb')]))]))
Module(None, Stmt([If([(Compare(Name('key'), [('not in', Name('self'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Getattr(Name('self'), 'locale_paths'), Stmt([Pass()]))], None)]))
elif field . required :
Module(None, Stmt([Assign([AssName('package_path', 'OP_ASSIGN')], Getattr(Name('package'), '__path__'))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('sep'), Name('unicode')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('getattr'), [Name('self'), Const('_client'), Name('None')], None, None), [('is', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'label', 'OP_ASSIGN')], Getattr(Getattr(Name('self'), 'field'), 'label'))]))
Module(None, Stmt([Import([('os', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('HTMLParser'), '__init__'), [Name('self'), Keyword('strict', Name('False'))], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'data', 'files', 'auto_id', 'prefix', 'queryset', 'kwargs'], [Name('None'), Name('None'), Const('id_%s'), Name('None'), Name('None')], 8, None, Stmt([Pass()]))]))
Module(None, Stmt([From('django.utils.encoding', [('force_text', None), ('force_str', None)], 0)]))
Module(None, Stmt([Assign([AssName('common_ancestor', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Function(None, 'date_format', ['value', 'format', 'use_l10n'], [Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'is_multipart', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(CallFunc(Name('SsiNode'), [Name('filepath'), Name('parsed')], None, None))]))
Module(None, Stmt([From('django.apps', [('apps', None)], 0)]))
Module(None, Stmt([If([(Name('errors'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('nodelist_false', 'OP_ASSIGN')], CallFunc(Name('NodeList'), [], None, None))]))
except IndexError :
Module(None, Stmt([Function(None, '__getattr__', ['self', 'attr'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Not(Name('value')), Stmt([Pass()]))], None)]))
Module(None, Stmt([For(AssName('operation', 'OP_ASSIGN'), Getattr(Name('migration'), 'operations'), Stmt([Pass()]), None)]))
Module(None, Stmt([Pass()]))
Module(None, Stmt([Assign([AssName('asvar', 'OP_ASSIGN')], Subscript(Name('bits'), 'OP_APPLY', [UnarySub(Const(1))]))]))
Module(None, Stmt([Assign([AssName('data', 'OP_ASSIGN')], CallFunc(Getattr(Name('data'), 'replace'), [Keyword('microsecond', Const(0))], None, None))]))
Module(None, Stmt([If([(And([Name('value'), Not(CallFunc(Getattr(Name('self'), 'valid_value'), [Name('value')], None, None))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(Mod((CallFunc(Getattr(Name('six'), 'text_type'), [Name('self')], None, None), Name('rhs'))))]))
Module(None, Stmt([If([(Compare(Name('key'), [('not in', Name('self'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(Subscript(Name('item'), 'OP_APPLY', [Const('description')]), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('unescape_entities', 'OP_ASSIGN')], CallFunc(Name('allow_lazy'), [Name('unescape_entities'), Getattr(Name('six'), 'text_type')], None, None))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'queryset', 'OP_ASSIGN')], Name('queryset'))]))
Module(None, Stmt([Class('StreamingBuffer', [Name('object')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('attrs'), 'update'), [Name('extra_attrs')], None, None))]))
Module(None, Stmt([Function(None, 'handle', ['self', 'labels', 'options'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Tuple([Subscript(Name('bits'), 'OP_APPLY', [Const(0)]), Const('')]))]))
Module(None, Stmt([Function(None, 'add_arguments', ['self', 'parser'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('callable'), [Name('initial_value')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssName('__all__', 'OP_ASSIGN')], Tuple([Const('NamedTemporaryFile'), Const('gettempdir')]))]))
Module(None, Stmt([Assign([AssTuple([AssName('message', 'OP_ASSIGN'), AssName('code', 'OP_ASSIGN'), AssName('params', 'OP_ASSIGN')])], Tuple([Getattr(Name('message'), 'message'), Getattr(Name('message'), 'code'), Getattr(Name('message'), 'params')]))]))
else :
Module(None, Stmt([Function(None, 'usage', ['self', 'subcommand'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Mod((Const('initial-%s'), CallFunc(Getattr(Name('self'), 'add_prefix'), [Name('field_name')], None, None))))]))
Module(None, Stmt([If([(Name('dec_part'), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Or([Compare(Subscript(Name('s'), 'OP_APPLY', [Const(0)]), [('not in', Const('"\''))]), Compare(Subscript(Name('s'), 'OP_APPLY', [UnarySub(Const(1))]), [('!=', Subscript(Name('s'), 'OP_APPLY', [Const(0)]))])]), Stmt([Pass()]))], None)]))
Module(None, Stmt([From('__future__', [('unicode_literals', None)], 0)]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('callback'), Getattr(Name('functools'), 'partial')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([Discard(Yield(Name('d')))]))
Module(None, Stmt([Function(None, 'get_mod_func', ['callback'], [], 0, None, Stmt([Pass()]))]))
@ lru_cache . lru_cache ( maxsize = None )
Module(None, Stmt([Assign([AssName('index_output', 'OP_ASSIGN')], List(()))]))
try :
Module(None, Stmt([Function(None, 'send_mail', ['subject', 'message', 'from_email', 'recipient_list', 'fail_silently', 'auth_user', 'auth_password', 'connection', 'html_message'], [Name('False'), Name('None'), Name('None'), Name('None'), Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([With(CallFunc(Getattr(Getattr(Name('self'), '_lock'), 'reader'), [], None, None), None, Stmt([Pass()]))]))
Module(None, Stmt([Return(Const(None))]))
Module(None, Stmt([Import([('pickle', None)])]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('inner_result'), 'extend'), [Name('res')], None, None))]))
Module(None, Stmt([Return(Compare(CallFunc(Getattr(Name('header'), 'lower'), [], None, None), [('in', Getattr(Name('self'), '_headers'))]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'pointer', 'OP_ASSIGN')], Const(0))]))
else :
Module(None, Stmt([Class('EmailBackend', [Name('ConsoleEmailBackend')], None, Stmt([Pass()]), None)]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Const(':'), 'join'), [GenExpr(GenExprInner(CallFunc(Name('urlquote'), [Name('var')], None, None), [GenExprFor(AssName('var', 'OP_ASSIGN'), Name('vary_on'), [])]))], None, None))]))
Module(None, Stmt([Assign([AssName('decompress', 'OP_ASSIGN')], Name('True'))]))
Module(None, Stmt([Assign([AssName('content_type', 'OP_ASSIGN')], CallFunc(Getattr(Name('info'), 'get'), [Const('content-type')], None, None))]))
Module(None, Stmt([Assign([AssName('date', 'OP_ASSIGN')], CallFunc(Getattr(Name('datetime_safe'), 'new_datetime'), [Name('date')], None, None))]))
Module(None, Stmt([Assign([AssName('plural_re', 'OP_ASSIGN')], CallFunc(Getattr(Name('re'), 'compile'), [Const('^\\s*plural$')], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'parser', 'args', 'kwargs'], [], 12, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'make_key'), [Name('key'), Keyword('version', Name('version'))], None, None))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('cursor'), 'execute'), [Name('sql')], None, None))]))
Module(None, Stmt([If([(Not(Name('encoding')), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([Subscript(Name('cc'), 'OP_ASSIGN', [CallFunc(Getattr(Name('k'), 'replace'), [Const('_'), Const('-')], None, None)])], Name('v'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'write'), [Name('fd'), Name('current_chunk')], None, None))]))
Module(None, Stmt([Function(None, '_initialize_handlers', ['self'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'max_length', 'OP_ASSIGN')], CallFunc(Getattr(Name('kwargs'), 'pop'), [Const('max_length'), Name('None')], None, None))]))
Module(None, Stmt([Assign([Subscript(Name('args'), 'OP_ASSIGN', [Const(0)])], CallFunc(Name('force_text'), [Subscript(Name('args'), 'OP_APPLY', [Const(0)])], None, None))]))
Module(None, Stmt([Assign([AssName('prefix', 'OP_ASSIGN')], CallFunc(Getattr(Name('self'), 'add_prefix'), [Name('fieldname')], None, None))]))
Module(None, Stmt([AugAssign(Getattr(Name('self'), 'active_readers'), '+=', Name('t'))]))
Module(None, Stmt([Return(Name('initial'))]))
Module(None, Stmt([Return(CallFunc(Name('int'), [CallFunc(Getattr(Name('calendar'), 'timegm'), [CallFunc(Getattr(Getattr(Name('self'), 'data'), 'utctimetuple'), [], None, None)], None, None)], None, None))]))
Module(None, Stmt([Assign([AssName('result', 'OP_ASSIGN')], CallFunc(Getattr(Getattr(Name('self'), 'configurator'), 'convert'), [Name('value')], None, None))]))
Module(None, Stmt([For(AssName('middleware_path', 'OP_ASSIGN'), Getattr(Name('settings'), 'MIDDLEWARE_CLASSES'), Stmt([Pass()]), None)]))
Module(None, Stmt([Return(Name('fk'))]))
Module(None, Stmt([Assign([AssName('outer_html', 'OP_ASSIGN')], Const('<ul{id_attr}>{content}</ul>'))]))
else :
Module(None, Stmt([Assign([AssName('i', 'OP_ASSIGN')], Getattr(Name('self'), 'pointer'))]))
Module(None, Stmt([Raise(CallFunc(Name('ValueError'), [Mod((Const('Unable to add filter %r: %s'), Tuple([Name('f'), Name('e')])))], None, None), None, None)]))
Module(None, Stmt([Return(Name('False'))]))
Module(None, Stmt([Function(None, '_delete', ['self', 'fname'], [], 0, None, Stmt([Pass()]))]))
@ contextlib . contextmanager
Module(None, Stmt([If([(Name('errors'), Stmt([Pass()]))], None)]))
Module(None, Stmt([Assign([AssAttr(Name('self'), 'content_length', 'OP_ASSIGN')], Name('None'))]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('os'), 'makedirs'), [Name('directory'), Getattr(Name('self'), 'directory_permissions_mode')], None, None))]))
except Exception :
Module(None, Stmt([Function(None, 'dictsortreversed', ['value', 'arg'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('builtins', 'OP_ASSIGN')], Dict([(Const('True'), Name('True')), (Const('False'), Name('False')), (Const('None'), Name('None'))]))]))
Module(None, Stmt([Return(CallFunc(Getattr(Name('self'), 'filter_function'), [Name('name')], None, Name('flags')))]))
Module(None, Stmt([Function(None, 'multiple_chunks', ['self', 'chunk_size'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, '_unpack_ipv4', ['ip_str'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Function(None, 'external_entity_ref_handler', ['self', 'context', 'base', 'sysid', 'pubid'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([Assign([AssName('key', 'OP_ASSIGN')], CallFunc(Getattr(CallFunc(Getattr(CallFunc(Getattr(Name('plist'), 'pop'), [Const(0)], None, None), 'lower'), [], None, None), 'decode'), [Const('ascii')], None, None))]))
Module(None, Stmt([Return(Name('client'))]))
Module(None, Stmt([Return(Subscript(Name('self'), 'OP_APPLY', [Name('key')]))]))
Module(None, Stmt([From('django.db.migrations.executor', [('MigrationExecutor', None)], 0)]))
Module(None, Stmt([For(AssName('part', 'OP_ASSIGN'), Name('singular'), Stmt([Pass()]), None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Name('locales'), 'append'), [Subscript(CallFunc(Getattr(Name('locale'), 'split'), [Const('_')], None, None), 'OP_APPLY', [Const(0)])], None, None))]))
Module(None, Stmt([From('django.utils.module_loading', [('import_string', None)], 0)]))
Module(None, Stmt([Function(None, 'cookie_date', ['epoch_seconds'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(Compare(Name('field_value'), [('is not', Name('None'))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Return(CallFunc(Name('iter'), [CallFunc(CallFunc(Name('getattr'), [Name('d'), Name('_iterlists')], None, None), [], None, Name('kw'))], None, None))]))
Module(None, Stmt([Assign([AssName('value', 'OP_ASSIGN')], CallFunc(Getattr(Const('.'), 'join'), [CallFunc(Name('reversed'), [Name('parts')], None, None)], None, None))]))
Module(None, Stmt([Function(None, '__init__', ['self', 'attrs'], [Name('None')], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([If([(CallFunc(Name('isinstance'), [Name('file'), Getattr(Name('six'), 'string_types')], None, None), Stmt([Pass()]))], None)]))
Module(None, Stmt([If([(Compare(CallFunc(Name('len'), [Name('bits')], None, None), [('!=', Const(2))]), Stmt([Pass()]))], None)]))
Module(None, Stmt([Function(None, 'do_block', ['parser', 'token'], [], 0, None, Stmt([Pass()]))]))
Module(None, Stmt([For(AssTuple([AssName('i', 'OP_ASSIGN'), AssName('piece', 'OP_ASSIGN')]), CallFunc(Name('enumerate'), [CallFunc(Getattr(Name('re_formatchars'), 'split'), [CallFunc(Name('force_text'), [Name('formatstr')], None, None)], None, None)], None, None), Stmt([Pass()]), None)]))
Module(None, Stmt([Raise(CallFunc(Name('ImportError'), [Const('No IPython')], None, None), None, None)]))
Module(None, Stmt([Discard(CallFunc(Getattr(Getattr(Name('self'), '_callback_strs'), 'update'), [Getattr(Name('pattern'), '_callback_strs')], None, None))]))
Module(None, Stmt([Function(None, 'has_key', ['self', 'key'], [], 0, None, Stmt([Pass()]))]))
